import { i as Y, r as wn, m as G, e as Dn, a as X, b as O0, c as B, d as Z, f as w, g as J, h as K, j as _e, k as Ls, l as fe, n as Oe, o as hw, p as z, P as Ee, q as Xh, s as Vn, t as Fe, u as ce, v as pw, Z as Ut, w as dw, x as gw, y as yw, z as mw, A as af, B as Es, T as gn, C as lo, D as Ft, E as ee, F as $, G as Wa, H as V0, S as Ht, R as gl, I as Wt, J as Ct, K as de, L as it, M as yl, N as nf, O as _w, Q as Te, U as B0, V as re, W as Sw, X as ml, Y as Ps, _ as Ue, $ as xw, a0 as ve, a1 as uo, a2 as le, a3 as Q, a4 as at, a5 as z0, a6 as Tt, a7 as te, a8 as Dt, a9 as Ae, aa as U, ab as Ns, ac as Rs, ad as _t, ae as Wc, af as ks, ag as bw, ah as ww, ai as Dw, aj as Bn, ak as Os, al as Kh, am as jl, an as Aw, ao as Tw, ap as Cw, aq as $e, ar as An, as as Sa, at as G0, au as F0, av as _l, aw as wa, ax as Jl, ay as Mw, az as Iw, aA as H0, aB as _r, aC as Lw, aD as Ew, aE as qh, aF as jh, aG as Pw, aH as W0, aI as na, aJ as co, aK as Nw, aL as Jh, aM as jr, aN as Rw, aO as kw, aP as Ow, aQ as Ra, aR as Vw, aS as zn, aT as dt, aU as of, aV as U0, aW as ka, aX as Bw, aY as Ql, aZ as ds, a_ as $0, a$ as Ei, b0 as Vs, b1 as $r, b2 as vo, b3 as zw, b4 as Gw, b5 as yn, b6 as Qh, b7 as Fw, b8 as Uc, b9 as Hw, ba as Y0, bb as Ww, bc as Uw, bd as $w, be as ep, bf as Yw, bg as Zw, bh as Hi, bi as Xw, bj as Z0, bk as tp, bl as Kw, bm as qw, bn as jw, bo as Jw, bp as Qw, bq as eD, br as tD } from "./zrender.js";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var $c = function(r, t) {
  return $c = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(e, a) {
    e.__proto__ = a;
  } || function(e, a) {
    for (var n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
  }, $c(r, t);
};
function R(r, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
  $c(r, t);
  function e() {
    this.constructor = r;
  }
  r.prototype = t === null ? Object.create(t) : (e.prototype = t.prototype, new e());
}
var rp = 1e-4, X0 = 20;
function rD(r) {
  return r.replace(/^\s+|\s+$/g, "");
}
function xe(r, t, e, a) {
  var n = t[0], i = t[1], o = e[0], s = e[1], l = i - n, u = s - o;
  if (l === 0)
    return u === 0 ? o : (o + s) / 2;
  if (a)
    if (l > 0) {
      if (r <= n)
        return o;
      if (r >= i)
        return s;
    } else {
      if (r >= n)
        return o;
      if (r <= i)
        return s;
    }
  else {
    if (r === n)
      return o;
    if (r === i)
      return s;
  }
  return (r - n) / l * u + o;
}
function H(r, t) {
  switch (r) {
    case "center":
    case "middle":
      r = "50%";
      break;
    case "left":
    case "top":
      r = "0%";
      break;
    case "right":
    case "bottom":
      r = "100%";
      break;
  }
  return Y(r) ? rD(r).match(/%$/) ? parseFloat(r) / 100 * t : parseFloat(r) : r == null ? NaN : +r;
}
function ze(r, t, e) {
  return t == null && (t = 10), t = Math.min(Math.max(0, t), X0), r = (+r).toFixed(t), e ? r : +r;
}
function zt(r) {
  return r.sort(function(t, e) {
    return t - e;
  }), r;
}
function or(r) {
  if (r = +r, isNaN(r))
    return 0;
  if (r > 1e-14) {
    for (var t = 1, e = 0; e < 15; e++, t *= 10)
      if (Math.round(r * t) / t === r)
        return e;
  }
  return Yc(r);
}
function Yc(r) {
  var t = r.toString().toLowerCase(), e = t.indexOf("e"), a = e > 0 ? +t.slice(e + 1) : 0, n = e > 0 ? e : t.length, i = t.indexOf("."), o = i < 0 ? 0 : n - 1 - i;
  return Math.max(0, o - a);
}
function K0(r, t) {
  var e = Math.log, a = Math.LN10, n = Math.floor(e(r[1] - r[0]) / a), i = Math.round(e(Math.abs(t[1] - t[0])) / a), o = Math.min(Math.max(-n + i, 0), 20);
  return isFinite(o) ? o : 20;
}
function aD(r, t) {
  var e = wn(r, function(h, p) {
    return h + (isNaN(p) ? 0 : p);
  }, 0);
  if (e === 0)
    return [];
  for (var a = Math.pow(10, t), n = G(r, function(h) {
    return (isNaN(h) ? 0 : h) / e * a * 100;
  }), i = a * 100, o = G(n, function(h) {
    return Math.floor(h);
  }), s = wn(o, function(h, p) {
    return h + p;
  }, 0), l = G(n, function(h, p) {
    return h - o[p];
  }); s < i; ) {
    for (var u = Number.NEGATIVE_INFINITY, c = null, v = 0, f = l.length; v < f; ++v)
      l[v] > u && (u = l[v], c = v);
    ++o[c], l[c] = 0, ++s;
  }
  return G(o, function(h) {
    return h / a;
  });
}
function nD(r, t) {
  var e = Math.max(or(r), or(t)), a = r + t;
  return e > X0 ? a : ze(a, e);
}
var ap = 9007199254740991;
function q0(r) {
  var t = Math.PI * 2;
  return (r % t + t) % t;
}
function Wi(r) {
  return r > -rp && r < rp;
}
var iD = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
function vr(r) {
  if (r instanceof Date)
    return r;
  if (Y(r)) {
    var t = iD.exec(r);
    if (!t)
      return /* @__PURE__ */ new Date(NaN);
    if (t[8]) {
      var e = +t[4] || 0;
      return t[8].toUpperCase() !== "Z" && (e -= +t[8].slice(0, 3)), new Date(Date.UTC(+t[1], +(t[2] || 1) - 1, +t[3] || 1, e, +(t[5] || 0), +t[6] || 0, t[7] ? +t[7].substring(0, 3) : 0));
    } else
      return new Date(+t[1], +(t[2] || 1) - 1, +t[3] || 1, +t[4] || 0, +(t[5] || 0), +t[6] || 0, t[7] ? +t[7].substring(0, 3) : 0);
  } else if (r == null)
    return /* @__PURE__ */ new Date(NaN);
  return new Date(Math.round(r));
}
function oD(r) {
  return Math.pow(10, Sl(r));
}
function Sl(r) {
  if (r === 0)
    return 0;
  var t = Math.floor(Math.log(r) / Math.LN10);
  return r / Math.pow(10, t) >= 10 && t++, t;
}
function j0(r, t) {
  var e = Sl(r), a = Math.pow(10, e), n = r / a, i;
  return n < 1.5 ? i = 1 : n < 2.5 ? i = 2 : n < 4 ? i = 3 : n < 7 ? i = 5 : i = 10, r = i * a, e >= -20 ? +r.toFixed(e < 0 ? -e : 0) : r;
}
function eu(r, t) {
  var e = (r.length - 1) * t + 1, a = Math.floor(e), n = +r[a - 1], i = e - a;
  return i ? n + i * (r[a] - n) : n;
}
function np(r) {
  r.sort(function(l, u) {
    return s(l, u, 0) ? -1 : 1;
  });
  for (var t = -1 / 0, e = 1, a = 0; a < r.length; ) {
    for (var n = r[a].interval, i = r[a].close, o = 0; o < 2; o++)
      n[o] <= t && (n[o] = t, i[o] = o ? 1 : 1 - e), t = n[o], e = i[o];
    n[0] === n[1] && i[0] * i[1] !== 1 ? r.splice(a, 1) : a++;
  }
  return r;
  function s(l, u, c) {
    return l.interval[c] < u.interval[c] || l.interval[c] === u.interval[c] && (l.close[c] - u.close[c] === (c ? -1 : 1) || !c && s(l, u, 1));
  }
}
function Dr(r) {
  var t = parseFloat(r);
  return t == r && (t !== 0 || !Y(r) || r.indexOf("x") <= 0) ? t : NaN;
}
function sf(r) {
  return !isNaN(Dr(r));
}
function J0() {
  return Math.round(Math.random() * 9);
}
function Q0(r, t) {
  return t === 0 ? r : Q0(t, r % t);
}
function ip(r, t) {
  return r == null ? t : t == null ? r : r * t / Q0(r, t);
}
var lf = { env: {} }, sD = "[ECharts] ", op = {}, lD = typeof console < "u" && console.warn && console.log;
function xl(r, t, e) {
  if (lD) {
    if (e) {
      if (op[t])
        return;
      op[t] = !0;
    }
    console[r](sD + t);
  }
}
function uD(r, t) {
  xl("log", r, t);
}
function Ve(r, t) {
  xl("warn", r, t);
}
function ot(r, t) {
  xl("error", r, t);
}
function Qt(r) {
  lf.env.NODE_ENV !== "production" && xl("warn", "DEPRECATED: " + r, !0);
}
function We(r, t, e) {
  lf.env.NODE_ENV !== "production" && Qt((e ? "[" + e + "]" : "") + (r + " is deprecated, use " + t + " instead."));
}
function St() {
  for (var r = [], t = 0; t < arguments.length; t++)
    r[t] = arguments[t];
  var e = "";
  if (lf.env.NODE_ENV !== "production") {
    var a = function(n) {
      return n === void 0 ? "undefined" : n === 1 / 0 ? "Infinity" : n === -1 / 0 ? "-Infinity" : Dn(n) ? "NaN" : n instanceof Date ? "Date(" + n.toISOString() + ")" : X(n) ? "function () { ... }" : O0(n) ? n + "" : null;
    };
    e = G(r, function(n) {
      if (Y(n))
        return n;
      var i = a(n);
      if (i != null)
        return i;
      if (typeof JSON < "u" && JSON.stringify)
        try {
          return JSON.stringify(n, function(o, s) {
            var l = a(s);
            return l ?? s;
          });
        } catch {
          return "?";
        }
      else
        return "?";
    }).join(" ");
  }
  return e;
}
function ye(r) {
  throw new Error(r);
}
var uf = { env: {} };
function sp(r, t, e) {
  return (t - r) * e + r;
}
var e_ = "series\0", t_ = "\0_ec_\0";
function we(r) {
  return r instanceof Array ? r : r == null ? [] : [r];
}
function Oa(r, t, e) {
  if (r) {
    r[t] = r[t] || {}, r.emphasis = r.emphasis || {}, r.emphasis[t] = r.emphasis[t] || {};
    for (var a = 0, n = e.length; a < n; a++) {
      var i = e[a];
      !r.emphasis[t].hasOwnProperty(i) && r[t].hasOwnProperty(i) && (r.emphasis[t][i] = r[t][i]);
    }
  }
}
var lp = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"];
function Gn(r) {
  return J(r) && !B(r) && !(r instanceof Date) ? r.value : r;
}
function cD(r) {
  return J(r) && !(r instanceof Array);
}
function r_(r, t, e) {
  var a = e === "normalMerge", n = e === "replaceMerge", i = e === "replaceAll";
  r = r || [], t = (t || []).slice();
  var o = Z();
  w(t, function(l, u) {
    if (!J(l)) {
      t[u] = null;
      return;
    }
    uf.env.NODE_ENV !== "production" && (l.id != null && !cp(l.id) && up(l.id), l.name != null && !cp(l.name) && up(l.name));
  });
  var s = vD(r, o, e);
  return (a || n) && fD(s, r, o, t), a && hD(s, t), a || n ? pD(s, t, n) : i && dD(s, t), gD(s), s;
}
function vD(r, t, e) {
  var a = [];
  if (e === "replaceAll")
    return a;
  for (var n = 0; n < r.length; n++) {
    var i = r[n];
    i && i.id != null && t.set(i.id, n), a.push({
      existing: e === "replaceMerge" || Tn(i) ? null : i,
      newOption: null,
      keyInfo: null,
      brandNew: null
    });
  }
  return a;
}
function fD(r, t, e, a) {
  w(a, function(n, i) {
    if (!(!n || n.id == null)) {
      var o = Pi(n.id), s = e.get(o);
      if (s != null) {
        var l = r[s];
        K(!l.newOption, 'Duplicated option on id "' + o + '".'), l.newOption = n, l.existing = t[s], a[i] = null;
      }
    }
  });
}
function hD(r, t) {
  w(t, function(e, a) {
    if (!(!e || e.name == null))
      for (var n = 0; n < r.length; n++) {
        var i = r[n].existing;
        if (!r[n].newOption && i && (i.id == null || e.id == null) && !Tn(e) && !Tn(i) && a_("name", i, e)) {
          r[n].newOption = e, t[a] = null;
          return;
        }
      }
  });
}
function pD(r, t, e) {
  w(t, function(a) {
    if (a) {
      for (
        var n, i = 0;
        // Be `!resultItem` only when `nextIdx >= result.length`.
        (n = r[i]) && (n.newOption || Tn(n.existing) || // In mode "replaceMerge", here no not-mapped-non-internal-existing.
        n.existing && a.id != null && !a_("id", a, n.existing));
      )
        i++;
      n ? (n.newOption = a, n.brandNew = e) : r.push({
        newOption: a,
        brandNew: e,
        existing: null,
        keyInfo: null
      }), i++;
    }
  });
}
function dD(r, t) {
  w(t, function(e) {
    r.push({
      newOption: e,
      brandNew: !0,
      existing: null,
      keyInfo: null
    });
  });
}
function gD(r) {
  var t = Z();
  w(r, function(e) {
    var a = e.existing;
    a && t.set(a.id, e);
  }), w(r, function(e) {
    var a = e.newOption;
    K(!a || a.id == null || !t.get(a.id) || t.get(a.id) === e, "id duplicates: " + (a && a.id)), a && a.id != null && t.set(a.id, e), !e.keyInfo && (e.keyInfo = {});
  }), w(r, function(e, a) {
    var n = e.existing, i = e.newOption, o = e.keyInfo;
    if (J(i)) {
      if (o.name = i.name != null ? Pi(i.name) : n ? n.name : e_ + a, n)
        o.id = Pi(n.id);
      else if (i.id != null)
        o.id = Pi(i.id);
      else {
        var s = 0;
        do
          o.id = "\0" + o.name + "\0" + s++;
        while (t.get(o.id));
      }
      t.set(o.id, e);
    }
  });
}
function a_(r, t, e) {
  var a = Ke(t[r], null), n = Ke(e[r], null);
  return a != null && n != null && a === n;
}
function Pi(r) {
  if (uf.env.NODE_ENV !== "production" && r == null)
    throw new Error();
  return Ke(r, "");
}
function Ke(r, t) {
  return r == null ? t : Y(r) ? r : _e(r) || Ls(r) ? r + "" : t;
}
function up(r) {
  uf.env.NODE_ENV !== "production" && Ve("`" + r + "` is invalid id or name. Must be a string or number.");
}
function cp(r) {
  return Ls(r) || sf(r);
}
function cf(r) {
  var t = r.name;
  return !!(t && t.indexOf(e_));
}
function Tn(r) {
  return r && r.id != null && Pi(r.id).indexOf(t_) === 0;
}
function yD(r) {
  return t_ + r;
}
function mD(r, t, e) {
  w(r, function(a) {
    var n = a.newOption;
    J(n) && (a.keyInfo.mainType = t, a.keyInfo.subType = _D(t, n, a.existing, e));
  });
}
function _D(r, t, e, a) {
  var n = t.type ? t.type : e ? e.subType : a.determineSubType(r, t);
  return n;
}
function SD(r, t) {
  var e = {}, a = {};
  return n(r || [], e), n(t || [], a, e), [i(e), i(a)];
  function n(o, s, l) {
    for (var u = 0, c = o.length; u < c; u++) {
      var v = Ke(o[u].seriesId, null);
      if (v == null)
        return;
      for (var f = we(o[u].dataIndex), h = l && l[v], p = 0, d = f.length; p < d; p++) {
        var g = f[p];
        h && h[g] ? h[g] = null : (s[v] || (s[v] = {}))[g] = 1;
      }
    }
  }
  function i(o, s) {
    var l = [];
    for (var u in o)
      if (o.hasOwnProperty(u) && o[u] != null)
        if (s)
          l.push(+u);
        else {
          var c = i(o[u], !0);
          c.length && l.push({
            seriesId: u,
            dataIndex: c
          });
        }
    return l;
  }
}
function Va(r, t) {
  if (t.dataIndexInside != null)
    return t.dataIndexInside;
  if (t.dataIndex != null)
    return B(t.dataIndex) ? G(t.dataIndex, function(e) {
      return r.indexOfRawIndex(e);
    }) : r.indexOfRawIndex(t.dataIndex);
  if (t.name != null)
    return B(t.name) ? G(t.name, function(e) {
      return r.indexOfName(e);
    }) : r.indexOfName(t.name);
}
function ue() {
  var r = "__ec_inner_" + xD++;
  return function(t) {
    return t[r] || (t[r] = {});
  };
}
var xD = J0();
function Ni(r, t, e) {
  var a = vf(t, e), n = a.mainTypeSpecified, i = a.queryOptionMap, o = a.others, s = o, l = e ? e.defaultMainType : null;
  return !n && l && i.set(l, {}), i.each(function(u, c) {
    var v = fo(r, c, u, {
      useDefault: l === c,
      enableAll: e && e.enableAll != null ? e.enableAll : !0,
      enableNone: e && e.enableNone != null ? e.enableNone : !0
    });
    s[c + "Models"] = v.models, s[c + "Model"] = v.models[0];
  }), s;
}
function vf(r, t) {
  var e;
  if (Y(r)) {
    var a = {};
    a[r + "Index"] = 0, e = a;
  } else
    e = r;
  var n = Z(), i = {}, o = !1;
  return w(e, function(s, l) {
    if (l === "dataIndex" || l === "dataIndexInside") {
      i[l] = s;
      return;
    }
    var u = l.match(/^(\w+)(Index|Id|Name)$/) || [], c = u[1], v = (u[2] || "").toLowerCase();
    if (!(!c || !v || t && t.includeMainTypes && fe(t.includeMainTypes, c) < 0)) {
      o = o || !!c;
      var f = n.get(c) || n.set(c, {});
      f[v] = s;
    }
  }), {
    mainTypeSpecified: o,
    queryOptionMap: n,
    others: i
  };
}
var Ye = {
  useDefault: !0,
  enableAll: !1,
  enableNone: !1
}, bD = {
  useDefault: !1,
  enableAll: !0,
  enableNone: !0
};
function fo(r, t, e, a) {
  a = a || Ye;
  var n = e.index, i = e.id, o = e.name, s = {
    models: null,
    specified: n != null || i != null || o != null
  };
  if (!s.specified) {
    var l = void 0;
    return s.models = a.useDefault && (l = r.getComponent(t)) ? [l] : [], s;
  }
  return n === "none" || n === !1 ? (K(a.enableNone, '`"none"` or `false` is not a valid value on index option.'), s.models = [], s) : (n === "all" && (K(a.enableAll, '`"all"` is not a valid value on index option.'), n = i = o = null), s.models = r.queryComponents({
    mainType: t,
    index: n,
    id: i,
    name: o
  }), s);
}
function n_(r, t, e) {
  r.setAttribute ? r.setAttribute(t, e) : r[t] = e;
}
function wD(r, t) {
  return r.getAttribute ? r.getAttribute(t) : r[t];
}
function DD(r) {
  return r === "auto" ? Oe.domSupported ? "html" : "richText" : r || "html";
}
function Zc(r, t) {
  var e = Z(), a = [];
  return w(r, function(n) {
    var i = t(n);
    (e.get(i) || (a.push(i), e.set(i, []))).push(n);
  }), {
    keys: a,
    buckets: e
  };
}
function i_(r, t, e, a, n) {
  var i = t == null || t === "auto";
  if (a == null)
    return a;
  if (_e(a)) {
    var o = sp(e || 0, a, n);
    return ze(o, i ? Math.max(or(e || 0), or(a)) : t);
  } else {
    if (Y(a))
      return n < 1 ? e : a;
    for (var s = [], l = e, u = a, c = Math.max(l ? l.length : 0, u.length), v = 0; v < c; ++v) {
      var f = r.getDimensionInfo(v);
      if (f && f.type === "ordinal")
        s[v] = (n < 1 && l ? l : u)[v];
      else {
        var h = l && l[v] ? l[v] : 0, p = u[v], o = sp(h, p, n);
        s[v] = ze(o, i ? Math.max(or(h), or(p)) : t);
      }
    }
    return s;
  }
}
var ff = { env: {} }, AD = ".", sa = "___EC__COMPONENT__CONTAINER___", o_ = "___EC__EXTENDED_CLASS___";
function sr(r) {
  var t = {
    main: "",
    sub: ""
  };
  if (r) {
    var e = r.split(AD);
    t.main = e[0] || "", t.sub = e[1] || "";
  }
  return t;
}
function TD(r) {
  K(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(r), 'componentType "' + r + '" illegal');
}
function CD(r) {
  return !!(r && r[o_]);
}
function hf(r, t) {
  r.$constructor = r, r.extend = function(e) {
    ff.env.NODE_ENV !== "production" && w(t, function(i) {
      e[i] || console.warn("Method `" + i + "` should be implemented" + (e.type ? " in " + e.type : "") + ".");
    });
    var a = this, n;
    return MD(a) ? n = /** @class */
    function(i) {
      R(o, i);
      function o() {
        return i.apply(this, arguments) || this;
      }
      return o;
    }(a) : (n = function() {
      (e.$constructor || a).apply(this, arguments);
    }, hw(n, this)), z(n.prototype, e), n[o_] = !0, n.extend = this.extend, n.superCall = ED, n.superApply = PD, n.superClass = a, n;
  };
}
function MD(r) {
  return X(r) && /^class\s/.test(Function.prototype.toString.call(r));
}
function s_(r, t) {
  r.extend = t.extend;
}
var ID = Math.round(Math.random() * 10);
function LD(r) {
  var t = ["__\0is_clz", ID++].join("_");
  r.prototype[t] = !0, ff.env.NODE_ENV !== "production" && K(!r.isInstance, 'The method "is" can not be defined.'), r.isInstance = function(e) {
    return !!(e && e[t]);
  };
}
function ED(r, t) {
  for (var e = [], a = 2; a < arguments.length; a++)
    e[a - 2] = arguments[a];
  return this.superClass.prototype[t].apply(r, e);
}
function PD(r, t, e) {
  return this.superClass.prototype[t].apply(r, e);
}
function bl(r) {
  var t = {};
  r.registerClass = function(a) {
    var n = a.type || a.prototype.type;
    if (n) {
      TD(n), a.prototype.type = n;
      var i = sr(n);
      if (!i.sub)
        ff.env.NODE_ENV !== "production" && t[i.main] && console.warn(i.main + " exists."), t[i.main] = a;
      else if (i.sub !== sa) {
        var o = e(i);
        o[i.sub] = a;
      }
    }
    return a;
  }, r.getClass = function(a, n, i) {
    var o = t[a];
    if (o && o[sa] && (o = n ? o[n] : null), i && !o)
      throw new Error(n ? "Component " + a + "." + (n || "") + " is used but not imported." : a + ".type should be specified.");
    return o;
  }, r.getClassesByMainType = function(a) {
    var n = sr(a), i = [], o = t[n.main];
    return o && o[sa] ? w(o, function(s, l) {
      l !== sa && i.push(s);
    }) : i.push(o), i;
  }, r.hasClass = function(a) {
    var n = sr(a);
    return !!t[n.main];
  }, r.getAllClassMainTypes = function() {
    var a = [];
    return w(t, function(n, i) {
      a.push(i);
    }), a;
  }, r.hasSubTypes = function(a) {
    var n = sr(a), i = t[n.main];
    return i && i[sa];
  };
  function e(a) {
    var n = t[a.main];
    return (!n || !n[sa]) && (n = t[a.main] = {}, n[sa] = !0), n;
  }
}
function Ba(r, t) {
  for (var e = 0; e < r.length; e++)
    r[e][1] || (r[e][1] = r[e][0]);
  return t = t || !1, function(a, n, i) {
    for (var o = {}, s = 0; s < r.length; s++) {
      var l = r[s][1];
      if (!(n && fe(n, l) >= 0 || i && fe(i, l) < 0)) {
        var u = a.getShallow(l, t);
        u != null && (o[r[s][0]] = u);
      }
    }
    return o;
  };
}
var ND = [
  ["fill", "color"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["opacity"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], RD = Ba(ND), kD = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getAreaStyle = function(t, e) {
      return RD(this, t, e);
    }, r;
  }()
), j = ue(), Xc = function(r, t, e, a) {
  if (a) {
    var n = j(a);
    n.dataIndex = e, n.dataType = t, n.seriesIndex = r, n.ssrType = "chart", a.type === "group" && a.traverse(function(i) {
      var o = j(i);
      o.seriesIndex = r, o.dataIndex = e, o.dataType = t, o.ssrType = "chart";
    });
  }
}, wl = { env: {} }, vp = 1, fp = {}, l_ = ue(), pf = ue(), df = 0, ho = 1, Dl = 2, xt = ["emphasis", "blur", "select"], Ui = ["normal", "emphasis", "blur", "select"], Fn = 10, OD = 9, Ma = "highlight", gs = "downplay", Ri = "select", ys = "unselect", ki = "toggleSelect";
function qa(r) {
  return r != null && r !== "none";
}
function Al(r, t, e) {
  r.onHoverStateChange && (r.hoverState || 0) !== e && r.onHoverStateChange(t), r.hoverState = e;
}
function u_(r) {
  Al(r, "emphasis", Dl);
}
function c_(r) {
  r.hoverState === Dl && Al(r, "normal", df);
}
function gf(r) {
  Al(r, "blur", ho);
}
function v_(r) {
  r.hoverState === ho && Al(r, "normal", df);
}
function VD(r) {
  r.selected = !0;
}
function BD(r) {
  r.selected = !1;
}
function hp(r, t, e) {
  t(r, e);
}
function Er(r, t, e) {
  hp(r, t, e), r.isGroup && r.traverse(function(a) {
    hp(a, t, e);
  });
}
function Bs(r, t) {
  switch (t) {
    case "emphasis":
      r.hoverState = Dl;
      break;
    case "normal":
      r.hoverState = df;
      break;
    case "blur":
      r.hoverState = ho;
      break;
    case "select":
      r.selected = !0;
  }
}
function zD(r, t, e, a) {
  for (var n = r.style, i = {}, o = 0; o < t.length; o++) {
    var s = t[o], l = n[s];
    i[s] = l ?? (a && a[s]);
  }
  for (var o = 0; o < r.animators.length; o++) {
    var u = r.animators[o];
    u.__fromStateTransition && u.__fromStateTransition.indexOf(e) < 0 && u.targetName === "style" && u.saveTo(i, t);
  }
  return i;
}
function GD(r, t, e, a) {
  var n = e && fe(e, "select") >= 0, i = !1;
  if (r instanceof Ee) {
    var o = l_(r), s = n && o.selectFill || o.normalFill, l = n && o.selectStroke || o.normalStroke;
    if (qa(s) || qa(l)) {
      a = a || {};
      var u = a.style || {};
      u.fill === "inherit" ? (i = !0, a = z({}, a), u = z({}, u), u.fill = s) : !qa(u.fill) && qa(s) ? (i = !0, a = z({}, a), u = z({}, u), u.fill = Xh(s)) : !qa(u.stroke) && qa(l) && (i || (a = z({}, a), u = z({}, u)), u.stroke = Xh(l)), a.style = u;
    }
  }
  if (a && a.z2 == null) {
    i || (a = z({}, a));
    var c = r.z2EmphasisLift;
    a.z2 = r.z2 + (c ?? Fn);
  }
  return a;
}
function FD(r, t, e) {
  if (e && e.z2 == null) {
    e = z({}, e);
    var a = r.z2SelectLift;
    e.z2 = r.z2 + (a ?? OD);
  }
  return e;
}
function HD(r, t, e) {
  var a = fe(r.currentStates, t) >= 0, n = r.style.opacity, i = a ? null : zD(r, ["opacity"], t, {
    opacity: 1
  });
  e = e || {};
  var o = e.style || {};
  return o.opacity == null && (e = z({}, e), o = z({
    // Already being applied 'emphasis'. DON'T mul opacity multiple times.
    opacity: a ? n : i.opacity * 0.1
  }, o), e.style = o), e;
}
function tu(r, t) {
  var e = this.states[r];
  if (this.style) {
    if (r === "emphasis")
      return GD(this, r, t, e);
    if (r === "blur")
      return HD(this, r, e);
    if (r === "select")
      return FD(this, r, e);
  }
  return e;
}
function za(r) {
  r.stateProxy = tu;
  var t = r.getTextContent(), e = r.getTextGuideLine();
  t && (t.stateProxy = tu), e && (e.stateProxy = tu);
}
function pp(r, t) {
  !d_(r, t) && !r.__highByOuter && Er(r, u_);
}
function dp(r, t) {
  !d_(r, t) && !r.__highByOuter && Er(r, c_);
}
function Ar(r, t) {
  r.__highByOuter |= 1 << (t || 0), Er(r, u_);
}
function Tr(r, t) {
  !(r.__highByOuter &= ~(1 << (t || 0))) && Er(r, c_);
}
function f_(r) {
  Er(r, gf);
}
function yf(r) {
  Er(r, v_);
}
function h_(r) {
  Er(r, VD);
}
function p_(r) {
  Er(r, BD);
}
function d_(r, t) {
  return r.__highDownSilentOnTouch && t.zrByTouch;
}
function g_(r) {
  var t = r.getModel(), e = [], a = [];
  t.eachComponent(function(n, i) {
    var o = pf(i), s = n === "series", l = s ? r.getViewOfSeriesModel(i) : r.getViewOfComponentModel(i);
    !s && a.push(l), o.isBlured && (l.group.traverse(function(u) {
      v_(u);
    }), s && e.push(i)), o.isBlured = !1;
  }), w(a, function(n) {
    n && n.toggleBlurSeries && n.toggleBlurSeries(e, !1, t);
  });
}
function Kc(r, t, e, a) {
  var n = a.getModel();
  e = e || "coordinateSystem";
  function i(u, c) {
    for (var v = 0; v < c.length; v++) {
      var f = u.getItemGraphicEl(c[v]);
      f && yf(f);
    }
  }
  if (r != null && !(!t || t === "none")) {
    var o = n.getSeriesByIndex(r), s = o.coordinateSystem;
    s && s.master && (s = s.master);
    var l = [];
    n.eachSeries(function(u) {
      var c = o === u, v = u.coordinateSystem;
      v && v.master && (v = v.master);
      var f = v && s ? v === s : c;
      if (!// Not blur other series if blurScope series
      (e === "series" && !c || e === "coordinateSystem" && !f || t === "series" && c)) {
        var h = a.getViewOfSeriesModel(u);
        if (h.group.traverse(function(g) {
          g.__highByOuter && c && t === "self" || gf(g);
        }), Vn(t))
          i(u.getData(), t);
        else if (J(t))
          for (var p = Fe(t), d = 0; d < p.length; d++)
            i(u.getData(p[d]), t[p[d]]);
        l.push(u), pf(u).isBlured = !0;
      }
    }), n.eachComponent(function(u, c) {
      if (u !== "series") {
        var v = a.getViewOfComponentModel(c);
        v && v.toggleBlurSeries && v.toggleBlurSeries(l, !0, n);
      }
    });
  }
}
function qc(r, t, e) {
  if (!(r == null || t == null)) {
    var a = e.getModel().getComponent(r, t);
    if (a) {
      pf(a).isBlured = !0;
      var n = e.getViewOfComponentModel(a);
      !n || !n.focusBlurEnabled || n.group.traverse(function(i) {
        gf(i);
      });
    }
  }
}
function WD(r, t, e) {
  var a = r.seriesIndex, n = r.getData(t.dataType);
  if (!n) {
    wl.env.NODE_ENV !== "production" && ot("Unknown dataType " + t.dataType);
    return;
  }
  var i = Va(n, t);
  i = (B(i) ? i[0] : i) || 0;
  var o = n.getItemGraphicEl(i);
  if (!o)
    for (var s = n.count(), l = 0; !o && l < s; )
      o = n.getItemGraphicEl(l++);
  if (o) {
    var u = j(o);
    Kc(a, u.focus, u.blurScope, e);
  } else {
    var c = r.get(["emphasis", "focus"]), v = r.get(["emphasis", "blurScope"]);
    c != null && Kc(a, c, v, e);
  }
}
function mf(r, t, e, a) {
  var n = {
    focusSelf: !1,
    dispatchers: null
  };
  if (r == null || r === "series" || t == null || e == null)
    return n;
  var i = a.getModel().getComponent(r, t);
  if (!i)
    return n;
  var o = a.getViewOfComponentModel(i);
  if (!o || !o.findHighDownDispatchers)
    return n;
  for (var s = o.findHighDownDispatchers(e), l, u = 0; u < s.length; u++)
    if (wl.env.NODE_ENV !== "production" && !Jr(s[u]) && ot("param should be highDownDispatcher"), j(s[u]).focus === "self") {
      l = !0;
      break;
    }
  return {
    focusSelf: l,
    dispatchers: s
  };
}
function UD(r, t, e) {
  wl.env.NODE_ENV !== "production" && !Jr(r) && ot("param should be highDownDispatcher");
  var a = j(r), n = mf(a.componentMainType, a.componentIndex, a.componentHighDownName, e), i = n.dispatchers, o = n.focusSelf;
  i ? (o && qc(a.componentMainType, a.componentIndex, e), w(i, function(s) {
    return pp(s, t);
  })) : (Kc(a.seriesIndex, a.focus, a.blurScope, e), a.focus === "self" && qc(a.componentMainType, a.componentIndex, e), pp(r, t));
}
function $D(r, t, e) {
  wl.env.NODE_ENV !== "production" && !Jr(r) && ot("param should be highDownDispatcher"), g_(e);
  var a = j(r), n = mf(a.componentMainType, a.componentIndex, a.componentHighDownName, e).dispatchers;
  n ? w(n, function(i) {
    return dp(i, t);
  }) : dp(r, t);
}
function YD(r, t, e) {
  if (Jc(t)) {
    var a = t.dataType, n = r.getData(a), i = Va(n, t);
    B(i) || (i = [i]), r[t.type === ki ? "toggleSelect" : t.type === Ri ? "select" : "unselect"](i, a);
  }
}
function gp(r) {
  var t = r.getAllData();
  w(t, function(e) {
    var a = e.data, n = e.type;
    a.eachItemGraphicEl(function(i, o) {
      r.isSelected(o, n) ? h_(i) : p_(i);
    });
  });
}
function ZD(r) {
  var t = [];
  return r.eachSeries(function(e) {
    var a = e.getAllData();
    w(a, function(n) {
      n.data;
      var i = n.type, o = e.getSelectedDataIndices();
      if (o.length > 0) {
        var s = {
          dataIndex: o,
          seriesIndex: e.seriesIndex
        };
        i != null && (s.dataType = i), t.push(s);
      }
    });
  }), t;
}
function Ia(r, t, e) {
  Da(r, !0), Er(r, za), jc(r, t, e);
}
function XD(r) {
  Da(r, !1);
}
function Be(r, t, e, a) {
  a ? XD(r) : Ia(r, t, e);
}
function jc(r, t, e) {
  var a = j(r);
  t != null ? (a.focus = t, a.blurScope = e) : a.focus && (a.focus = null);
}
var yp = ["emphasis", "blur", "select"], KD = {
  itemStyle: "getItemStyle",
  lineStyle: "getLineStyle",
  areaStyle: "getAreaStyle"
};
function st(r, t, e, a) {
  e = e || "itemStyle";
  for (var n = 0; n < yp.length; n++) {
    var i = yp[n], o = t.getModel([i, e]), s = r.ensureState(i);
    s.style = a ? a(o) : o[KD[e]]();
  }
}
function Da(r, t) {
  var e = t === !1, a = r;
  r.highDownSilentOnTouch && (a.__highDownSilentOnTouch = r.highDownSilentOnTouch), (!e || a.__highDownDispatcher) && (a.__highByOuter = a.__highByOuter || 0, a.__highDownDispatcher = !e);
}
function Jr(r) {
  return !!(r && r.__highDownDispatcher);
}
function qD(r, t, e) {
  var a = j(r);
  a.componentMainType = t.mainType, a.componentIndex = t.componentIndex, a.componentHighDownName = e;
}
function jD(r) {
  var t = fp[r];
  return t == null && vp <= 32 && (t = fp[r] = vp++), t;
}
function Jc(r) {
  var t = r.type;
  return t === Ri || t === ys || t === ki;
}
function mp(r) {
  var t = r.type;
  return t === Ma || t === gs;
}
function JD(r) {
  var t = l_(r);
  t.normalFill = r.style.fill, t.normalStroke = r.style.stroke;
  var e = r.states.select || {};
  t.selectFill = e.style && e.style.fill || null, t.selectStroke = e.style && e.style.stroke || null;
}
var y_ = ue();
function Hn(r, t, e, a, n) {
  var i;
  if (t && t.ecModel) {
    var o = t.ecModel.getUpdatePayload();
    i = o && o.animation;
  }
  var s = t && t.isAnimationEnabled(), l = r === "update";
  if (s) {
    var u = void 0, c = void 0, v = void 0;
    a ? (u = ce(a.duration, 200), c = ce(a.easing, "cubicOut"), v = 0) : (u = t.getShallow(l ? "animationDurationUpdate" : "animationDuration"), c = t.getShallow(l ? "animationEasingUpdate" : "animationEasing"), v = t.getShallow(l ? "animationDelayUpdate" : "animationDelay")), i && (i.duration != null && (u = i.duration), i.easing != null && (c = i.easing), i.delay != null && (v = i.delay)), X(v) && (v = v(e, n)), X(u) && (u = u(e));
    var f = {
      duration: u || 0,
      delay: v,
      easing: c
    };
    return f;
  } else
    return null;
}
function _f(r, t, e, a, n, i, o) {
  var s = !1, l;
  X(n) ? (o = i, i = n, n = null) : J(n) && (i = n.cb, o = n.during, s = n.isFrom, l = n.removeOpt, n = n.dataIndex);
  var u = r === "leave";
  u || t.stopAnimation("leave");
  var c = Hn(r, a, n, u ? l || {} : null, a && a.getAnimationDelayParams ? a.getAnimationDelayParams(t, n) : null);
  if (c && c.duration > 0) {
    var v = c.duration, f = c.delay, h = c.easing, p = {
      duration: v,
      delay: f || 0,
      easing: h,
      done: i,
      force: !!i || !!o,
      // Set to final state in update/init animation.
      // So the post processing based on the path shape can be done correctly.
      setToFinal: !u,
      scope: r,
      during: o
    };
    s ? t.animateFrom(e, p) : t.animateTo(e, p);
  } else
    t.stopAnimation(), !s && t.attr(e), o && o(1), i && i();
}
function pe(r, t, e, a, n, i) {
  _f("update", r, t, e, a, n, i);
}
function Pe(r, t, e, a, n, i) {
  _f("enter", r, t, e, a, n, i);
}
function mn(r) {
  if (!r.__zr)
    return !0;
  for (var t = 0; t < r.animators.length; t++) {
    var e = r.animators[t];
    if (e.scope === "leave")
      return !0;
  }
  return !1;
}
function Qr(r, t, e, a, n, i) {
  mn(r) || _f("leave", r, t, e, a, n, i);
}
function _p(r, t, e, a) {
  r.removeTextContent(), r.removeTextGuideLine(), Qr(r, {
    style: {
      opacity: 0
    }
  }, t, e, a);
}
function $i(r, t, e) {
  function a() {
    r.parent && r.parent.remove(r);
  }
  r.isGroup ? r.traverse(function(n) {
    n.isGroup || _p(n, t, e, a);
  }) : _p(r, t, e, a);
}
function er(r) {
  y_(r).oldStyle = r.style;
}
function QD(r) {
  return y_(r).oldStyle;
}
var zs = Math.max, Gs = Math.min, Qc = {};
function eA(r) {
  return Ee.extend(r);
}
var tA = _w;
function rA(r, t) {
  return tA(r, t);
}
function tr(r, t) {
  Qc[r] = t;
}
function Sf(r) {
  if (Qc.hasOwnProperty(r))
    return Qc[r];
}
function Tl(r, t, e, a) {
  var n = pw(r, t);
  return e && (a === "center" && (e = __(e, n.getBoundingRect())), S_(n, e)), n;
}
function m_(r, t, e) {
  var a = new Ut({
    style: {
      image: r,
      x: t.x,
      y: t.y,
      width: t.width,
      height: t.height
    },
    onload: function(n) {
      if (e === "center") {
        var i = {
          width: n.width,
          height: n.height
        };
        a.setStyle(__(t, i));
      }
    }
  });
  return a;
}
function __(r, t) {
  var e = t.width / t.height, a = r.height * e, n;
  a <= r.width ? n = r.height : (a = r.width, n = a / e);
  var i = r.x + r.width / 2, o = r.y + r.height / 2;
  return {
    x: i - a / 2,
    y: o - n / 2,
    width: a,
    height: n
  };
}
var Vt = dw;
function S_(r, t) {
  if (r.applyTransform) {
    var e = r.getBoundingRect(), a = e.calculateTransform(t);
    r.applyTransform(a);
  }
}
function Cn(r, t) {
  return gw(r, r, {
    lineWidth: t
  }), r;
}
function aA(r) {
  return yw(r.shape, r.shape, r.style), r;
}
var ms = mw;
function La(r, t) {
  for (var e = af([]); r && r !== t; )
    Es(e, r.getLocalTransform(), e), r = r.parent;
  return e;
}
function Jt(r, t, e) {
  return t && !Vn(t) && (t = gn.getLocalTransform(t)), e && (t = lo([], t)), Ft([], r, t);
}
function Cl(r, t, e) {
  var a = t[4] === 0 || t[5] === 0 || t[0] === 0 ? 1 : Math.abs(2 * t[4] / t[0]), n = t[4] === 0 || t[5] === 0 || t[2] === 0 ? 1 : Math.abs(2 * t[4] / t[2]), i = [r === "left" ? -a : r === "right" ? a : 0, r === "top" ? -n : r === "bottom" ? n : 0];
  return i = Jt(i, t, e), Math.abs(i[0]) > Math.abs(i[1]) ? i[0] > 0 ? "right" : "left" : i[1] > 0 ? "bottom" : "top";
}
function Sp(r) {
  return !r.isGroup;
}
function nA(r) {
  return r.shape != null;
}
function po(r, t, e) {
  if (!r || !t)
    return;
  function a(o) {
    var s = {};
    return o.traverse(function(l) {
      Sp(l) && l.anid && (s[l.anid] = l);
    }), s;
  }
  function n(o) {
    var s = {
      x: o.x,
      y: o.y,
      rotation: o.rotation
    };
    return nA(o) && (s.shape = z({}, o.shape)), s;
  }
  var i = a(r);
  t.traverse(function(o) {
    if (Sp(o) && o.anid) {
      var s = i[o.anid];
      if (s) {
        var l = n(o);
        o.attr(n(s)), pe(o, l, e, j(o).dataIndex);
      }
    }
  });
}
function x_(r, t) {
  return G(r, function(e) {
    var a = e[0];
    a = zs(a, t.x), a = Gs(a, t.x + t.width);
    var n = e[1];
    return n = zs(n, t.y), n = Gs(n, t.y + t.height), [a, n];
  });
}
function iA(r, t) {
  var e = zs(r.x, t.x), a = Gs(r.x + r.width, t.x + t.width), n = zs(r.y, t.y), i = Gs(r.y + r.height, t.y + t.height);
  if (a >= e && i >= n)
    return {
      x: e,
      y: n,
      width: a - e,
      height: i - n
    };
}
function go(r, t, e) {
  var a = z({
    rectHover: !0
  }, t), n = a.style = {
    strokeNoScale: !0
  };
  if (e = e || {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }, r)
    return r.indexOf("image://") === 0 ? (n.image = r.slice(8), ee(n, e), new Ut(a)) : Tl(r.replace("path://", ""), a, e, "center");
}
function Di(r, t, e, a, n) {
  for (var i = 0, o = n[n.length - 1]; i < n.length; i++) {
    var s = n[i];
    if (b_(r, t, e, a, s[0], s[1], o[0], o[1]))
      return !0;
    o = s;
  }
}
function b_(r, t, e, a, n, i, o, s) {
  var l = e - r, u = a - t, c = o - n, v = s - i, f = ru(c, v, l, u);
  if (oA(f))
    return !1;
  var h = r - n, p = t - i, d = ru(h, p, l, u) / f;
  if (d < 0 || d > 1)
    return !1;
  var g = ru(h, p, c, v) / f;
  return !(g < 0 || g > 1);
}
function ru(r, t, e, a) {
  return r * a - e * t;
}
function oA(r) {
  return r <= 1e-6 && r >= -1e-6;
}
function Wn(r) {
  var t = r.itemTooltipOption, e = r.componentModel, a = r.itemName, n = Y(t) ? {
    formatter: t
  } : t, i = e.mainType, o = e.componentIndex, s = {
    componentType: i,
    name: a,
    $vars: ["name"]
  };
  s[i + "Index"] = o;
  var l = r.formatterParamsExtra;
  l && w(Fe(l), function(c) {
    $(s, c) || (s[c] = l[c], s.$vars.push(c));
  });
  var u = j(r.el);
  u.componentMainType = i, u.componentIndex = o, u.tooltipConfig = {
    name: a,
    option: ee({
      content: a,
      encodeHTMLContent: !0,
      formatterParams: s
    }, n)
  };
}
function xp(r, t) {
  var e;
  r.isGroup && (e = t(r)), e || r.traverse(t);
}
function ia(r, t) {
  if (r)
    if (B(r))
      for (var e = 0; e < r.length; e++)
        xp(r[e], t);
    else
      xp(r, t);
}
tr("circle", Wa);
tr("ellipse", V0);
tr("sector", Ht);
tr("ring", gl);
tr("polygon", Wt);
tr("polyline", Ct);
tr("rect", de);
tr("line", it);
tr("bezierCurve", yl);
tr("arc", nf);
const Ua = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Arc: nf,
  BezierCurve: yl,
  BoundingRect: Te,
  Circle: Wa,
  CompoundPath: B0,
  Ellipse: V0,
  Group: re,
  Image: Ut,
  IncrementalDisplayable: Sw,
  Line: it,
  LinearGradient: ml,
  OrientedBoundingRect: Ps,
  Path: Ee,
  Point: Ue,
  Polygon: Wt,
  Polyline: Ct,
  RadialGradient: xw,
  Rect: de,
  Ring: gl,
  Sector: Ht,
  Text: ve,
  applyTransform: Jt,
  clipPointsByRect: x_,
  clipRectByRect: iA,
  createIcon: go,
  extendPath: rA,
  extendShape: eA,
  getShapeClass: Sf,
  getTransform: La,
  groupTransition: po,
  initProps: Pe,
  isElementRemoved: mn,
  lineLineIntersect: b_,
  linePolygonIntersect: Di,
  makeImage: m_,
  makePath: Tl,
  mergePath: Vt,
  registerShape: tr,
  removeElement: Qr,
  removeElementWithFadeOut: $i,
  resizePath: S_,
  setTooltipConfig: Wn,
  subPixelOptimize: ms,
  subPixelOptimizeLine: Cn,
  subPixelOptimizeRect: aA,
  transformDirection: Cl,
  traverseElements: ia,
  updateProps: pe
}, Symbol.toStringTag, { value: "Module" }));
var Lo = { env: {} }, Ml = {};
function w_(r, t) {
  for (var e = 0; e < xt.length; e++) {
    var a = xt[e], n = t[a], i = r.ensureState(a);
    i.style = i.style || {}, i.style.text = n;
  }
  var o = r.currentStates.slice();
  r.clearStates(!0), r.setStyle({
    text: t.normal
  }), r.useStates(o, !0);
}
function ev(r, t, e) {
  var a = r.labelFetcher, n = r.labelDataIndex, i = r.labelDimIndex, o = t.normal, s;
  a && (s = a.getFormattedLabel(n, "normal", null, i, o && o.get("formatter"), e != null ? {
    interpolatedValue: e
  } : null)), s == null && (s = X(r.defaultText) ? r.defaultText(n, r, e) : r.defaultText);
  for (var l = {
    normal: s
  }, u = 0; u < xt.length; u++) {
    var c = xt[u], v = t[c];
    l[c] = ce(a ? a.getFormattedLabel(n, c, null, i, v && v.get("formatter")) : null, s);
  }
  return l;
}
function lt(r, t, e, a) {
  e = e || Ml;
  for (var n = r instanceof ve, i = !1, o = 0; o < Ui.length; o++) {
    var s = t[Ui[o]];
    if (s && s.getShallow("show")) {
      i = !0;
      break;
    }
  }
  var l = n ? r : r.getTextContent();
  if (i) {
    n || (l || (l = new ve(), r.setTextContent(l)), r.stateProxy && (l.stateProxy = r.stateProxy));
    var u = ev(e, t), c = t.normal, v = !!c.getShallow("show"), f = Ie(c, a && a.normal, e, !1, !n);
    f.text = u.normal, n || r.setTextConfig(Fs(c, e, !1));
    for (var o = 0; o < xt.length; o++) {
      var h = xt[o], s = t[h];
      if (s) {
        var p = l.ensureState(h), d = !!ce(s.getShallow("show"), v);
        if (d !== v && (p.ignore = !d), p.style = Ie(s, a && a[h], e, !0, !n), p.style.text = u[h], !n) {
          var g = r.ensureState(h);
          g.textConfig = Fs(s, e, !0);
        }
      }
    }
    l.silent = !!c.getShallow("silent"), l.style.x != null && (f.x = l.style.x), l.style.y != null && (f.y = l.style.y), l.ignore = !v, l.useStyle(f), l.dirty(), e.enableTextSetter && (Un(l).setLabelText = function(y) {
      var m = ev(e, t, y);
      w_(l, m);
    });
  } else l && (l.ignore = !0);
  r.dirty();
}
function tt(r, t) {
  t = t || "label";
  for (var e = {
    normal: r.getModel(t)
  }, a = 0; a < xt.length; a++) {
    var n = xt[a];
    e[n] = r.getModel([n, t]);
  }
  return e;
}
function Ie(r, t, e, a, n) {
  var i = {};
  return sA(i, r, e, a, n), t && z(i, t), i;
}
function Fs(r, t, e) {
  t = t || {};
  var a = {}, n, i = r.getShallow("rotate"), o = ce(r.getShallow("distance"), e ? null : 5), s = r.getShallow("offset");
  return n = r.getShallow("position") || (e ? null : "inside"), n === "outside" && (n = t.defaultOutsidePosition || "top"), n != null && (a.position = n), s != null && (a.offset = s), i != null && (i *= Math.PI / 180, a.rotation = i), o != null && (a.distance = o), a.outsideFill = r.get("color") === "inherit" ? t.inheritColor || null : "auto", a;
}
function sA(r, t, e, a, n) {
  e = e || Ml;
  var i = t.ecModel, o = i && i.option.textStyle, s = lA(t), l;
  if (s) {
    l = {};
    for (var u in s)
      if (s.hasOwnProperty(u)) {
        var c = t.getModel(["rich", u]);
        Ap(l[u] = {}, c, o, e, a, n, !1, !0);
      }
  }
  l && (r.rich = l);
  var v = t.get("overflow");
  v && (r.overflow = v);
  var f = t.get("minMargin");
  f != null && (r.margin = f), Ap(r, t, o, e, a, n, !0, !1);
}
function lA(r) {
  for (var t; r && r !== r.ecModel; ) {
    var e = (r.option || Ml).rich;
    if (e) {
      t = t || {};
      for (var a = Fe(e), n = 0; n < a.length; n++) {
        var i = a[n];
        t[i] = 1;
      }
    }
    r = r.parentModel;
  }
  return t;
}
var bp = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], wp = ["align", "lineHeight", "width", "height", "tag", "verticalAlign", "ellipsis"], Dp = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
function Ap(r, t, e, a, n, i, o, s) {
  e = !n && e || Ml;
  var l = a && a.inheritColor, u = t.getShallow("color"), c = t.getShallow("textBorderColor"), v = ce(t.getShallow("opacity"), e.opacity);
  (u === "inherit" || u === "auto") && (Lo.env.NODE_ENV !== "production" && u === "auto" && We("color: 'auto'", "color: 'inherit'"), l ? u = l : u = null), (c === "inherit" || c === "auto") && (Lo.env.NODE_ENV !== "production" && c === "auto" && We("color: 'auto'", "color: 'inherit'"), l ? c = l : c = null), i || (u = u || e.color, c = c || e.textBorderColor), u != null && (r.fill = u), c != null && (r.stroke = c);
  var f = ce(t.getShallow("textBorderWidth"), e.textBorderWidth);
  f != null && (r.lineWidth = f);
  var h = ce(t.getShallow("textBorderType"), e.textBorderType);
  h != null && (r.lineDash = h);
  var p = ce(t.getShallow("textBorderDashOffset"), e.textBorderDashOffset);
  p != null && (r.lineDashOffset = p), !n && v == null && !s && (v = a && a.defaultOpacity), v != null && (r.opacity = v), !n && !i && r.fill == null && a.inheritColor && (r.fill = a.inheritColor);
  for (var d = 0; d < bp.length; d++) {
    var g = bp[d], y = ce(t.getShallow(g), e[g]);
    y != null && (r[g] = y);
  }
  for (var d = 0; d < wp.length; d++) {
    var g = wp[d], y = t.getShallow(g);
    y != null && (r[g] = y);
  }
  if (r.verticalAlign == null) {
    var m = t.getShallow("baseline");
    m != null && (r.verticalAlign = m);
  }
  if (!o || !a.disableBox) {
    for (var d = 0; d < Dp.length; d++) {
      var g = Dp[d], y = t.getShallow(g);
      y != null && (r[g] = y);
    }
    var _ = t.getShallow("borderType");
    _ != null && (r.borderDash = _), (r.backgroundColor === "auto" || r.backgroundColor === "inherit") && l && (Lo.env.NODE_ENV !== "production" && r.backgroundColor === "auto" && We("backgroundColor: 'auto'", "backgroundColor: 'inherit'"), r.backgroundColor = l), (r.borderColor === "auto" || r.borderColor === "inherit") && l && (Lo.env.NODE_ENV !== "production" && r.borderColor === "auto" && We("borderColor: 'auto'", "borderColor: 'inherit'"), r.borderColor = l);
  }
}
function xf(r, t) {
  var e = t && t.getModel("textStyle");
  return uo([
    // FIXME in node-canvas fontWeight is before fontStyle
    r.fontStyle || e && e.getShallow("fontStyle") || "",
    r.fontWeight || e && e.getShallow("fontWeight") || "",
    (r.fontSize || e && e.getShallow("fontSize") || 12) + "px",
    r.fontFamily || e && e.getShallow("fontFamily") || "sans-serif"
  ].join(" "));
}
var Un = ue();
function D_(r, t, e, a) {
  if (r) {
    var n = Un(r);
    n.prevValue = n.value, n.value = e;
    var i = t.normal;
    n.valueAnimation = i.get("valueAnimation"), n.valueAnimation && (n.precision = i.get("precision"), n.defaultInterpolatedText = a, n.statesModels = t);
  }
}
function A_(r, t, e, a, n) {
  var i = Un(r);
  if (!i.valueAnimation || i.prevValue === i.value)
    return;
  var o = i.defaultInterpolatedText, s = ce(i.interpolatedValue, i.prevValue), l = i.value;
  function u(c) {
    var v = i_(e, i.precision, s, l, c);
    i.interpolatedValue = c === 1 ? null : v;
    var f = ev({
      labelDataIndex: t,
      labelFetcher: n,
      defaultText: o ? o(v) : v + ""
    }, i.statesModels, v);
    w_(r, f);
  }
  r.percent = 0, (i.prevValue == null ? Pe : pe)(r, {
    // percent is used to prevent animation from being aborted #15916
    percent: 1
  }, a, t, null, u);
}
var uA = ["textStyle", "color"], au = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"], nu = new ve(), cA = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getTextColor = function(t) {
      var e = this.ecModel;
      return this.getShallow("color") || (!t && e ? e.get(uA) : null);
    }, r.prototype.getFont = function() {
      return xf({
        fontStyle: this.getShallow("fontStyle"),
        fontWeight: this.getShallow("fontWeight"),
        fontSize: this.getShallow("fontSize"),
        fontFamily: this.getShallow("fontFamily")
      }, this.ecModel);
    }, r.prototype.getTextRect = function(t) {
      for (var e = {
        text: t,
        verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline")
      }, a = 0; a < au.length; a++)
        e[au[a]] = this.getShallow(au[a]);
      return nu.useStyle(e), nu.update(), nu.getBoundingRect();
    }, r;
  }()
), T_ = [
  ["lineWidth", "width"],
  ["stroke", "color"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "type"],
  ["lineDashOffset", "dashOffset"],
  ["lineCap", "cap"],
  ["lineJoin", "join"],
  ["miterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], vA = Ba(T_), fA = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getLineStyle = function(t) {
      return vA(this, t);
    }, r;
  }()
), C_ = [
  ["fill", "color"],
  ["stroke", "borderColor"],
  ["lineWidth", "borderWidth"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "borderType"],
  ["lineDashOffset", "borderDashOffset"],
  ["lineCap", "borderCap"],
  ["lineJoin", "borderJoin"],
  ["miterLimit", "borderMiterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], hA = Ba(C_), pA = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getItemStyle = function(t, e) {
      return hA(this, t, e);
    }, r;
  }()
), me = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.parentModel = e, this.ecModel = a, this.option = t;
    }
    return r.prototype.init = function(t, e, a) {
    }, r.prototype.mergeOption = function(t, e) {
      le(this.option, t, !0);
    }, r.prototype.get = function(t, e) {
      return t == null ? this.option : this._doGet(this.parsePath(t), !e && this.parentModel);
    }, r.prototype.getShallow = function(t, e) {
      var a = this.option, n = a == null ? a : a[t];
      if (n == null && !e) {
        var i = this.parentModel;
        i && (n = i.getShallow(t));
      }
      return n;
    }, r.prototype.getModel = function(t, e) {
      var a = t != null, n = a ? this.parsePath(t) : null, i = a ? this._doGet(n) : this.option;
      return e = e || this.parentModel && this.parentModel.getModel(this.resolveParentPath(n)), new r(i, e, this.ecModel);
    }, r.prototype.isEmpty = function() {
      return this.option == null;
    }, r.prototype.restoreData = function() {
    }, r.prototype.clone = function() {
      var t = this.constructor;
      return new t(Q(this.option));
    }, r.prototype.parsePath = function(t) {
      return typeof t == "string" ? t.split(".") : t;
    }, r.prototype.resolveParentPath = function(t) {
      return t;
    }, r.prototype.isAnimationEnabled = function() {
      if (!Oe.node && this.option) {
        if (this.option.animation != null)
          return !!this.option.animation;
        if (this.parentModel)
          return this.parentModel.isAnimationEnabled();
      }
    }, r.prototype._doGet = function(t, e) {
      var a = this.option;
      if (!t)
        return a;
      for (var n = 0; n < t.length && !(t[n] && (a = a && typeof a == "object" ? a[t[n]] : null, a == null)); n++)
        ;
      return a == null && e && (a = e._doGet(this.resolveParentPath(t), e.parentModel)), a;
    }, r;
  }()
);
hf(me);
LD(me);
at(me, fA);
at(me, pA);
at(me, kD);
at(me, cA);
var dA = { env: {} }, gA = Math.round(Math.random() * 10);
function $n(r) {
  return [r || "", gA++].join("_");
}
function yA(r) {
  var t = {};
  r.registerSubTypeDefaulter = function(e, a) {
    var n = sr(e);
    t[n.main] = a;
  }, r.determineSubType = function(e, a) {
    var n = a.type;
    if (!n) {
      var i = sr(e).main;
      r.hasSubTypes(e) && t[i] && (n = t[i](a));
    }
    return n;
  };
}
function mA(r, t) {
  r.topologicalTravel = function(i, o, s, l) {
    if (!i.length)
      return;
    var u = e(o), c = u.graph, v = u.noEntryList, f = {};
    for (w(i, function(m) {
      f[m] = !0;
    }); v.length; ) {
      var h = v.pop(), p = c[h], d = !!f[h];
      d && (s.call(l, h, p.originalDeps.slice()), delete f[h]), w(p.successor, d ? y : g);
    }
    w(f, function() {
      var m = "";
      throw dA.env.NODE_ENV !== "production" && (m = St("Circular dependency may exists: ", f, i, o)), new Error(m);
    });
    function g(m) {
      c[m].entryCount--, c[m].entryCount === 0 && v.push(m);
    }
    function y(m) {
      f[m] = !0, g(m);
    }
  };
  function e(i) {
    var o = {}, s = [];
    return w(i, function(l) {
      var u = a(o, l), c = u.originalDeps = t(l), v = n(c, i);
      u.entryCount = v.length, u.entryCount === 0 && s.push(l), w(v, function(f) {
        fe(u.predecessor, f) < 0 && u.predecessor.push(f);
        var h = a(o, f);
        fe(h.successor, f) < 0 && h.successor.push(l);
      });
    }), {
      graph: o,
      noEntryList: s
    };
  }
  function a(i, o) {
    return i[o] || (i[o] = {
      predecessor: [],
      successor: []
    }), i[o];
  }
  function n(i, o) {
    var s = [];
    return w(i, function(l) {
      fe(o, l) >= 0 && s.push(l);
    }), s;
  }
}
function oa(r, t) {
  return le(le({}, r, !0), t, !0);
}
const _A = {
  time: {
    month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
  },
  legend: {
    selector: {
      all: "All",
      inverse: "Inv"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "Box Select",
        polygon: "Lasso Select",
        lineX: "Horizontally Select",
        lineY: "Vertically Select",
        keep: "Keep Selections",
        clear: "Clear Selections"
      }
    },
    dataView: {
      title: "Data View",
      lang: ["Data View", "Close", "Refresh"]
    },
    dataZoom: {
      title: {
        zoom: "Zoom",
        back: "Zoom Reset"
      }
    },
    magicType: {
      title: {
        line: "Switch to Line Chart",
        bar: "Switch to Bar Chart",
        stack: "Stack",
        tiled: "Tile"
      }
    },
    restore: {
      title: "Restore"
    },
    saveAsImage: {
      title: "Save as Image",
      lang: ["Right Click to Save Image"]
    }
  },
  series: {
    typeNames: {
      pie: "Pie chart",
      bar: "Bar chart",
      line: "Line chart",
      scatter: "Scatter plot",
      effectScatter: "Ripple scatter plot",
      radar: "Radar chart",
      tree: "Tree",
      treemap: "Treemap",
      boxplot: "Boxplot",
      candlestick: "Candlestick",
      k: "K line chart",
      heatmap: "Heat map",
      map: "Map",
      parallel: "Parallel coordinate map",
      lines: "Line graph",
      graph: "Relationship graph",
      sankey: "Sankey diagram",
      funnel: "Funnel chart",
      gauge: "Gauge",
      pictorialBar: "Pictorial bar",
      themeRiver: "Theme River Map",
      sunburst: "Sunburst",
      custom: "Custom chart",
      chart: "Chart"
    }
  },
  aria: {
    general: {
      withTitle: 'This is a chart about "{title}"',
      withoutTitle: "This is a chart"
    },
    series: {
      single: {
        prefix: "",
        withName: " with type {seriesType} named {seriesName}.",
        withoutName: " with type {seriesType}."
      },
      multiple: {
        prefix: ". It consists of {seriesCount} series count.",
        withName: " The {seriesId} series is a {seriesType} representing {seriesName}.",
        withoutName: " The {seriesId} series is a {seriesType}.",
        separator: {
          middle: "",
          end: ""
        }
      }
    },
    data: {
      allData: "The data is as follows: ",
      partialData: "The first {displayCnt} items are: ",
      withName: "the data for {name} is {value}",
      withoutName: "{value}",
      separator: {
        middle: ", ",
        end: ". "
      }
    }
  }
}, SA = {
  time: {
    month: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
    monthAbbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
    dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
    dayOfWeekAbbr: ["日", "一", "二", "三", "四", "五", "六"]
  },
  legend: {
    selector: {
      all: "全选",
      inverse: "反选"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "矩形选择",
        polygon: "圈选",
        lineX: "横向选择",
        lineY: "纵向选择",
        keep: "保持选择",
        clear: "清除选择"
      }
    },
    dataView: {
      title: "数据视图",
      lang: ["数据视图", "关闭", "刷新"]
    },
    dataZoom: {
      title: {
        zoom: "区域缩放",
        back: "区域缩放还原"
      }
    },
    magicType: {
      title: {
        line: "切换为折线图",
        bar: "切换为柱状图",
        stack: "切换为堆叠",
        tiled: "切换为平铺"
      }
    },
    restore: {
      title: "还原"
    },
    saveAsImage: {
      title: "保存为图片",
      lang: ["右键另存为图片"]
    }
  },
  series: {
    typeNames: {
      pie: "饼图",
      bar: "柱状图",
      line: "折线图",
      scatter: "散点图",
      effectScatter: "涟漪散点图",
      radar: "雷达图",
      tree: "树图",
      treemap: "矩形树图",
      boxplot: "箱型图",
      candlestick: "K线图",
      k: "K线图",
      heatmap: "热力图",
      map: "地图",
      parallel: "平行坐标图",
      lines: "线图",
      graph: "关系图",
      sankey: "桑基图",
      funnel: "漏斗图",
      gauge: "仪表盘图",
      pictorialBar: "象形柱图",
      themeRiver: "主题河流图",
      sunburst: "旭日图",
      custom: "自定义图表",
      chart: "图表"
    }
  },
  aria: {
    general: {
      withTitle: "这是一个关于“{title}”的图表。",
      withoutTitle: "这是一个图表，"
    },
    series: {
      single: {
        prefix: "",
        withName: "图表类型是{seriesType}，表示{seriesName}。",
        withoutName: "图表类型是{seriesType}。"
      },
      multiple: {
        prefix: "它由{seriesCount}个图表系列组成。",
        withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",
        withoutName: "第{seriesId}个系列是一个{seriesType}，",
        separator: {
          middle: "；",
          end: "。"
        }
      }
    },
    data: {
      allData: "其数据是——",
      partialData: "其中，前{displayCnt}项是——",
      withName: "{name}的数据是{value}",
      withoutName: "{value}",
      separator: {
        middle: "，",
        end: ""
      }
    }
  }
};
var Hs = "ZH", bf = "EN", _n = bf, _s = {}, wf = {}, M_ = Oe.domSupported ? function() {
  var r = (
    /* eslint-disable-next-line */
    (document.documentElement.lang || navigator.language || navigator.browserLanguage || _n).toUpperCase()
  );
  return r.indexOf(Hs) > -1 ? Hs : _n;
}() : _n;
function I_(r, t) {
  r = r.toUpperCase(), wf[r] = new me(t), _s[r] = t;
}
function xA(r) {
  if (Y(r)) {
    var t = _s[r.toUpperCase()] || {};
    return r === Hs || r === bf ? Q(t) : le(Q(t), Q(_s[_n]), !1);
  } else
    return le(Q(r), Q(_s[_n]), !1);
}
function tv(r) {
  return wf[r];
}
function bA() {
  return wf[_n];
}
I_(bf, _A);
I_(Hs, SA);
var Df = 1e3, Af = Df * 60, Oi = Af * 60, Bt = Oi * 24, Tp = Bt * 365, Ai = {
  year: "{yyyy}",
  month: "{MMM}",
  day: "{d}",
  hour: "{HH}:{mm}",
  minute: "{HH}:{mm}",
  second: "{HH}:{mm}:{ss}",
  millisecond: "{HH}:{mm}:{ss} {SSS}",
  none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}"
}, Eo = "{yyyy}-{MM}-{dd}", Cp = {
  year: "{yyyy}",
  month: "{yyyy}-{MM}",
  day: Eo,
  hour: Eo + " " + Ai.hour,
  minute: Eo + " " + Ai.minute,
  second: Eo + " " + Ai.second,
  millisecond: Ai.none
}, iu = ["year", "month", "day", "hour", "minute", "second", "millisecond"], L_ = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"];
function Nr(r, t) {
  return r += "", "0000".substr(0, t - r.length) + r;
}
function Sn(r) {
  switch (r) {
    case "half-year":
    case "quarter":
      return "month";
    case "week":
    case "half-week":
      return "day";
    case "half-day":
    case "quarter-day":
      return "hour";
    default:
      return r;
  }
}
function wA(r) {
  return r === Sn(r);
}
function DA(r) {
  switch (r) {
    case "year":
    case "month":
      return "day";
    case "millisecond":
      return "millisecond";
    default:
      return "second";
  }
}
function Il(r, t, e, a) {
  var n = vr(r), i = n[Tf(e)](), o = n[xn(e)]() + 1, s = Math.floor((o - 1) / 3) + 1, l = n[Ll(e)](), u = n["get" + (e ? "UTC" : "") + "Day"](), c = n[Yi(e)](), v = (c - 1) % 12 + 1, f = n[El(e)](), h = n[Pl(e)](), p = n[Nl(e)](), d = c >= 12 ? "pm" : "am", g = d.toUpperCase(), y = a instanceof me ? a : tv(a || M_) || bA(), m = y.getModel("time"), _ = m.get("month"), S = m.get("monthAbbr"), x = m.get("dayOfWeek"), b = m.get("dayOfWeekAbbr");
  return (t || "").replace(/{a}/g, d + "").replace(/{A}/g, g + "").replace(/{yyyy}/g, i + "").replace(/{yy}/g, Nr(i % 100 + "", 2)).replace(/{Q}/g, s + "").replace(/{MMMM}/g, _[o - 1]).replace(/{MMM}/g, S[o - 1]).replace(/{MM}/g, Nr(o, 2)).replace(/{M}/g, o + "").replace(/{dd}/g, Nr(l, 2)).replace(/{d}/g, l + "").replace(/{eeee}/g, x[u]).replace(/{ee}/g, b[u]).replace(/{e}/g, u + "").replace(/{HH}/g, Nr(c, 2)).replace(/{H}/g, c + "").replace(/{hh}/g, Nr(v + "", 2)).replace(/{h}/g, v + "").replace(/{mm}/g, Nr(f, 2)).replace(/{m}/g, f + "").replace(/{ss}/g, Nr(h, 2)).replace(/{s}/g, h + "").replace(/{SSS}/g, Nr(p, 3)).replace(/{S}/g, p + "");
}
function AA(r, t, e, a, n) {
  var i = null;
  if (Y(e))
    i = e;
  else if (X(e))
    i = e(r.value, t, {
      level: r.level
    });
  else {
    var o = z({}, Ai);
    if (r.level > 0)
      for (var s = 0; s < iu.length; ++s)
        o[iu[s]] = "{primary|" + o[iu[s]] + "}";
    var l = e ? e.inherit === !1 ? e : ee(e, o) : o, u = E_(r.value, n);
    if (l[u])
      i = l[u];
    else if (l.inherit) {
      for (var c = L_.indexOf(u), s = c - 1; s >= 0; --s)
        if (l[u]) {
          i = l[u];
          break;
        }
      i = i || o.none;
    }
    if (B(i)) {
      var v = r.level == null ? 0 : r.level >= 0 ? r.level : i.length + r.level;
      v = Math.min(v, i.length - 1), i = i[v];
    }
  }
  return Il(new Date(r.value), i, n, a);
}
function E_(r, t) {
  var e = vr(r), a = e[xn(t)]() + 1, n = e[Ll(t)](), i = e[Yi(t)](), o = e[El(t)](), s = e[Pl(t)](), l = e[Nl(t)](), u = l === 0, c = u && s === 0, v = c && o === 0, f = v && i === 0, h = f && n === 1, p = h && a === 1;
  return p ? "year" : h ? "month" : f ? "day" : v ? "hour" : c ? "minute" : u ? "second" : "millisecond";
}
function Mp(r, t, e) {
  var a = _e(r) ? vr(r) : r;
  switch (t = t || E_(r, e), t) {
    case "year":
      return a[Tf(e)]();
    case "half-year":
      return a[xn(e)]() >= 6 ? 1 : 0;
    case "quarter":
      return Math.floor((a[xn(e)]() + 1) / 4);
    case "month":
      return a[xn(e)]();
    case "day":
      return a[Ll(e)]();
    case "half-day":
      return a[Yi(e)]() / 24;
    case "hour":
      return a[Yi(e)]();
    case "minute":
      return a[El(e)]();
    case "second":
      return a[Pl(e)]();
    case "millisecond":
      return a[Nl(e)]();
  }
}
function Tf(r) {
  return r ? "getUTCFullYear" : "getFullYear";
}
function xn(r) {
  return r ? "getUTCMonth" : "getMonth";
}
function Ll(r) {
  return r ? "getUTCDate" : "getDate";
}
function Yi(r) {
  return r ? "getUTCHours" : "getHours";
}
function El(r) {
  return r ? "getUTCMinutes" : "getMinutes";
}
function Pl(r) {
  return r ? "getUTCSeconds" : "getSeconds";
}
function Nl(r) {
  return r ? "getUTCMilliseconds" : "getMilliseconds";
}
function TA(r) {
  return r ? "setUTCFullYear" : "setFullYear";
}
function P_(r) {
  return r ? "setUTCMonth" : "setMonth";
}
function N_(r) {
  return r ? "setUTCDate" : "setDate";
}
function R_(r) {
  return r ? "setUTCHours" : "setHours";
}
function k_(r) {
  return r ? "setUTCMinutes" : "setMinutes";
}
function O_(r) {
  return r ? "setUTCSeconds" : "setSeconds";
}
function V_(r) {
  return r ? "setUTCMilliseconds" : "setMilliseconds";
}
function B_(r) {
  if (!sf(r))
    return Y(r) ? r : "-";
  var t = (r + "").split(".");
  return t[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (t.length > 1 ? "." + t[1] : "");
}
function z_(r, t) {
  return r = (r || "").toLowerCase().replace(/-(.)/g, function(e, a) {
    return a.toUpperCase();
  }), t && r && (r = r.charAt(0).toUpperCase() + r.slice(1)), r;
}
var Yn = z0;
function rv(r, t, e) {
  var a = "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}";
  function n(c) {
    return c && uo(c) ? c : "-";
  }
  function i(c) {
    return !!(c != null && !isNaN(c) && isFinite(c));
  }
  var o = t === "time", s = r instanceof Date;
  if (o || s) {
    var l = o ? vr(r) : r;
    if (isNaN(+l)) {
      if (s)
        return "-";
    } else return Il(l, a, e);
  }
  if (t === "ordinal")
    return Ls(r) ? n(r) : _e(r) && i(r) ? r + "" : "-";
  var u = Dr(r);
  return i(u) ? B_(u) : Ls(r) ? n(r) : typeof r == "boolean" ? r + "" : "-";
}
var Ip = ["a", "b", "c", "d", "e", "f", "g"], ou = function(r, t) {
  return "{" + r + (t ?? "") + "}";
};
function G_(r, t, e) {
  B(t) || (t = [t]);
  var a = t.length;
  if (!a)
    return "";
  for (var n = t[0].$vars || [], i = 0; i < n.length; i++) {
    var o = Ip[i];
    r = r.replace(ou(o), ou(o, 0));
  }
  for (var s = 0; s < a; s++)
    for (var l = 0; l < n.length; l++) {
      var u = t[s][n[l]];
      r = r.replace(ou(Ip[l], s), e ? Tt(u) : u);
    }
  return r;
}
function CA(r, t, e) {
  return w(t, function(a, n) {
    r = r.replace("{" + n + "}", a);
  }), r;
}
function MA(r, t) {
  var e = Y(r) ? {
    color: r,
    extraCssText: t
  } : r || {}, a = e.color, n = e.type;
  t = e.extraCssText;
  var i = e.renderMode || "html";
  if (!a)
    return "";
  if (i === "html")
    return n === "subItem" ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + Tt(a) + ";" + (t || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + Tt(a) + ";" + (t || "") + '"></span>';
  var o = e.markerId || "markerX";
  return {
    renderMode: i,
    content: "{" + o + "|}  ",
    style: n === "subItem" ? {
      width: 4,
      height: 4,
      borderRadius: 2,
      backgroundColor: a
    } : {
      width: 10,
      height: 10,
      borderRadius: 5,
      backgroundColor: a
    }
  };
}
function Ga(r, t) {
  return t = t || "transparent", Y(r) ? r : J(r) && r.colorStops && (r.colorStops[0] || {}).color || t;
}
function Ws(r, t) {
  if (t === "_blank" || t === "blank") {
    var e = window.open();
    e.opener = null, e.location.href = r;
  } else
    window.open(r, t);
}
var Ss = w, F_ = ["left", "right", "top", "bottom", "width", "height"], Aa = [["width", "left", "right"], ["height", "top", "bottom"]];
function Cf(r, t, e, a, n) {
  var i = 0, o = 0;
  a == null && (a = 1 / 0), n == null && (n = 1 / 0);
  var s = 0;
  t.eachChild(function(l, u) {
    var c = l.getBoundingRect(), v = t.childAt(u + 1), f = v && v.getBoundingRect(), h, p;
    if (r === "horizontal") {
      var d = c.width + (f ? -f.x + c.x : 0);
      h = i + d, h > a || l.newline ? (i = 0, h = d, o += s + e, s = c.height) : s = Math.max(s, c.height);
    } else {
      var g = c.height + (f ? -f.y + c.y : 0);
      p = o + g, p > n || l.newline ? (i += s + e, o = 0, p = g, s = c.width) : s = Math.max(s, c.width);
    }
    l.newline || (l.x = i, l.y = o, l.markRedraw(), r === "horizontal" ? i = h + e : o = p + e);
  });
}
var Ea = Cf;
te(Cf, "vertical");
te(Cf, "horizontal");
function IA(r, t, e) {
  var a = t.width, n = t.height, i = H(r.left, a), o = H(r.top, n), s = H(r.right, a), l = H(r.bottom, n);
  return (isNaN(i) || isNaN(parseFloat(r.left))) && (i = 0), (isNaN(s) || isNaN(parseFloat(r.right))) && (s = a), (isNaN(o) || isNaN(parseFloat(r.top))) && (o = 0), (isNaN(l) || isNaN(parseFloat(r.bottom))) && (l = n), e = Yn(e || 0), {
    width: Math.max(s - i - e[1] - e[3], 0),
    height: Math.max(l - o - e[0] - e[2], 0)
  };
}
function qe(r, t, e) {
  e = Yn(e || 0);
  var a = t.width, n = t.height, i = H(r.left, a), o = H(r.top, n), s = H(r.right, a), l = H(r.bottom, n), u = H(r.width, a), c = H(r.height, n), v = e[2] + e[0], f = e[1] + e[3], h = r.aspect;
  switch (isNaN(u) && (u = a - s - f - i), isNaN(c) && (c = n - l - v - o), h != null && (isNaN(u) && isNaN(c) && (h > a / n ? u = a * 0.8 : c = n * 0.8), isNaN(u) && (u = h * c), isNaN(c) && (c = u / h)), isNaN(i) && (i = a - s - u - f), isNaN(o) && (o = n - l - c - v), r.left || r.right) {
    case "center":
      i = a / 2 - u / 2 - e[3];
      break;
    case "right":
      i = a - u - f;
      break;
  }
  switch (r.top || r.bottom) {
    case "middle":
    case "center":
      o = n / 2 - c / 2 - e[0];
      break;
    case "bottom":
      o = n - c - v;
      break;
  }
  i = i || 0, o = o || 0, isNaN(u) && (u = a - f - i - (s || 0)), isNaN(c) && (c = n - v - o - (l || 0));
  var p = new Te(i + e[3], o + e[0], u, c);
  return p.margin = e, p;
}
function Rl(r, t, e, a, n, i) {
  var o = !n || !n.hv || n.hv[0], s = !n || !n.hv || n.hv[1], l = n && n.boundingMode || "all";
  if (i = i || r, i.x = r.x, i.y = r.y, !o && !s)
    return !1;
  var u;
  if (l === "raw")
    u = r.type === "group" ? new Te(0, 0, +t.width || 0, +t.height || 0) : r.getBoundingRect();
  else if (u = r.getBoundingRect(), r.needLocalTransform()) {
    var c = r.getLocalTransform();
    u = u.clone(), u.applyTransform(c);
  }
  var v = qe(ee({
    width: u.width,
    height: u.height
  }, t), e, a), f = o ? v.x - u.x : 0, h = s ? v.y - u.y : 0;
  return l === "raw" ? (i.x = f, i.y = h) : (i.x += f, i.y += h), i === r && r.markRedraw(), !0;
}
function LA(r, t) {
  return r[Aa[t][0]] != null || r[Aa[t][1]] != null && r[Aa[t][2]] != null;
}
function Zi(r) {
  var t = r.layoutMode || r.constructor.layoutMode;
  return J(t) ? t : t ? {
    type: t
  } : null;
}
function ea(r, t, e) {
  var a = e && e.ignoreSize;
  !B(a) && (a = [a, a]);
  var n = o(Aa[0], 0), i = o(Aa[1], 1);
  u(Aa[0], r, n), u(Aa[1], r, i);
  function o(c, v) {
    var f = {}, h = 0, p = {}, d = 0, g = 2;
    if (Ss(c, function(_) {
      p[_] = r[_];
    }), Ss(c, function(_) {
      s(t, _) && (f[_] = p[_] = t[_]), l(f, _) && h++, l(p, _) && d++;
    }), a[v])
      return l(t, c[1]) ? p[c[2]] = null : l(t, c[2]) && (p[c[1]] = null), p;
    if (d === g || !h)
      return p;
    if (h >= g)
      return f;
    for (var y = 0; y < c.length; y++) {
      var m = c[y];
      if (!s(f, m) && s(r, m)) {
        f[m] = r[m];
        break;
      }
    }
    return f;
  }
  function s(c, v) {
    return c.hasOwnProperty(v);
  }
  function l(c, v) {
    return c[v] != null && c[v] !== "auto";
  }
  function u(c, v, f) {
    Ss(c, function(h) {
      v[h] = f[h];
    });
  }
}
function Zn(r) {
  return H_({}, r);
}
function H_(r, t) {
  return t && r && Ss(F_, function(e) {
    t.hasOwnProperty(e) && (r[e] = t[e]);
  }), r;
}
var EA = ue(), se = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this, e, a, n) || this;
      return i.uid = $n("ec_cpt_model"), i;
    }
    return t.prototype.init = function(e, a, n) {
      this.mergeDefaultAndTheme(e, n);
    }, t.prototype.mergeDefaultAndTheme = function(e, a) {
      var n = Zi(this), i = n ? Zn(e) : {}, o = a.getTheme();
      le(e, o.get(this.mainType)), le(e, this.getDefaultOption()), n && ea(e, i, n);
    }, t.prototype.mergeOption = function(e, a) {
      le(this.option, e, !0);
      var n = Zi(this);
      n && ea(this.option, e, n);
    }, t.prototype.optionUpdated = function(e, a) {
    }, t.prototype.getDefaultOption = function() {
      var e = this.constructor;
      if (!CD(e))
        return e.defaultOption;
      var a = EA(this);
      if (!a.defaultOption) {
        for (var n = [], i = e; i; ) {
          var o = i.prototype.defaultOption;
          o && n.push(o), i = i.superClass;
        }
        for (var s = {}, l = n.length - 1; l >= 0; l--)
          s = le(s, n[l], !0);
        a.defaultOption = s;
      }
      return a.defaultOption;
    }, t.prototype.getReferringComponents = function(e, a) {
      var n = e + "Index", i = e + "Id";
      return fo(this.ecModel, e, {
        index: this.get(n, !0),
        id: this.get(i, !0)
      }, a);
    }, t.prototype.getBoxLayoutParams = function() {
      var e = this;
      return {
        left: e.get("left"),
        top: e.get("top"),
        right: e.get("right"),
        bottom: e.get("bottom"),
        width: e.get("width"),
        height: e.get("height")
      };
    }, t.prototype.getZLevelKey = function() {
      return "";
    }, t.prototype.setZLevel = function(e) {
      this.option.zlevel = e;
    }, t.protoInitialize = function() {
      var e = t.prototype;
      e.type = "component", e.id = "", e.name = "", e.mainType = "", e.subType = "", e.componentIndex = 0;
    }(), t;
  }(me)
);
s_(se, me);
bl(se);
yA(se);
mA(se, PA);
function PA(r) {
  var t = [];
  return w(se.getClassesByMainType(r), function(e) {
    t = t.concat(e.dependencies || e.prototype.dependencies || []);
  }), t = G(t, function(e) {
    return sr(e).main;
  }), r !== "dataset" && fe(t, "dataset") <= 0 && t.unshift("dataset"), t;
}
var W_ = "";
typeof navigator < "u" && (W_ = navigator.platform || "");
var ja = "rgba(0, 0, 0, 0.2)";
const NA = {
  darkMode: "auto",
  // backgroundColor: 'rgba(0,0,0,0)',
  colorBy: "series",
  color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"],
  gradientColor: ["#f6efa6", "#d88273", "#bf444c"],
  aria: {
    decal: {
      decals: [{
        color: ja,
        dashArrayX: [1, 0],
        dashArrayY: [2, 5],
        symbolSize: 1,
        rotation: Math.PI / 6
      }, {
        color: ja,
        symbol: "circle",
        dashArrayX: [[8, 8], [0, 8, 8, 0]],
        dashArrayY: [6, 0],
        symbolSize: 0.8
      }, {
        color: ja,
        dashArrayX: [1, 0],
        dashArrayY: [4, 3],
        rotation: -Math.PI / 4
      }, {
        color: ja,
        dashArrayX: [[6, 6], [0, 6, 6, 0]],
        dashArrayY: [6, 0]
      }, {
        color: ja,
        dashArrayX: [[1, 0], [1, 6]],
        dashArrayY: [1, 0, 6, 0],
        rotation: Math.PI / 4
      }, {
        color: ja,
        symbol: "triangle",
        dashArrayX: [[9, 9], [0, 9, 9, 0]],
        dashArrayY: [7, 2],
        symbolSize: 0.75
      }]
    }
  },
  // If xAxis and yAxis declared, grid is created by default.
  // grid: {},
  textStyle: {
    // color: '#000',
    // decoration: 'none',
    // PENDING
    fontFamily: W_.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
    // fontFamily: 'Arial, Verdana, sans-serif',
    fontSize: 12,
    fontStyle: "normal",
    fontWeight: "normal"
  },
  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/
  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
  // Default is source-over
  blendMode: null,
  stateAnimation: {
    duration: 300,
    easing: "cubicOut"
  },
  animation: "auto",
  animationDuration: 1e3,
  animationDurationUpdate: 500,
  animationEasing: "cubicInOut",
  animationEasingUpdate: "cubicInOut",
  animationThreshold: 2e3,
  // Configuration for progressive/incremental rendering
  progressiveThreshold: 3e3,
  progressive: 400,
  // Threshold of if use single hover layer to optimize.
  // It is recommended that `hoverLayerThreshold` is equivalent to or less than
  // `progressiveThreshold`, otherwise hover will cause restart of progressive,
  // which is unexpected.
  // see example <echarts/test/heatmap-large.html>.
  hoverLayerThreshold: 3e3,
  // See: module:echarts/scale/Time
  useUTC: !1
};
var av = Z(["tooltip", "label", "itemName", "itemId", "itemGroupId", "itemChildGroupId", "seriesName"]), $t = "original", ft = "arrayRows", Yt = "objectRows", fr = "keyedColumns", xr = "typedArray", U_ = "unknown", cr = "column", Xn = "row", nt = {
  Must: 1,
  Might: 2,
  Not: 3
  // Other cases
}, $_ = ue();
function RA(r) {
  $_(r).datasetMap = Z();
}
function Y_(r, t, e) {
  var a = {}, n = If(t);
  if (!n || !r)
    return a;
  var i = [], o = [], s = t.ecModel, l = $_(s).datasetMap, u = n.uid + "_" + e.seriesLayoutBy, c, v;
  r = r.slice(), w(r, function(d, g) {
    var y = J(d) ? d : r[g] = {
      name: d
    };
    y.type === "ordinal" && c == null && (c = g, v = p(y)), a[y.name] = [];
  });
  var f = l.get(u) || l.set(u, {
    categoryWayDim: v,
    valueWayDim: 0
  });
  w(r, function(d, g) {
    var y = d.name, m = p(d);
    if (c == null) {
      var _ = f.valueWayDim;
      h(a[y], _, m), h(o, _, m), f.valueWayDim += m;
    } else if (c === g)
      h(a[y], 0, m), h(i, 0, m);
    else {
      var _ = f.categoryWayDim;
      h(a[y], _, m), h(o, _, m), f.categoryWayDim += m;
    }
  });
  function h(d, g, y) {
    for (var m = 0; m < y; m++)
      d.push(g + m);
  }
  function p(d) {
    var g = d.dimsDef;
    return g ? g.length : 1;
  }
  return i.length && (a.itemName = i), o.length && (a.seriesName = o), a;
}
function Mf(r, t, e) {
  var a = {}, n = If(r);
  if (!n)
    return a;
  var i = t.sourceFormat, o = t.dimensionsDefine, s;
  (i === Yt || i === fr) && w(o, function(c, v) {
    (J(c) ? c.name : c) === "name" && (s = v);
  });
  var l = function() {
    for (var c = {}, v = {}, f = [], h = 0, p = Math.min(5, e); h < p; h++) {
      var d = X_(t.data, i, t.seriesLayoutBy, o, t.startIndex, h);
      f.push(d);
      var g = d === nt.Not;
      if (g && c.v == null && h !== s && (c.v = h), (c.n == null || c.n === c.v || !g && f[c.n] === nt.Not) && (c.n = h), y(c) && f[c.n] !== nt.Not)
        return c;
      g || (d === nt.Might && v.v == null && h !== s && (v.v = h), (v.n == null || v.n === v.v) && (v.n = h));
    }
    function y(m) {
      return m.v != null && m.n != null;
    }
    return y(c) ? c : y(v) ? v : null;
  }();
  if (l) {
    a.value = [l.v];
    var u = s ?? l.n;
    a.itemName = [u], a.seriesName = [u];
  }
  return a;
}
function If(r) {
  var t = r.get("data", !0);
  if (!t)
    return fo(r.ecModel, "dataset", {
      index: r.get("datasetIndex", !0),
      id: r.get("datasetId", !0)
    }, Ye).models[0];
}
function kA(r) {
  return !r.get("transform", !0) && !r.get("fromTransformResult", !0) ? [] : fo(r.ecModel, "dataset", {
    index: r.get("fromDatasetIndex", !0),
    id: r.get("fromDatasetId", !0)
  }, Ye).models;
}
function Z_(r, t) {
  return X_(r.data, r.sourceFormat, r.seriesLayoutBy, r.dimensionsDefine, r.startIndex, t);
}
function X_(r, t, e, a, n, i) {
  var o, s = 5;
  if (Dt(r))
    return nt.Not;
  var l, u;
  if (a) {
    var c = a[i];
    J(c) ? (l = c.name, u = c.type) : Y(c) && (l = c);
  }
  if (u != null)
    return u === "ordinal" ? nt.Must : nt.Not;
  if (t === ft) {
    var v = r;
    if (e === Xn) {
      for (var f = v[i], h = 0; h < (f || []).length && h < s; h++)
        if ((o = S(f[n + h])) != null)
          return o;
    } else
      for (var h = 0; h < v.length && h < s; h++) {
        var p = v[n + h];
        if (p && (o = S(p[i])) != null)
          return o;
      }
  } else if (t === Yt) {
    var d = r;
    if (!l)
      return nt.Not;
    for (var h = 0; h < d.length && h < s; h++) {
      var g = d[h];
      if (g && (o = S(g[l])) != null)
        return o;
    }
  } else if (t === fr) {
    var y = r;
    if (!l)
      return nt.Not;
    var f = y[l];
    if (!f || Dt(f))
      return nt.Not;
    for (var h = 0; h < f.length && h < s; h++)
      if ((o = S(f[h])) != null)
        return o;
  } else if (t === $t)
    for (var m = r, h = 0; h < m.length && h < s; h++) {
      var g = m[h], _ = Gn(g);
      if (!B(_))
        return nt.Not;
      if ((o = S(_[i])) != null)
        return o;
    }
  function S(x) {
    var b = Y(x);
    if (x != null && Number.isFinite(Number(x)) && x !== "")
      return b ? nt.Might : nt.Not;
    if (b && x !== "-")
      return nt.Must;
  }
  return nt.Not;
}
var OA = { env: {} }, nv = Z();
function VA(r, t) {
  K(nv.get(r) == null && t), nv.set(r, t);
}
function BA(r, t, e) {
  var a = nv.get(t);
  if (!a)
    return e;
  var n = a(r);
  if (!n)
    return e;
  if (OA.env.NODE_ENV !== "production")
    for (var i = 0; i < n.length; i++)
      K(Tn(n[i]));
  return e.concat(n);
}
var Lp = ue(), zA = ue(), Lf = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getColorFromPalette = function(t, e, a) {
      var n = we(this.get("color", !0)), i = this.get("colorLayer", !0);
      return K_(this, Lp, n, i, t, e, a);
    }, r.prototype.clearColorPalette = function() {
      FA(this, Lp);
    }, r;
  }()
);
function iv(r, t, e, a) {
  var n = we(r.get(["aria", "decal", "decals"]));
  return K_(r, zA, n, null, t, e, a);
}
function GA(r, t) {
  for (var e = r.length, a = 0; a < e; a++)
    if (r[a].length > t)
      return r[a];
  return r[e - 1];
}
function K_(r, t, e, a, n, i, o) {
  i = i || r;
  var s = t(i), l = s.paletteIdx || 0, u = s.paletteNameMap = s.paletteNameMap || {};
  if (u.hasOwnProperty(n))
    return u[n];
  var c = o == null || !a ? e : GA(a, o);
  if (c = c || e, !(!c || !c.length)) {
    var v = c[l];
    return n && (u[n] = v), s.paletteIdx = (l + 1) % c.length, v;
  }
}
function FA(r, t) {
  t(r).paletteIdx = 0, t(r).paletteNameMap = {};
}
var hn = { env: {} }, Po, ri, Ep, su = "\0_ec_inner", Pp = 1, HA = {
  grid: "GridComponent",
  polar: "PolarComponent",
  geo: "GeoComponent",
  singleAxis: "SingleAxisComponent",
  parallel: "ParallelComponent",
  calendar: "CalendarComponent",
  graphic: "GraphicComponent",
  toolbox: "ToolboxComponent",
  tooltip: "TooltipComponent",
  axisPointer: "AxisPointerComponent",
  brush: "BrushComponent",
  title: "TitleComponent",
  timeline: "TimelineComponent",
  markPoint: "MarkPointComponent",
  markLine: "MarkLineComponent",
  markArea: "MarkAreaComponent",
  legend: "LegendComponent",
  dataZoom: "DataZoomComponent",
  visualMap: "VisualMapComponent",
  // aria: 'AriaComponent',
  // dataset: 'DatasetComponent',
  // Dependencies
  xAxis: "GridComponent",
  yAxis: "GridComponent",
  angleAxis: "PolarComponent",
  radiusAxis: "PolarComponent"
}, WA = {
  line: "LineChart",
  bar: "BarChart",
  pie: "PieChart",
  scatter: "ScatterChart",
  radar: "RadarChart",
  map: "MapChart",
  tree: "TreeChart",
  treemap: "TreemapChart",
  graph: "GraphChart",
  gauge: "GaugeChart",
  funnel: "FunnelChart",
  parallel: "ParallelChart",
  sankey: "SankeyChart",
  boxplot: "BoxplotChart",
  candlestick: "CandlestickChart",
  effectScatter: "EffectScatterChart",
  lines: "LinesChart",
  heatmap: "HeatmapChart",
  pictorialBar: "PictorialBarChart",
  themeRiver: "ThemeRiverChart",
  sunburst: "SunburstChart",
  custom: "CustomChart"
}, Us = {};
function UA(r) {
  w(r, function(t, e) {
    if (!se.hasClass(e)) {
      var a = HA[e];
      a && !Us[a] && (ot("Component " + e + ` is used but not imported.
import { ` + a + ` } from 'echarts/components';
echarts.use([` + a + "]);"), Us[a] = !0);
    }
  });
}
var Ef = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.init = function(e, a, n, i, o, s) {
      i = i || {}, this.option = null, this._theme = new me(i), this._locale = new me(o), this._optionManager = s;
    }, t.prototype.setOption = function(e, a, n) {
      hn.env.NODE_ENV !== "production" && (K(e != null, "option is null/undefined"), K(e[su] !== Pp, "please use chart.getOption()"));
      var i = kp(a);
      this._optionManager.setOption(e, n, i), this._resetOption(null, i);
    }, t.prototype.resetOption = function(e, a) {
      return this._resetOption(e, kp(a));
    }, t.prototype._resetOption = function(e, a) {
      var n = !1, i = this._optionManager;
      if (!e || e === "recreate") {
        var o = i.mountOption(e === "recreate");
        hn.env.NODE_ENV !== "production" && UA(o), !this.option || e === "recreate" ? Ep(this, o) : (this.restoreData(), this._mergeOption(o, a)), n = !0;
      }
      if ((e === "timeline" || e === "media") && this.restoreData(), !e || e === "recreate" || e === "timeline") {
        var s = i.getTimelineOption(this);
        s && (n = !0, this._mergeOption(s, a));
      }
      if (!e || e === "recreate" || e === "media") {
        var l = i.getMediaOption(this);
        l.length && w(l, function(u) {
          n = !0, this._mergeOption(u, a);
        }, this);
      }
      return n;
    }, t.prototype.mergeOption = function(e) {
      this._mergeOption(e, null);
    }, t.prototype._mergeOption = function(e, a) {
      var n = this.option, i = this._componentsMap, o = this._componentsCount, s = [], l = Z(), u = a && a.replaceMergeMainTypeMap;
      RA(this), w(e, function(v, f) {
        v != null && (se.hasClass(f) ? f && (s.push(f), l.set(f, !0)) : n[f] = n[f] == null ? Q(v) : le(n[f], v, !0));
      }), u && u.each(function(v, f) {
        se.hasClass(f) && !l.get(f) && (s.push(f), l.set(f, !0));
      }), se.topologicalTravel(s, se.getAllClassMainTypes(), c, this);
      function c(v) {
        var f = BA(this, v, we(e[v])), h = i.get(v), p = (
          // `!oldCmptList` means init. See the comment in `mappingToExists`
          h ? u && u.get(v) ? "replaceMerge" : "normalMerge" : "replaceAll"
        ), d = r_(h, f, p);
        mD(d, v, se), n[v] = null, i.set(v, null), o.set(v, 0);
        var g = [], y = [], m = 0, _, S;
        w(d, function(x, b) {
          var D = x.existing, A = x.newOption;
          if (!A)
            D && (D.mergeOption({}, this), D.optionUpdated({}, !1));
          else {
            var T = v === "series", C = se.getClass(
              v,
              x.keyInfo.subType,
              !T
              // Give a more detailed warn later if series don't exists
            );
            if (!C) {
              if (hn.env.NODE_ENV !== "production") {
                var M = x.keyInfo.subType, I = WA[M];
                Us[M] || (Us[M] = !0, ot(I ? "Series " + M + ` is used but not imported.
import { ` + I + ` } from 'echarts/charts';
echarts.use([` + I + "]);" : "Unknown series " + M));
              }
              return;
            }
            if (v === "tooltip") {
              if (_) {
                hn.env.NODE_ENV !== "production" && (S || (Ve("Currently only one tooltip component is allowed."), S = !0));
                return;
              }
              _ = !0;
            }
            if (D && D.constructor === C)
              D.name = x.keyInfo.name, D.mergeOption(A, this), D.optionUpdated(A, !1);
            else {
              var L = z({
                componentIndex: b
              }, x.keyInfo);
              D = new C(A, this, this, L), z(D, L), x.brandNew && (D.__requireNewView = !0), D.init(A, this, this), D.optionUpdated(null, !0);
            }
          }
          D ? (g.push(D.option), y.push(D), m++) : (g.push(void 0), y.push(void 0));
        }, this), n[v] = g, i.set(v, y), o.set(v, m), v === "series" && Po(this);
      }
      this._seriesIndices || Po(this);
    }, t.prototype.getOption = function() {
      var e = Q(this.option);
      return w(e, function(a, n) {
        if (se.hasClass(n)) {
          for (var i = we(a), o = i.length, s = !1, l = o - 1; l >= 0; l--)
            i[l] && !Tn(i[l]) ? s = !0 : (i[l] = null, !s && o--);
          i.length = o, e[n] = i;
        }
      }), delete e[su], e;
    }, t.prototype.getTheme = function() {
      return this._theme;
    }, t.prototype.getLocaleModel = function() {
      return this._locale;
    }, t.prototype.setUpdatePayload = function(e) {
      this._payload = e;
    }, t.prototype.getUpdatePayload = function() {
      return this._payload;
    }, t.prototype.getComponent = function(e, a) {
      var n = this._componentsMap.get(e);
      if (n) {
        var i = n[a || 0];
        if (i)
          return i;
        if (a == null) {
          for (var o = 0; o < n.length; o++)
            if (n[o])
              return n[o];
        }
      }
    }, t.prototype.queryComponents = function(e) {
      var a = e.mainType;
      if (!a)
        return [];
      var n = e.index, i = e.id, o = e.name, s = this._componentsMap.get(a);
      if (!s || !s.length)
        return [];
      var l;
      return n != null ? (l = [], w(we(n), function(u) {
        s[u] && l.push(s[u]);
      })) : i != null ? l = Np("id", i, s) : o != null ? l = Np("name", o, s) : l = Ae(s, function(u) {
        return !!u;
      }), Rp(l, e);
    }, t.prototype.findComponents = function(e) {
      var a = e.query, n = e.mainType, i = s(a), o = i ? this.queryComponents(i) : Ae(this._componentsMap.get(n), function(u) {
        return !!u;
      });
      return l(Rp(o, e));
      function s(u) {
        var c = n + "Index", v = n + "Id", f = n + "Name";
        return u && (u[c] != null || u[v] != null || u[f] != null) ? {
          mainType: n,
          // subType will be filtered finally.
          index: u[c],
          id: u[v],
          name: u[f]
        } : null;
      }
      function l(u) {
        return e.filter ? Ae(u, e.filter) : u;
      }
    }, t.prototype.eachComponent = function(e, a, n) {
      var i = this._componentsMap;
      if (X(e)) {
        var o = a, s = e;
        i.each(function(v, f) {
          for (var h = 0; v && h < v.length; h++) {
            var p = v[h];
            p && s.call(o, f, p, p.componentIndex);
          }
        });
      } else
        for (var l = Y(e) ? i.get(e) : J(e) ? this.findComponents(e) : null, u = 0; l && u < l.length; u++) {
          var c = l[u];
          c && a.call(n, c, c.componentIndex);
        }
    }, t.prototype.getSeriesByName = function(e) {
      var a = Ke(e, null);
      return Ae(this._componentsMap.get("series"), function(n) {
        return !!n && a != null && n.name === a;
      });
    }, t.prototype.getSeriesByIndex = function(e) {
      return this._componentsMap.get("series")[e];
    }, t.prototype.getSeriesByType = function(e) {
      return Ae(this._componentsMap.get("series"), function(a) {
        return !!a && a.subType === e;
      });
    }, t.prototype.getSeries = function() {
      return Ae(this._componentsMap.get("series"), function(e) {
        return !!e;
      });
    }, t.prototype.getSeriesCount = function() {
      return this._componentsCount.get("series");
    }, t.prototype.eachSeries = function(e, a) {
      ri(this), w(this._seriesIndices, function(n) {
        var i = this._componentsMap.get("series")[n];
        e.call(a, i, n);
      }, this);
    }, t.prototype.eachRawSeries = function(e, a) {
      w(this._componentsMap.get("series"), function(n) {
        n && e.call(a, n, n.componentIndex);
      });
    }, t.prototype.eachSeriesByType = function(e, a, n) {
      ri(this), w(this._seriesIndices, function(i) {
        var o = this._componentsMap.get("series")[i];
        o.subType === e && a.call(n, o, i);
      }, this);
    }, t.prototype.eachRawSeriesByType = function(e, a, n) {
      return w(this.getSeriesByType(e), a, n);
    }, t.prototype.isSeriesFiltered = function(e) {
      return ri(this), this._seriesIndicesMap.get(e.componentIndex) == null;
    }, t.prototype.getCurrentSeriesIndices = function() {
      return (this._seriesIndices || []).slice();
    }, t.prototype.filterSeries = function(e, a) {
      ri(this);
      var n = [];
      w(this._seriesIndices, function(i) {
        var o = this._componentsMap.get("series")[i];
        e.call(a, o, i) && n.push(i);
      }, this), this._seriesIndices = n, this._seriesIndicesMap = Z(n);
    }, t.prototype.restoreData = function(e) {
      Po(this);
      var a = this._componentsMap, n = [];
      a.each(function(i, o) {
        se.hasClass(o) && n.push(o);
      }), se.topologicalTravel(n, se.getAllClassMainTypes(), function(i) {
        w(a.get(i), function(o) {
          o && (i !== "series" || !$A(o, e)) && o.restoreData();
        });
      });
    }, t.internalField = function() {
      Po = function(e) {
        var a = e._seriesIndices = [];
        w(e._componentsMap.get("series"), function(n) {
          n && a.push(n.componentIndex);
        }), e._seriesIndicesMap = Z(a);
      }, ri = function(e) {
        if (hn.env.NODE_ENV !== "production" && !e._seriesIndices)
          throw new Error("Option should contains series.");
      }, Ep = function(e, a) {
        e.option = {}, e.option[su] = Pp, e._componentsMap = Z({
          series: []
        }), e._componentsCount = Z();
        var n = a.aria;
        J(n) && n.enabled == null && (n.enabled = !0), YA(a, e._theme.option), le(a, NA, !1), e._mergeOption(a, null);
      };
    }(), t;
  }(me)
);
function $A(r, t) {
  if (t) {
    var e = t.seriesIndex, a = t.seriesId, n = t.seriesName;
    return e != null && r.componentIndex !== e || a != null && r.id !== a || n != null && r.name !== n;
  }
}
function YA(r, t) {
  var e = r.color && !r.colorLayer;
  w(t, function(a, n) {
    n === "colorLayer" && e || se.hasClass(n) || (typeof a == "object" ? r[n] = r[n] ? le(r[n], a, !1) : Q(a) : r[n] == null && (r[n] = a));
  });
}
function Np(r, t, e) {
  if (B(t)) {
    var a = Z();
    return w(t, function(i) {
      if (i != null) {
        var o = Ke(i, null);
        o != null && a.set(i, !0);
      }
    }), Ae(e, function(i) {
      return i && a.get(i[r]);
    });
  } else {
    var n = Ke(t, null);
    return Ae(e, function(i) {
      return i && n != null && i[r] === n;
    });
  }
}
function Rp(r, t) {
  return t.hasOwnProperty("subType") ? Ae(r, function(e) {
    return e && e.subType === t.subType;
  }) : r;
}
function kp(r) {
  var t = Z();
  return r && w(we(r.replaceMerge), function(e) {
    hn.env.NODE_ENV !== "production" && K(se.hasClass(e), '"' + e + '" is not valid component main type in "replaceMerge"'), t.set(e, !0);
  }), {
    replaceMergeMainTypeMap: t
  };
}
at(Ef, Lf);
var ZA = [
  "getDom",
  "getZr",
  "getWidth",
  "getHeight",
  "getDevicePixelRatio",
  "dispatchAction",
  "isSSR",
  "isDisposed",
  "on",
  "off",
  "getDataURL",
  "getConnectedDataURL",
  // 'getModel',
  "getOption",
  // 'getViewOfComponentModel',
  // 'getViewOfSeriesModel',
  "getId",
  "updateLabelLayout"
], q_ = (
  /** @class */
  /* @__PURE__ */ function() {
    function r(t) {
      w(ZA, function(e) {
        this[e] = U(t[e], t);
      }, this);
    }
    return r;
  }()
), lu = {}, Kn = (
  /** @class */
  function() {
    function r() {
      this._coordinateSystems = [];
    }
    return r.prototype.create = function(t, e) {
      var a = [];
      w(lu, function(n, i) {
        var o = n.create(t, e);
        a = a.concat(o || []);
      }), this._coordinateSystems = a;
    }, r.prototype.update = function(t, e) {
      w(this._coordinateSystems, function(a) {
        a.update && a.update(t, e);
      });
    }, r.prototype.getCoordinateSystems = function() {
      return this._coordinateSystems.slice();
    }, r.register = function(t, e) {
      lu[t] = e;
    }, r.get = function(t) {
      return lu[t];
    }, r;
  }()
), Op = { env: {} }, XA = /^(min|max)?(.+)$/, KA = (
  /** @class */
  function() {
    function r(t) {
      this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = t;
    }
    return r.prototype.setOption = function(t, e, a) {
      t && (w(we(t.series), function(o) {
        o && o.data && Dt(o.data) && Ns(o.data);
      }), w(we(t.dataset), function(o) {
        o && o.source && Dt(o.source) && Ns(o.source);
      })), t = Q(t);
      var n = this._optionBackup, i = qA(t, e, !n);
      this._newBaseOption = i.baseOption, n ? (i.timelineOptions.length && (n.timelineOptions = i.timelineOptions), i.mediaList.length && (n.mediaList = i.mediaList), i.mediaDefault && (n.mediaDefault = i.mediaDefault)) : this._optionBackup = i;
    }, r.prototype.mountOption = function(t) {
      var e = this._optionBackup;
      return this._timelineOptions = e.timelineOptions, this._mediaList = e.mediaList, this._mediaDefault = e.mediaDefault, this._currentMediaIndices = [], Q(t ? e.baseOption : this._newBaseOption);
    }, r.prototype.getTimelineOption = function(t) {
      var e, a = this._timelineOptions;
      if (a.length) {
        var n = t.getComponent("timeline");
        n && (e = Q(
          // FIXME:TS as TimelineModel or quivlant interface
          a[n.getCurrentIndex()]
        ));
      }
      return e;
    }, r.prototype.getMediaOption = function(t) {
      var e = this._api.getWidth(), a = this._api.getHeight(), n = this._mediaList, i = this._mediaDefault, o = [], s = [];
      if (!n.length && !i)
        return s;
      for (var l = 0, u = n.length; l < u; l++)
        jA(n[l].query, e, a) && o.push(l);
      return !o.length && i && (o = [-1]), o.length && !QA(o, this._currentMediaIndices) && (s = G(o, function(c) {
        return Q(c === -1 ? i.option : n[c].option);
      })), this._currentMediaIndices = o, s;
    }, r;
  }()
);
function qA(r, t, e) {
  var a = [], n, i, o = r.baseOption, s = r.timeline, l = r.options, u = r.media, c = !!r.media, v = !!(l || s || o && o.timeline);
  o ? (i = o, i.timeline || (i.timeline = s)) : ((v || c) && (r.options = r.media = null), i = r), c && (B(u) ? w(u, function(h) {
    Op.env.NODE_ENV !== "production" && h && !h.option && J(h.query) && J(h.query.option) && ot("Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }"), h && h.option && (h.query ? a.push(h) : n || (n = h));
  }) : Op.env.NODE_ENV !== "production" && ot("Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }")), f(i), w(l, function(h) {
    return f(h);
  }), w(a, function(h) {
    return f(h.option);
  });
  function f(h) {
    w(t, function(p) {
      p(h, e);
    });
  }
  return {
    baseOption: i,
    timelineOptions: l || [],
    mediaDefault: n,
    mediaList: a
  };
}
function jA(r, t, e) {
  var a = {
    width: t,
    height: e,
    aspectratio: t / e
    // lower case for convenience.
  }, n = !0;
  return w(r, function(i, o) {
    var s = o.match(XA);
    if (!(!s || !s[1] || !s[2])) {
      var l = s[1], u = s[2].toLowerCase();
      JA(a[u], i, l) || (n = !1);
    }
  }), n;
}
function JA(r, t, e) {
  return e === "min" ? r >= t : e === "max" ? r <= t : r === t;
}
function QA(r, t) {
  return r.join(",") === t.join(",");
}
var Yr = { env: {} }, It = w, Xi = J, Vp = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
function uu(r) {
  var t = r && r.itemStyle;
  if (t)
    for (var e = 0, a = Vp.length; e < a; e++) {
      var n = Vp[e], i = t.normal, o = t.emphasis;
      i && i[n] && (Yr.env.NODE_ENV !== "production" && We("itemStyle.normal." + n, n), r[n] = r[n] || {}, r[n].normal ? le(r[n].normal, i[n]) : r[n].normal = i[n], i[n] = null), o && o[n] && (Yr.env.NODE_ENV !== "production" && We("itemStyle.emphasis." + n, "emphasis." + n), r[n] = r[n] || {}, r[n].emphasis ? le(r[n].emphasis, o[n]) : r[n].emphasis = o[n], o[n] = null);
    }
}
function vt(r, t, e) {
  if (r && r[t] && (r[t].normal || r[t].emphasis)) {
    var a = r[t].normal, n = r[t].emphasis;
    a && (Yr.env.NODE_ENV !== "production" && Qt("'normal' hierarchy in " + t + " has been removed since 4.0. All style properties are configured in " + t + " directly now."), e ? (r[t].normal = r[t].emphasis = null, ee(r[t], a)) : r[t] = a), n && (Yr.env.NODE_ENV !== "production" && Qt(t + ".emphasis has been changed to emphasis." + t + " since 4.0"), r.emphasis = r.emphasis || {}, r.emphasis[t] = n, n.focus && (r.emphasis.focus = n.focus), n.blurScope && (r.emphasis.blurScope = n.blurScope));
  }
}
function Ti(r) {
  vt(r, "itemStyle"), vt(r, "lineStyle"), vt(r, "areaStyle"), vt(r, "label"), vt(r, "labelLine"), vt(r, "upperLabel"), vt(r, "edgeLabel");
}
function He(r, t) {
  var e = Xi(r) && r[t], a = Xi(e) && e.textStyle;
  if (a) {
    Yr.env.NODE_ENV !== "production" && Qt("textStyle hierarchy in " + t + " has been removed since 4.0. All textStyle properties are configured in " + t + " directly now.");
    for (var n = 0, i = lp.length; n < i; n++) {
      var o = lp[n];
      a.hasOwnProperty(o) && (e[o] = a[o]);
    }
  }
}
function Nt(r) {
  r && (Ti(r), He(r, "label"), r.emphasis && He(r.emphasis, "label"));
}
function eT(r) {
  if (Xi(r)) {
    uu(r), Ti(r), He(r, "label"), He(r, "upperLabel"), He(r, "edgeLabel"), r.emphasis && (He(r.emphasis, "label"), He(r.emphasis, "upperLabel"), He(r.emphasis, "edgeLabel"));
    var t = r.markPoint;
    t && (uu(t), Nt(t));
    var e = r.markLine;
    e && (uu(e), Nt(e));
    var a = r.markArea;
    a && Nt(a);
    var n = r.data;
    if (r.type === "graph") {
      n = n || r.nodes;
      var i = r.links || r.edges;
      if (i && !Dt(i))
        for (var o = 0; o < i.length; o++)
          Nt(i[o]);
      w(r.categories, function(u) {
        Ti(u);
      });
    }
    if (n && !Dt(n))
      for (var o = 0; o < n.length; o++)
        Nt(n[o]);
    if (t = r.markPoint, t && t.data)
      for (var s = t.data, o = 0; o < s.length; o++)
        Nt(s[o]);
    if (e = r.markLine, e && e.data)
      for (var l = e.data, o = 0; o < l.length; o++)
        B(l[o]) ? (Nt(l[o][0]), Nt(l[o][1])) : Nt(l[o]);
    r.type === "gauge" ? (He(r, "axisLabel"), He(r, "title"), He(r, "detail")) : r.type === "treemap" ? (vt(r.breadcrumb, "itemStyle"), w(r.levels, function(u) {
      Ti(u);
    })) : r.type === "tree" && Ti(r.leaves);
  }
}
function gr(r) {
  return B(r) ? r : r ? [r] : [];
}
function Bp(r) {
  return (B(r) ? r[0] : r) || {};
}
function tT(r, t) {
  It(gr(r.series), function(a) {
    Xi(a) && eT(a);
  });
  var e = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
  t && e.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), It(e, function(a) {
    It(gr(r[a]), function(n) {
      n && (He(n, "axisLabel"), He(n.axisPointer, "label"));
    });
  }), It(gr(r.parallel), function(a) {
    var n = a && a.parallelAxisDefault;
    He(n, "axisLabel"), He(n && n.axisPointer, "label");
  }), It(gr(r.calendar), function(a) {
    vt(a, "itemStyle"), He(a, "dayLabel"), He(a, "monthLabel"), He(a, "yearLabel");
  }), It(gr(r.radar), function(a) {
    He(a, "name"), a.name && a.axisName == null && (a.axisName = a.name, delete a.name, Yr.env.NODE_ENV !== "production" && Qt("name property in radar component has been changed to axisName")), a.nameGap != null && a.axisNameGap == null && (a.axisNameGap = a.nameGap, delete a.nameGap, Yr.env.NODE_ENV !== "production" && Qt("nameGap property in radar component has been changed to axisNameGap")), Yr.env.NODE_ENV !== "production" && It(a.indicator, function(n) {
      n.text && We("text", "name", "radar.indicator");
    });
  }), It(gr(r.geo), function(a) {
    Xi(a) && (Nt(a), It(gr(a.regions), function(n) {
      Nt(n);
    }));
  }), It(gr(r.timeline), function(a) {
    Nt(a), vt(a, "label"), vt(a, "itemStyle"), vt(a, "controlStyle", !0);
    var n = a.data;
    B(n) && w(n, function(i) {
      J(i) && (vt(i, "label"), vt(i, "itemStyle"));
    });
  }), It(gr(r.toolbox), function(a) {
    vt(a, "iconStyle"), It(a.feature, function(n) {
      vt(n, "iconStyle");
    });
  }), He(Bp(r.axisPointer), "label"), He(Bp(r.tooltip).axisPointer, "label");
}
var qt = { env: {} };
function rT(r, t) {
  for (var e = t.split(","), a = r, n = 0; n < e.length && (a = a && a[e[n]], a != null); n++)
    ;
  return a;
}
function aT(r, t, e, a) {
  for (var n = t.split(","), i = r, o, s = 0; s < n.length - 1; s++)
    o = n[s], i[o] == null && (i[o] = {}), i = i[o];
  i[n[s]] == null && (i[n[s]] = e);
}
function zp(r) {
  r && w(nT, function(t) {
    t[0] in r && !(t[1] in r) && (r[t[1]] = r[t[0]]);
  });
}
var nT = [["x", "left"], ["y", "top"], ["x2", "right"], ["y2", "bottom"]], iT = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"], cu = [["borderRadius", "barBorderRadius"], ["borderColor", "barBorderColor"], ["borderWidth", "barBorderWidth"]];
function ai(r) {
  var t = r && r.itemStyle;
  if (t)
    for (var e = 0; e < cu.length; e++) {
      var a = cu[e][1], n = cu[e][0];
      t[a] != null && (t[n] = t[a], qt.env.NODE_ENV !== "production" && We(a, n));
    }
}
function Gp(r) {
  r && r.alignTo === "edge" && r.margin != null && r.edgeDistance == null && (qt.env.NODE_ENV !== "production" && We("label.margin", "label.edgeDistance", "pie"), r.edgeDistance = r.margin);
}
function Fp(r) {
  r && r.downplay && !r.blur && (r.blur = r.downplay, qt.env.NODE_ENV !== "production" && We("downplay", "blur", "sunburst"));
}
function oT(r) {
  r && r.focusNodeAdjacency != null && (r.emphasis = r.emphasis || {}, r.emphasis.focus == null && (qt.env.NODE_ENV !== "production" && We("focusNodeAdjacency", "emphasis: { focus: 'adjacency'}", "graph/sankey"), r.emphasis.focus = "adjacency"));
}
function j_(r, t) {
  if (r)
    for (var e = 0; e < r.length; e++)
      t(r[e]), r[e] && j_(r[e].children, t);
}
function J_(r, t) {
  tT(r, t), r.series = we(r.series), w(r.series, function(e) {
    if (J(e)) {
      var a = e.type;
      if (a === "line")
        e.clipOverflow != null && (e.clip = e.clipOverflow, qt.env.NODE_ENV !== "production" && We("clipOverflow", "clip", "line"));
      else if (a === "pie" || a === "gauge") {
        e.clockWise != null && (e.clockwise = e.clockWise, qt.env.NODE_ENV !== "production" && We("clockWise", "clockwise")), Gp(e.label);
        var n = e.data;
        if (n && !Dt(n))
          for (var i = 0; i < n.length; i++)
            Gp(n[i]);
        e.hoverOffset != null && (e.emphasis = e.emphasis || {}, (e.emphasis.scaleSize = null) && (qt.env.NODE_ENV !== "production" && We("hoverOffset", "emphasis.scaleSize"), e.emphasis.scaleSize = e.hoverOffset));
      } else if (a === "gauge") {
        var o = rT(e, "pointer.color");
        o != null && aT(e, "itemStyle.color", o);
      } else if (a === "bar") {
        ai(e), ai(e.backgroundStyle), ai(e.emphasis);
        var n = e.data;
        if (n && !Dt(n))
          for (var i = 0; i < n.length; i++)
            typeof n[i] == "object" && (ai(n[i]), ai(n[i] && n[i].emphasis));
      } else if (a === "sunburst") {
        var s = e.highlightPolicy;
        s && (e.emphasis = e.emphasis || {}, e.emphasis.focus || (e.emphasis.focus = s, qt.env.NODE_ENV !== "production" && We("highlightPolicy", "emphasis.focus", "sunburst"))), Fp(e), j_(e.data, Fp);
      } else a === "graph" || a === "sankey" ? oT(e) : a === "map" && (e.mapType && !e.map && (qt.env.NODE_ENV !== "production" && We("mapType", "map", "map"), e.map = e.mapType), e.mapLocation && (qt.env.NODE_ENV !== "production" && Qt("`mapLocation` is not used anymore."), ee(e, e.mapLocation)));
      e.hoverAnimation != null && (e.emphasis = e.emphasis || {}, e.emphasis && e.emphasis.scale == null && (qt.env.NODE_ENV !== "production" && We("hoverAnimation", "emphasis.scale"), e.emphasis.scale = e.hoverAnimation)), zp(e);
    }
  }), r.dataRange && (r.visualMap = r.dataRange), w(iT, function(e) {
    var a = r[e];
    a && (B(a) || (a = [a]), w(a, function(n) {
      zp(n);
    }));
  });
}
function sT(r) {
  var t = Z();
  r.eachSeries(function(e) {
    var a = e.get("stack");
    if (a) {
      var n = t.get(a) || t.set(a, []), i = e.getData(), o = {
        // Used for calculate axis extent automatically.
        // TODO: Type getCalculationInfo return more specific type?
        stackResultDimension: i.getCalculationInfo("stackResultDimension"),
        stackedOverDimension: i.getCalculationInfo("stackedOverDimension"),
        stackedDimension: i.getCalculationInfo("stackedDimension"),
        stackedByDimension: i.getCalculationInfo("stackedByDimension"),
        isStackedByIndex: i.getCalculationInfo("isStackedByIndex"),
        data: i,
        seriesModel: e
      };
      if (!o.stackedDimension || !(o.isStackedByIndex || o.stackedByDimension))
        return;
      n.length && i.setCalculationInfo("stackedOnSeries", n[n.length - 1].seriesModel), n.push(o);
    }
  }), t.each(lT);
}
function lT(r) {
  w(r, function(t, e) {
    var a = [], n = [NaN, NaN], i = [t.stackResultDimension, t.stackedOverDimension], o = t.data, s = t.isStackedByIndex, l = t.seriesModel.get("stackStrategy") || "samesign";
    o.modify(i, function(u, c, v) {
      var f = o.get(t.stackedDimension, v);
      if (isNaN(f))
        return n;
      var h, p;
      s ? p = o.getRawIndex(v) : h = o.get(t.stackedByDimension, v);
      for (var d = NaN, g = e - 1; g >= 0; g--) {
        var y = r[g];
        if (s || (p = y.data.rawIndexOf(y.stackedByDimension, h)), p >= 0) {
          var m = y.data.getByRawIndex(y.stackResultDimension, p);
          if (l === "all" || l === "positive" && m > 0 || l === "negative" && m < 0 || l === "samesign" && f >= 0 && m > 0 || l === "samesign" && f <= 0 && m < 0) {
            f = nD(f, m), d = m;
            break;
          }
        }
      }
      return a[0] = f, a[1] = d, a;
    });
  });
}
var uT = { env: {} }, kl = (
  /** @class */
  /* @__PURE__ */ function() {
    function r(t) {
      this.data = t.data || (t.sourceFormat === fr ? {} : []), this.sourceFormat = t.sourceFormat || U_, this.seriesLayoutBy = t.seriesLayoutBy || cr, this.startIndex = t.startIndex || 0, this.dimensionsDetectedCount = t.dimensionsDetectedCount, this.metaRawOption = t.metaRawOption;
      var e = this.dimensionsDefine = t.dimensionsDefine;
      if (e)
        for (var a = 0; a < e.length; a++) {
          var n = e[a];
          n.type == null && Z_(this, a) === nt.Must && (n.type = "ordinal");
        }
    }
    return r;
  }()
);
function Pf(r) {
  return r instanceof kl;
}
function ov(r, t, e) {
  e = e || Q_(r);
  var a = t.seriesLayoutBy, n = vT(r, e, a, t.sourceHeader, t.dimensions), i = new kl({
    data: r,
    sourceFormat: e,
    seriesLayoutBy: a,
    dimensionsDefine: n.dimensionsDefine,
    startIndex: n.startIndex,
    dimensionsDetectedCount: n.dimensionsDetectedCount,
    metaRawOption: Q(t)
  });
  return i;
}
function Nf(r) {
  return new kl({
    data: r,
    sourceFormat: Dt(r) ? xr : $t
  });
}
function cT(r) {
  return new kl({
    data: r.data,
    sourceFormat: r.sourceFormat,
    seriesLayoutBy: r.seriesLayoutBy,
    dimensionsDefine: Q(r.dimensionsDefine),
    startIndex: r.startIndex,
    dimensionsDetectedCount: r.dimensionsDetectedCount
  });
}
function Q_(r) {
  var t = U_;
  if (Dt(r))
    t = xr;
  else if (B(r)) {
    r.length === 0 && (t = ft);
    for (var e = 0, a = r.length; e < a; e++) {
      var n = r[e];
      if (n != null) {
        if (B(n) || Dt(n)) {
          t = ft;
          break;
        } else if (J(n)) {
          t = Yt;
          break;
        }
      }
    }
  } else if (J(r)) {
    for (var i in r)
      if ($(r, i) && Vn(r[i])) {
        t = fr;
        break;
      }
  }
  return t;
}
function vT(r, t, e, a, n) {
  var i, o;
  if (!r)
    return {
      dimensionsDefine: Hp(n),
      startIndex: o,
      dimensionsDetectedCount: i
    };
  if (t === ft) {
    var s = r;
    a === "auto" || a == null ? Wp(function(u) {
      u != null && u !== "-" && (Y(u) ? o == null && (o = 1) : o = 0);
    }, e, s, 10) : o = _e(a) ? a : a ? 1 : 0, !n && o === 1 && (n = [], Wp(function(u, c) {
      n[c] = u != null ? u + "" : "";
    }, e, s, 1 / 0)), i = n ? n.length : e === Xn ? s.length : s[0] ? s[0].length : null;
  } else if (t === Yt)
    n || (n = fT(r));
  else if (t === fr)
    n || (n = [], w(r, function(u, c) {
      n.push(c);
    }));
  else if (t === $t) {
    var l = Gn(r[0]);
    i = B(l) && l.length || 1;
  } else t === xr && uT.env.NODE_ENV !== "production" && K(!!n, "dimensions must be given if data is TypedArray.");
  return {
    startIndex: o,
    dimensionsDefine: Hp(n),
    dimensionsDetectedCount: i
  };
}
function fT(r) {
  for (var t = 0, e; t < r.length && !(e = r[t++]); )
    ;
  if (e)
    return Fe(e);
}
function Hp(r) {
  if (r) {
    var t = Z();
    return G(r, function(e, a) {
      e = J(e) ? e : {
        name: e
      };
      var n = {
        name: e.name,
        displayName: e.displayName,
        type: e.type
      };
      if (n.name == null)
        return n;
      n.name += "", n.displayName == null && (n.displayName = n.name);
      var i = t.get(n.name);
      return i ? n.name += "-" + i.count++ : t.set(n.name, {
        count: 1
      }), n;
    });
  }
}
function Wp(r, t, e, a) {
  if (t === Xn)
    for (var n = 0; n < e.length && n < a; n++)
      r(e[n] ? e[n][0] : null, n);
  else
    for (var i = e[0] || [], n = 0; n < i.length && n < a; n++)
      r(i[n], n);
}
function eS(r) {
  var t = r.sourceFormat;
  return t === Yt || t === fr;
}
var Zr = { env: {} }, la, ua, ca, Up, $p, tS = (
  /** @class */
  function() {
    function r(t, e) {
      var a = Pf(t) ? t : Nf(t);
      this._source = a;
      var n = this._data = a.data;
      if (a.sourceFormat === xr) {
        if (Zr.env.NODE_ENV !== "production" && e == null)
          throw new Error("Typed array data must specify dimension size");
        this._offset = 0, this._dimSize = e, this._data = n;
      }
      $p(this, n, a);
    }
    return r.prototype.getSource = function() {
      return this._source;
    }, r.prototype.count = function() {
      return 0;
    }, r.prototype.getItem = function(t, e) {
    }, r.prototype.appendData = function(t) {
    }, r.prototype.clean = function() {
    }, r.protoInitialize = function() {
      var t = r.prototype;
      t.pure = !1, t.persistent = !0;
    }(), r.internalField = function() {
      var t;
      $p = function(o, s, l) {
        var u = l.sourceFormat, c = l.seriesLayoutBy, v = l.startIndex, f = l.dimensionsDefine, h = Up[Rf(u, c)];
        if (Zr.env.NODE_ENV !== "production" && K(h, "Invalide sourceFormat: " + u), z(o, h), u === xr)
          o.getItem = e, o.count = n, o.fillStorage = a;
        else {
          var p = rS(u, c);
          o.getItem = U(p, null, s, v, f);
          var d = aS(u, c);
          o.count = U(d, null, s, v, f);
        }
      };
      var e = function(o, s) {
        o = o - this._offset, s = s || [];
        for (var l = this._data, u = this._dimSize, c = u * o, v = 0; v < u; v++)
          s[v] = l[c + v];
        return s;
      }, a = function(o, s, l, u) {
        for (var c = this._data, v = this._dimSize, f = 0; f < v; f++) {
          for (var h = u[f], p = h[0] == null ? 1 / 0 : h[0], d = h[1] == null ? -1 / 0 : h[1], g = s - o, y = l[f], m = 0; m < g; m++) {
            var _ = c[m * v + f];
            y[o + m] = _, _ < p && (p = _), _ > d && (d = _);
          }
          h[0] = p, h[1] = d;
        }
      }, n = function() {
        return this._data ? this._data.length / this._dimSize : 0;
      };
      Up = (t = {}, t[ft + "_" + cr] = {
        pure: !0,
        appendData: i
      }, t[ft + "_" + Xn] = {
        pure: !0,
        appendData: function() {
          throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
        }
      }, t[Yt] = {
        pure: !0,
        appendData: i
      }, t[fr] = {
        pure: !0,
        appendData: function(o) {
          var s = this._data;
          w(o, function(l, u) {
            for (var c = s[u] || (s[u] = []), v = 0; v < (l || []).length; v++)
              c.push(l[v]);
          });
        }
      }, t[$t] = {
        appendData: i
      }, t[xr] = {
        persistent: !1,
        pure: !0,
        appendData: function(o) {
          Zr.env.NODE_ENV !== "production" && K(Dt(o), "Added data must be TypedArray if data in initialization is TypedArray"), this._data = o;
        },
        // Clean self if data is already used.
        clean: function() {
          this._offset += this.count(), this._data = null;
        }
      }, t);
      function i(o) {
        for (var s = 0; s < o.length; s++)
          this._data.push(o[s]);
      }
    }(), r;
  }()
), Yp = function(r, t, e, a) {
  return r[a];
}, hT = (la = {}, la[ft + "_" + cr] = function(r, t, e, a) {
  return r[a + t];
}, la[ft + "_" + Xn] = function(r, t, e, a, n) {
  a += t;
  for (var i = n || [], o = r, s = 0; s < o.length; s++) {
    var l = o[s];
    i[s] = l ? l[a] : null;
  }
  return i;
}, la[Yt] = Yp, la[fr] = function(r, t, e, a, n) {
  for (var i = n || [], o = 0; o < e.length; o++) {
    var s = e[o].name;
    if (Zr.env.NODE_ENV !== "production" && s == null)
      throw new Error();
    var l = r[s];
    i[o] = l ? l[a] : null;
  }
  return i;
}, la[$t] = Yp, la);
function rS(r, t) {
  var e = hT[Rf(r, t)];
  return Zr.env.NODE_ENV !== "production" && K(e, 'Do not support get item on "' + r + '", "' + t + '".'), e;
}
var Zp = function(r, t, e) {
  return r.length;
}, pT = (ua = {}, ua[ft + "_" + cr] = function(r, t, e) {
  return Math.max(0, r.length - t);
}, ua[ft + "_" + Xn] = function(r, t, e) {
  var a = r[0];
  return a ? Math.max(0, a.length - t) : 0;
}, ua[Yt] = Zp, ua[fr] = function(r, t, e) {
  var a = e[0].name;
  if (Zr.env.NODE_ENV !== "production" && a == null)
    throw new Error();
  var n = r[a];
  return n ? n.length : 0;
}, ua[$t] = Zp, ua);
function aS(r, t) {
  var e = pT[Rf(r, t)];
  return Zr.env.NODE_ENV !== "production" && K(e, 'Do not support count on "' + r + '", "' + t + '".'), e;
}
var vu = function(r, t, e) {
  return r[t];
}, dT = (ca = {}, ca[ft] = vu, ca[Yt] = function(r, t, e) {
  return r[e];
}, ca[fr] = vu, ca[$t] = function(r, t, e) {
  var a = Gn(r);
  return a instanceof Array ? a[t] : a;
}, ca[xr] = vu, ca);
function nS(r) {
  var t = dT[r];
  return Zr.env.NODE_ENV !== "production" && K(t, 'Do not support get value on "' + r + '".'), t;
}
function Rf(r, t) {
  return r === ft ? r + "_" + t : r;
}
function Mn(r, t, e) {
  if (r) {
    var a = r.getRawDataItem(t);
    if (a != null) {
      var n = r.getStore(), i = n.getSource().sourceFormat;
      if (e != null) {
        var o = r.getDimensionIndex(e), s = n.getDimensionProperty(o);
        return nS(i)(a, o, s);
      } else {
        var l = a;
        return i === $t && (l = Gn(a)), l;
      }
    }
  }
}
var iS = { env: {} }, gT = /\{@(.+?)\}/g, Ol = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getDataParams = function(t, e) {
      var a = this.getData(e), n = this.getRawValue(t, e), i = a.getRawIndex(t), o = a.getName(t), s = a.getRawDataItem(t), l = a.getItemVisual(t, "style"), u = l && l[a.getItemVisual(t, "drawType") || "fill"], c = l && l.stroke, v = this.mainType, f = v === "series", h = a.userOutput && a.userOutput.get();
      return {
        componentType: v,
        componentSubType: this.subType,
        componentIndex: this.componentIndex,
        seriesType: f ? this.subType : null,
        seriesIndex: this.seriesIndex,
        seriesId: f ? this.id : null,
        seriesName: f ? this.name : null,
        name: o,
        dataIndex: i,
        data: s,
        dataType: e,
        value: n,
        color: u,
        borderColor: c,
        dimensionNames: h ? h.fullDimensions : null,
        encode: h ? h.encode : null,
        // Param name list for mapping `a`, `b`, `c`, `d`, `e`
        $vars: ["seriesName", "name", "value"]
      };
    }, r.prototype.getFormattedLabel = function(t, e, a, n, i, o) {
      e = e || "normal";
      var s = this.getData(a), l = this.getDataParams(t, a);
      if (o && (l.value = o.interpolatedValue), n != null && B(l.value) && (l.value = l.value[n]), !i) {
        var u = s.getItemModel(t);
        i = u.get(e === "normal" ? ["label", "formatter"] : [e, "label", "formatter"]);
      }
      if (X(i))
        return l.status = e, l.dimensionIndex = n, i(l);
      if (Y(i)) {
        var c = G_(i, l);
        return c.replace(gT, function(v, f) {
          var h = f.length, p = f;
          p.charAt(0) === "[" && p.charAt(h - 1) === "]" && (p = +p.slice(1, h - 1), iS.env.NODE_ENV !== "production" && isNaN(p) && ot("Invalide label formatter: @" + f + ", only support @[0], @[1], @[2], ..."));
          var d = Mn(s, t, p);
          if (o && B(o.interpolatedValue)) {
            var g = s.getDimensionIndex(p);
            g >= 0 && (d = o.interpolatedValue[g]);
          }
          return d != null ? d + "" : "";
        });
      }
    }, r.prototype.getRawValue = function(t, e) {
      return Mn(this.getData(e), t);
    }, r.prototype.formatTooltip = function(t, e, a) {
    }, r;
  }()
);
function Xp(r) {
  var t, e;
  return J(r) ? r.type ? e = r : iS.env.NODE_ENV !== "production" && console.warn("The return type of `formatTooltip` is not supported: " + St(r)) : t = r, {
    text: t,
    // markers: markers || markersExisting,
    frag: e
  };
}
var No = { env: {} };
function Vi(r) {
  return new yT(r);
}
var yT = (
  /** @class */
  function() {
    function r(t) {
      t = t || {}, this._reset = t.reset, this._plan = t.plan, this._count = t.count, this._onDirty = t.onDirty, this._dirty = !0;
    }
    return r.prototype.perform = function(t) {
      var e = this._upstream, a = t && t.skip;
      if (this._dirty && e) {
        var n = this.context;
        n.data = n.outputData = e.context.outputData;
      }
      this.__pipeline && (this.__pipeline.currentTask = this);
      var i;
      this._plan && !a && (i = this._plan(this.context));
      var o = c(this._modBy), s = this._modDataCount || 0, l = c(t && t.modBy), u = t && t.modDataCount || 0;
      (o !== l || s !== u) && (i = "reset");
      function c(m) {
        return !(m >= 1) && (m = 1), m;
      }
      var v;
      (this._dirty || i === "reset") && (this._dirty = !1, v = this._doReset(a)), this._modBy = l, this._modDataCount = u;
      var f = t && t.step;
      if (e ? (No.env.NODE_ENV !== "production" && K(e._outputDueEnd != null), this._dueEnd = e._outputDueEnd) : (No.env.NODE_ENV !== "production" && K(!this._progress || this._count), this._dueEnd = this._count ? this._count(this.context) : 1 / 0), this._progress) {
        var h = this._dueIndex, p = Math.min(f != null ? this._dueIndex + f : 1 / 0, this._dueEnd);
        if (!a && (v || h < p)) {
          var d = this._progress;
          if (B(d))
            for (var g = 0; g < d.length; g++)
              this._doProgress(d[g], h, p, l, u);
          else
            this._doProgress(d, h, p, l, u);
        }
        this._dueIndex = p;
        var y = this._settedOutputEnd != null ? this._settedOutputEnd : p;
        No.env.NODE_ENV !== "production" && K(y >= this._outputDueEnd), this._outputDueEnd = y;
      } else
        this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;
      return this.unfinished();
    }, r.prototype.dirty = function() {
      this._dirty = !0, this._onDirty && this._onDirty(this.context);
    }, r.prototype._doProgress = function(t, e, a, n, i) {
      Kp.reset(e, a, n, i), this._callingProgress = t, this._callingProgress({
        start: e,
        end: a,
        count: a - e,
        next: Kp.next
      }, this.context);
    }, r.prototype._doReset = function(t) {
      this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null;
      var e, a;
      !t && this._reset && (e = this._reset(this.context), e && e.progress && (a = e.forceFirstProgress, e = e.progress), B(e) && !e.length && (e = null)), this._progress = e, this._modBy = this._modDataCount = null;
      var n = this._downstream;
      return n && n.dirty(), a;
    }, r.prototype.unfinished = function() {
      return this._progress && this._dueIndex < this._dueEnd;
    }, r.prototype.pipe = function(t) {
      No.env.NODE_ENV !== "production" && K(t && !t._disposed && t !== this), (this._downstream !== t || this._dirty) && (this._downstream = t, t._upstream = this, t.dirty());
    }, r.prototype.dispose = function() {
      this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0);
    }, r.prototype.getUpstream = function() {
      return this._upstream;
    }, r.prototype.getDownstream = function() {
      return this._downstream;
    }, r.prototype.setOutputEnd = function(t) {
      this._outputDueEnd = this._settedOutputEnd = t;
    }, r;
  }()
), Kp = /* @__PURE__ */ function() {
  var r, t, e, a, n, i = {
    reset: function(l, u, c, v) {
      t = l, r = u, e = c, a = v, n = Math.ceil(a / e), i.next = e > 1 && a > 0 ? s : o;
    }
  };
  return i;
  function o() {
    return t < r ? t++ : null;
  }
  function s() {
    var l = t % n * e + Math.ceil(t / n), u = t >= r ? null : l < a ? l : t;
    return t++, u;
  }
}(), mT = { env: {} };
function Xr(r, t) {
  var e = t && t.type;
  return e === "ordinal" ? r : (e === "time" && !_e(r) && r != null && r !== "-" && (r = +vr(r)), r == null || r === "" ? NaN : Number(r));
}
var _T = Z({
  number: function(r) {
    return parseFloat(r);
  },
  time: function(r) {
    return +vr(r);
  },
  trim: function(r) {
    return Y(r) ? uo(r) : r;
  }
});
function oS(r) {
  return _T.get(r);
}
var sS = {
  lt: function(r, t) {
    return r < t;
  },
  lte: function(r, t) {
    return r <= t;
  },
  gt: function(r, t) {
    return r > t;
  },
  gte: function(r, t) {
    return r >= t;
  }
}, ST = (
  /** @class */
  function() {
    function r(t, e) {
      if (!_e(e)) {
        var a = "";
        mT.env.NODE_ENV !== "production" && (a = 'rvalue of "<", ">", "<=", ">=" can only be number in filter.'), ye(a);
      }
      this._opFn = sS[t], this._rvalFloat = Dr(e);
    }
    return r.prototype.evaluate = function(t) {
      return _e(t) ? this._opFn(t, this._rvalFloat) : this._opFn(Dr(t), this._rvalFloat);
    }, r;
  }()
), lS = (
  /** @class */
  function() {
    function r(t, e) {
      var a = t === "desc";
      this._resultLT = a ? 1 : -1, e == null && (e = a ? "min" : "max"), this._incomparable = e === "min" ? -1 / 0 : 1 / 0;
    }
    return r.prototype.evaluate = function(t, e) {
      var a = _e(t) ? t : Dr(t), n = _e(e) ? e : Dr(e), i = isNaN(a), o = isNaN(n);
      if (i && (a = this._incomparable), o && (n = this._incomparable), i && o) {
        var s = Y(t), l = Y(e);
        s && (a = l ? t : 0), l && (n = s ? e : 0);
      }
      return a < n ? this._resultLT : a > n ? -this._resultLT : 0;
    }, r;
  }()
), xT = (
  /** @class */
  function() {
    function r(t, e) {
      this._rval = e, this._isEQ = t, this._rvalTypeof = typeof e, this._rvalFloat = Dr(e);
    }
    return r.prototype.evaluate = function(t) {
      var e = t === this._rval;
      if (!e) {
        var a = typeof t;
        a !== this._rvalTypeof && (a === "number" || this._rvalTypeof === "number") && (e = Dr(t) === this._rvalFloat);
      }
      return this._isEQ ? e : !e;
    }, r;
  }()
);
function bT(r, t) {
  return r === "eq" || r === "ne" ? new xT(r === "eq", t) : $(sS, r) ? new ST(r, t) : null;
}
var wt = { env: {} }, wT = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getRawData = function() {
      throw new Error("not supported");
    }, r.prototype.getRawDataItem = function(t) {
      throw new Error("not supported");
    }, r.prototype.cloneRawData = function() {
    }, r.prototype.getDimensionInfo = function(t) {
    }, r.prototype.cloneAllDimensionInfo = function() {
    }, r.prototype.count = function() {
    }, r.prototype.retrieveValue = function(t, e) {
    }, r.prototype.retrieveValueFromItem = function(t, e) {
    }, r.prototype.convertValue = function(t, e) {
      return Xr(t, e);
    }, r;
  }()
);
function DT(r, t) {
  var e = new wT(), a = r.data, n = e.sourceFormat = r.sourceFormat, i = r.startIndex, o = "";
  r.seriesLayoutBy !== cr && (wt.env.NODE_ENV !== "production" && (o = '`seriesLayoutBy` of upstream dataset can only be "column" in data transform.'), ye(o));
  var s = [], l = {}, u = r.dimensionsDefine;
  if (u)
    w(u, function(d, g) {
      var y = d.name, m = {
        index: g,
        name: y,
        displayName: d.displayName
      };
      if (s.push(m), y != null) {
        var _ = "";
        $(l, y) && (wt.env.NODE_ENV !== "production" && (_ = 'dimension name "' + y + '" duplicated.'), ye(_)), l[y] = m;
      }
    });
  else
    for (var c = 0; c < r.dimensionsDetectedCount; c++)
      s.push({
        index: c
      });
  var v = rS(n, cr);
  t.__isBuiltIn && (e.getRawDataItem = function(d) {
    return v(a, i, s, d);
  }, e.getRawData = U(AT, null, r)), e.cloneRawData = U(TT, null, r);
  var f = aS(n, cr);
  e.count = U(f, null, a, i, s);
  var h = nS(n);
  e.retrieveValue = function(d, g) {
    var y = v(a, i, s, d);
    return p(y, g);
  };
  var p = e.retrieveValueFromItem = function(d, g) {
    if (d != null) {
      var y = s[g];
      if (y)
        return h(d, g, y.name);
    }
  };
  return e.getDimensionInfo = U(CT, null, s, l), e.cloneAllDimensionInfo = U(MT, null, s), e;
}
function AT(r) {
  var t = r.sourceFormat;
  if (!kf(t)) {
    var e = "";
    wt.env.NODE_ENV !== "production" && (e = "`getRawData` is not supported in source format " + t), ye(e);
  }
  return r.data;
}
function TT(r) {
  var t = r.sourceFormat, e = r.data;
  if (!kf(t)) {
    var a = "";
    wt.env.NODE_ENV !== "production" && (a = "`cloneRawData` is not supported in source format " + t), ye(a);
  }
  if (t === ft) {
    for (var n = [], i = 0, o = e.length; i < o; i++)
      n.push(e[i].slice());
    return n;
  } else if (t === Yt) {
    for (var n = [], i = 0, o = e.length; i < o; i++)
      n.push(z({}, e[i]));
    return n;
  }
}
function CT(r, t, e) {
  if (e != null) {
    if (_e(e) || !isNaN(e) && !$(t, e))
      return r[e];
    if ($(t, e))
      return t[e];
  }
}
function MT(r) {
  return Q(r);
}
var uS = Z();
function IT(r) {
  r = Q(r);
  var t = r.type, e = "";
  t || (wt.env.NODE_ENV !== "production" && (e = "Must have a `type` when `registerTransform`."), ye(e));
  var a = t.split(":");
  a.length !== 2 && (wt.env.NODE_ENV !== "production" && (e = 'Name must include namespace like "ns:regression".'), ye(e));
  var n = !1;
  a[0] === "echarts" && (t = a[1], n = !0), r.__isBuiltIn = n, uS.set(t, r);
}
function LT(r, t, e) {
  var a = we(r), n = a.length, i = "";
  n || (wt.env.NODE_ENV !== "production" && (i = "If `transform` declared, it should at least contain one transform."), ye(i));
  for (var o = 0, s = n; o < s; o++) {
    var l = a[o];
    t = ET(l, t, e, n === 1 ? null : o), o !== s - 1 && (t.length = Math.max(t.length, 1));
  }
  return t;
}
function ET(r, t, e, a) {
  var n = "";
  t.length || (wt.env.NODE_ENV !== "production" && (n = "Must have at least one upstream dataset."), ye(n)), J(r) || (wt.env.NODE_ENV !== "production" && (n = "transform declaration must be an object rather than " + typeof r + "."), ye(n));
  var i = r.type, o = uS.get(i);
  o || (wt.env.NODE_ENV !== "production" && (n = 'Can not find transform on type "' + i + '".'), ye(n));
  var s = G(t, function(c) {
    return DT(c, o);
  }), l = we(o.transform({
    upstream: s[0],
    upstreamList: s,
    config: Q(r.config)
  }));
  if (wt.env.NODE_ENV !== "production" && r.print) {
    var u = G(l, function(c) {
      var v = a != null ? " === pipe index: " + a : "";
      return ["=== dataset index: " + e.datasetIndex + v + " ===", "- transform result data:", St(c.data), "- transform result dimensions:", St(c.dimensions)].join(`
`);
    }).join(`
`);
    uD(u);
  }
  return G(l, function(c, v) {
    var f = "";
    J(c) || (wt.env.NODE_ENV !== "production" && (f = "A transform should not return some empty results."), ye(f)), c.data || (wt.env.NODE_ENV !== "production" && (f = "Transform result data should be not be null or undefined"), ye(f));
    var h = Q_(c.data);
    kf(h) || (wt.env.NODE_ENV !== "production" && (f = "Transform result data should be array rows or object rows."), ye(f));
    var p, d = t[0];
    if (d && v === 0 && !c.dimensions) {
      var g = d.startIndex;
      g && (c.data = d.data.slice(0, g).concat(c.data)), p = {
        seriesLayoutBy: cr,
        sourceHeader: g,
        dimensions: d.metaRawOption.dimensions
      };
    } else
      p = {
        seriesLayoutBy: cr,
        sourceHeader: 0,
        dimensions: c.dimensions
      };
    return ov(c.data, p, null);
  });
}
function kf(r) {
  return r === ft || r === Yt;
}
var fu = { env: {} }, Vl = "undefined", PT = typeof Uint32Array === Vl ? Array : Uint32Array, NT = typeof Uint16Array === Vl ? Array : Uint16Array, cS = typeof Int32Array === Vl ? Array : Int32Array, qp = typeof Float64Array === Vl ? Array : Float64Array, vS = {
  float: qp,
  int: cS,
  // Ordinal data type can be string or int
  ordinal: Array,
  number: Array,
  time: qp
}, hu;
function ni(r) {
  return r > 65535 ? PT : NT;
}
function Ja() {
  return [1 / 0, -1 / 0];
}
function RT(r) {
  var t = r.constructor;
  return t === Array ? r.slice() : new t(r);
}
function jp(r, t, e, a, n) {
  var i = vS[e || "float"];
  if (n) {
    var o = r[t], s = o && o.length;
    if (s !== a) {
      for (var l = new i(a), u = 0; u < s; u++)
        l[u] = o[u];
      r[t] = l;
    }
  } else
    r[t] = new i(a);
}
var sv = (
  /** @class */
  function() {
    function r() {
      this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = Z();
    }
    return r.prototype.initData = function(t, e, a) {
      fu.env.NODE_ENV !== "production" && K(X(t.getItem) && X(t.count), "Invalid data provider."), this._provider = t, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
      var n = t.getSource(), i = this.defaultDimValueGetter = hu[n.sourceFormat];
      this._dimValueGetter = a || i, this._rawExtent = [];
      var o = eS(n);
      this._dimensions = G(e, function(s) {
        return fu.env.NODE_ENV !== "production" && o && K(s.property != null), {
          // Only pick these two props. Not leak other properties like orderMeta.
          type: s.type,
          property: s.property
        };
      }), this._initDataFromProvider(0, t.count());
    }, r.prototype.getProvider = function() {
      return this._provider;
    }, r.prototype.getSource = function() {
      return this._provider.getSource();
    }, r.prototype.ensureCalculationDimension = function(t, e) {
      var a = this._calcDimNameToIdx, n = this._dimensions, i = a.get(t);
      if (i != null) {
        if (n[i].type === e)
          return i;
      } else
        i = n.length;
      return n[i] = {
        type: e
      }, a.set(t, i), this._chunks[i] = new vS[e || "float"](this._rawCount), this._rawExtent[i] = Ja(), i;
    }, r.prototype.collectOrdinalMeta = function(t, e) {
      var a = this._chunks[t], n = this._dimensions[t], i = this._rawExtent, o = n.ordinalOffset || 0, s = a.length;
      o === 0 && (i[t] = Ja());
      for (var l = i[t], u = o; u < s; u++) {
        var c = a[u] = e.parseAndCollect(a[u]);
        isNaN(c) || (l[0] = Math.min(c, l[0]), l[1] = Math.max(c, l[1]));
      }
      n.ordinalMeta = e, n.ordinalOffset = s, n.type = "ordinal";
    }, r.prototype.getOrdinalMeta = function(t) {
      var e = this._dimensions[t], a = e.ordinalMeta;
      return a;
    }, r.prototype.getDimensionProperty = function(t) {
      var e = this._dimensions[t];
      return e && e.property;
    }, r.prototype.appendData = function(t) {
      fu.env.NODE_ENV !== "production" && K(!this._indices, "appendData can only be called on raw data.");
      var e = this._provider, a = this.count();
      e.appendData(t);
      var n = e.count();
      return e.persistent || (n += a), a < n && this._initDataFromProvider(a, n, !0), [a, n];
    }, r.prototype.appendValues = function(t, e) {
      for (var a = this._chunks, n = this._dimensions, i = n.length, o = this._rawExtent, s = this.count(), l = s + Math.max(t.length, e || 0), u = 0; u < i; u++) {
        var c = n[u];
        jp(a, u, c.type, l, !0);
      }
      for (var v = [], f = s; f < l; f++)
        for (var h = f - s, p = 0; p < i; p++) {
          var c = n[p], d = hu.arrayRows.call(this, t[h] || v, c.property, h, p);
          a[p][f] = d;
          var g = o[p];
          d < g[0] && (g[0] = d), d > g[1] && (g[1] = d);
        }
      return this._rawCount = this._count = l, {
        start: s,
        end: l
      };
    }, r.prototype._initDataFromProvider = function(t, e, a) {
      for (var n = this._provider, i = this._chunks, o = this._dimensions, s = o.length, l = this._rawExtent, u = G(o, function(m) {
        return m.property;
      }), c = 0; c < s; c++) {
        var v = o[c];
        l[c] || (l[c] = Ja()), jp(i, c, v.type, e, a);
      }
      if (n.fillStorage)
        n.fillStorage(t, e, i, l);
      else
        for (var f = [], h = t; h < e; h++) {
          f = n.getItem(h, f);
          for (var p = 0; p < s; p++) {
            var d = i[p], g = this._dimValueGetter(f, u[p], h, p);
            d[h] = g;
            var y = l[p];
            g < y[0] && (y[0] = g), g > y[1] && (y[1] = g);
          }
        }
      !n.persistent && n.clean && n.clean(), this._rawCount = this._count = e, this._extent = [];
    }, r.prototype.count = function() {
      return this._count;
    }, r.prototype.get = function(t, e) {
      if (!(e >= 0 && e < this._count))
        return NaN;
      var a = this._chunks[t];
      return a ? a[this.getRawIndex(e)] : NaN;
    }, r.prototype.getValues = function(t, e) {
      var a = [], n = [];
      if (e == null) {
        e = t, t = [];
        for (var i = 0; i < this._dimensions.length; i++)
          n.push(i);
      } else
        n = t;
      for (var i = 0, o = n.length; i < o; i++)
        a.push(this.get(n[i], e));
      return a;
    }, r.prototype.getByRawIndex = function(t, e) {
      if (!(e >= 0 && e < this._rawCount))
        return NaN;
      var a = this._chunks[t];
      return a ? a[e] : NaN;
    }, r.prototype.getSum = function(t) {
      var e = this._chunks[t], a = 0;
      if (e)
        for (var n = 0, i = this.count(); n < i; n++) {
          var o = this.get(t, n);
          isNaN(o) || (a += o);
        }
      return a;
    }, r.prototype.getMedian = function(t) {
      var e = [];
      this.each([t], function(i) {
        isNaN(i) || e.push(i);
      });
      var a = e.sort(function(i, o) {
        return i - o;
      }), n = this.count();
      return n === 0 ? 0 : n % 2 === 1 ? a[(n - 1) / 2] : (a[n / 2] + a[n / 2 - 1]) / 2;
    }, r.prototype.indexOfRawIndex = function(t) {
      if (t >= this._rawCount || t < 0)
        return -1;
      if (!this._indices)
        return t;
      var e = this._indices, a = e[t];
      if (a != null && a < this._count && a === t)
        return t;
      for (var n = 0, i = this._count - 1; n <= i; ) {
        var o = (n + i) / 2 | 0;
        if (e[o] < t)
          n = o + 1;
        else if (e[o] > t)
          i = o - 1;
        else
          return o;
      }
      return -1;
    }, r.prototype.indicesOfNearest = function(t, e, a) {
      var n = this._chunks, i = n[t], o = [];
      if (!i)
        return o;
      a == null && (a = 1 / 0);
      for (var s = 1 / 0, l = -1, u = 0, c = 0, v = this.count(); c < v; c++) {
        var f = this.getRawIndex(c), h = e - i[f], p = Math.abs(h);
        p <= a && ((p < s || p === s && h >= 0 && l < 0) && (s = p, l = h, u = 0), h === l && (o[u++] = c));
      }
      return o.length = u, o;
    }, r.prototype.getIndices = function() {
      var t, e = this._indices;
      if (e) {
        var a = e.constructor, n = this._count;
        if (a === Array) {
          t = new a(n);
          for (var i = 0; i < n; i++)
            t[i] = e[i];
        } else
          t = new a(e.buffer, 0, n);
      } else {
        var a = ni(this._rawCount);
        t = new a(this.count());
        for (var i = 0; i < t.length; i++)
          t[i] = i;
      }
      return t;
    }, r.prototype.filter = function(t, e) {
      if (!this._count)
        return this;
      for (var a = this.clone(), n = a.count(), i = ni(a._rawCount), o = new i(n), s = [], l = t.length, u = 0, c = t[0], v = a._chunks, f = 0; f < n; f++) {
        var h = void 0, p = a.getRawIndex(f);
        if (l === 0)
          h = e(f);
        else if (l === 1) {
          var d = v[c][p];
          h = e(d, f);
        } else {
          for (var g = 0; g < l; g++)
            s[g] = v[t[g]][p];
          s[g] = f, h = e.apply(null, s);
        }
        h && (o[u++] = p);
      }
      return u < n && (a._indices = o), a._count = u, a._extent = [], a._updateGetRawIdx(), a;
    }, r.prototype.selectRange = function(t) {
      var e = this.clone(), a = e._count;
      if (!a)
        return this;
      var n = Fe(t), i = n.length;
      if (!i)
        return this;
      var o = e.count(), s = ni(e._rawCount), l = new s(o), u = 0, c = n[0], v = t[c][0], f = t[c][1], h = e._chunks, p = !1;
      if (!e._indices) {
        var d = 0;
        if (i === 1) {
          for (var g = h[n[0]], y = 0; y < a; y++) {
            var m = g[y];
            (m >= v && m <= f || isNaN(m)) && (l[u++] = d), d++;
          }
          p = !0;
        } else if (i === 2) {
          for (var g = h[n[0]], _ = h[n[1]], S = t[n[1]][0], x = t[n[1]][1], y = 0; y < a; y++) {
            var m = g[y], b = _[y];
            (m >= v && m <= f || isNaN(m)) && (b >= S && b <= x || isNaN(b)) && (l[u++] = d), d++;
          }
          p = !0;
        }
      }
      if (!p)
        if (i === 1)
          for (var y = 0; y < o; y++) {
            var D = e.getRawIndex(y), m = h[n[0]][D];
            (m >= v && m <= f || isNaN(m)) && (l[u++] = D);
          }
        else
          for (var y = 0; y < o; y++) {
            for (var A = !0, D = e.getRawIndex(y), T = 0; T < i; T++) {
              var C = n[T], m = h[C][D];
              (m < t[C][0] || m > t[C][1]) && (A = !1);
            }
            A && (l[u++] = e.getRawIndex(y));
          }
      return u < o && (e._indices = l), e._count = u, e._extent = [], e._updateGetRawIdx(), e;
    }, r.prototype.map = function(t, e) {
      var a = this.clone(t);
      return this._updateDims(a, t, e), a;
    }, r.prototype.modify = function(t, e) {
      this._updateDims(this, t, e);
    }, r.prototype._updateDims = function(t, e, a) {
      for (var n = t._chunks, i = [], o = e.length, s = t.count(), l = [], u = t._rawExtent, c = 0; c < e.length; c++)
        u[e[c]] = Ja();
      for (var v = 0; v < s; v++) {
        for (var f = t.getRawIndex(v), h = 0; h < o; h++)
          l[h] = n[e[h]][f];
        l[o] = v;
        var p = a && a.apply(null, l);
        if (p != null) {
          typeof p != "object" && (i[0] = p, p = i);
          for (var c = 0; c < p.length; c++) {
            var d = e[c], g = p[c], y = u[d], m = n[d];
            m && (m[f] = g), g < y[0] && (y[0] = g), g > y[1] && (y[1] = g);
          }
        }
      }
    }, r.prototype.lttbDownSample = function(t, e) {
      var a = this.clone([t], !0), n = a._chunks, i = n[t], o = this.count(), s = 0, l = Math.floor(1 / e), u = this.getRawIndex(0), c, v, f, h = new (ni(this._rawCount))(Math.min((Math.ceil(o / l) + 2) * 2, o));
      h[s++] = u;
      for (var p = 1; p < o - 1; p += l) {
        for (var d = Math.min(p + l, o - 1), g = Math.min(p + l * 2, o), y = (g + d) / 2, m = 0, _ = d; _ < g; _++) {
          var S = this.getRawIndex(_), x = i[S];
          isNaN(x) || (m += x);
        }
        m /= g - d;
        var b = p, D = Math.min(p + l, o), A = p - 1, T = i[u];
        c = -1, f = b;
        for (var C = -1, M = 0, _ = b; _ < D; _++) {
          var S = this.getRawIndex(_), x = i[S];
          if (isNaN(x)) {
            M++, C < 0 && (C = S);
            continue;
          }
          v = Math.abs((A - y) * (x - T) - (A - _) * (m - T)), v > c && (c = v, f = S);
        }
        M > 0 && M < D - b && (h[s++] = Math.min(C, f), f = Math.max(C, f)), h[s++] = f, u = f;
      }
      return h[s++] = this.getRawIndex(o - 1), a._count = s, a._indices = h, a.getRawIndex = this._getRawIdx, a;
    }, r.prototype.downSample = function(t, e, a, n) {
      for (var i = this.clone([t], !0), o = i._chunks, s = [], l = Math.floor(1 / e), u = o[t], c = this.count(), v = i._rawExtent[t] = Ja(), f = new (ni(this._rawCount))(Math.ceil(c / l)), h = 0, p = 0; p < c; p += l) {
        l > c - p && (l = c - p, s.length = l);
        for (var d = 0; d < l; d++) {
          var g = this.getRawIndex(p + d);
          s[d] = u[g];
        }
        var y = a(s), m = this.getRawIndex(Math.min(p + n(s, y) || 0, c - 1));
        u[m] = y, y < v[0] && (v[0] = y), y > v[1] && (v[1] = y), f[h++] = m;
      }
      return i._count = h, i._indices = f, i._updateGetRawIdx(), i;
    }, r.prototype.each = function(t, e) {
      if (this._count)
        for (var a = t.length, n = this._chunks, i = 0, o = this.count(); i < o; i++) {
          var s = this.getRawIndex(i);
          switch (a) {
            case 0:
              e(i);
              break;
            case 1:
              e(n[t[0]][s], i);
              break;
            case 2:
              e(n[t[0]][s], n[t[1]][s], i);
              break;
            default:
              for (var l = 0, u = []; l < a; l++)
                u[l] = n[t[l]][s];
              u[l] = i, e.apply(null, u);
          }
        }
    }, r.prototype.getDataExtent = function(t) {
      var e = this._chunks[t], a = Ja();
      if (!e)
        return a;
      var n = this.count(), i = !this._indices, o;
      if (i)
        return this._rawExtent[t].slice();
      if (o = this._extent[t], o)
        return o.slice();
      o = a;
      for (var s = o[0], l = o[1], u = 0; u < n; u++) {
        var c = this.getRawIndex(u), v = e[c];
        v < s && (s = v), v > l && (l = v);
      }
      return o = [s, l], this._extent[t] = o, o;
    }, r.prototype.getRawDataItem = function(t) {
      var e = this.getRawIndex(t);
      if (this._provider.persistent)
        return this._provider.getItem(e);
      for (var a = [], n = this._chunks, i = 0; i < n.length; i++)
        a.push(n[i][e]);
      return a;
    }, r.prototype.clone = function(t, e) {
      var a = new r(), n = this._chunks, i = t && wn(t, function(s, l) {
        return s[l] = !0, s;
      }, {});
      if (i)
        for (var o = 0; o < n.length; o++)
          a._chunks[o] = i[o] ? RT(n[o]) : n[o];
      else
        a._chunks = n;
      return this._copyCommonProps(a), e || (a._indices = this._cloneIndices()), a._updateGetRawIdx(), a;
    }, r.prototype._copyCommonProps = function(t) {
      t._count = this._count, t._rawCount = this._rawCount, t._provider = this._provider, t._dimensions = this._dimensions, t._extent = Q(this._extent), t._rawExtent = Q(this._rawExtent);
    }, r.prototype._cloneIndices = function() {
      if (this._indices) {
        var t = this._indices.constructor, e = void 0;
        if (t === Array) {
          var a = this._indices.length;
          e = new t(a);
          for (var n = 0; n < a; n++)
            e[n] = this._indices[n];
        } else
          e = new t(this._indices);
        return e;
      }
      return null;
    }, r.prototype._getRawIdxIdentity = function(t) {
      return t;
    }, r.prototype._getRawIdx = function(t) {
      return t < this._count && t >= 0 ? this._indices[t] : -1;
    }, r.prototype._updateGetRawIdx = function() {
      this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity;
    }, r.internalField = function() {
      function t(e, a, n, i) {
        return Xr(e[i], this._dimensions[i]);
      }
      hu = {
        arrayRows: t,
        objectRows: function(e, a, n, i) {
          return Xr(e[a], this._dimensions[i]);
        },
        keyedColumns: t,
        original: function(e, a, n, i) {
          var o = e && (e.value == null ? e : e.value);
          return Xr(o instanceof Array ? o[i] : o, this._dimensions[i]);
        },
        typedArray: function(e, a, n, i) {
          return e[i];
        }
      };
    }(), r;
  }()
), ii = { env: {} }, fS = (
  /** @class */
  function() {
    function r(t) {
      this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = !0, this._sourceHost = t;
    }
    return r.prototype.dirty = function() {
      this._setLocalSource([], []), this._storeList = [], this._dirty = !0;
    }, r.prototype._setLocalSource = function(t, e) {
      this._sourceList = t, this._upstreamSignList = e, this._versionSignBase++, this._versionSignBase > 9e10 && (this._versionSignBase = 0);
    }, r.prototype._getVersionSign = function() {
      return this._sourceHost.uid + "_" + this._versionSignBase;
    }, r.prototype.prepareSource = function() {
      this._isDirty() && (this._createSource(), this._dirty = !1);
    }, r.prototype._createSource = function() {
      this._setLocalSource([], []);
      var t = this._sourceHost, e = this._getUpstreamSourceManagers(), a = !!e.length, n, i;
      if (oi(t)) {
        var o = t, s = void 0, l = void 0, u = void 0;
        if (a) {
          var c = e[0];
          c.prepareSource(), u = c.getSource(), s = u.data, l = u.sourceFormat, i = [c._getVersionSign()];
        } else
          s = o.get("data", !0), l = Dt(s) ? xr : $t, i = [];
        var v = this._getSourceMetaRawOption() || {}, f = u && u.metaRawOption || {}, h = ce(v.seriesLayoutBy, f.seriesLayoutBy) || null, p = ce(v.sourceHeader, f.sourceHeader), d = ce(v.dimensions, f.dimensions), g = h !== f.seriesLayoutBy || !!p != !!f.sourceHeader || d;
        n = g ? [ov(s, {
          seriesLayoutBy: h,
          sourceHeader: p,
          dimensions: d
        }, l)] : [];
      } else {
        var y = t;
        if (a) {
          var m = this._applyTransform(e);
          n = m.sourceList, i = m.upstreamSignList;
        } else {
          var _ = y.get("source", !0);
          n = [ov(_, this._getSourceMetaRawOption(), null)], i = [];
        }
      }
      ii.env.NODE_ENV !== "production" && K(n && i), this._setLocalSource(n, i);
    }, r.prototype._applyTransform = function(t) {
      var e = this._sourceHost, a = e.get("transform", !0), n = e.get("fromTransformResult", !0);
      if (ii.env.NODE_ENV !== "production" && K(n != null || a != null), n != null) {
        var i = "";
        t.length !== 1 && (ii.env.NODE_ENV !== "production" && (i = "When using `fromTransformResult`, there should be only one upstream dataset"), Qp(i));
      }
      var o, s = [], l = [];
      return w(t, function(u) {
        u.prepareSource();
        var c = u.getSource(n || 0), v = "";
        n != null && !c && (ii.env.NODE_ENV !== "production" && (v = "Can not retrieve result by `fromTransformResult`: " + n), Qp(v)), s.push(c), l.push(u._getVersionSign());
      }), a ? o = LT(a, s, {
        datasetIndex: e.componentIndex
      }) : n != null && (o = [cT(s[0])]), {
        sourceList: o,
        upstreamSignList: l
      };
    }, r.prototype._isDirty = function() {
      if (this._dirty)
        return !0;
      for (var t = this._getUpstreamSourceManagers(), e = 0; e < t.length; e++) {
        var a = t[e];
        if (
          // Consider the case that there is ancestor diry, call it recursively.
          // The performance is probably not an issue because usually the chain is not long.
          a._isDirty() || this._upstreamSignList[e] !== a._getVersionSign()
        )
          return !0;
      }
    }, r.prototype.getSource = function(t) {
      t = t || 0;
      var e = this._sourceList[t];
      if (!e) {
        var a = this._getUpstreamSourceManagers();
        return a[0] && a[0].getSource(t);
      }
      return e;
    }, r.prototype.getSharedDataStore = function(t) {
      ii.env.NODE_ENV !== "production" && K(oi(this._sourceHost), "Can only call getDataStore on series source manager.");
      var e = t.makeStoreSchema();
      return this._innerGetDataStore(e.dimensions, t.source, e.hash);
    }, r.prototype._innerGetDataStore = function(t, e, a) {
      var n = 0, i = this._storeList, o = i[n];
      o || (o = i[n] = {});
      var s = o[a];
      if (!s) {
        var l = this._getUpstreamSourceManagers()[0];
        oi(this._sourceHost) && l ? s = l._innerGetDataStore(t, e, a) : (s = new sv(), s.initData(new tS(e, t.length), t)), o[a] = s;
      }
      return s;
    }, r.prototype._getUpstreamSourceManagers = function() {
      var t = this._sourceHost;
      if (oi(t)) {
        var e = If(t);
        return e ? [e.getSourceManager()] : [];
      } else
        return G(kA(t), function(a) {
          return a.getSourceManager();
        });
    }, r.prototype._getSourceMetaRawOption = function() {
      var t = this._sourceHost, e, a, n;
      if (oi(t))
        e = t.get("seriesLayoutBy", !0), a = t.get("sourceHeader", !0), n = t.get("dimensions", !0);
      else if (!this._getUpstreamSourceManagers().length) {
        var i = t;
        e = i.get("seriesLayoutBy", !0), a = i.get("sourceHeader", !0), n = i.get("dimensions", !0);
      }
      return {
        seriesLayoutBy: e,
        sourceHeader: a,
        dimensions: n
      };
    }, r;
  }()
);
function Jp(r) {
  var t = r.option.transform;
  t && Ns(r.option.transform);
}
function oi(r) {
  return r.mainType === "series";
}
function Qp(r) {
  throw new Error(r);
}
var kT = { env: {} }, hS = "line-height:1";
function pS(r, t) {
  var e = r.color || "#6e7079", a = r.fontSize || 12, n = r.fontWeight || "400", i = r.color || "#464646", o = r.fontSize || 14, s = r.fontWeight || "900";
  return t === "html" ? {
    // eslint-disable-next-line max-len
    nameStyle: "font-size:" + Tt(a + "") + "px;color:" + Tt(e) + ";font-weight:" + Tt(n + ""),
    // eslint-disable-next-line max-len
    valueStyle: "font-size:" + Tt(o + "") + "px;color:" + Tt(i) + ";font-weight:" + Tt(s + "")
  } : {
    nameStyle: {
      fontSize: a,
      fill: e,
      fontWeight: n
    },
    valueStyle: {
      fontSize: o,
      fill: i,
      fontWeight: s
    }
  };
}
var OT = [0, 10, 20, 30], VT = ["", `
`, `

`, `


`];
function rt(r, t) {
  return t.type = r, t;
}
function lv(r) {
  return r.type === "section";
}
function dS(r) {
  return lv(r) ? BT : zT;
}
function gS(r) {
  if (lv(r)) {
    var t = 0, e = r.blocks.length, a = e > 1 || e > 0 && !r.noHeader;
    return w(r.blocks, function(n) {
      var i = gS(n);
      i >= t && (t = i + +(a && // 0 always can not be readable gap level.
      (!i || lv(n) && !n.noHeader)));
    }), t;
  }
  return 0;
}
function BT(r, t, e, a) {
  var n = t.noHeader, i = GT(gS(t)), o = [], s = t.blocks || [];
  K(!s || B(s)), s = s || [];
  var l = r.orderMode;
  if (t.sortBlocks && l) {
    s = s.slice();
    var u = {
      valueAsc: "asc",
      valueDesc: "desc"
    };
    if ($(u, l)) {
      var c = new lS(u[l], null);
      s.sort(function(p, d) {
        return c.evaluate(p.sortParam, d.sortParam);
      });
    } else l === "seriesDesc" && s.reverse();
  }
  w(s, function(p, d) {
    var g = t.valueFormatter, y = dS(p)(
      // Inherit valueFormatter
      g ? z(z({}, r), {
        valueFormatter: g
      }) : r,
      p,
      d > 0 ? i.html : 0,
      a
    );
    y != null && o.push(y);
  });
  var v = r.renderMode === "richText" ? o.join(i.richText) : uv(o.join(""), n ? e : i.html);
  if (n)
    return v;
  var f = rv(t.header, "ordinal", r.useUTC), h = pS(a, r.renderMode).nameStyle;
  return r.renderMode === "richText" ? yS(r, f, h) + i.richText + v : uv('<div style="' + h + ";" + hS + ';">' + Tt(f) + "</div>" + v, e);
}
function zT(r, t, e, a) {
  var n = r.renderMode, i = t.noName, o = t.noValue, s = !t.markerType, l = t.name, u = r.useUTC, c = t.valueFormatter || r.valueFormatter || function(S) {
    return S = B(S) ? S : [S], G(S, function(x, b) {
      return rv(x, B(h) ? h[b] : h, u);
    });
  };
  if (!(i && o)) {
    var v = s ? "" : r.markupStyleCreator.makeTooltipMarker(t.markerType, t.markerColor || "#333", n), f = i ? "" : rv(l, "ordinal", u), h = t.valueType, p = o ? [] : c(t.value, t.dataIndex), d = !s || !i, g = !s && i, y = pS(a, n), m = y.nameStyle, _ = y.valueStyle;
    return n === "richText" ? (s ? "" : v) + (i ? "" : yS(r, f, m)) + (o ? "" : WT(r, p, d, g, _)) : uv((s ? "" : v) + (i ? "" : FT(f, !s, m)) + (o ? "" : HT(p, d, g, _)), e);
  }
}
function ed(r, t, e, a, n, i) {
  if (r) {
    var o = dS(r), s = {
      useUTC: n,
      renderMode: e,
      orderMode: a,
      markupStyleCreator: t,
      valueFormatter: r.valueFormatter
    };
    return o(s, r, 0, i);
  }
}
function GT(r) {
  return {
    html: OT[r],
    richText: VT[r]
  };
}
function uv(r, t) {
  var e = '<div style="clear:both"></div>', a = "margin: " + t + "px 0 0";
  return '<div style="' + a + ";" + hS + ';">' + r + e + "</div>";
}
function FT(r, t, e) {
  var a = t ? "margin-left:2px" : "";
  return '<span style="' + e + ";" + a + '">' + Tt(r) + "</span>";
}
function HT(r, t, e, a) {
  var n = e ? "10px" : "20px", i = t ? "float:right;margin-left:" + n : "";
  return r = B(r) ? r : [r], '<span style="' + i + ";" + a + '">' + G(r, function(o) {
    return Tt(o);
  }).join("&nbsp;&nbsp;") + "</span>";
}
function yS(r, t, e) {
  return r.markupStyleCreator.wrapRichTextStyle(t, e);
}
function WT(r, t, e, a, n) {
  var i = [n], o = a ? 10 : 20;
  return e && i.push({
    padding: [0, 0, 0, o],
    align: "right"
  }), r.markupStyleCreator.wrapRichTextStyle(B(t) ? t.join("  ") : t, i);
}
function mS(r, t) {
  var e = r.getData().getItemVisual(t, "style"), a = e[r.visualDrawType];
  return Ga(a);
}
function _S(r, t) {
  var e = r.get("padding");
  return e ?? (t === "richText" ? [8, 10] : 10);
}
var pu = (
  /** @class */
  function() {
    function r() {
      this.richTextStyles = {}, this._nextStyleNameId = J0();
    }
    return r.prototype._generateStyleName = function() {
      return "__EC_aUTo_" + this._nextStyleNameId++;
    }, r.prototype.makeTooltipMarker = function(t, e, a) {
      var n = a === "richText" ? this._generateStyleName() : null, i = MA({
        color: e,
        type: t,
        renderMode: a,
        markerId: n
      });
      return Y(i) ? i : (kT.env.NODE_ENV !== "production" && K(n), this.richTextStyles[n] = i.style, i.content);
    }, r.prototype.wrapRichTextStyle = function(t, e) {
      var a = {};
      B(e) ? w(e, function(i) {
        return z(a, i);
      }) : z(a, e);
      var n = this._generateStyleName();
      return this.richTextStyles[n] = a, "{" + n + "|" + t + "}";
    }, r;
  }()
);
function SS(r) {
  var t = r.series, e = r.dataIndex, a = r.multipleSeries, n = t.getData(), i = n.mapDimensionsAll("defaultedTooltip"), o = i.length, s = t.getRawValue(e), l = B(s), u = mS(t, e), c, v, f, h;
  if (o > 1 || l && !o) {
    var p = UT(s, t, e, i, u);
    c = p.inlineValues, v = p.inlineValueTypes, f = p.blocks, h = p.inlineValues[0];
  } else if (o) {
    var d = n.getDimensionInfo(i[0]);
    h = c = Mn(n, e, i[0]), v = d.type;
  } else
    h = c = l ? s[0] : s;
  var g = cf(t), y = g && t.name || "", m = n.getName(e), _ = a ? y : m;
  return rt("section", {
    header: y,
    // When series name is not specified, do not show a header line with only '-'.
    // This case always happens in tooltip.trigger: 'item'.
    noHeader: a || !g,
    sortParam: h,
    blocks: [rt("nameValue", {
      markerType: "item",
      markerColor: u,
      // Do not mix display seriesName and itemName in one tooltip,
      // which might confuses users.
      name: _,
      // name dimension might be auto assigned, where the name might
      // be not readable. So we check trim here.
      noName: !uo(_),
      value: c,
      valueType: v,
      dataIndex: e
    })].concat(f || [])
  });
}
function UT(r, t, e, a, n) {
  var i = t.getData(), o = wn(r, function(v, f, h) {
    var p = i.getDimensionInfo(h);
    return v = v || p && p.tooltip !== !1 && p.displayName != null;
  }, !1), s = [], l = [], u = [];
  a.length ? w(a, function(v) {
    c(Mn(i, e, v), v);
  }) : w(r, c);
  function c(v, f) {
    var h = i.getDimensionInfo(f);
    !h || h.otherDims.tooltip === !1 || (o ? u.push(rt("nameValue", {
      markerType: "subItem",
      markerColor: n,
      name: h.displayName,
      value: v,
      valueType: h.type
    })) : (s.push(v), l.push(h.type)));
  }
  return {
    inlineValues: s,
    inlineValueTypes: l,
    blocks: u
  };
}
var $T = { env: {} }, Rr = ue();
function Ro(r, t) {
  return r.getName(t) || r.getId(t);
}
var xs = "__universalTransitionEnabled", Le = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e._selectedDataIndicesMap = {}, e;
    }
    return t.prototype.init = function(e, a, n) {
      this.seriesIndex = this.componentIndex, this.dataTask = Vi({
        count: ZT,
        reset: XT
      }), this.dataTask.context = {
        model: this
      }, this.mergeDefaultAndTheme(e, n);
      var i = Rr(this).sourceManager = new fS(this);
      i.prepareSource();
      var o = this.getInitialData(e, n);
      rd(o, this), this.dataTask.context.data = o, $T.env.NODE_ENV !== "production" && K(o, "getInitialData returned invalid data."), Rr(this).dataBeforeProcessed = o, td(this), this._initSelectedMapFromData(o);
    }, t.prototype.mergeDefaultAndTheme = function(e, a) {
      var n = Zi(this), i = n ? Zn(e) : {}, o = this.subType;
      se.hasClass(o) && (o += "Series"), le(e, a.getTheme().get(this.subType)), le(e, this.getDefaultOption()), Oa(e, "label", ["show"]), this.fillDataTextStyle(e.data), n && ea(e, i, n);
    }, t.prototype.mergeOption = function(e, a) {
      e = le(this.option, e, !0), this.fillDataTextStyle(e.data);
      var n = Zi(this);
      n && ea(this.option, e, n);
      var i = Rr(this).sourceManager;
      i.dirty(), i.prepareSource();
      var o = this.getInitialData(e, a);
      rd(o, this), this.dataTask.dirty(), this.dataTask.context.data = o, Rr(this).dataBeforeProcessed = o, td(this), this._initSelectedMapFromData(o);
    }, t.prototype.fillDataTextStyle = function(e) {
      if (e && !Dt(e))
        for (var a = ["show"], n = 0; n < e.length; n++)
          e[n] && e[n].label && Oa(e[n], "label", a);
    }, t.prototype.getInitialData = function(e, a) {
    }, t.prototype.appendData = function(e) {
      var a = this.getRawData();
      a.appendData(e.data);
    }, t.prototype.getData = function(e) {
      var a = cv(this);
      if (a) {
        var n = a.context.data;
        return e == null || !n.getLinkedData ? n : n.getLinkedData(e);
      } else
        return Rr(this).data;
    }, t.prototype.getAllData = function() {
      var e = this.getData();
      return e && e.getLinkedDataAll ? e.getLinkedDataAll() : [{
        data: e
      }];
    }, t.prototype.setData = function(e) {
      var a = cv(this);
      if (a) {
        var n = a.context;
        n.outputData = e, a !== this.dataTask && (n.data = e);
      }
      Rr(this).data = e;
    }, t.prototype.getEncode = function() {
      var e = this.get("encode", !0);
      if (e)
        return Z(e);
    }, t.prototype.getSourceManager = function() {
      return Rr(this).sourceManager;
    }, t.prototype.getSource = function() {
      return this.getSourceManager().getSource();
    }, t.prototype.getRawData = function() {
      return Rr(this).dataBeforeProcessed;
    }, t.prototype.getColorBy = function() {
      var e = this.get("colorBy");
      return e || "series";
    }, t.prototype.isColorBySeries = function() {
      return this.getColorBy() === "series";
    }, t.prototype.getBaseAxis = function() {
      var e = this.coordinateSystem;
      return e && e.getBaseAxis && e.getBaseAxis();
    }, t.prototype.formatTooltip = function(e, a, n) {
      return SS({
        series: this,
        dataIndex: e,
        multipleSeries: a
      });
    }, t.prototype.isAnimationEnabled = function() {
      var e = this.ecModel;
      if (Oe.node && !(e && e.ssr))
        return !1;
      var a = this.getShallow("animation");
      return a && this.getData().count() > this.getShallow("animationThreshold") && (a = !1), !!a;
    }, t.prototype.restoreData = function() {
      this.dataTask.dirty();
    }, t.prototype.getColorFromPalette = function(e, a, n) {
      var i = this.ecModel, o = Lf.prototype.getColorFromPalette.call(this, e, a, n);
      return o || (o = i.getColorFromPalette(e, a, n)), o;
    }, t.prototype.coordDimToDataDim = function(e) {
      return this.getRawData().mapDimensionsAll(e);
    }, t.prototype.getProgressive = function() {
      return this.get("progressive");
    }, t.prototype.getProgressiveThreshold = function() {
      return this.get("progressiveThreshold");
    }, t.prototype.select = function(e, a) {
      this._innerSelect(this.getData(a), e);
    }, t.prototype.unselect = function(e, a) {
      var n = this.option.selectedMap;
      if (n) {
        var i = this.option.selectedMode, o = this.getData(a);
        if (i === "series" || n === "all") {
          this.option.selectedMap = {}, this._selectedDataIndicesMap = {};
          return;
        }
        for (var s = 0; s < e.length; s++) {
          var l = e[s], u = Ro(o, l);
          n[u] = !1, this._selectedDataIndicesMap[u] = -1;
        }
      }
    }, t.prototype.toggleSelect = function(e, a) {
      for (var n = [], i = 0; i < e.length; i++)
        n[0] = e[i], this.isSelected(e[i], a) ? this.unselect(n, a) : this.select(n, a);
    }, t.prototype.getSelectedDataIndices = function() {
      if (this.option.selectedMap === "all")
        return [].slice.call(this.getData().getIndices());
      for (var e = this._selectedDataIndicesMap, a = Fe(e), n = [], i = 0; i < a.length; i++) {
        var o = e[a[i]];
        o >= 0 && n.push(o);
      }
      return n;
    }, t.prototype.isSelected = function(e, a) {
      var n = this.option.selectedMap;
      if (!n)
        return !1;
      var i = this.getData(a);
      return (n === "all" || n[Ro(i, e)]) && !i.getItemModel(e).get(["select", "disabled"]);
    }, t.prototype.isUniversalTransitionEnabled = function() {
      if (this[xs])
        return !0;
      var e = this.option.universalTransition;
      return e ? e === !0 ? !0 : e && e.enabled : !1;
    }, t.prototype._innerSelect = function(e, a) {
      var n, i, o = this.option, s = o.selectedMode, l = a.length;
      if (!(!s || !l)) {
        if (s === "series")
          o.selectedMap = "all";
        else if (s === "multiple") {
          J(o.selectedMap) || (o.selectedMap = {});
          for (var u = o.selectedMap, c = 0; c < l; c++) {
            var v = a[c], f = Ro(e, v);
            u[f] = !0, this._selectedDataIndicesMap[f] = e.getRawIndex(v);
          }
        } else if (s === "single" || s === !0) {
          var h = a[l - 1], f = Ro(e, h);
          o.selectedMap = (n = {}, n[f] = !0, n), this._selectedDataIndicesMap = (i = {}, i[f] = e.getRawIndex(h), i);
        }
      }
    }, t.prototype._initSelectedMapFromData = function(e) {
      if (!this.option.selectedMap) {
        var a = [];
        e.hasItemOption && e.each(function(n) {
          var i = e.getRawDataItem(n);
          i && i.selected && a.push(n);
        }), a.length > 0 && this._innerSelect(e, a);
      }
    }, t.registerClass = function(e) {
      return se.registerClass(e);
    }, t.protoInitialize = function() {
      var e = t.prototype;
      e.type = "series.__base__", e.seriesIndex = 0, e.ignoreStyleOnData = !1, e.hasSymbolVisual = !1, e.defaultSymbol = "circle", e.visualStyleAccessPath = "itemStyle", e.visualDrawType = "fill";
    }(), t;
  }(se)
);
at(Le, Ol);
at(Le, Lf);
s_(Le, se);
function td(r) {
  var t = r.name;
  cf(r) || (r.name = YT(r) || t);
}
function YT(r) {
  var t = r.getRawData(), e = t.mapDimensionsAll("seriesName"), a = [];
  return w(e, function(n) {
    var i = t.getDimensionInfo(n);
    i.displayName && a.push(i.displayName);
  }), a.join(" ");
}
function ZT(r) {
  return r.model.getRawData().count();
}
function XT(r) {
  var t = r.model;
  return t.setData(t.getRawData().cloneShallow()), KT;
}
function KT(r, t) {
  t.outputData && r.end > t.outputData.count() && t.model.getRawData().cloneShallow(t.outputData);
}
function rd(r, t) {
  w(Rs(r.CHANGABLE_METHODS, r.DOWNSAMPLE_METHODS), function(e) {
    r.wrapMethod(e, te(qT, t));
  });
}
function qT(r, t) {
  var e = cv(r);
  return e && e.setOutputEnd((t || this).count()), t;
}
function cv(r) {
  var t = (r.ecModel || {}).scheduler, e = t && t.getPipeline(r.uid);
  if (e) {
    var a = e.currentTask;
    if (a) {
      var n = a.agentStubMap;
      n && (a = n.get(r.uid));
    }
    return a;
  }
}
var Re = (
  /** @class */
  function() {
    function r() {
      this.group = new re(), this.uid = $n("viewComponent");
    }
    return r.prototype.init = function(t, e) {
    }, r.prototype.render = function(t, e, a, n) {
    }, r.prototype.dispose = function(t, e) {
    }, r.prototype.updateView = function(t, e, a, n) {
    }, r.prototype.updateLayout = function(t, e, a, n) {
    }, r.prototype.updateVisual = function(t, e, a, n) {
    }, r.prototype.toggleBlurSeries = function(t, e, a) {
    }, r.prototype.eachRendered = function(t) {
      var e = this.group;
      e && e.traverse(t);
    }, r;
  }()
);
hf(Re);
bl(Re);
function qn() {
  var r = ue();
  return function(t) {
    var e = r(t), a = t.pipelineContext, n = !!e.large, i = !!e.progressiveRender, o = e.large = !!(a && a.large), s = e.progressiveRender = !!(a && a.progressiveRender);
    return (n !== o || i !== s) && "reset";
  };
}
var du = { env: {} }, xS = ue(), jT = qn(), De = (
  /** @class */
  function() {
    function r() {
      this.group = new re(), this.uid = $n("viewChart"), this.renderTask = Vi({
        plan: JT,
        reset: QT
      }), this.renderTask.context = {
        view: this
      };
    }
    return r.prototype.init = function(t, e) {
    }, r.prototype.render = function(t, e, a, n) {
      if (du.env.NODE_ENV !== "production")
        throw new Error("render method must been implemented");
    }, r.prototype.highlight = function(t, e, a, n) {
      var i = t.getData(n && n.dataType);
      if (!i) {
        du.env.NODE_ENV !== "production" && ot("Unknown dataType " + n.dataType);
        return;
      }
      nd(i, n, "emphasis");
    }, r.prototype.downplay = function(t, e, a, n) {
      var i = t.getData(n && n.dataType);
      if (!i) {
        du.env.NODE_ENV !== "production" && ot("Unknown dataType " + n.dataType);
        return;
      }
      nd(i, n, "normal");
    }, r.prototype.remove = function(t, e) {
      this.group.removeAll();
    }, r.prototype.dispose = function(t, e) {
    }, r.prototype.updateView = function(t, e, a, n) {
      this.render(t, e, a, n);
    }, r.prototype.updateLayout = function(t, e, a, n) {
      this.render(t, e, a, n);
    }, r.prototype.updateVisual = function(t, e, a, n) {
      this.render(t, e, a, n);
    }, r.prototype.eachRendered = function(t) {
      ia(this.group, t);
    }, r.markUpdateMethod = function(t, e) {
      xS(t).updateMethod = e;
    }, r.protoInitialize = function() {
      var t = r.prototype;
      t.type = "chart";
    }(), r;
  }()
);
function ad(r, t, e) {
  r && Jr(r) && (t === "emphasis" ? Ar : Tr)(r, e);
}
function nd(r, t, e) {
  var a = Va(r, t), n = t && t.highlightKey != null ? jD(t.highlightKey) : null;
  a != null ? w(we(a), function(i) {
    ad(r.getItemGraphicEl(i), e, n);
  }) : r.eachItemGraphicEl(function(i) {
    ad(i, e, n);
  });
}
hf(De, ["dispose"]);
bl(De);
function JT(r) {
  return jT(r.model);
}
function QT(r) {
  var t = r.model, e = r.ecModel, a = r.api, n = r.payload, i = t.pipelineContext.progressiveRender, o = r.view, s = n && xS(n).updateMethod, l = i ? "incrementalPrepareRender" : s && o[s] ? s : "render";
  return l !== "render" && o[l](t, e, a, n), eC[l];
}
var eC = {
  incrementalPrepareRender: {
    progress: function(r, t) {
      t.view.incrementalRender(r, t.model, t.ecModel, t.api, t.payload);
    }
  },
  render: {
    // Put view.render in `progress` to support appendData. But in this case
    // view.render should not be called in reset, otherwise it will be called
    // twise. Use `forceFirstProgress` to make sure that view.render is called
    // in any cases.
    forceFirstProgress: !0,
    progress: function(r, t) {
      t.view.render(t.model, t.ecModel, t.api, t.payload);
    }
  }
}, $s = "\0__throttleOriginMethod", id = "\0__throttleRate", od = "\0__throttleType";
function Of(r, t, e) {
  var a, n = 0, i = 0, o = null, s, l, u, c;
  t = t || 0;
  function v() {
    i = (/* @__PURE__ */ new Date()).getTime(), o = null, r.apply(l, u || []);
  }
  var f = function() {
    for (var h = [], p = 0; p < arguments.length; p++)
      h[p] = arguments[p];
    a = (/* @__PURE__ */ new Date()).getTime(), l = this, u = h;
    var d = c || t, g = c || e;
    c = null, s = a - (g ? n : i) - d, clearTimeout(o), g ? o = setTimeout(v, d) : s >= 0 ? v() : o = setTimeout(v, -s), n = a;
  };
  return f.clear = function() {
    o && (clearTimeout(o), o = null);
  }, f.debounceNextCall = function(h) {
    c = h;
  }, f;
}
function jn(r, t, e, a) {
  var n = r[t];
  if (n) {
    var i = n[$s] || n, o = n[od], s = n[id];
    if (s !== e || o !== a) {
      if (e == null || !a)
        return r[t] = i;
      n = r[t] = Of(i, e, a === "debounce"), n[$s] = i, n[od] = a, n[id] = e;
    }
    return n;
  }
}
function Ki(r, t) {
  var e = r[t];
  e && e[$s] && (e.clear && e.clear(), r[t] = e[$s]);
}
var sd = ue(), ld = {
  itemStyle: Ba(C_, !0),
  lineStyle: Ba(T_, !0)
}, tC = {
  lineStyle: "stroke",
  itemStyle: "fill"
};
function bS(r, t) {
  var e = r.visualStyleMapper || ld[t];
  return e || (console.warn("Unknown style type '" + t + "'."), ld.itemStyle);
}
function wS(r, t) {
  var e = r.visualDrawType || tC[t];
  return e || (console.warn("Unknown style type '" + t + "'."), "fill");
}
var rC = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(r, t) {
    var e = r.getData(), a = r.visualStyleAccessPath || "itemStyle", n = r.getModel(a), i = bS(r, a), o = i(n), s = n.getShallow("decal");
    s && (e.setVisual("decal", s), s.dirty = !0);
    var l = wS(r, a), u = o[l], c = X(u) ? u : null, v = o.fill === "auto" || o.stroke === "auto";
    if (!o[l] || c || v) {
      var f = r.getColorFromPalette(
        // TODO series count changed.
        r.name,
        null,
        t.getSeriesCount()
      );
      o[l] || (o[l] = f, e.setVisual("colorFromPalette", !0)), o.fill = o.fill === "auto" || X(o.fill) ? f : o.fill, o.stroke = o.stroke === "auto" || X(o.stroke) ? f : o.stroke;
    }
    if (e.setVisual("style", o), e.setVisual("drawType", l), !t.isSeriesFiltered(r) && c)
      return e.setVisual("colorFromPalette", !1), {
        dataEach: function(h, p) {
          var d = r.getDataParams(p), g = z({}, o);
          g[l] = c(d), h.setItemVisual(p, "style", g);
        }
      };
  }
}, si = new me(), aC = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(r, t) {
    if (!(r.ignoreStyleOnData || t.isSeriesFiltered(r))) {
      var e = r.getData(), a = r.visualStyleAccessPath || "itemStyle", n = bS(r, a), i = e.getVisual("drawType");
      return {
        dataEach: e.hasItemOption ? function(o, s) {
          var l = o.getRawDataItem(s);
          if (l && l[a]) {
            si.option = l[a];
            var u = n(si), c = o.ensureUniqueItemVisual(s, "style");
            z(c, u), si.option.decal && (o.setItemVisual(s, "decal", si.option.decal), si.option.decal.dirty = !0), i in u && o.setItemVisual(s, "colorFromPalette", !1);
          }
        } : null
      };
    }
  }
}, nC = {
  performRawSeries: !0,
  overallReset: function(r) {
    var t = Z();
    r.eachSeries(function(e) {
      var a = e.getColorBy();
      if (!e.isColorBySeries()) {
        var n = e.type + "-" + a, i = t.get(n);
        i || (i = {}, t.set(n, i)), sd(e).scope = i;
      }
    }), r.eachSeries(function(e) {
      if (!(e.isColorBySeries() || r.isSeriesFiltered(e))) {
        var a = e.getRawData(), n = {}, i = e.getData(), o = sd(e).scope, s = e.visualStyleAccessPath || "itemStyle", l = wS(e, s);
        i.each(function(u) {
          var c = i.getRawIndex(u);
          n[c] = u;
        }), a.each(function(u) {
          var c = n[u], v = i.getItemVisual(c, "colorFromPalette");
          if (v) {
            var f = i.ensureUniqueItemVisual(c, "style"), h = a.getName(u) || u + "", p = a.count();
            f[l] = e.getColorFromPalette(h, o, p);
          }
        });
      }
    });
  }
}, ko = Math.PI;
function iC(r, t) {
  t = t || {}, ee(t, {
    text: "loading",
    textColor: "#000",
    fontSize: 12,
    fontWeight: "normal",
    fontStyle: "normal",
    fontFamily: "sans-serif",
    maskColor: "rgba(255, 255, 255, 0.8)",
    showSpinner: !0,
    color: "#5470c6",
    spinnerRadius: 10,
    lineWidth: 5,
    zlevel: 0
  });
  var e = new re(), a = new de({
    style: {
      fill: t.maskColor
    },
    zlevel: t.zlevel,
    z: 1e4
  });
  e.add(a);
  var n = new ve({
    style: {
      text: t.text,
      fill: t.textColor,
      fontSize: t.fontSize,
      fontWeight: t.fontWeight,
      fontStyle: t.fontStyle,
      fontFamily: t.fontFamily
    },
    zlevel: t.zlevel,
    z: 10001
  }), i = new de({
    style: {
      fill: "none"
    },
    textContent: n,
    textConfig: {
      position: "right",
      distance: 10
    },
    zlevel: t.zlevel,
    z: 10001
  });
  e.add(i);
  var o;
  return t.showSpinner && (o = new nf({
    shape: {
      startAngle: -ko / 2,
      endAngle: -ko / 2 + 0.1,
      r: t.spinnerRadius
    },
    style: {
      stroke: t.color,
      lineCap: "round",
      lineWidth: t.lineWidth
    },
    zlevel: t.zlevel,
    z: 10001
  }), o.animateShape(!0).when(1e3, {
    endAngle: ko * 3 / 2
  }).start("circularInOut"), o.animateShape(!0).when(1e3, {
    startAngle: ko * 3 / 2
  }).delay(300).start("circularInOut"), e.add(o)), e.resize = function() {
    var s = n.getBoundingRect().width, l = t.showSpinner ? t.spinnerRadius : 0, u = (r.getWidth() - l * 2 - (t.showSpinner && s ? 10 : 0) - s) / 2 - (t.showSpinner && s ? 0 : 5 + s / 2) + (t.showSpinner ? 0 : s / 2) + (s ? 0 : l), c = r.getHeight() / 2;
    t.showSpinner && o.setShape({
      cx: u,
      cy: c
    }), i.setShape({
      x: u - l,
      y: c - l,
      width: l * 2,
      height: l * 2
    }), a.setShape({
      x: 0,
      y: 0,
      width: r.getWidth(),
      height: r.getHeight()
    });
  }, e.resize(), e;
}
var ud = { env: {} }, DS = (
  /** @class */
  function() {
    function r(t, e, a, n) {
      this._stageTaskMap = Z(), this.ecInstance = t, this.api = e, a = this._dataProcessorHandlers = a.slice(), n = this._visualHandlers = n.slice(), this._allHandlers = a.concat(n);
    }
    return r.prototype.restoreData = function(t, e) {
      t.restoreData(e), this._stageTaskMap.each(function(a) {
        var n = a.overallTask;
        n && n.dirty();
      });
    }, r.prototype.getPerformArgs = function(t, e) {
      if (t.__pipeline) {
        var a = this._pipelineMap.get(t.__pipeline.id), n = a.context, i = !e && a.progressiveEnabled && (!n || n.progressiveRender) && t.__idxInPipeline > a.blockIndex, o = i ? a.step : null, s = n && n.modDataCount, l = s != null ? Math.ceil(s / o) : null;
        return {
          step: o,
          modBy: l,
          modDataCount: s
        };
      }
    }, r.prototype.getPipeline = function(t) {
      return this._pipelineMap.get(t);
    }, r.prototype.updateStreamModes = function(t, e) {
      var a = this._pipelineMap.get(t.uid), n = t.getData(), i = n.count(), o = a.progressiveEnabled && e.incrementalPrepareRender && i >= a.threshold, s = t.get("large") && i >= t.get("largeThreshold"), l = t.get("progressiveChunkMode") === "mod" ? i : null;
      t.pipelineContext = a.context = {
        progressiveRender: o,
        modDataCount: l,
        large: s
      };
    }, r.prototype.restorePipelines = function(t) {
      var e = this, a = e._pipelineMap = Z();
      t.eachSeries(function(n) {
        var i = n.getProgressive(), o = n.uid;
        a.set(o, {
          id: o,
          head: null,
          tail: null,
          threshold: n.getProgressiveThreshold(),
          progressiveEnabled: i && !(n.preventIncremental && n.preventIncremental()),
          blockIndex: -1,
          step: Math.round(i || 700),
          count: 0
        }), e._pipe(n, n.dataTask);
      });
    }, r.prototype.prepareStageTasks = function() {
      var t = this._stageTaskMap, e = this.api.getModel(), a = this.api;
      w(this._allHandlers, function(n) {
        var i = t.get(n.uid) || t.set(n.uid, {}), o = "";
        ud.env.NODE_ENV !== "production" && (o = '"reset" and "overallReset" must not be both specified.'), K(!(n.reset && n.overallReset), o), n.reset && this._createSeriesStageTask(n, i, e, a), n.overallReset && this._createOverallStageTask(n, i, e, a);
      }, this);
    }, r.prototype.prepareView = function(t, e, a, n) {
      var i = t.renderTask, o = i.context;
      o.model = e, o.ecModel = a, o.api = n, i.__block = !t.incrementalPrepareRender, this._pipe(e, i);
    }, r.prototype.performDataProcessorTasks = function(t, e) {
      this._performStageTasks(this._dataProcessorHandlers, t, e, {
        block: !0
      });
    }, r.prototype.performVisualTasks = function(t, e, a) {
      this._performStageTasks(this._visualHandlers, t, e, a);
    }, r.prototype._performStageTasks = function(t, e, a, n) {
      n = n || {};
      var i = !1, o = this;
      w(t, function(l, u) {
        if (!(n.visualType && n.visualType !== l.visualType)) {
          var c = o._stageTaskMap.get(l.uid), v = c.seriesTaskMap, f = c.overallTask;
          if (f) {
            var h, p = f.agentStubMap;
            p.each(function(g) {
              s(n, g) && (g.dirty(), h = !0);
            }), h && f.dirty(), o.updatePayload(f, a);
            var d = o.getPerformArgs(f, n.block);
            p.each(function(g) {
              g.perform(d);
            }), f.perform(d) && (i = !0);
          } else v && v.each(function(g, y) {
            s(n, g) && g.dirty();
            var m = o.getPerformArgs(g, n.block);
            m.skip = !l.performRawSeries && e.isSeriesFiltered(g.context.model), o.updatePayload(g, a), g.perform(m) && (i = !0);
          });
        }
      });
      function s(l, u) {
        return l.setDirty && (!l.dirtyMap || l.dirtyMap.get(u.__pipeline.id));
      }
      this.unfinished = i || this.unfinished;
    }, r.prototype.performSeriesTasks = function(t) {
      var e;
      t.eachSeries(function(a) {
        e = a.dataTask.perform() || e;
      }), this.unfinished = e || this.unfinished;
    }, r.prototype.plan = function() {
      this._pipelineMap.each(function(t) {
        var e = t.tail;
        do {
          if (e.__block) {
            t.blockIndex = e.__idxInPipeline;
            break;
          }
          e = e.getUpstream();
        } while (e);
      });
    }, r.prototype.updatePayload = function(t, e) {
      e !== "remain" && (t.context.payload = e);
    }, r.prototype._createSeriesStageTask = function(t, e, a, n) {
      var i = this, o = e.seriesTaskMap, s = e.seriesTaskMap = Z(), l = t.seriesType, u = t.getTargetSeries;
      t.createOnAllSeries ? a.eachRawSeries(c) : l ? a.eachRawSeriesByType(l, c) : u && u(a, n).each(c);
      function c(v) {
        var f = v.uid, h = s.set(f, o && o.get(f) || Vi({
          plan: cC,
          reset: vC,
          count: hC
        }));
        h.context = {
          model: v,
          ecModel: a,
          api: n,
          // PENDING: `useClearVisual` not used?
          useClearVisual: t.isVisual && !t.isLayout,
          plan: t.plan,
          reset: t.reset,
          scheduler: i
        }, i._pipe(v, h);
      }
    }, r.prototype._createOverallStageTask = function(t, e, a, n) {
      var i = this, o = e.overallTask = e.overallTask || Vi({
        reset: oC
      });
      o.context = {
        ecModel: a,
        api: n,
        overallReset: t.overallReset,
        scheduler: i
      };
      var s = o.agentStubMap, l = o.agentStubMap = Z(), u = t.seriesType, c = t.getTargetSeries, v = !0, f = !1, h = "";
      ud.env.NODE_ENV !== "production" && (h = '"createOnAllSeries" is not supported for "overallReset", because it will block all streams.'), K(!t.createOnAllSeries, h), u ? a.eachRawSeriesByType(u, p) : c ? c(a, n).each(p) : (v = !1, w(a.getSeries(), p));
      function p(d) {
        var g = d.uid, y = l.set(g, s && s.get(g) || // When the result of `getTargetSeries` changed, the overallTask
        // should be set as dirty and re-performed.
        (f = !0, Vi({
          reset: sC,
          onDirty: uC
        })));
        y.context = {
          model: d,
          overallProgress: v
          // FIXME:TS never used, so comment it
          // modifyOutputEnd: modifyOutputEnd
        }, y.agent = o, y.__block = v, i._pipe(d, y);
      }
      f && o.dirty();
    }, r.prototype._pipe = function(t, e) {
      var a = t.uid, n = this._pipelineMap.get(a);
      !n.head && (n.head = e), n.tail && n.tail.pipe(e), n.tail = e, e.__idxInPipeline = n.count++, e.__pipeline = n;
    }, r.wrapStageHandler = function(t, e) {
      return X(t) && (t = {
        overallReset: t,
        seriesType: pC(t)
      }), t.uid = $n("stageHandler"), e && (t.visualType = e), t;
    }, r;
  }()
);
function oC(r) {
  r.overallReset(r.ecModel, r.api, r.payload);
}
function sC(r) {
  return r.overallProgress && lC;
}
function lC() {
  this.agent.dirty(), this.getDownstream().dirty();
}
function uC() {
  this.agent && this.agent.dirty();
}
function cC(r) {
  return r.plan ? r.plan(r.model, r.ecModel, r.api, r.payload) : null;
}
function vC(r) {
  r.useClearVisual && r.data.clearAllVisual();
  var t = r.resetDefines = we(r.reset(r.model, r.ecModel, r.api, r.payload));
  return t.length > 1 ? G(t, function(e, a) {
    return AS(a);
  }) : fC;
}
var fC = AS(0);
function AS(r) {
  return function(t, e) {
    var a = e.data, n = e.resetDefines[r];
    if (n && n.dataEach)
      for (var i = t.start; i < t.end; i++)
        n.dataEach(a, i);
    else n && n.progress && n.progress(t, a);
  };
}
function hC(r) {
  return r.data.count();
}
function pC(r) {
  Ys = null;
  try {
    r(qi, TS);
  } catch {
  }
  return Ys;
}
var qi = {}, TS = {}, Ys;
CS(qi, Ef);
CS(TS, q_);
qi.eachSeriesByType = qi.eachRawSeriesByType = function(r) {
  Ys = r;
};
qi.eachComponent = function(r) {
  r.mainType === "series" && r.subType && (Ys = r.subType);
};
function CS(r, t) {
  for (var e in t.prototype)
    r[e] = _t;
}
var cd = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"];
const dC = {
  color: cd,
  colorLayer: [["#37A2DA", "#ffd85c", "#fd7b5f"], ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"], ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], cd]
};
var pt = "#B9B8CE", vd = "#100C2A", Oo = function() {
  return {
    axisLine: {
      lineStyle: {
        color: pt
      }
    },
    splitLine: {
      lineStyle: {
        color: "#484753"
      }
    },
    splitArea: {
      areaStyle: {
        color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"]
      }
    },
    minorSplitLine: {
      lineStyle: {
        color: "#20203B"
      }
    }
  };
}, fd = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"], MS = {
  darkMode: !0,
  color: fd,
  backgroundColor: vd,
  axisPointer: {
    lineStyle: {
      color: "#817f91"
    },
    crossStyle: {
      color: "#817f91"
    },
    label: {
      // TODO Contrast of label backgorundColor
      color: "#fff"
    }
  },
  legend: {
    textStyle: {
      color: pt
    }
  },
  textStyle: {
    color: pt
  },
  title: {
    textStyle: {
      color: "#EEF1FA"
    },
    subtextStyle: {
      color: "#B9B8CE"
    }
  },
  toolbox: {
    iconStyle: {
      borderColor: pt
    }
  },
  dataZoom: {
    borderColor: "#71708A",
    textStyle: {
      color: pt
    },
    brushStyle: {
      color: "rgba(135,163,206,0.3)"
    },
    handleStyle: {
      color: "#353450",
      borderColor: "#C5CBE3"
    },
    moveHandleStyle: {
      color: "#B0B6C3",
      opacity: 0.3
    },
    fillerColor: "rgba(135,163,206,0.2)",
    emphasis: {
      handleStyle: {
        borderColor: "#91B7F2",
        color: "#4D587D"
      },
      moveHandleStyle: {
        color: "#636D9A",
        opacity: 0.7
      }
    },
    dataBackground: {
      lineStyle: {
        color: "#71708A",
        width: 1
      },
      areaStyle: {
        color: "#71708A"
      }
    },
    selectedDataBackground: {
      lineStyle: {
        color: "#87A3CE"
      },
      areaStyle: {
        color: "#87A3CE"
      }
    }
  },
  visualMap: {
    textStyle: {
      color: pt
    }
  },
  timeline: {
    lineStyle: {
      color: pt
    },
    label: {
      color: pt
    },
    controlStyle: {
      color: pt,
      borderColor: pt
    }
  },
  calendar: {
    itemStyle: {
      color: vd
    },
    dayLabel: {
      color: pt
    },
    monthLabel: {
      color: pt
    },
    yearLabel: {
      color: pt
    }
  },
  timeAxis: Oo(),
  logAxis: Oo(),
  valueAxis: Oo(),
  categoryAxis: Oo(),
  line: {
    symbol: "circle"
  },
  graph: {
    color: fd
  },
  gauge: {
    title: {
      color: pt
    },
    axisLine: {
      lineStyle: {
        color: [[1, "rgba(207,212,219,0.2)"]]
      }
    },
    axisLabel: {
      color: pt
    },
    detail: {
      color: "#EEF1FA"
    }
  },
  candlestick: {
    itemStyle: {
      color: "#f64e56",
      color0: "#54ea92",
      borderColor: "#f64e56",
      borderColor0: "#54ea92"
      // borderColor: '#ca2824',
      // borderColor0: '#09a443'
    }
  }
};
MS.categoryAxis.splitLine.show = !1;
var gC = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.normalizeQuery = function(t) {
      var e = {}, a = {}, n = {};
      if (Y(t)) {
        var i = sr(t);
        e.mainType = i.main || null, e.subType = i.sub || null;
      } else {
        var o = ["Index", "Name", "Id"], s = {
          name: 1,
          dataIndex: 1,
          dataType: 1
        };
        w(t, function(l, u) {
          for (var c = !1, v = 0; v < o.length; v++) {
            var f = o[v], h = u.lastIndexOf(f);
            if (h > 0 && h === u.length - f.length) {
              var p = u.slice(0, h);
              p !== "data" && (e.mainType = p, e[f.toLowerCase()] = l, c = !0);
            }
          }
          s.hasOwnProperty(u) && (a[u] = l, c = !0), c || (n[u] = l);
        });
      }
      return {
        cptQuery: e,
        dataQuery: a,
        otherQuery: n
      };
    }, r.prototype.filter = function(t, e) {
      var a = this.eventInfo;
      if (!a)
        return !0;
      var n = a.targetEl, i = a.packedEvent, o = a.model, s = a.view;
      if (!o || !s)
        return !0;
      var l = e.cptQuery, u = e.dataQuery;
      return c(l, o, "mainType") && c(l, o, "subType") && c(l, o, "index", "componentIndex") && c(l, o, "name") && c(l, o, "id") && c(u, i, "name") && c(u, i, "dataIndex") && c(u, i, "dataType") && (!s.filterForExposedEvent || s.filterForExposedEvent(t, e.otherQuery, n, i));
      function c(v, f, h, p) {
        return v[h] == null || f[p || h] === v[h];
      }
    }, r.prototype.afterTrigger = function() {
      this.eventInfo = null;
    }, r;
  }()
), vv = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"], hd = vv.concat(["symbolKeepAspect"]), yC = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(r, t) {
    var e = r.getData();
    if (r.legendIcon && e.setVisual("legendIcon", r.legendIcon), !r.hasSymbolVisual)
      return;
    for (var a = {}, n = {}, i = !1, o = 0; o < vv.length; o++) {
      var s = vv[o], l = r.get(s);
      X(l) ? (i = !0, n[s] = l) : a[s] = l;
    }
    if (a.symbol = a.symbol || r.defaultSymbol, e.setVisual(z({
      legendIcon: r.legendIcon || a.symbol,
      symbolKeepAspect: r.get("symbolKeepAspect")
    }, a)), t.isSeriesFiltered(r))
      return;
    var u = Fe(n);
    function c(v, f) {
      for (var h = r.getRawValue(f), p = r.getDataParams(f), d = 0; d < u.length; d++) {
        var g = u[d];
        v.setItemVisual(f, g, n[g](h, p));
      }
    }
    return {
      dataEach: i ? c : null
    };
  }
}, mC = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(r, t) {
    if (!r.hasSymbolVisual || t.isSeriesFiltered(r))
      return;
    var e = r.getData();
    function a(n, i) {
      for (var o = n.getItemModel(i), s = 0; s < hd.length; s++) {
        var l = hd[s], u = o.getShallow(l, !0);
        u != null && n.setItemVisual(i, l, u);
      }
    }
    return {
      dataEach: e.hasItemOption ? a : null
    };
  }
}, Vf = { env: {} };
function Bf(r, t, e) {
  switch (e) {
    case "color":
      var a = r.getItemVisual(t, "style");
      return a[r.getVisual("drawType")];
    case "opacity":
      return r.getItemVisual(t, "style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return r.getItemVisual(t, e);
    default:
      Vf.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + e);
  }
}
function yo(r, t) {
  switch (t) {
    case "color":
      var e = r.getVisual("style");
      return e[r.getVisual("drawType")];
    case "opacity":
      return r.getVisual("style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return r.getVisual(t);
    default:
      Vf.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + t);
  }
}
function IS(r, t, e, a) {
  switch (e) {
    case "color":
      var n = r.ensureUniqueItemVisual(t, "style");
      n[r.getVisual("drawType")] = a, r.setItemVisual(t, "colorFromPalette", !1);
      break;
    case "opacity":
      r.ensureUniqueItemVisual(t, "style").opacity = a;
      break;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      r.setItemVisual(t, e, a);
      break;
    default:
      Vf.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + e);
  }
}
var LS = { env: {} };
function ES(r, t) {
  function e(a, n) {
    var i = [];
    return a.eachComponent({
      mainType: "series",
      subType: r,
      query: n
    }, function(o) {
      i.push(o.seriesIndex);
    }), i;
  }
  w([[r + "ToggleSelect", "toggleSelect"], [r + "Select", "select"], [r + "UnSelect", "unselect"]], function(a) {
    t(a[0], function(n, i, o) {
      n = z({}, n), LS.env.NODE_ENV !== "production" && We(n.type, a[1]), o.dispatchAction(z(n, {
        type: a[1],
        seriesIndex: e(i, n)
      }));
    });
  });
}
function Qa(r, t, e, a, n) {
  var i = r + t;
  e.isSilent(i) || (LS.env.NODE_ENV !== "production" && Qt("event " + i + " is deprecated."), a.eachComponent({
    mainType: "series",
    subType: "pie"
  }, function(o) {
    for (var s = o.seriesIndex, l = o.option.selectedMap, u = n.selected, c = 0; c < u.length; c++)
      if (u[c].seriesIndex === s) {
        var v = o.getData(), f = Va(v, n.fromActionPayload);
        e.trigger(i, {
          type: i,
          seriesId: o.id,
          name: B(f) ? v.getName(f[0]) : v.getName(f),
          selected: Y(l) ? l : z({}, l)
        });
      }
  }));
}
function _C(r, t, e) {
  r.on("selectchanged", function(a) {
    var n = e.getModel();
    a.isFromClick ? (Qa("map", "selectchanged", t, n, a), Qa("pie", "selectchanged", t, n, a)) : a.fromAction === "select" ? (Qa("map", "selected", t, n, a), Qa("pie", "selected", t, n, a)) : a.fromAction === "unselect" && (Qa("map", "unselected", t, n, a), Qa("pie", "unselected", t, n, a));
  });
}
function Ta(r, t, e) {
  for (var a; r && !(t(r) && (a = r, e)); )
    r = r.__hostTarget || r.parent;
  return a;
}
var SC = Ee.extend({
  type: "triangle",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, t) {
    var e = t.cx, a = t.cy, n = t.width / 2, i = t.height / 2;
    r.moveTo(e, a - i), r.lineTo(e + n, a + i), r.lineTo(e - n, a + i), r.closePath();
  }
}), xC = Ee.extend({
  type: "diamond",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, t) {
    var e = t.cx, a = t.cy, n = t.width / 2, i = t.height / 2;
    r.moveTo(e, a - i), r.lineTo(e + n, a), r.lineTo(e, a + i), r.lineTo(e - n, a), r.closePath();
  }
}), bC = Ee.extend({
  type: "pin",
  shape: {
    // x, y on the cusp
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, t) {
    var e = t.x, a = t.y, n = t.width / 5 * 3, i = Math.max(n, t.height), o = n / 2, s = o * o / (i - o), l = a - i + o + s, u = Math.asin(s / o), c = Math.cos(u) * o, v = Math.sin(u), f = Math.cos(u), h = o * 0.6, p = o * 0.7;
    r.moveTo(e - c, l + s), r.arc(e, l, o, Math.PI - u, Math.PI * 2 + u), r.bezierCurveTo(e + c - v * h, l + s + f * h, e, a - p, e, a), r.bezierCurveTo(e, a - p, e - c + v * h, l + s + f * h, e - c, l + s), r.closePath();
  }
}), wC = Ee.extend({
  type: "arrow",
  shape: {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, t) {
    var e = t.height, a = t.width, n = t.x, i = t.y, o = a / 3 * 2;
    r.moveTo(n, i), r.lineTo(n + o, i + e), r.lineTo(n, i + e / 4 * 3), r.lineTo(n - o, i + e), r.lineTo(n, i), r.closePath();
  }
}), DC = {
  line: it,
  rect: de,
  roundRect: de,
  square: de,
  circle: Wa,
  diamond: xC,
  pin: bC,
  arrow: wC,
  triangle: SC
}, AC = {
  line: function(r, t, e, a, n) {
    n.x1 = r, n.y1 = t + a / 2, n.x2 = r + e, n.y2 = t + a / 2;
  },
  rect: function(r, t, e, a, n) {
    n.x = r, n.y = t, n.width = e, n.height = a;
  },
  roundRect: function(r, t, e, a, n) {
    n.x = r, n.y = t, n.width = e, n.height = a, n.r = Math.min(e, a) / 4;
  },
  square: function(r, t, e, a, n) {
    var i = Math.min(e, a);
    n.x = r, n.y = t, n.width = i, n.height = i;
  },
  circle: function(r, t, e, a, n) {
    n.cx = r + e / 2, n.cy = t + a / 2, n.r = Math.min(e, a) / 2;
  },
  diamond: function(r, t, e, a, n) {
    n.cx = r + e / 2, n.cy = t + a / 2, n.width = e, n.height = a;
  },
  pin: function(r, t, e, a, n) {
    n.x = r + e / 2, n.y = t + a / 2, n.width = e, n.height = a;
  },
  arrow: function(r, t, e, a, n) {
    n.x = r + e / 2, n.y = t + a / 2, n.width = e, n.height = a;
  },
  triangle: function(r, t, e, a, n) {
    n.cx = r + e / 2, n.cy = t + a / 2, n.width = e, n.height = a;
  }
}, Zs = {};
w(DC, function(r, t) {
  Zs[t] = new r();
});
var TC = Ee.extend({
  type: "symbol",
  shape: {
    symbolType: "",
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  calculateTextPosition: function(r, t, e) {
    var a = Wc(r, t, e), n = this.shape;
    return n && n.symbolType === "pin" && t.position === "inside" && (a.y = e.y + e.height * 0.4), a;
  },
  buildPath: function(r, t, e) {
    var a = t.symbolType;
    if (a !== "none") {
      var n = Zs[a];
      n || (a = "rect", n = Zs[a]), AC[a](t.x, t.y, t.width, t.height, n.shape), n.buildPath(r, n.shape, e);
    }
  }
});
function CC(r, t) {
  if (this.type !== "image") {
    var e = this.style;
    this.__isEmptyBrush ? (e.stroke = r, e.fill = t || "#fff", e.lineWidth = 2) : this.shape.symbolType === "line" ? e.stroke = r : e.fill = r, this.markRedraw();
  }
}
function Ze(r, t, e, a, n, i, o) {
  var s = r.indexOf("empty") === 0;
  s && (r = r.substr(5, 1).toLowerCase() + r.substr(6));
  var l;
  return r.indexOf("image://") === 0 ? l = m_(r.slice(8), new Te(t, e, a, n), o ? "center" : "cover") : r.indexOf("path://") === 0 ? l = Tl(r.slice(7), {}, new Te(t, e, a, n), o ? "center" : "cover") : l = new TC({
    shape: {
      symbolType: r,
      x: t,
      y: e,
      width: a,
      height: n
    }
  }), l.__isEmptyBrush = s, l.setColor = CC, i && l.setColor(i), l;
}
function Jn(r) {
  return B(r) || (r = [+r, +r]), [r[0] || 0, r[1] || 0];
}
function $a(r, t) {
  if (r != null)
    return B(r) || (r = [r, r]), [H(r[0], t[0]) || 0, H(ce(r[1], r[0]), t[1]) || 0];
}
var MC = { env: {} }, gu = new ww(), pd = new Dw(100), dd = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"];
function In(r, t) {
  if (r === "none")
    return null;
  var e = t.getDevicePixelRatio(), a = t.getZr(), n = a.painter.type === "svg";
  r.dirty && gu.delete(r);
  var i = gu.get(r);
  if (i)
    return i;
  var o = ee(r, {
    symbol: "rect",
    symbolSize: 1,
    symbolKeepAspect: !0,
    color: "rgba(0, 0, 0, 0.2)",
    backgroundColor: null,
    dashArrayX: 5,
    dashArrayY: 5,
    rotation: 0,
    maxTileWidth: 512,
    maxTileHeight: 512
  });
  o.backgroundColor === "none" && (o.backgroundColor = null);
  var s = {
    repeat: "repeat"
  };
  return l(s), s.rotation = o.rotation, s.scaleX = s.scaleY = n ? 1 : 1 / e, gu.set(r, s), r.dirty = !1, s;
  function l(u) {
    for (var c = [e], v = !0, f = 0; f < dd.length; ++f) {
      var h = o[dd[f]];
      if (h != null && !B(h) && !Y(h) && !_e(h) && typeof h != "boolean") {
        v = !1;
        break;
      }
      c.push(h);
    }
    var p;
    if (v) {
      p = c.join(",") + (n ? "-svg" : "");
      var d = pd.get(p);
      d && (n ? u.svgElement = d : u.image = d);
    }
    var g = NS(o.dashArrayX), y = IC(o.dashArrayY), m = PS(o.symbol), _ = LC(g), S = RS(y), x = !n && ks.createCanvas(), b = n && {
      tag: "g",
      attrs: {},
      key: "dcl",
      children: []
    }, D = T(), A;
    x && (x.width = D.width * e, x.height = D.height * e, A = x.getContext("2d")), C(), v && pd.put(p, x || b), u.image = x, u.svgElement = b, u.svgWidth = D.width, u.svgHeight = D.height;
    function T() {
      for (var M = 1, I = 0, L = _.length; I < L; ++I)
        M = ip(M, _[I]);
      for (var P = 1, I = 0, L = m.length; I < L; ++I)
        P = ip(P, m[I].length);
      M *= P;
      var E = S * _.length * m.length;
      if (MC.env.NODE_ENV !== "production") {
        var N = function(O) {
          console.warn("Calculated decal size is greater than " + O + " due to decal option settings so " + O + " is used for the decal size. Please consider changing the decal option to make a smaller decal or set " + O + " to be larger to avoid incontinuity.");
        };
        M > o.maxTileWidth && N("maxTileWidth"), E > o.maxTileHeight && N("maxTileHeight");
      }
      return {
        width: Math.max(1, Math.min(M, o.maxTileWidth)),
        height: Math.max(1, Math.min(E, o.maxTileHeight))
      };
    }
    function C() {
      A && (A.clearRect(0, 0, x.width, x.height), o.backgroundColor && (A.fillStyle = o.backgroundColor, A.fillRect(0, 0, x.width, x.height)));
      for (var M = 0, I = 0; I < y.length; ++I)
        M += y[I];
      if (M <= 0)
        return;
      for (var L = -S, P = 0, E = 0, N = 0; L < D.height; ) {
        if (P % 2 === 0) {
          for (var O = E / 2 % m.length, k = 0, V = 0, F = 0; k < D.width * 2; ) {
            for (var W = 0, I = 0; I < g[N].length; ++I)
              W += g[N][I];
            if (W <= 0)
              break;
            if (V % 2 === 0) {
              var q = (1 - o.symbolSize) * 0.5, ae = k + g[N][V] * q, ie = L + y[P] * q, ge = g[N][V] * o.symbolSize, Se = y[P] * o.symbolSize, he = F / 2 % m[O].length;
              ne(ae, ie, ge, Se, m[O][he]);
            }
            k += g[N][V], ++F, ++V, V === g[N].length && (V = 0);
          }
          ++N, N === g.length && (N = 0);
        }
        L += y[P], ++E, ++P, P === y.length && (P = 0);
      }
      function ne(Ce, be, ke, je, ut) {
        var Ne = n ? 1 : e, Xe = Ze(ut, Ce * Ne, be * Ne, ke * Ne, je * Ne, o.color, o.symbolKeepAspect);
        if (n) {
          var Je = a.painter.renderOneToVNode(Xe);
          Je && b.children.push(Je);
        } else
          bw(A, Xe);
      }
    }
  }
}
function PS(r) {
  if (!r || r.length === 0)
    return [["rect"]];
  if (Y(r))
    return [[r]];
  for (var t = !0, e = 0; e < r.length; ++e)
    if (!Y(r[e])) {
      t = !1;
      break;
    }
  if (t)
    return PS([r]);
  for (var a = [], e = 0; e < r.length; ++e)
    Y(r[e]) ? a.push([r[e]]) : a.push(r[e]);
  return a;
}
function NS(r) {
  if (!r || r.length === 0)
    return [[0, 0]];
  if (_e(r)) {
    var t = Math.ceil(r);
    return [[t, t]];
  }
  for (var e = !0, a = 0; a < r.length; ++a)
    if (!_e(r[a])) {
      e = !1;
      break;
    }
  if (e)
    return NS([r]);
  for (var n = [], a = 0; a < r.length; ++a)
    if (_e(r[a])) {
      var t = Math.ceil(r[a]);
      n.push([t, t]);
    } else {
      var t = G(r[a], function(s) {
        return Math.ceil(s);
      });
      t.length % 2 === 1 ? n.push(t.concat(t)) : n.push(t);
    }
  return n;
}
function IC(r) {
  if (!r || typeof r == "object" && r.length === 0)
    return [0, 0];
  if (_e(r)) {
    var t = Math.ceil(r);
    return [t, t];
  }
  var e = G(r, function(a) {
    return Math.ceil(a);
  });
  return r.length % 2 ? e.concat(e) : e;
}
function LC(r) {
  return G(r, function(t) {
    return RS(t);
  });
}
function RS(r) {
  for (var t = 0, e = 0; e < r.length; ++e)
    t += r[e];
  return r.length % 2 === 1 ? t * 2 : t;
}
function EC(r, t) {
  r.eachRawSeries(function(e) {
    if (!r.isSeriesFiltered(e)) {
      var a = e.getData();
      a.hasItemVisual() && a.each(function(o) {
        var s = a.getItemVisual(o, "decal");
        if (s) {
          var l = a.ensureUniqueItemVisual(o, "style");
          l.decal = In(s, t);
        }
      });
      var n = a.getVisual("decal");
      if (n) {
        var i = a.getVisual("style");
        i.decal = In(n, t);
      }
    }
  });
}
var Xt = new Bn(), kS = { env: {} }, Xs = {};
function PC(r, t) {
  kS.env.NODE_ENV !== "production" && Xs[r] && ot("Already has an implementation of " + r + "."), Xs[r] = t;
}
function NC(r) {
  return kS.env.NODE_ENV !== "production" && (Xs[r] || ot("Implementation of " + r + " doesn't exists.")), Xs[r];
}
var Qe = { env: {} }, RC = 1, kC = 800, OC = 900, VC = 1e3, BC = 2e3, zC = 5e3, OS = 1e3, GC = 1100, zf = 2e3, VS = 3e3, FC = 4e3, Bl = 4500, HC = 4600, WC = 5e3, UC = 6e3, BS = 7e3, $C = {
  PROCESSOR: {
    FILTER: VC,
    SERIES_FILTER: kC,
    STATISTIC: zC
  },
  VISUAL: {
    LAYOUT: OS,
    PROGRESSIVE_LAYOUT: GC,
    GLOBAL: zf,
    CHART: VS,
    POST_CHART_LAYOUT: HC,
    COMPONENT: FC,
    BRUSH: WC,
    CHART_ITEM: Bl,
    ARIA: UC,
    DECAL: BS
  }
}, ct = "__flagInMainProcess", bt = "__pendingUpdate", yu = "__needsUpdateStatus", gd = /^[a-zA-Z0-9_]+$/, mu = "__connectUpdateStatus", yd = 0, YC = 1, ZC = 2;
function zS(r) {
  return function() {
    for (var t = [], e = 0; e < arguments.length; e++)
      t[e] = arguments[e];
    if (this.isDisposed()) {
      At(this.id);
      return;
    }
    return FS(this, r, t);
  };
}
function GS(r) {
  return function() {
    for (var t = [], e = 0; e < arguments.length; e++)
      t[e] = arguments[e];
    return FS(this, r, t);
  };
}
function FS(r, t, e) {
  return e[0] = e[0] && e[0].toLowerCase(), Bn.prototype[t].apply(r, e);
}
var HS = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t;
  }(Bn)
), WS = HS.prototype;
WS.on = GS("on");
WS.off = GS("off");
var en, _u, Vo, kr, Su, xu, bu, li, ui, md, _d, wu, Sd, Bo, xd, US, Lt, bd, $S = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this, new gC()) || this;
      i._chartsViews = [], i._chartsMap = {}, i._componentsViews = [], i._componentsMap = {}, i._pendingActions = [], n = n || {}, Y(a) && (a = YS[a]), i._dom = e;
      var o = "canvas", s = "auto", l = !1;
      if (Qe.env.NODE_ENV !== "production") {
        var u = (
          /* eslint-disable-next-line */
          Oe.hasGlobalWindow ? window : global
        );
        u && (o = ce(u.__ECHARTS__DEFAULT__RENDERER__, o), s = ce(u.__ECHARTS__DEFAULT__COARSE_POINTER, s), l = ce(u.__ECHARTS__DEFAULT__USE_DIRTY_RECT__, l));
      }
      n.ssr && Aw(function(h) {
        var p = j(h), d = p.dataIndex;
        if (d != null) {
          var g = Z();
          return g.set("series_index", p.seriesIndex), g.set("data_index", d), p.ssrType && g.set("ssr_type", p.ssrType), g;
        }
      });
      var c = i._zr = Kh(e, {
        renderer: n.renderer || o,
        devicePixelRatio: n.devicePixelRatio,
        width: n.width,
        height: n.height,
        ssr: n.ssr,
        useDirtyRect: ce(n.useDirtyRect, l),
        useCoarsePointer: ce(n.useCoarsePointer, s),
        pointerSize: n.pointerSize
      });
      i._ssr = n.ssr, i._throttledZrFlush = Of(U(c.flush, c), 17), a = Q(a), a && J_(a, !0), i._theme = a, i._locale = xA(n.locale || M_), i._coordSysMgr = new Kn();
      var v = i._api = xd(i);
      function f(h, p) {
        return h.__prio - p.__prio;
      }
      return jl(qs, f), jl(fv, f), i._scheduler = new DS(i, v, fv, qs), i._messageCenter = new HS(), i._initEvents(), i.resize = U(i.resize, i), c.animation.on("frame", i._onframe, i), md(c, i), _d(c, i), Ns(i), i;
    }
    return t.prototype._onframe = function() {
      if (!this._disposed) {
        bd(this);
        var e = this._scheduler;
        if (this[bt]) {
          var a = this[bt].silent;
          this[ct] = !0;
          try {
            en(this), kr.update.call(this, null, this[bt].updateParams);
          } catch (l) {
            throw this[ct] = !1, this[bt] = null, l;
          }
          this._zr.flush(), this[ct] = !1, this[bt] = null, li.call(this, a), ui.call(this, a);
        } else if (e.unfinished) {
          var n = RC, i = this._model, o = this._api;
          e.unfinished = !1;
          do {
            var s = +/* @__PURE__ */ new Date();
            e.performSeriesTasks(i), e.performDataProcessorTasks(i), xu(this, i), e.performVisualTasks(i), Bo(this, this._model, o, "remain", {}), n -= +/* @__PURE__ */ new Date() - s;
          } while (n > 0 && e.unfinished);
          e.unfinished || this._zr.flush();
        }
      }
    }, t.prototype.getDom = function() {
      return this._dom;
    }, t.prototype.getId = function() {
      return this.id;
    }, t.prototype.getZr = function() {
      return this._zr;
    }, t.prototype.isSSR = function() {
      return this._ssr;
    }, t.prototype.setOption = function(e, a, n) {
      if (this[ct]) {
        Qe.env.NODE_ENV !== "production" && ot("`setOption` should not be called during main process.");
        return;
      }
      if (this._disposed) {
        At(this.id);
        return;
      }
      var i, o, s;
      if (J(a) && (n = a.lazyUpdate, i = a.silent, o = a.replaceMerge, s = a.transition, a = a.notMerge), this[ct] = !0, !this._model || a) {
        var l = new KA(this._api), u = this._theme, c = this._model = new Ef();
        c.scheduler = this._scheduler, c.ssr = this._ssr, c.init(null, null, null, u, this._locale, l);
      }
      this._model.setOption(e, {
        replaceMerge: o
      }, hv);
      var v = {
        seriesTransition: s,
        optionChanged: !0
      };
      if (n)
        this[bt] = {
          silent: i,
          updateParams: v
        }, this[ct] = !1, this.getZr().wakeUp();
      else {
        try {
          en(this), kr.update.call(this, null, v);
        } catch (f) {
          throw this[bt] = null, this[ct] = !1, f;
        }
        this._ssr || this._zr.flush(), this[bt] = null, this[ct] = !1, li.call(this, i), ui.call(this, i);
      }
    }, t.prototype.setTheme = function() {
      Qt("ECharts#setTheme() is DEPRECATED in ECharts 3.0");
    }, t.prototype.getModel = function() {
      return this._model;
    }, t.prototype.getOption = function() {
      return this._model && this._model.getOption();
    }, t.prototype.getWidth = function() {
      return this._zr.getWidth();
    }, t.prototype.getHeight = function() {
      return this._zr.getHeight();
    }, t.prototype.getDevicePixelRatio = function() {
      return this._zr.painter.dpr || Oe.hasGlobalWindow && window.devicePixelRatio || 1;
    }, t.prototype.getRenderedCanvas = function(e) {
      return Qe.env.NODE_ENV !== "production" && We("getRenderedCanvas", "renderToCanvas"), this.renderToCanvas(e);
    }, t.prototype.renderToCanvas = function(e) {
      e = e || {};
      var a = this._zr.painter;
      if (Qe.env.NODE_ENV !== "production" && a.type !== "canvas")
        throw new Error("renderToCanvas can only be used in the canvas renderer.");
      return a.getRenderedCanvas({
        backgroundColor: e.backgroundColor || this._model.get("backgroundColor"),
        pixelRatio: e.pixelRatio || this.getDevicePixelRatio()
      });
    }, t.prototype.renderToSVGString = function(e) {
      e = e || {};
      var a = this._zr.painter;
      if (Qe.env.NODE_ENV !== "production" && a.type !== "svg")
        throw new Error("renderToSVGString can only be used in the svg renderer.");
      return a.renderToString({
        useViewBox: e.useViewBox
      });
    }, t.prototype.getSvgDataURL = function() {
      if (Oe.svgSupported) {
        var e = this._zr, a = e.storage.getDisplayList();
        return w(a, function(n) {
          n.stopAnimation(null, !0);
        }), e.painter.toDataURL();
      }
    }, t.prototype.getDataURL = function(e) {
      if (this._disposed) {
        At(this.id);
        return;
      }
      e = e || {};
      var a = e.excludeComponents, n = this._model, i = [], o = this;
      w(a, function(l) {
        n.eachComponent({
          mainType: l
        }, function(u) {
          var c = o._componentsMap[u.__viewId];
          c.group.ignore || (i.push(c), c.group.ignore = !0);
        });
      });
      var s = this._zr.painter.getType() === "svg" ? this.getSvgDataURL() : this.renderToCanvas(e).toDataURL("image/" + (e && e.type || "png"));
      return w(i, function(l) {
        l.group.ignore = !1;
      }), s;
    }, t.prototype.getConnectedDataURL = function(e) {
      if (this._disposed) {
        At(this.id);
        return;
      }
      var a = e.type === "svg", n = this.group, i = Math.min, o = Math.max, s = 1 / 0;
      if (wd[n]) {
        var l = s, u = s, c = -s, v = -s, f = [], h = e && e.pixelRatio || this.getDevicePixelRatio();
        w(zi, function(_, S) {
          if (_.group === n) {
            var x = a ? _.getZr().painter.getSvgDom().innerHTML : _.renderToCanvas(Q(e)), b = _.getDom().getBoundingClientRect();
            l = i(b.left, l), u = i(b.top, u), c = o(b.right, c), v = o(b.bottom, v), f.push({
              dom: x,
              left: b.left,
              top: b.top
            });
          }
        }), l *= h, u *= h, c *= h, v *= h;
        var p = c - l, d = v - u, g = ks.createCanvas(), y = Kh(g, {
          renderer: a ? "svg" : "canvas"
        });
        if (y.resize({
          width: p,
          height: d
        }), a) {
          var m = "";
          return w(f, function(_) {
            var S = _.left - l, x = _.top - u;
            m += '<g transform="translate(' + S + "," + x + ')">' + _.dom + "</g>";
          }), y.painter.getSvgRoot().innerHTML = m, e.connectedBackgroundColor && y.painter.setBackgroundColor(e.connectedBackgroundColor), y.refreshImmediately(), y.painter.toDataURL();
        } else
          return e.connectedBackgroundColor && y.add(new de({
            shape: {
              x: 0,
              y: 0,
              width: p,
              height: d
            },
            style: {
              fill: e.connectedBackgroundColor
            }
          })), w(f, function(_) {
            var S = new Ut({
              style: {
                x: _.left * h - l,
                y: _.top * h - u,
                image: _.dom
              }
            });
            y.add(S);
          }), y.refreshImmediately(), g.toDataURL("image/" + (e && e.type || "png"));
      } else
        return this.getDataURL(e);
    }, t.prototype.convertToPixel = function(e, a) {
      return Su(this, "convertToPixel", e, a);
    }, t.prototype.convertFromPixel = function(e, a) {
      return Su(this, "convertFromPixel", e, a);
    }, t.prototype.containPixel = function(e, a) {
      if (this._disposed) {
        At(this.id);
        return;
      }
      var n = this._model, i, o = Ni(n, e);
      return w(o, function(s, l) {
        l.indexOf("Models") >= 0 && w(s, function(u) {
          var c = u.coordinateSystem;
          if (c && c.containPoint)
            i = i || !!c.containPoint(a);
          else if (l === "seriesModels") {
            var v = this._chartsMap[u.__viewId];
            v && v.containPoint ? i = i || v.containPoint(a, u) : Qe.env.NODE_ENV !== "production" && Ve(l + ": " + (v ? "The found component do not support containPoint." : "No view mapping to the found component."));
          } else
            Qe.env.NODE_ENV !== "production" && Ve(l + ": containPoint is not supported");
        }, this);
      }, this), !!i;
    }, t.prototype.getVisual = function(e, a) {
      var n = this._model, i = Ni(n, e, {
        defaultMainType: "series"
      }), o = i.seriesModel;
      Qe.env.NODE_ENV !== "production" && (o || Ve("There is no specified series model"));
      var s = o.getData(), l = i.hasOwnProperty("dataIndexInside") ? i.dataIndexInside : i.hasOwnProperty("dataIndex") ? s.indexOfRawIndex(i.dataIndex) : null;
      return l != null ? Bf(s, l, a) : yo(s, a);
    }, t.prototype.getViewOfComponentModel = function(e) {
      return this._componentsMap[e.__viewId];
    }, t.prototype.getViewOfSeriesModel = function(e) {
      return this._chartsMap[e.__viewId];
    }, t.prototype._initEvents = function() {
      var e = this;
      w(XC, function(a) {
        var n = function(i) {
          var o = e.getModel(), s = i.target, l, u = a === "globalout";
          if (u ? l = {} : s && Ta(s, function(p) {
            var d = j(p);
            if (d && d.dataIndex != null) {
              var g = d.dataModel || o.getSeriesByIndex(d.seriesIndex);
              return l = g && g.getDataParams(d.dataIndex, d.dataType, s) || {}, !0;
            } else if (d.eventData)
              return l = z({}, d.eventData), !0;
          }, !0), l) {
            var c = l.componentType, v = l.componentIndex;
            (c === "markLine" || c === "markPoint" || c === "markArea") && (c = "series", v = l.seriesIndex);
            var f = c && v != null && o.getComponent(c, v), h = f && e[f.mainType === "series" ? "_chartsMap" : "_componentsMap"][f.__viewId];
            Qe.env.NODE_ENV !== "production" && !u && !(f && h) && Ve("model or view can not be found by params"), l.event = i, l.type = a, e._$eventProcessor.eventInfo = {
              targetEl: s,
              packedEvent: l,
              model: f,
              view: h
            }, e.trigger(a, l);
          }
        };
        n.zrEventfulCallAtLast = !0, e._zr.on(a, n, e);
      }), w(Bi, function(a, n) {
        e._messageCenter.on(n, function(i) {
          this.trigger(n, i);
        }, e);
      }), w(["selectchanged"], function(a) {
        e._messageCenter.on(a, function(n) {
          this.trigger(a, n);
        }, e);
      }), _C(this._messageCenter, this, this._api);
    }, t.prototype.isDisposed = function() {
      return this._disposed;
    }, t.prototype.clear = function() {
      if (this._disposed) {
        At(this.id);
        return;
      }
      this.setOption({
        series: []
      }, !0);
    }, t.prototype.dispose = function() {
      if (this._disposed) {
        At(this.id);
        return;
      }
      this._disposed = !0;
      var e = this.getDom();
      e && n_(this.getDom(), Ff, "");
      var a = this, n = a._api, i = a._model;
      w(a._componentsViews, function(o) {
        o.dispose(i, n);
      }), w(a._chartsViews, function(o) {
        o.dispose(i, n);
      }), a._zr.dispose(), a._dom = a._model = a._chartsMap = a._componentsMap = a._chartsViews = a._componentsViews = a._scheduler = a._api = a._zr = a._throttledZrFlush = a._theme = a._coordSysMgr = a._messageCenter = null, delete zi[a.id];
    }, t.prototype.resize = function(e) {
      if (this[ct]) {
        Qe.env.NODE_ENV !== "production" && ot("`resize` should not be called during main process.");
        return;
      }
      if (this._disposed) {
        At(this.id);
        return;
      }
      this._zr.resize(e);
      var a = this._model;
      if (this._loadingFX && this._loadingFX.resize(), !!a) {
        var n = a.resetOption("media"), i = e && e.silent;
        this[bt] && (i == null && (i = this[bt].silent), n = !0, this[bt] = null), this[ct] = !0;
        try {
          n && en(this), kr.update.call(this, {
            type: "resize",
            animation: z({
              // Disable animation
              duration: 0
            }, e && e.animation)
          });
        } catch (o) {
          throw this[ct] = !1, o;
        }
        this[ct] = !1, li.call(this, i), ui.call(this, i);
      }
    }, t.prototype.showLoading = function(e, a) {
      if (this._disposed) {
        At(this.id);
        return;
      }
      if (J(e) && (a = e, e = ""), e = e || "default", this.hideLoading(), !pv[e]) {
        Qe.env.NODE_ENV !== "production" && Ve("Loading effects " + e + " not exists.");
        return;
      }
      var n = pv[e](this._api, a), i = this._zr;
      this._loadingFX = n, i.add(n);
    }, t.prototype.hideLoading = function() {
      if (this._disposed) {
        At(this.id);
        return;
      }
      this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null;
    }, t.prototype.makeActionFromEvent = function(e) {
      var a = z({}, e);
      return a.type = Bi[e.type], a;
    }, t.prototype.dispatchAction = function(e, a) {
      if (this._disposed) {
        At(this.id);
        return;
      }
      if (J(a) || (a = {
        silent: !!a
      }), !!Ks[e.type] && this._model) {
        if (this[ct]) {
          this._pendingActions.push(e);
          return;
        }
        var n = a.silent;
        bu.call(this, e, n);
        var i = a.flush;
        i ? this._zr.flush() : i !== !1 && Oe.browser.weChat && this._throttledZrFlush(), li.call(this, n), ui.call(this, n);
      }
    }, t.prototype.updateLabelLayout = function() {
      Xt.trigger("series:layoutlabels", this._model, this._api, {
        // Not adding series labels.
        // TODO
        updatedSeries: []
      });
    }, t.prototype.appendData = function(e) {
      if (this._disposed) {
        At(this.id);
        return;
      }
      var a = e.seriesIndex, n = this.getModel(), i = n.getSeriesByIndex(a);
      Qe.env.NODE_ENV !== "production" && K(e.data && i), i.appendData(e), this._scheduler.unfinished = !0, this.getZr().wakeUp();
    }, t.internalField = function() {
      en = function(v) {
        var f = v._scheduler;
        f.restorePipelines(v._model), f.prepareStageTasks(), _u(v, !0), _u(v, !1), f.plan();
      }, _u = function(v, f) {
        for (var h = v._model, p = v._scheduler, d = f ? v._componentsViews : v._chartsViews, g = f ? v._componentsMap : v._chartsMap, y = v._zr, m = v._api, _ = 0; _ < d.length; _++)
          d[_].__alive = !1;
        f ? h.eachComponent(function(b, D) {
          b !== "series" && S(D);
        }) : h.eachSeries(S);
        function S(b) {
          var D = b.__requireNewView;
          b.__requireNewView = !1;
          var A = "_ec_" + b.id + "_" + b.type, T = !D && g[A];
          if (!T) {
            var C = sr(b.type), M = f ? Re.getClass(C.main, C.sub) : (
              // FIXME:TS
              // (ChartView as ChartViewConstructor).getClass('series', classType.sub)
              // For backward compat, still support a chart type declared as only subType
              // like "liquidfill", but recommend "series.liquidfill"
              // But need a base class to make a type series.
              De.getClass(C.sub)
            );
            Qe.env.NODE_ENV !== "production" && K(M, C.sub + " does not exist."), T = new M(), T.init(h, m), g[A] = T, d.push(T), y.add(T.group);
          }
          b.__viewId = T.__id = A, T.__alive = !0, T.__model = b, T.group.__ecComponentInfo = {
            mainType: b.mainType,
            index: b.componentIndex
          }, !f && p.prepareView(T, b, h, m);
        }
        for (var _ = 0; _ < d.length; ) {
          var x = d[_];
          x.__alive ? _++ : (!f && x.renderTask.dispose(), y.remove(x.group), x.dispose(h, m), d.splice(_, 1), g[x.__id] === x && delete g[x.__id], x.__id = x.group.__ecComponentInfo = null);
        }
      }, Vo = function(v, f, h, p, d) {
        var g = v._model;
        if (g.setUpdatePayload(h), !p) {
          w([].concat(v._componentsViews).concat(v._chartsViews), x);
          return;
        }
        var y = {};
        y[p + "Id"] = h[p + "Id"], y[p + "Index"] = h[p + "Index"], y[p + "Name"] = h[p + "Name"];
        var m = {
          mainType: p,
          query: y
        };
        d && (m.subType = d);
        var _ = h.excludeSeriesId, S;
        _ != null && (S = Z(), w(we(_), function(b) {
          var D = Ke(b, null);
          D != null && S.set(D, !0);
        })), g && g.eachComponent(m, function(b) {
          var D = S && S.get(b.id) != null;
          if (!D)
            if (mp(h))
              if (b instanceof Le)
                h.type === Ma && !h.notBlur && !b.get(["emphasis", "disabled"]) && WD(b, h, v._api);
              else {
                var A = mf(b.mainType, b.componentIndex, h.name, v._api), T = A.focusSelf, C = A.dispatchers;
                h.type === Ma && T && !h.notBlur && qc(b.mainType, b.componentIndex, v._api), C && w(C, function(M) {
                  h.type === Ma ? Ar(M) : Tr(M);
                });
              }
            else Jc(h) && b instanceof Le && (YD(b, h, v._api), gp(b), Lt(v));
        }, v), g && g.eachComponent(m, function(b) {
          var D = S && S.get(b.id) != null;
          D || x(v[p === "series" ? "_chartsMap" : "_componentsMap"][b.__viewId]);
        }, v);
        function x(b) {
          b && b.__alive && b[f] && b[f](b.__model, g, v._api, h);
        }
      }, kr = {
        prepareAndUpdate: function(v) {
          en(this), kr.update.call(this, v, {
            // Needs to mark option changed if newOption is given.
            // It's from MagicType.
            // TODO If use a separate flag optionChanged in payload?
            optionChanged: v.newOption != null
          });
        },
        update: function(v, f) {
          var h = this._model, p = this._api, d = this._zr, g = this._coordSysMgr, y = this._scheduler;
          if (h) {
            h.setUpdatePayload(v), y.restoreData(h, v), y.performSeriesTasks(h), g.create(h, p), y.performDataProcessorTasks(h, v), xu(this, h), g.update(h, p), e(h), y.performVisualTasks(h, v), wu(this, h, p, v, f);
            var m = h.get("backgroundColor") || "transparent", _ = h.get("darkMode");
            d.setBackgroundColor(m), _ != null && _ !== "auto" && d.setDarkMode(_), Xt.trigger("afterupdate", h, p);
          }
        },
        updateTransform: function(v) {
          var f = this, h = this._model, p = this._api;
          if (h) {
            h.setUpdatePayload(v);
            var d = [];
            h.eachComponent(function(y, m) {
              if (y !== "series") {
                var _ = f.getViewOfComponentModel(m);
                if (_ && _.__alive)
                  if (_.updateTransform) {
                    var S = _.updateTransform(m, h, p, v);
                    S && S.update && d.push(_);
                  } else
                    d.push(_);
              }
            });
            var g = Z();
            h.eachSeries(function(y) {
              var m = f._chartsMap[y.__viewId];
              if (m.updateTransform) {
                var _ = m.updateTransform(y, h, p, v);
                _ && _.update && g.set(y.uid, 1);
              } else
                g.set(y.uid, 1);
            }), e(h), this._scheduler.performVisualTasks(h, v, {
              setDirty: !0,
              dirtyMap: g
            }), Bo(this, h, p, v, {}, g), Xt.trigger("afterupdate", h, p);
          }
        },
        updateView: function(v) {
          var f = this._model;
          f && (f.setUpdatePayload(v), De.markUpdateMethod(v, "updateView"), e(f), this._scheduler.performVisualTasks(f, v, {
            setDirty: !0
          }), wu(this, f, this._api, v, {}), Xt.trigger("afterupdate", f, this._api));
        },
        updateVisual: function(v) {
          var f = this, h = this._model;
          h && (h.setUpdatePayload(v), h.eachSeries(function(p) {
            p.getData().clearAllVisual();
          }), De.markUpdateMethod(v, "updateVisual"), e(h), this._scheduler.performVisualTasks(h, v, {
            visualType: "visual",
            setDirty: !0
          }), h.eachComponent(function(p, d) {
            if (p !== "series") {
              var g = f.getViewOfComponentModel(d);
              g && g.__alive && g.updateVisual(d, h, f._api, v);
            }
          }), h.eachSeries(function(p) {
            var d = f._chartsMap[p.__viewId];
            d.updateVisual(p, h, f._api, v);
          }), Xt.trigger("afterupdate", h, this._api));
        },
        updateLayout: function(v) {
          kr.update.call(this, v);
        }
      }, Su = function(v, f, h, p) {
        if (v._disposed) {
          At(v.id);
          return;
        }
        for (var d = v._model, g = v._coordSysMgr.getCoordinateSystems(), y, m = Ni(d, h), _ = 0; _ < g.length; _++) {
          var S = g[_];
          if (S[f] && (y = S[f](d, m, p)) != null)
            return y;
        }
        Qe.env.NODE_ENV !== "production" && Ve("No coordinate system that supports " + f + " found by the given finder.");
      }, xu = function(v, f) {
        var h = v._chartsMap, p = v._scheduler;
        f.eachSeries(function(d) {
          p.updateStreamModes(d, h[d.__viewId]);
        });
      }, bu = function(v, f) {
        var h = this, p = this.getModel(), d = v.type, g = v.escapeConnect, y = Ks[d], m = y.actionInfo, _ = (m.update || "update").split(":"), S = _.pop(), x = _[0] != null && sr(_[0]);
        this[ct] = !0;
        var b = [v], D = !1;
        v.batch && (D = !0, b = G(v.batch, function(P) {
          return P = ee(z({}, P), v), P.batch = null, P;
        }));
        var A = [], T, C = Jc(v), M = mp(v);
        if (M && g_(this._api), w(b, function(P) {
          if (T = y.action(P, h._model, h._api), T = T || z({}, P), T.type = m.event || T.type, A.push(T), M) {
            var E = vf(v), N = E.queryOptionMap, O = E.mainTypeSpecified, k = O ? N.keys()[0] : "series";
            Vo(h, S, P, k), Lt(h);
          } else C ? (Vo(h, S, P, "series"), Lt(h)) : x && Vo(h, S, P, x.main, x.sub);
        }), S !== "none" && !M && !C && !x)
          try {
            this[bt] ? (en(this), kr.update.call(this, v), this[bt] = null) : kr[S].call(this, v);
          } catch (P) {
            throw this[ct] = !1, P;
          }
        if (D ? T = {
          type: m.event || d,
          escapeConnect: g,
          batch: A
        } : T = A[0], this[ct] = !1, !f) {
          var I = this._messageCenter;
          if (I.trigger(T.type, T), C) {
            var L = {
              type: "selectchanged",
              escapeConnect: g,
              selected: ZD(p),
              isFromClick: v.isFromClick || !1,
              fromAction: v.type,
              fromActionPayload: v
            };
            I.trigger(L.type, L);
          }
        }
      }, li = function(v) {
        for (var f = this._pendingActions; f.length; ) {
          var h = f.shift();
          bu.call(this, h, v);
        }
      }, ui = function(v) {
        !v && this.trigger("updated");
      }, md = function(v, f) {
        v.on("rendered", function(h) {
          f.trigger("rendered", h), // Although zr is dirty if initial animation is not finished
          // and this checking is called on frame, we also check
          // animation finished for robustness.
          v.animation.isFinished() && !f[bt] && !f._scheduler.unfinished && !f._pendingActions.length && f.trigger("finished");
        });
      }, _d = function(v, f) {
        v.on("mouseover", function(h) {
          var p = h.target, d = Ta(p, Jr);
          d && (UD(d, h, f._api), Lt(f));
        }).on("mouseout", function(h) {
          var p = h.target, d = Ta(p, Jr);
          d && ($D(d, h, f._api), Lt(f));
        }).on("click", function(h) {
          var p = h.target, d = Ta(p, function(m) {
            return j(m).dataIndex != null;
          }, !0);
          if (d) {
            var g = d.selected ? "unselect" : "select", y = j(d);
            f._api.dispatchAction({
              type: g,
              dataType: y.dataType,
              dataIndexInside: y.dataIndex,
              seriesIndex: y.seriesIndex,
              isFromClick: !0
            });
          }
        });
      };
      function e(v) {
        v.clearColorPalette(), v.eachSeries(function(f) {
          f.clearColorPalette();
        });
      }
      function a(v) {
        var f = [], h = [], p = !1;
        if (v.eachComponent(function(m, _) {
          var S = _.get("zlevel") || 0, x = _.get("z") || 0, b = _.getZLevelKey();
          p = p || !!b, (m === "series" ? h : f).push({
            zlevel: S,
            z: x,
            idx: _.componentIndex,
            type: m,
            key: b
          });
        }), p) {
          var d = f.concat(h), g, y;
          jl(d, function(m, _) {
            return m.zlevel === _.zlevel ? m.z - _.z : m.zlevel - _.zlevel;
          }), w(d, function(m) {
            var _ = v.getComponent(m.type, m.idx), S = m.zlevel, x = m.key;
            g != null && (S = Math.max(g, S)), x ? (S === g && x !== y && S++, y = x) : y && (S === g && S++, y = ""), g = S, _.setZLevel(S);
          });
        }
      }
      wu = function(v, f, h, p, d) {
        a(f), Sd(v, f, h, p, d), w(v._chartsViews, function(g) {
          g.__alive = !1;
        }), Bo(v, f, h, p, d), w(v._chartsViews, function(g) {
          g.__alive || g.remove(f, h);
        });
      }, Sd = function(v, f, h, p, d, g) {
        w(g || v._componentsViews, function(y) {
          var m = y.__model;
          u(m, y), y.render(m, f, h, p), s(m, y), c(m, y);
        });
      }, Bo = function(v, f, h, p, d, g) {
        var y = v._scheduler;
        d = z(d || {}, {
          updatedSeries: f.getSeries()
        }), Xt.trigger("series:beforeupdate", f, h, d);
        var m = !1;
        f.eachSeries(function(_) {
          var S = v._chartsMap[_.__viewId];
          S.__alive = !0;
          var x = S.renderTask;
          y.updatePayload(x, p), u(_, S), g && g.get(_.uid) && x.dirty(), x.perform(y.getPerformArgs(x)) && (m = !0), S.group.silent = !!_.get("silent"), o(_, S), gp(_);
        }), y.unfinished = m || y.unfinished, Xt.trigger("series:layoutlabels", f, h, d), Xt.trigger("series:transition", f, h, d), f.eachSeries(function(_) {
          var S = v._chartsMap[_.__viewId];
          s(_, S), c(_, S);
        }), i(v, f), Xt.trigger("series:afterupdate", f, h, d);
      }, Lt = function(v) {
        v[yu] = !0, v.getZr().wakeUp();
      }, bd = function(v) {
        v[yu] && (v.getZr().storage.traverse(function(f) {
          mn(f) || n(f);
        }), v[yu] = !1);
      };
      function n(v) {
        for (var f = [], h = v.currentStates, p = 0; p < h.length; p++) {
          var d = h[p];
          d === "emphasis" || d === "blur" || d === "select" || f.push(d);
        }
        v.selected && v.states.select && f.push("select"), v.hoverState === Dl && v.states.emphasis ? f.push("emphasis") : v.hoverState === ho && v.states.blur && f.push("blur"), v.useStates(f);
      }
      function i(v, f) {
        var h = v._zr, p = h.storage, d = 0;
        p.traverse(function(g) {
          g.isGroup || d++;
        }), d > f.get("hoverLayerThreshold") && !Oe.node && !Oe.worker && f.eachSeries(function(g) {
          if (!g.preventUsingHoverLayer) {
            var y = v._chartsMap[g.__viewId];
            y.__alive && y.eachRendered(function(m) {
              m.states.emphasis && (m.states.emphasis.hoverLayer = !0);
            });
          }
        });
      }
      function o(v, f) {
        var h = v.get("blendMode") || null;
        f.eachRendered(function(p) {
          p.isGroup || (p.style.blend = h);
        });
      }
      function s(v, f) {
        if (!v.preventAutoZ) {
          var h = v.get("z") || 0, p = v.get("zlevel") || 0;
          f.eachRendered(function(d) {
            return l(d, h, p, -1 / 0), !0;
          });
        }
      }
      function l(v, f, h, p) {
        var d = v.getTextContent(), g = v.getTextGuideLine(), y = v.isGroup;
        if (y)
          for (var m = v.childrenRef(), _ = 0; _ < m.length; _++)
            p = Math.max(l(m[_], f, h, p), p);
        else
          v.z = f, v.zlevel = h, p = Math.max(v.z2, p);
        if (d && (d.z = f, d.zlevel = h, isFinite(p) && (d.z2 = p + 2)), g) {
          var S = v.textGuideLineConfig;
          g.z = f, g.zlevel = h, isFinite(p) && (g.z2 = p + (S && S.showAbove ? 1 : -1));
        }
        return p;
      }
      function u(v, f) {
        f.eachRendered(function(h) {
          if (!mn(h)) {
            var p = h.getTextContent(), d = h.getTextGuideLine();
            h.stateTransition && (h.stateTransition = null), p && p.stateTransition && (p.stateTransition = null), d && d.stateTransition && (d.stateTransition = null), h.hasState() ? (h.prevStates = h.currentStates, h.clearStates()) : h.prevStates && (h.prevStates = null);
          }
        });
      }
      function c(v, f) {
        var h = v.getModel("stateAnimation"), p = v.isAnimationEnabled(), d = h.get("duration"), g = d > 0 ? {
          duration: d,
          delay: h.get("delay"),
          easing: h.get("easing")
          // additive: stateAnimationModel.get('additive')
        } : null;
        f.eachRendered(function(y) {
          if (y.states && y.states.emphasis) {
            if (mn(y))
              return;
            if (y instanceof Ee && JD(y), y.__dirty) {
              var m = y.prevStates;
              m && y.useStates(m);
            }
            if (p) {
              y.stateTransition = g;
              var _ = y.getTextContent(), S = y.getTextGuideLine();
              _ && (_.stateTransition = g), S && (S.stateTransition = g);
            }
            y.__dirty && n(y);
          }
        });
      }
      xd = function(v) {
        return new /** @class */
        (function(f) {
          R(h, f);
          function h() {
            return f !== null && f.apply(this, arguments) || this;
          }
          return h.prototype.getCoordinateSystems = function() {
            return v._coordSysMgr.getCoordinateSystems();
          }, h.prototype.getComponentByElement = function(p) {
            for (; p; ) {
              var d = p.__ecComponentInfo;
              if (d != null)
                return v._model.getComponent(d.mainType, d.index);
              p = p.parent;
            }
          }, h.prototype.enterEmphasis = function(p, d) {
            Ar(p, d), Lt(v);
          }, h.prototype.leaveEmphasis = function(p, d) {
            Tr(p, d), Lt(v);
          }, h.prototype.enterBlur = function(p) {
            f_(p), Lt(v);
          }, h.prototype.leaveBlur = function(p) {
            yf(p), Lt(v);
          }, h.prototype.enterSelect = function(p) {
            h_(p), Lt(v);
          }, h.prototype.leaveSelect = function(p) {
            p_(p), Lt(v);
          }, h.prototype.getModel = function() {
            return v.getModel();
          }, h.prototype.getViewOfComponentModel = function(p) {
            return v.getViewOfComponentModel(p);
          }, h.prototype.getViewOfSeriesModel = function(p) {
            return v.getViewOfSeriesModel(p);
          }, h;
        }(q_))(v);
      }, US = function(v) {
        function f(h, p) {
          for (var d = 0; d < h.length; d++) {
            var g = h[d];
            g[mu] = p;
          }
        }
        w(Bi, function(h, p) {
          v._messageCenter.on(p, function(d) {
            if (wd[v.group] && v[mu] !== yd) {
              if (d && d.escapeConnect)
                return;
              var g = v.makeActionFromEvent(d), y = [];
              w(zi, function(m) {
                m !== v && m.group === v.group && y.push(m);
              }), f(y, yd), w(y, function(m) {
                m[mu] !== YC && m.dispatchAction(g);
              }), f(y, ZC);
            }
          });
        });
      };
    }(), t;
  }(Bn)
), Gf = $S.prototype;
Gf.on = zS("on");
Gf.off = zS("off");
Gf.one = function(r, t, e) {
  var a = this;
  Qt("ECharts#one is deprecated.");
  function n() {
    for (var i = [], o = 0; o < arguments.length; o++)
      i[o] = arguments[o];
    t && t.apply && t.apply(this, i), a.off(r, n);
  }
  this.on.call(this, r, n, e);
};
var XC = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"];
function At(r) {
  Qe.env.NODE_ENV !== "production" && Ve("Instance " + r + " has been disposed");
}
var Ks = {}, Bi = {}, fv = [], hv = [], qs = [], YS = {}, pv = {}, zi = {}, wd = {}, KC = +/* @__PURE__ */ new Date() - 0, Ff = "_echarts_instance_";
function bF(r, t, e) {
  {
    if (Qe.env.NODE_ENV !== "production" && !r)
      throw new Error("Initialize failed: invalid dom.");
    var a = qC(r);
    if (a)
      return Qe.env.NODE_ENV !== "production" && Ve("There is a chart instance already initialized on the dom."), a;
    Qe.env.NODE_ENV !== "production" && Os(r) && r.nodeName.toUpperCase() !== "CANVAS" && (!r.clientWidth && !e || !r.clientHeight && !e) && Ve("Can't get DOM width or height. Please check dom.clientWidth and dom.clientHeight. They should not be 0.For example, you may need to call this in the callback of window.onload.");
  }
  var n = new $S(r, t, e);
  return n.id = "ec_" + KC++, zi[n.id] = n, n_(r, Ff, n.id), US(n), Xt.trigger("afterinit", n), n;
}
function qC(r) {
  return zi[wD(r, Ff)];
}
function ZS(r, t) {
  YS[r] = t;
}
function XS(r) {
  fe(hv, r) < 0 && hv.push(r);
}
function KS(r, t) {
  Wf(fv, r, t, BC);
}
function jC(r) {
  Hf("afterinit", r);
}
function JC(r) {
  Hf("afterupdate", r);
}
function Hf(r, t) {
  Xt.on(r, t);
}
function hr(r, t, e) {
  X(t) && (e = t, t = "");
  var a = J(r) ? r.type : [r, r = {
    event: t
  }][0];
  r.event = (r.event || a).toLowerCase(), t = r.event, !Bi[t] && (K(gd.test(a) && gd.test(t)), Ks[a] || (Ks[a] = {
    action: e,
    actionInfo: r
  }), Bi[t] = a);
}
function QC(r, t) {
  Kn.register(r, t);
}
function eM(r, t) {
  Wf(qs, r, t, OS, "layout");
}
function Ya(r, t) {
  Wf(qs, r, t, VS, "visual");
}
var Dd = [];
function Wf(r, t, e, a, n) {
  if ((X(t) || J(t)) && (e = t, t = a), Qe.env.NODE_ENV !== "production") {
    if (isNaN(t) || t == null)
      throw new Error("Illegal priority");
    w(r, function(o) {
      K(o.__raw !== e);
    });
  }
  if (!(fe(Dd, e) >= 0)) {
    Dd.push(e);
    var i = DS.wrapStageHandler(e, n);
    i.__prio = t, i.__raw = e, r.push(i);
  }
}
function qS(r, t) {
  pv[r] = t;
}
function tM(r, t, e) {
  var a = NC("registerMap");
  a && a(r, t, e);
}
var rM = IT;
Ya(zf, rC);
Ya(Bl, aC);
Ya(Bl, nC);
Ya(zf, yC);
Ya(Bl, mC);
Ya(BS, EC);
XS(J_);
KS(OC, sT);
qS("default", iC);
hr({
  type: Ma,
  event: Ma,
  update: Ma
}, _t);
hr({
  type: gs,
  event: gs,
  update: gs
}, _t);
hr({
  type: Ri,
  event: Ri,
  update: Ri
}, _t);
hr({
  type: ys,
  event: ys,
  update: ys
}, _t);
hr({
  type: ki,
  event: ki,
  update: ki
}, _t);
ZS("light", dC);
ZS("dark", MS);
var Ad = [], aM = {
  registerPreprocessor: XS,
  registerProcessor: KS,
  registerPostInit: jC,
  registerPostUpdate: JC,
  registerUpdateLifecycle: Hf,
  registerAction: hr,
  registerCoordinateSystem: QC,
  registerLayout: eM,
  registerVisual: Ya,
  registerTransform: rM,
  registerLoading: qS,
  registerMap: tM,
  registerImpl: PC,
  PRIORITY: $C,
  ComponentModel: se,
  ComponentView: Re,
  SeriesModel: Le,
  ChartView: De,
  // TODO Use ComponentModel and SeriesModel instead of Constructor
  registerComponentModel: function(r) {
    se.registerClass(r);
  },
  registerComponentView: function(r) {
    Re.registerClass(r);
  },
  registerSeriesModel: function(r) {
    Le.registerClass(r);
  },
  registerChartView: function(r) {
    De.registerClass(r);
  },
  registerSubTypeDefaulter: function(r, t) {
    se.registerSubTypeDefaulter(r, t);
  },
  registerPainter: function(r, t) {
    Tw(r, t);
  }
};
function oe(r) {
  if (B(r)) {
    w(r, function(t) {
      oe(t);
    });
    return;
  }
  fe(Ad, r) >= 0 || (Ad.push(r), X(r) && (r = {
    install: r
  }), r.install(aM));
}
function ci(r) {
  return r == null ? 0 : r.length || 1;
}
function Td(r) {
  return r;
}
var Cr = (
  /** @class */
  function() {
    function r(t, e, a, n, i, o) {
      this._old = t, this._new = e, this._oldKeyGetter = a || Td, this._newKeyGetter = n || Td, this.context = i, this._diffModeMultiple = o === "multiple";
    }
    return r.prototype.add = function(t) {
      return this._add = t, this;
    }, r.prototype.update = function(t) {
      return this._update = t, this;
    }, r.prototype.updateManyToOne = function(t) {
      return this._updateManyToOne = t, this;
    }, r.prototype.updateOneToMany = function(t) {
      return this._updateOneToMany = t, this;
    }, r.prototype.updateManyToMany = function(t) {
      return this._updateManyToMany = t, this;
    }, r.prototype.remove = function(t) {
      return this._remove = t, this;
    }, r.prototype.execute = function() {
      this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]();
    }, r.prototype._executeOneToOne = function() {
      var t = this._old, e = this._new, a = {}, n = new Array(t.length), i = new Array(e.length);
      this._initIndexMap(t, null, n, "_oldKeyGetter"), this._initIndexMap(e, a, i, "_newKeyGetter");
      for (var o = 0; o < t.length; o++) {
        var s = n[o], l = a[s], u = ci(l);
        if (u > 1) {
          var c = l.shift();
          l.length === 1 && (a[s] = l[0]), this._update && this._update(c, o);
        } else u === 1 ? (a[s] = null, this._update && this._update(l, o)) : this._remove && this._remove(o);
      }
      this._performRestAdd(i, a);
    }, r.prototype._executeMultiple = function() {
      var t = this._old, e = this._new, a = {}, n = {}, i = [], o = [];
      this._initIndexMap(t, a, i, "_oldKeyGetter"), this._initIndexMap(e, n, o, "_newKeyGetter");
      for (var s = 0; s < i.length; s++) {
        var l = i[s], u = a[l], c = n[l], v = ci(u), f = ci(c);
        if (v > 1 && f === 1)
          this._updateManyToOne && this._updateManyToOne(c, u), n[l] = null;
        else if (v === 1 && f > 1)
          this._updateOneToMany && this._updateOneToMany(c, u), n[l] = null;
        else if (v === 1 && f === 1)
          this._update && this._update(c, u), n[l] = null;
        else if (v > 1 && f > 1)
          this._updateManyToMany && this._updateManyToMany(c, u), n[l] = null;
        else if (v > 1)
          for (var h = 0; h < v; h++)
            this._remove && this._remove(u[h]);
        else
          this._remove && this._remove(u);
      }
      this._performRestAdd(o, n);
    }, r.prototype._performRestAdd = function(t, e) {
      for (var a = 0; a < t.length; a++) {
        var n = t[a], i = e[n], o = ci(i);
        if (o > 1)
          for (var s = 0; s < o; s++)
            this._add && this._add(i[s]);
        else o === 1 && this._add && this._add(i);
        e[n] = null;
      }
    }, r.prototype._initIndexMap = function(t, e, a, n) {
      for (var i = this._diffModeMultiple, o = 0; o < t.length; o++) {
        var s = "_ec_" + this[n](t[o], o);
        if (i || (a[o] = s), !!e) {
          var l = e[s], u = ci(l);
          u === 0 ? (e[s] = o, i && a.push(s)) : u === 1 ? e[s] = [l, o] : l.push(o);
        }
      }
    }, r;
  }()
), nM = { env: {} }, iM = (
  /** @class */
  function() {
    function r(t, e) {
      this._encode = t, this._schema = e;
    }
    return r.prototype.get = function() {
      return {
        // Do not generate full dimension name until fist used.
        fullDimensions: this._getFullDimensionNames(),
        encode: this._encode
      };
    }, r.prototype._getFullDimensionNames = function() {
      return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames;
    }, r;
  }()
);
function oM(r, t) {
  var e = {}, a = e.encode = {}, n = Z(), i = [], o = [], s = {};
  w(r.dimensions, function(f) {
    var h = r.getDimensionInfo(f), p = h.coordDim;
    if (p) {
      nM.env.NODE_ENV !== "production" && K(av.get(p) == null);
      var d = h.coordDimIndex;
      Du(a, p)[d] = f, h.isExtraCoord || (n.set(p, 1), sM(h.type) && (i[0] = f), Du(s, p)[d] = r.getDimensionIndex(h.name)), h.defaultTooltip && o.push(f);
    }
    av.each(function(g, y) {
      var m = Du(a, y), _ = h.otherDims[y];
      _ != null && _ !== !1 && (m[_] = h.name);
    });
  });
  var l = [], u = {};
  n.each(function(f, h) {
    var p = a[h];
    u[h] = p[0], l = l.concat(p);
  }), e.dataDimsOnCoord = l, e.dataDimIndicesOnCoord = G(l, function(f) {
    return r.getDimensionInfo(f).storeDimIndex;
  }), e.encodeFirstDimNotExtra = u;
  var c = a.label;
  c && c.length && (i = c.slice());
  var v = a.tooltip;
  return v && v.length ? o = v.slice() : o.length || (o = i.slice()), a.defaultedLabel = i, a.defaultedTooltip = o, e.userOutput = new iM(s, t), e;
}
function Du(r, t) {
  return r.hasOwnProperty(t) || (r[t] = []), r[t];
}
function js(r) {
  return r === "category" ? "ordinal" : r === "time" ? "time" : "float";
}
function sM(r) {
  return !(r === "ordinal" || r === "time");
}
var bs = (
  /** @class */
  /* @__PURE__ */ function() {
    function r(t) {
      this.otherDims = {}, t != null && z(this, t);
    }
    return r;
  }()
), lM = ue(), uM = {
  float: "f",
  int: "i",
  ordinal: "o",
  number: "n",
  time: "t"
}, jS = (
  /** @class */
  function() {
    function r(t) {
      this.dimensions = t.dimensions, this._dimOmitted = t.dimensionOmitted, this.source = t.source, this._fullDimCount = t.fullDimensionCount, this._updateDimOmitted(t.dimensionOmitted);
    }
    return r.prototype.isDimensionOmitted = function() {
      return this._dimOmitted;
    }, r.prototype._updateDimOmitted = function(t) {
      this._dimOmitted = t, t && (this._dimNameMap || (this._dimNameMap = ex(this.source)));
    }, r.prototype.getSourceDimensionIndex = function(t) {
      return ce(this._dimNameMap.get(t), -1);
    }, r.prototype.getSourceDimension = function(t) {
      var e = this.source.dimensionsDefine;
      if (e)
        return e[t];
    }, r.prototype.makeStoreSchema = function() {
      for (var t = this._fullDimCount, e = eS(this.source), a = !tx(t), n = "", i = [], o = 0, s = 0; o < t; o++) {
        var l = void 0, u = void 0, c = void 0, v = this.dimensions[s];
        if (v && v.storeDimIndex === o)
          l = e ? v.name : null, u = v.type, c = v.ordinalMeta, s++;
        else {
          var f = this.getSourceDimension(o);
          f && (l = e ? f.name : null, u = f.type);
        }
        i.push({
          property: l,
          type: u,
          ordinalMeta: c
        }), e && l != null && (!v || !v.isCalculationCoord) && (n += a ? l.replace(/\`/g, "`1").replace(/\$/g, "`2") : l), n += "$", n += uM[u] || "f", c && (n += c.uid), n += "$";
      }
      var h = this.source, p = [h.seriesLayoutBy, h.startIndex, n].join("$$");
      return {
        dimensions: i,
        hash: p
      };
    }, r.prototype.makeOutputDimensionNames = function() {
      for (var t = [], e = 0, a = 0; e < this._fullDimCount; e++) {
        var n = void 0, i = this.dimensions[a];
        if (i && i.storeDimIndex === e)
          i.isCalculationCoord || (n = i.name), a++;
        else {
          var o = this.getSourceDimension(e);
          o && (n = o.name);
        }
        t.push(n);
      }
      return t;
    }, r.prototype.appendCalculationDimension = function(t) {
      this.dimensions.push(t), t.isCalculationCoord = !0, this._fullDimCount++, this._updateDimOmitted(!0);
    }, r;
  }()
);
function JS(r) {
  return r instanceof jS;
}
function QS(r) {
  for (var t = Z(), e = 0; e < (r || []).length; e++) {
    var a = r[e], n = J(a) ? a.name : a;
    n != null && t.get(n) == null && t.set(n, e);
  }
  return t;
}
function ex(r) {
  var t = lM(r);
  return t.dimNameMap || (t.dimNameMap = QS(r.dimensionsDefine));
}
function tx(r) {
  return r > 30;
}
var zo = { env: {} }, vi = J, Or = G, cM = typeof Int32Array > "u" ? Array : Int32Array, vM = "e\0\0", Cd = -1, fM = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"], hM = ["_approximateExtent"], Md, Go, fi, tn, Au, Fo, Tu, yt = (
  /** @class */
  function() {
    function r(t, e) {
      this.type = "list", this._dimOmitted = !1, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = !1, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"], this.DOWNSAMPLE_METHODS = ["downSample", "lttbDownSample"];
      var a, n = !1;
      JS(t) ? (a = t.dimensions, this._dimOmitted = t.isDimensionOmitted(), this._schema = t) : (n = !0, a = t), a = a || ["x", "y"];
      for (var i = {}, o = [], s = {}, l = !1, u = {}, c = 0; c < a.length; c++) {
        var v = a[c], f = Y(v) ? new bs({
          name: v
        }) : v instanceof bs ? v : new bs(v), h = f.name;
        f.type = f.type || "float", f.coordDim || (f.coordDim = h, f.coordDimIndex = 0);
        var p = f.otherDims = f.otherDims || {};
        o.push(h), i[h] = f, u[h] != null && (l = !0), f.createInvertedIndices && (s[h] = []), p.itemName === 0 && (this._nameDimIdx = c), p.itemId === 0 && (this._idDimIdx = c), zo.env.NODE_ENV !== "production" && K(n || f.storeDimIndex >= 0), n && (f.storeDimIndex = c);
      }
      if (this.dimensions = o, this._dimInfos = i, this._initGetDimensionInfo(l), this.hostModel = e, this._invertedIndicesMap = s, this._dimOmitted) {
        var d = this._dimIdxToName = Z();
        w(o, function(g) {
          d.set(i[g].storeDimIndex, g);
        });
      }
    }
    return r.prototype.getDimension = function(t) {
      var e = this._recognizeDimIndex(t);
      if (e == null)
        return t;
      if (e = t, !this._dimOmitted)
        return this.dimensions[e];
      var a = this._dimIdxToName.get(e);
      if (a != null)
        return a;
      var n = this._schema.getSourceDimension(e);
      if (n)
        return n.name;
    }, r.prototype.getDimensionIndex = function(t) {
      var e = this._recognizeDimIndex(t);
      if (e != null)
        return e;
      if (t == null)
        return -1;
      var a = this._getDimInfo(t);
      return a ? a.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(t) : -1;
    }, r.prototype._recognizeDimIndex = function(t) {
      if (_e(t) || t != null && !isNaN(t) && !this._getDimInfo(t) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(t) < 0))
        return +t;
    }, r.prototype._getStoreDimIndex = function(t) {
      var e = this.getDimensionIndex(t);
      if (zo.env.NODE_ENV !== "production" && e == null)
        throw new Error("Unknown dimension " + t);
      return e;
    }, r.prototype.getDimensionInfo = function(t) {
      return this._getDimInfo(this.getDimension(t));
    }, r.prototype._initGetDimensionInfo = function(t) {
      var e = this._dimInfos;
      this._getDimInfo = t ? function(a) {
        return e.hasOwnProperty(a) ? e[a] : void 0;
      } : function(a) {
        return e[a];
      };
    }, r.prototype.getDimensionsOnCoord = function() {
      return this._dimSummary.dataDimsOnCoord.slice();
    }, r.prototype.mapDimension = function(t, e) {
      var a = this._dimSummary;
      if (e == null)
        return a.encodeFirstDimNotExtra[t];
      var n = a.encode[t];
      return n ? n[e] : null;
    }, r.prototype.mapDimensionsAll = function(t) {
      var e = this._dimSummary, a = e.encode[t];
      return (a || []).slice();
    }, r.prototype.getStore = function() {
      return this._store;
    }, r.prototype.initData = function(t, e, a) {
      var n = this, i;
      if (t instanceof sv && (i = t), !i) {
        var o = this.dimensions, s = Pf(t) || Vn(t) ? new tS(t, o.length) : t;
        i = new sv();
        var l = Or(o, function(u) {
          return {
            type: n._dimInfos[u].type,
            property: u
          };
        });
        i.initData(s, l, a);
      }
      this._store = i, this._nameList = (e || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, i.count()), this._dimSummary = oM(this, this._schema), this.userOutput = this._dimSummary.userOutput;
    }, r.prototype.appendData = function(t) {
      var e = this._store.appendData(t);
      this._doInit(e[0], e[1]);
    }, r.prototype.appendValues = function(t, e) {
      var a = this._store.appendValues(t, e.length), n = a.start, i = a.end, o = this._shouldMakeIdFromName();
      if (this._updateOrdinalMeta(), e)
        for (var s = n; s < i; s++) {
          var l = s - n;
          this._nameList[s] = e[l], o && Tu(this, s);
        }
    }, r.prototype._updateOrdinalMeta = function() {
      for (var t = this._store, e = this.dimensions, a = 0; a < e.length; a++) {
        var n = this._dimInfos[e[a]];
        n.ordinalMeta && t.collectOrdinalMeta(n.storeDimIndex, n.ordinalMeta);
      }
    }, r.prototype._shouldMakeIdFromName = function() {
      var t = this._store.getProvider();
      return this._idDimIdx == null && t.getSource().sourceFormat !== xr && !t.fillStorage;
    }, r.prototype._doInit = function(t, e) {
      if (!(t >= e)) {
        var a = this._store, n = a.getProvider();
        this._updateOrdinalMeta();
        var i = this._nameList, o = this._idList, s = n.getSource().sourceFormat, l = s === $t;
        if (l && !n.pure)
          for (var u = [], c = t; c < e; c++) {
            var v = n.getItem(c, u);
            if (!this.hasItemOption && cD(v) && (this.hasItemOption = !0), v) {
              var f = v.name;
              i[c] == null && f != null && (i[c] = Ke(f, null));
              var h = v.id;
              o[c] == null && h != null && (o[c] = Ke(h, null));
            }
          }
        if (this._shouldMakeIdFromName())
          for (var c = t; c < e; c++)
            Tu(this, c);
        Md(this);
      }
    }, r.prototype.getApproximateExtent = function(t) {
      return this._approximateExtent[t] || this._store.getDataExtent(this._getStoreDimIndex(t));
    }, r.prototype.setApproximateExtent = function(t, e) {
      e = this.getDimension(e), this._approximateExtent[e] = t.slice();
    }, r.prototype.getCalculationInfo = function(t) {
      return this._calculationInfo[t];
    }, r.prototype.setCalculationInfo = function(t, e) {
      vi(t) ? z(this._calculationInfo, t) : this._calculationInfo[t] = e;
    }, r.prototype.getName = function(t) {
      var e = this.getRawIndex(t), a = this._nameList[e];
      return a == null && this._nameDimIdx != null && (a = fi(this, this._nameDimIdx, e)), a == null && (a = ""), a;
    }, r.prototype._getCategory = function(t, e) {
      var a = this._store.get(t, e), n = this._store.getOrdinalMeta(t);
      return n ? n.categories[a] : a;
    }, r.prototype.getId = function(t) {
      return Go(this, this.getRawIndex(t));
    }, r.prototype.count = function() {
      return this._store.count();
    }, r.prototype.get = function(t, e) {
      var a = this._store, n = this._dimInfos[t];
      if (n)
        return a.get(n.storeDimIndex, e);
    }, r.prototype.getByRawIndex = function(t, e) {
      var a = this._store, n = this._dimInfos[t];
      if (n)
        return a.getByRawIndex(n.storeDimIndex, e);
    }, r.prototype.getIndices = function() {
      return this._store.getIndices();
    }, r.prototype.getDataExtent = function(t) {
      return this._store.getDataExtent(this._getStoreDimIndex(t));
    }, r.prototype.getSum = function(t) {
      return this._store.getSum(this._getStoreDimIndex(t));
    }, r.prototype.getMedian = function(t) {
      return this._store.getMedian(this._getStoreDimIndex(t));
    }, r.prototype.getValues = function(t, e) {
      var a = this, n = this._store;
      return B(t) ? n.getValues(Or(t, function(i) {
        return a._getStoreDimIndex(i);
      }), e) : n.getValues(t);
    }, r.prototype.hasValue = function(t) {
      for (var e = this._dimSummary.dataDimIndicesOnCoord, a = 0, n = e.length; a < n; a++)
        if (isNaN(this._store.get(e[a], t)))
          return !1;
      return !0;
    }, r.prototype.indexOfName = function(t) {
      for (var e = 0, a = this._store.count(); e < a; e++)
        if (this.getName(e) === t)
          return e;
      return -1;
    }, r.prototype.getRawIndex = function(t) {
      return this._store.getRawIndex(t);
    }, r.prototype.indexOfRawIndex = function(t) {
      return this._store.indexOfRawIndex(t);
    }, r.prototype.rawIndexOf = function(t, e) {
      var a = t && this._invertedIndicesMap[t];
      if (zo.env.NODE_ENV !== "production" && !a)
        throw new Error("Do not supported yet");
      var n = a[e];
      return n == null || isNaN(n) ? Cd : n;
    }, r.prototype.indicesOfNearest = function(t, e, a) {
      return this._store.indicesOfNearest(this._getStoreDimIndex(t), e, a);
    }, r.prototype.each = function(t, e, a) {
      X(t) && (a = e, e = t, t = []);
      var n = a || this, i = Or(tn(t), this._getStoreDimIndex, this);
      this._store.each(i, n ? U(e, n) : e);
    }, r.prototype.filterSelf = function(t, e, a) {
      X(t) && (a = e, e = t, t = []);
      var n = a || this, i = Or(tn(t), this._getStoreDimIndex, this);
      return this._store = this._store.filter(i, n ? U(e, n) : e), this;
    }, r.prototype.selectRange = function(t) {
      var e = this, a = {}, n = Fe(t);
      return w(n, function(i) {
        var o = e._getStoreDimIndex(i);
        a[o] = t[i];
      }), this._store = this._store.selectRange(a), this;
    }, r.prototype.mapArray = function(t, e, a) {
      X(t) && (a = e, e = t, t = []), a = a || this;
      var n = [];
      return this.each(t, function() {
        n.push(e && e.apply(this, arguments));
      }, a), n;
    }, r.prototype.map = function(t, e, a, n) {
      var i = a || n || this, o = Or(tn(t), this._getStoreDimIndex, this), s = Fo(this);
      return s._store = this._store.map(o, i ? U(e, i) : e), s;
    }, r.prototype.modify = function(t, e, a, n) {
      var i = this, o = a || n || this;
      zo.env.NODE_ENV !== "production" && w(tn(t), function(l) {
        var u = i.getDimensionInfo(l);
        u.isCalculationCoord || console.error("Danger: only stack dimension can be modified");
      });
      var s = Or(tn(t), this._getStoreDimIndex, this);
      this._store.modify(s, o ? U(e, o) : e);
    }, r.prototype.downSample = function(t, e, a, n) {
      var i = Fo(this);
      return i._store = this._store.downSample(this._getStoreDimIndex(t), e, a, n), i;
    }, r.prototype.lttbDownSample = function(t, e) {
      var a = Fo(this);
      return a._store = this._store.lttbDownSample(this._getStoreDimIndex(t), e), a;
    }, r.prototype.getRawDataItem = function(t) {
      return this._store.getRawDataItem(t);
    }, r.prototype.getItemModel = function(t) {
      var e = this.hostModel, a = this.getRawDataItem(t);
      return new me(a, e, e && e.ecModel);
    }, r.prototype.diff = function(t) {
      var e = this;
      return new Cr(t ? t.getStore().getIndices() : [], this.getStore().getIndices(), function(a) {
        return Go(t, a);
      }, function(a) {
        return Go(e, a);
      });
    }, r.prototype.getVisual = function(t) {
      var e = this._visual;
      return e && e[t];
    }, r.prototype.setVisual = function(t, e) {
      this._visual = this._visual || {}, vi(t) ? z(this._visual, t) : this._visual[t] = e;
    }, r.prototype.getItemVisual = function(t, e) {
      var a = this._itemVisuals[t], n = a && a[e];
      return n ?? this.getVisual(e);
    }, r.prototype.hasItemVisual = function() {
      return this._itemVisuals.length > 0;
    }, r.prototype.ensureUniqueItemVisual = function(t, e) {
      var a = this._itemVisuals, n = a[t];
      n || (n = a[t] = {});
      var i = n[e];
      return i == null && (i = this.getVisual(e), B(i) ? i = i.slice() : vi(i) && (i = z({}, i)), n[e] = i), i;
    }, r.prototype.setItemVisual = function(t, e, a) {
      var n = this._itemVisuals[t] || {};
      this._itemVisuals[t] = n, vi(e) ? z(n, e) : n[e] = a;
    }, r.prototype.clearAllVisual = function() {
      this._visual = {}, this._itemVisuals = [];
    }, r.prototype.setLayout = function(t, e) {
      vi(t) ? z(this._layout, t) : this._layout[t] = e;
    }, r.prototype.getLayout = function(t) {
      return this._layout[t];
    }, r.prototype.getItemLayout = function(t) {
      return this._itemLayouts[t];
    }, r.prototype.setItemLayout = function(t, e, a) {
      this._itemLayouts[t] = a ? z(this._itemLayouts[t] || {}, e) : e;
    }, r.prototype.clearItemLayouts = function() {
      this._itemLayouts.length = 0;
    }, r.prototype.setItemGraphicEl = function(t, e) {
      var a = this.hostModel && this.hostModel.seriesIndex;
      Xc(a, this.dataType, t, e), this._graphicEls[t] = e;
    }, r.prototype.getItemGraphicEl = function(t) {
      return this._graphicEls[t];
    }, r.prototype.eachItemGraphicEl = function(t, e) {
      w(this._graphicEls, function(a, n) {
        a && t && t.call(e, a, n);
      });
    }, r.prototype.cloneShallow = function(t) {
      return t || (t = new r(this._schema ? this._schema : Or(this.dimensions, this._getDimInfo, this), this.hostModel)), Au(t, this), t._store = this._store, t;
    }, r.prototype.wrapMethod = function(t, e) {
      var a = this[t];
      X(a) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(t), this[t] = function() {
        var n = a.apply(this, arguments);
        return e.apply(this, [n].concat(Cw(arguments)));
      });
    }, r.internalField = function() {
      Md = function(t) {
        var e = t._invertedIndicesMap;
        w(e, function(a, n) {
          var i = t._dimInfos[n], o = i.ordinalMeta, s = t._store;
          if (o) {
            a = e[n] = new cM(o.categories.length);
            for (var l = 0; l < a.length; l++)
              a[l] = Cd;
            for (var l = 0; l < s.count(); l++)
              a[s.get(i.storeDimIndex, l)] = l;
          }
        });
      }, fi = function(t, e, a) {
        return Ke(t._getCategory(e, a), null);
      }, Go = function(t, e) {
        var a = t._idList[e];
        return a == null && t._idDimIdx != null && (a = fi(t, t._idDimIdx, e)), a == null && (a = vM + e), a;
      }, tn = function(t) {
        return B(t) || (t = t != null ? [t] : []), t;
      }, Fo = function(t) {
        var e = new r(t._schema ? t._schema : Or(t.dimensions, t._getDimInfo, t), t.hostModel);
        return Au(e, t), e;
      }, Au = function(t, e) {
        w(fM.concat(e.__wrappedMethods || []), function(a) {
          e.hasOwnProperty(a) && (t[a] = e[a]);
        }), t.__wrappedMethods = e.__wrappedMethods, w(hM, function(a) {
          t[a] = Q(e[a]);
        }), t._calculationInfo = z({}, e._calculationInfo);
      }, Tu = function(t, e) {
        var a = t._nameList, n = t._idList, i = t._nameDimIdx, o = t._idDimIdx, s = a[e], l = n[e];
        if (s == null && i != null && (a[e] = s = fi(t, i, e)), l == null && o != null && (n[e] = l = fi(t, o, e)), l == null && s != null) {
          var u = t._nameRepeatCount, c = u[s] = (u[s] || 0) + 1;
          l = s, c > 1 && (l += "__ec__" + c), n[e] = l;
        }
      };
    }(), r;
  }()
);
function mo(r, t) {
  Pf(r) || (r = Nf(r)), t = t || {};
  var e = t.coordDimensions || [], a = t.dimensionsDefine || r.dimensionsDefine || [], n = Z(), i = [], o = dM(r, e, a, t.dimensionsCount), s = t.canOmitUnusedDimensions && tx(o), l = a === r.dimensionsDefine, u = l ? ex(r) : QS(a), c = t.encodeDefine;
  !c && t.encodeDefaulter && (c = t.encodeDefaulter(r, o));
  for (var v = Z(c), f = new cS(o), h = 0; h < f.length; h++)
    f[h] = -1;
  function p(T) {
    var C = f[T];
    if (C < 0) {
      var M = a[T], I = J(M) ? M : {
        name: M
      }, L = new bs(), P = I.name;
      P != null && u.get(P) != null && (L.name = L.displayName = P), I.type != null && (L.type = I.type), I.displayName != null && (L.displayName = I.displayName);
      var E = i.length;
      return f[T] = E, L.storeDimIndex = T, i.push(L), L;
    }
    return i[C];
  }
  if (!s)
    for (var h = 0; h < o; h++)
      p(h);
  v.each(function(T, C) {
    var M = we(T).slice();
    if (M.length === 1 && !Y(M[0]) && M[0] < 0) {
      v.set(C, !1);
      return;
    }
    var I = v.set(C, []);
    w(M, function(L, P) {
      var E = Y(L) ? u.get(L) : L;
      E != null && E < o && (I[P] = E, g(p(E), C, P));
    });
  });
  var d = 0;
  w(e, function(T) {
    var C, M, I, L;
    if (Y(T))
      C = T, L = {};
    else {
      L = T, C = L.name;
      var P = L.ordinalMeta;
      L.ordinalMeta = null, L = z({}, L), L.ordinalMeta = P, M = L.dimsDef, I = L.otherDims, L.name = L.coordDim = L.coordDimIndex = L.dimsDef = L.otherDims = null;
    }
    var E = v.get(C);
    if (E !== !1) {
      if (E = we(E), !E.length)
        for (var N = 0; N < (M && M.length || 1); N++) {
          for (; d < o && p(d).coordDim != null; )
            d++;
          d < o && E.push(d++);
        }
      w(E, function(O, k) {
        var V = p(O);
        if (l && L.type != null && (V.type = L.type), g(ee(V, L), C, k), V.name == null && M) {
          var F = M[k];
          !J(F) && (F = {
            name: F
          }), V.name = V.displayName = F.name, V.defaultTooltip = F.defaultTooltip;
        }
        I && ee(V.otherDims, I);
      });
    }
  });
  function g(T, C, M) {
    av.get(C) != null ? T.otherDims[C] = M : (T.coordDim = C, T.coordDimIndex = M, n.set(C, !0));
  }
  var y = t.generateCoord, m = t.generateCoordCount, _ = m != null;
  m = y ? m || 1 : 0;
  var S = y || "value";
  function x(T) {
    T.name == null && (T.name = T.coordDim);
  }
  if (s)
    w(i, function(T) {
      x(T);
    }), i.sort(function(T, C) {
      return T.storeDimIndex - C.storeDimIndex;
    });
  else
    for (var b = 0; b < o; b++) {
      var D = p(b), A = D.coordDim;
      A == null && (D.coordDim = gM(S, n, _), D.coordDimIndex = 0, (!y || m <= 0) && (D.isExtraCoord = !0), m--), x(D), D.type == null && (Z_(r, b) === nt.Must || D.isExtraCoord && (D.otherDims.itemName != null || D.otherDims.seriesName != null)) && (D.type = "ordinal");
    }
  return pM(i), new jS({
    source: r,
    dimensions: i,
    fullDimensionCount: o,
    dimensionOmitted: s
  });
}
function pM(r) {
  for (var t = Z(), e = 0; e < r.length; e++) {
    var a = r[e], n = a.name, i = t.get(n) || 0;
    i > 0 && (a.name = n + (i - 1)), i++, t.set(n, i);
  }
}
function dM(r, t, e, a) {
  var n = Math.max(r.dimensionsDetectedCount || 1, t.length, e.length, a || 0);
  return w(t, function(i) {
    var o;
    J(i) && (o = i.dimsDef) && (n = Math.max(n, o.length));
  }), n;
}
function gM(r, t, e) {
  if (e || t.hasKey(r)) {
    for (var a = 0; t.hasKey(r + a); )
      a++;
    r += a;
  }
  return t.set(r, !0), r;
}
var Cu = { env: {} }, yM = (
  /** @class */
  /* @__PURE__ */ function() {
    function r(t) {
      this.coordSysDims = [], this.axisMap = Z(), this.categoryAxisMap = Z(), this.coordSysName = t;
    }
    return r;
  }()
);
function mM(r) {
  var t = r.get("coordinateSystem"), e = new yM(t), a = _M[t];
  if (a)
    return a(r, e, e.axisMap, e.categoryAxisMap), e;
}
var _M = {
  cartesian2d: function(r, t, e, a) {
    var n = r.getReferringComponents("xAxis", Ye).models[0], i = r.getReferringComponents("yAxis", Ye).models[0];
    if (Cu.env.NODE_ENV !== "production") {
      if (!n)
        throw new Error('xAxis "' + $e(r.get("xAxisIndex"), r.get("xAxisId"), 0) + '" not found');
      if (!i)
        throw new Error('yAxis "' + $e(r.get("xAxisIndex"), r.get("yAxisId"), 0) + '" not found');
    }
    t.coordSysDims = ["x", "y"], e.set("x", n), e.set("y", i), rn(n) && (a.set("x", n), t.firstCategoryDimIndex = 0), rn(i) && (a.set("y", i), t.firstCategoryDimIndex == null && (t.firstCategoryDimIndex = 1));
  },
  singleAxis: function(r, t, e, a) {
    var n = r.getReferringComponents("singleAxis", Ye).models[0];
    if (Cu.env.NODE_ENV !== "production" && !n)
      throw new Error("singleAxis should be specified.");
    t.coordSysDims = ["single"], e.set("single", n), rn(n) && (a.set("single", n), t.firstCategoryDimIndex = 0);
  },
  polar: function(r, t, e, a) {
    var n = r.getReferringComponents("polar", Ye).models[0], i = n.findAxisModel("radiusAxis"), o = n.findAxisModel("angleAxis");
    if (Cu.env.NODE_ENV !== "production") {
      if (!o)
        throw new Error("angleAxis option not found");
      if (!i)
        throw new Error("radiusAxis option not found");
    }
    t.coordSysDims = ["radius", "angle"], e.set("radius", i), e.set("angle", o), rn(i) && (a.set("radius", i), t.firstCategoryDimIndex = 0), rn(o) && (a.set("angle", o), t.firstCategoryDimIndex == null && (t.firstCategoryDimIndex = 1));
  },
  geo: function(r, t, e, a) {
    t.coordSysDims = ["lng", "lat"];
  },
  parallel: function(r, t, e, a) {
    var n = r.ecModel, i = n.getComponent("parallel", r.get("parallelIndex")), o = t.coordSysDims = i.dimensions.slice();
    w(i.parallelAxisIndex, function(s, l) {
      var u = n.getComponent("parallelAxis", s), c = o[l];
      e.set(c, u), rn(u) && (a.set(c, u), t.firstCategoryDimIndex == null && (t.firstCategoryDimIndex = l));
    });
  }
};
function rn(r) {
  return r.get("type") === "category";
}
function SM(r, t, e) {
  e = e || {};
  var a = e.byIndex, n = e.stackedCoordDimension, i, o, s;
  xM(t) ? i = t : (o = t.schema, i = o.dimensions, s = t.store);
  var l = !!(r && r.get("stack")), u, c, v, f;
  if (w(i, function(m, _) {
    Y(m) && (i[_] = m = {
      name: m
    }), l && !m.isExtraCoord && (!a && !u && m.ordinalMeta && (u = m), !c && m.type !== "ordinal" && m.type !== "time" && (!n || n === m.coordDim) && (c = m));
  }), c && !a && !u && (a = !0), c) {
    v = "__\0ecstackresult_" + r.id, f = "__\0ecstackedover_" + r.id, u && (u.createInvertedIndices = !0);
    var h = c.coordDim, p = c.type, d = 0;
    w(i, function(m) {
      m.coordDim === h && d++;
    });
    var g = {
      name: v,
      coordDim: h,
      coordDimIndex: d,
      type: p,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length
    }, y = {
      name: f,
      // This dimension contains stack base (generally, 0), so do not set it as
      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.
      coordDim: f,
      coordDimIndex: d + 1,
      type: p,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length + 1
    };
    o ? (s && (g.storeDimIndex = s.ensureCalculationDimension(f, p), y.storeDimIndex = s.ensureCalculationDimension(v, p)), o.appendCalculationDimension(g), o.appendCalculationDimension(y)) : (i.push(g), i.push(y));
  }
  return {
    stackedDimension: c && c.name,
    stackedByDimension: u && u.name,
    isStackedByIndex: a,
    stackedOverDimension: f,
    stackResultDimension: v
  };
}
function xM(r) {
  return !JS(r.schema);
}
function ta(r, t) {
  return !!t && t === r.getCalculationInfo("stackedDimension");
}
function rx(r, t) {
  return ta(r, t) ? r.getCalculationInfo("stackResultDimension") : t;
}
function bM(r, t) {
  var e = r.get("coordinateSystem"), a = Kn.get(e), n;
  return t && t.coordSysDims && (n = G(t.coordSysDims, function(i) {
    var o = {
      name: i
    }, s = t.axisMap.get(i);
    if (s) {
      var l = s.get("type");
      o.type = js(l);
    }
    return o;
  })), n || (n = a && (a.getDimensionsInfo ? a.getDimensionsInfo() : a.dimensions.slice()) || ["x", "y"]), n;
}
function wM(r, t, e) {
  var a, n;
  return e && w(r, function(i, o) {
    var s = i.coordDim, l = e.categoryAxisMap.get(s);
    l && (a == null && (a = o), i.ordinalMeta = l.getOrdinalMeta(), t && (i.createInvertedIndices = !0)), i.otherDims.itemName != null && (n = !0);
  }), !n && a != null && (r[a].otherDims.itemName = 0), a;
}
function Pr(r, t, e) {
  e = e || {};
  var a = t.getSourceManager(), n, i = !1;
  r ? (i = !0, n = Nf(r)) : (n = a.getSource(), i = n.sourceFormat === $t);
  var o = mM(t), s = bM(t, o), l = e.useEncodeDefaulter, u = X(l) ? l : l ? te(Y_, s, t) : null, c = {
    coordDimensions: s,
    generateCoord: e.generateCoord,
    encodeDefine: t.getEncode(),
    encodeDefaulter: u,
    canOmitUnusedDimensions: !i
  }, v = mo(n, c), f = wM(v.dimensions, e.createInvertedIndices, o), h = i ? null : a.getSharedDataStore(v), p = SM(t, {
    schema: v,
    store: h
  }), d = new yt(v, t);
  d.setCalculationInfo(p);
  var g = f != null && DM(n) ? function(y, m, _, S) {
    return S === f ? _ : this.defaultDimValueGetter(y, m, _, S);
  } : null;
  return d.hasItemOption = !1, d.initData(
    // Try to reuse the data store in sourceManager if using dataset.
    i ? n : h,
    null,
    g
  ), d;
}
function DM(r) {
  if (r.sourceFormat === $t) {
    var t = AM(r.data || []);
    return !B(Gn(t));
  }
}
function AM(r) {
  for (var t = 0; t < r.length && r[t] == null; )
    t++;
  return r[t];
}
var pr = (
  /** @class */
  function() {
    function r(t) {
      this._setting = t || {}, this._extent = [1 / 0, -1 / 0];
    }
    return r.prototype.getSetting = function(t) {
      return this._setting[t];
    }, r.prototype.unionExtent = function(t) {
      var e = this._extent;
      t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]);
    }, r.prototype.unionExtentFromData = function(t, e) {
      this.unionExtent(t.getApproximateExtent(e));
    }, r.prototype.getExtent = function() {
      return this._extent.slice();
    }, r.prototype.setExtent = function(t, e) {
      var a = this._extent;
      isNaN(t) || (a[0] = t), isNaN(e) || (a[1] = e);
    }, r.prototype.isInExtentRange = function(t) {
      return this._extent[0] <= t && this._extent[1] >= t;
    }, r.prototype.isBlank = function() {
      return this._isBlank;
    }, r.prototype.setBlank = function(t) {
      this._isBlank = t;
    }, r;
  }()
);
bl(pr);
var TM = 0, dv = (
  /** @class */
  function() {
    function r(t) {
      this.categories = t.categories || [], this._needCollect = t.needCollect, this._deduplication = t.deduplication, this.uid = ++TM;
    }
    return r.createByAxisModel = function(t) {
      var e = t.option, a = e.data, n = a && G(a, CM);
      return new r({
        categories: n,
        needCollect: !n,
        // deduplication is default in axis.
        deduplication: e.dedplication !== !1
      });
    }, r.prototype.getOrdinal = function(t) {
      return this._getOrCreateMap().get(t);
    }, r.prototype.parseAndCollect = function(t) {
      var e, a = this._needCollect;
      if (!Y(t) && !a)
        return t;
      if (a && !this._deduplication)
        return e = this.categories.length, this.categories[e] = t, e;
      var n = this._getOrCreateMap();
      return e = n.get(t), e == null && (a ? (e = this.categories.length, this.categories[e] = t, n.set(t, e)) : e = NaN), e;
    }, r.prototype._getOrCreateMap = function() {
      return this._map || (this._map = Z(this.categories));
    }, r;
  }()
);
function CM(r) {
  return J(r) && r.value != null ? r.value : r + "";
}
function MM(r) {
  var t = Math.pow(10, Sl(Math.abs(r))), e = Math.abs(r / t);
  return e === 0 || e === 1 || e === 2 || e === 3 || e === 5;
}
function gv(r) {
  return r.type === "interval" || r.type === "log";
}
function IM(r, t, e, a) {
  var n = {}, i = r[1] - r[0], o = n.interval = j0(i / t);
  e != null && o < e && (o = n.interval = e), a != null && o > a && (o = n.interval = a);
  var s = n.intervalPrecision = ax(o), l = n.niceTickExtent = [ze(Math.ceil(r[0] / o) * o, s), ze(Math.floor(r[1] / o) * o, s)];
  return LM(l, r), n;
}
function Mu(r) {
  var t = Math.pow(10, Sl(r)), e = r / t;
  return e ? e === 2 ? e = 3 : e === 3 ? e = 5 : e *= 2 : e = 1, ze(e * t);
}
function ax(r) {
  return or(r) + 2;
}
function Id(r, t, e) {
  r[t] = Math.max(Math.min(r[t], e[1]), e[0]);
}
function LM(r, t) {
  !isFinite(r[0]) && (r[0] = t[0]), !isFinite(r[1]) && (r[1] = t[1]), Id(r, 0, t), Id(r, 1, t), r[0] > r[1] && (r[0] = r[1]);
}
function zl(r, t) {
  return r >= t[0] && r <= t[1];
}
function Gl(r, t) {
  return t[1] === t[0] ? 0.5 : (r - t[0]) / (t[1] - t[0]);
}
function Fl(r, t) {
  return r * (t[1] - t[0]) + t[0];
}
var Hl = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      a.type = "ordinal";
      var n = a.getSetting("ordinalMeta");
      return n || (n = new dv({})), B(n) && (n = new dv({
        categories: G(n, function(i) {
          return J(i) ? i.value : i;
        })
      })), a._ordinalMeta = n, a._extent = a.getSetting("extent") || [0, n.categories.length - 1], a;
    }
    return t.prototype.parse = function(e) {
      return e == null ? NaN : Y(e) ? this._ordinalMeta.getOrdinal(e) : Math.round(e);
    }, t.prototype.contain = function(e) {
      return e = this.parse(e), zl(e, this._extent) && this._ordinalMeta.categories[e] != null;
    }, t.prototype.normalize = function(e) {
      return e = this._getTickNumber(this.parse(e)), Gl(e, this._extent);
    }, t.prototype.scale = function(e) {
      return e = Math.round(Fl(e, this._extent)), this.getRawOrdinalNumber(e);
    }, t.prototype.getTicks = function() {
      for (var e = [], a = this._extent, n = a[0]; n <= a[1]; )
        e.push({
          value: n
        }), n++;
      return e;
    }, t.prototype.getMinorTicks = function(e) {
    }, t.prototype.setSortInfo = function(e) {
      if (e == null) {
        this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;
        return;
      }
      for (var a = e.ordinalNumbers, n = this._ordinalNumbersByTick = [], i = this._ticksByOrdinalNumber = [], o = 0, s = this._ordinalMeta.categories.length, l = Math.min(s, a.length); o < l; ++o) {
        var u = a[o];
        n[o] = u, i[u] = o;
      }
      for (var c = 0; o < s; ++o) {
        for (; i[c] != null; )
          c++;
        n.push(c), i[c] = o;
      }
    }, t.prototype._getTickNumber = function(e) {
      var a = this._ticksByOrdinalNumber;
      return a && e >= 0 && e < a.length ? a[e] : e;
    }, t.prototype.getRawOrdinalNumber = function(e) {
      var a = this._ordinalNumbersByTick;
      return a && e >= 0 && e < a.length ? a[e] : e;
    }, t.prototype.getLabel = function(e) {
      if (!this.isBlank()) {
        var a = this.getRawOrdinalNumber(e.value), n = this._ordinalMeta.categories[a];
        return n == null ? "" : n + "";
      }
    }, t.prototype.count = function() {
      return this._extent[1] - this._extent[0] + 1;
    }, t.prototype.unionExtentFromData = function(e, a) {
      this.unionExtent(e.getApproximateExtent(a));
    }, t.prototype.isInExtentRange = function(e) {
      return e = this._getTickNumber(e), this._extent[0] <= e && this._extent[1] >= e;
    }, t.prototype.getOrdinalMeta = function() {
      return this._ordinalMeta;
    }, t.prototype.calcNiceTicks = function() {
    }, t.prototype.calcNiceExtent = function() {
    }, t.type = "ordinal", t;
  }(pr)
);
pr.registerClass(Hl);
var va = ze, Mr = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = "interval", e._interval = 0, e._intervalPrecision = 2, e;
    }
    return t.prototype.parse = function(e) {
      return e;
    }, t.prototype.contain = function(e) {
      return zl(e, this._extent);
    }, t.prototype.normalize = function(e) {
      return Gl(e, this._extent);
    }, t.prototype.scale = function(e) {
      return Fl(e, this._extent);
    }, t.prototype.setExtent = function(e, a) {
      var n = this._extent;
      isNaN(e) || (n[0] = parseFloat(e)), isNaN(a) || (n[1] = parseFloat(a));
    }, t.prototype.unionExtent = function(e) {
      var a = this._extent;
      e[0] < a[0] && (a[0] = e[0]), e[1] > a[1] && (a[1] = e[1]), this.setExtent(a[0], a[1]);
    }, t.prototype.getInterval = function() {
      return this._interval;
    }, t.prototype.setInterval = function(e) {
      this._interval = e, this._niceExtent = this._extent.slice(), this._intervalPrecision = ax(e);
    }, t.prototype.getTicks = function(e) {
      var a = this._interval, n = this._extent, i = this._niceExtent, o = this._intervalPrecision, s = [];
      if (!a)
        return s;
      var l = 1e4;
      n[0] < i[0] && (e ? s.push({
        value: va(i[0] - a, o)
      }) : s.push({
        value: n[0]
      }));
      for (var u = i[0]; u <= i[1] && (s.push({
        value: u
      }), u = va(u + a, o), u !== s[s.length - 1].value); )
        if (s.length > l)
          return [];
      var c = s.length ? s[s.length - 1].value : i[1];
      return n[1] > c && (e ? s.push({
        value: va(c + a, o)
      }) : s.push({
        value: n[1]
      })), s;
    }, t.prototype.getMinorTicks = function(e) {
      for (var a = this.getTicks(!0), n = [], i = this.getExtent(), o = 1; o < a.length; o++) {
        for (var s = a[o], l = a[o - 1], u = 0, c = [], v = s.value - l.value, f = v / e; u < e - 1; ) {
          var h = va(l.value + (u + 1) * f);
          h > i[0] && h < i[1] && c.push(h), u++;
        }
        n.push(c);
      }
      return n;
    }, t.prototype.getLabel = function(e, a) {
      if (e == null)
        return "";
      var n = a && a.precision;
      n == null ? n = or(e.value) || 0 : n === "auto" && (n = this._intervalPrecision);
      var i = va(e.value, n, !0);
      return B_(i);
    }, t.prototype.calcNiceTicks = function(e, a, n) {
      e = e || 5;
      var i = this._extent, o = i[1] - i[0];
      if (isFinite(o)) {
        o < 0 && (o = -o, i.reverse());
        var s = IM(i, e, a, n);
        this._intervalPrecision = s.intervalPrecision, this._interval = s.interval, this._niceExtent = s.niceTickExtent;
      }
    }, t.prototype.calcNiceExtent = function(e) {
      var a = this._extent;
      if (a[0] === a[1])
        if (a[0] !== 0) {
          var n = Math.abs(a[0]);
          e.fixMax || (a[1] += n / 2), a[0] -= n / 2;
        } else
          a[1] = 1;
      var i = a[1] - a[0];
      isFinite(i) || (a[0] = 0, a[1] = 1), this.calcNiceTicks(e.splitNumber, e.minInterval, e.maxInterval);
      var o = this._interval;
      e.fixMin || (a[0] = va(Math.floor(a[0] / o) * o)), e.fixMax || (a[1] = va(Math.ceil(a[1] / o) * o));
    }, t.prototype.setNiceExtent = function(e, a) {
      this._niceExtent = [e, a];
    }, t.type = "interval", t;
  }(pr)
);
pr.registerClass(Mr);
var nx = typeof Float32Array < "u", EM = nx ? Float32Array : Array;
function lr(r) {
  return B(r) ? nx ? new Float32Array(r) : r : new EM(r);
}
var yv = "__ec_stack_";
function Uf(r) {
  return r.get("stack") || yv + r.seriesIndex;
}
function $f(r) {
  return r.dim + r.index;
}
function PM(r) {
  var t = [], e = r.axis, a = "axis0";
  if (e.type === "category") {
    for (var n = e.getBandWidth(), i = 0; i < r.count; i++)
      t.push(ee({
        bandWidth: n,
        axisKey: a,
        stackId: yv + i
      }, r));
    for (var o = sx(t), s = [], i = 0; i < r.count; i++) {
      var l = o[a][yv + i];
      l.offsetCenter = l.offset + l.width / 2, s.push(l);
    }
    return s;
  }
}
function ix(r, t) {
  var e = [];
  return t.eachSeriesByType(r, function(a) {
    cx(a) && e.push(a);
  }), e;
}
function NM(r) {
  var t = {};
  w(r, function(l) {
    var u = l.coordinateSystem, c = u.getBaseAxis();
    if (!(c.type !== "time" && c.type !== "value"))
      for (var v = l.getData(), f = c.dim + "_" + c.index, h = v.getDimensionIndex(v.mapDimension(c.dim)), p = v.getStore(), d = 0, g = p.count(); d < g; ++d) {
        var y = p.get(h, d);
        t[f] ? t[f].push(y) : t[f] = [y];
      }
  });
  var e = {};
  for (var a in t)
    if (t.hasOwnProperty(a)) {
      var n = t[a];
      if (n) {
        n.sort(function(l, u) {
          return l - u;
        });
        for (var i = null, o = 1; o < n.length; ++o) {
          var s = n[o] - n[o - 1];
          s > 0 && (i = i === null ? s : Math.min(i, s));
        }
        e[a] = i;
      }
    }
  return e;
}
function ox(r) {
  var t = NM(r), e = [];
  return w(r, function(a) {
    var n = a.coordinateSystem, i = n.getBaseAxis(), o = i.getExtent(), s;
    if (i.type === "category")
      s = i.getBandWidth();
    else if (i.type === "value" || i.type === "time") {
      var l = i.dim + "_" + i.index, u = t[l], c = Math.abs(o[1] - o[0]), v = i.scale.getExtent(), f = Math.abs(v[1] - v[0]);
      s = u ? c / f * u : c;
    } else {
      var h = a.getData();
      s = Math.abs(o[1] - o[0]) / h.count();
    }
    var p = H(a.get("barWidth"), s), d = H(a.get("barMaxWidth"), s), g = H(
      // barMinWidth by default is 0.5 / 1 in cartesian. Because in value axis,
      // the auto-calculated bar width might be less than 0.5 / 1.
      a.get("barMinWidth") || (vx(a) ? 0.5 : 1),
      s
    ), y = a.get("barGap"), m = a.get("barCategoryGap");
    e.push({
      bandWidth: s,
      barWidth: p,
      barMaxWidth: d,
      barMinWidth: g,
      barGap: y,
      barCategoryGap: m,
      axisKey: $f(i),
      stackId: Uf(a)
    });
  }), sx(e);
}
function sx(r) {
  var t = {};
  w(r, function(a, n) {
    var i = a.axisKey, o = a.bandWidth, s = t[i] || {
      bandWidth: o,
      remainedWidth: o,
      autoWidthCount: 0,
      categoryGap: null,
      gap: "20%",
      stacks: {}
    }, l = s.stacks;
    t[i] = s;
    var u = a.stackId;
    l[u] || s.autoWidthCount++, l[u] = l[u] || {
      width: 0,
      maxWidth: 0
    };
    var c = a.barWidth;
    c && !l[u].width && (l[u].width = c, c = Math.min(s.remainedWidth, c), s.remainedWidth -= c);
    var v = a.barMaxWidth;
    v && (l[u].maxWidth = v);
    var f = a.barMinWidth;
    f && (l[u].minWidth = f);
    var h = a.barGap;
    h != null && (s.gap = h);
    var p = a.barCategoryGap;
    p != null && (s.categoryGap = p);
  });
  var e = {};
  return w(t, function(a, n) {
    e[n] = {};
    var i = a.stacks, o = a.bandWidth, s = a.categoryGap;
    if (s == null) {
      var l = Fe(i).length;
      s = Math.max(35 - l * 4, 15) + "%";
    }
    var u = H(s, o), c = H(a.gap, 1), v = a.remainedWidth, f = a.autoWidthCount, h = (v - u) / (f + (f - 1) * c);
    h = Math.max(h, 0), w(i, function(y) {
      var m = y.maxWidth, _ = y.minWidth;
      if (y.width) {
        var S = y.width;
        m && (S = Math.min(S, m)), _ && (S = Math.max(S, _)), y.width = S, v -= S + c * S, f--;
      } else {
        var S = h;
        m && m < S && (S = Math.min(m, v)), _ && _ > S && (S = _), S !== h && (y.width = S, v -= S + c * S, f--);
      }
    }), h = (v - u) / (f + (f - 1) * c), h = Math.max(h, 0);
    var p = 0, d;
    w(i, function(y, m) {
      y.width || (y.width = h), d = y, p += y.width * (1 + c);
    }), d && (p -= d.width * c);
    var g = -p / 2;
    w(i, function(y, m) {
      e[n][m] = e[n][m] || {
        bandWidth: o,
        offset: g,
        width: y.width
      }, g += y.width * (1 + c);
    });
  }), e;
}
function RM(r, t, e) {
  if (r && t) {
    var a = r[$f(t)];
    return a != null && e != null ? a[Uf(e)] : a;
  }
}
function lx(r, t) {
  var e = ix(r, t), a = ox(e);
  w(e, function(n) {
    var i = n.getData(), o = n.coordinateSystem, s = o.getBaseAxis(), l = Uf(n), u = a[$f(s)][l], c = u.offset, v = u.width;
    i.setLayout({
      bandWidth: u.bandWidth,
      offset: c,
      size: v
    });
  });
}
function ux(r) {
  return {
    seriesType: r,
    plan: qn(),
    reset: function(t) {
      if (cx(t)) {
        var e = t.getData(), a = t.coordinateSystem, n = a.getBaseAxis(), i = a.getOtherAxis(n), o = e.getDimensionIndex(e.mapDimension(i.dim)), s = e.getDimensionIndex(e.mapDimension(n.dim)), l = t.get("showBackground", !0), u = e.mapDimension(i.dim), c = e.getCalculationInfo("stackResultDimension"), v = ta(e, u) && !!e.getCalculationInfo("stackedOnSeries"), f = i.isHorizontal(), h = kM(n, i), p = vx(t), d = t.get("barMinHeight") || 0, g = c && e.getDimensionIndex(c), y = e.getLayout("size"), m = e.getLayout("offset");
        return {
          progress: function(_, S) {
            for (var x = _.count, b = p && lr(x * 3), D = p && l && lr(x * 3), A = p && lr(x), T = a.master.getRect(), C = f ? T.width : T.height, M, I = S.getStore(), L = 0; (M = _.next()) != null; ) {
              var P = I.get(v ? g : o, M), E = I.get(s, M), N = h, O = void 0;
              v && (O = +P - I.get(o, M));
              var k = void 0, V = void 0, F = void 0, W = void 0;
              if (f) {
                var q = a.dataToPoint([P, E]);
                if (v) {
                  var ae = a.dataToPoint([O, E]);
                  N = ae[0];
                }
                k = N, V = q[1] + m, F = q[0] - N, W = y, Math.abs(F) < d && (F = (F < 0 ? -1 : 1) * d);
              } else {
                var q = a.dataToPoint([E, P]);
                if (v) {
                  var ae = a.dataToPoint([E, O]);
                  N = ae[1];
                }
                k = q[0] + m, V = N, F = y, W = q[1] - N, Math.abs(W) < d && (W = (W <= 0 ? -1 : 1) * d);
              }
              p ? (b[L] = k, b[L + 1] = V, b[L + 2] = f ? F : W, D && (D[L] = f ? T.x : k, D[L + 1] = f ? V : T.y, D[L + 2] = C), A[M] = M) : S.setItemLayout(M, {
                x: k,
                y: V,
                width: F,
                height: W
              }), L += 3;
            }
            p && S.setLayout({
              largePoints: b,
              largeDataIndices: A,
              largeBackgroundPoints: D,
              valueAxisHorizontal: f
            });
          }
        };
      }
    }
  };
}
function cx(r) {
  return r.coordinateSystem && r.coordinateSystem.type === "cartesian2d";
}
function vx(r) {
  return r.pipelineContext && r.pipelineContext.large;
}
function kM(r, t) {
  var e = t.model.get("startValue");
  return e || (e = 0), t.toGlobalCoord(t.dataToCoord(t.type === "log" ? e > 0 ? e : 1 : e));
}
var OM = { env: {} }, VM = function(r, t, e, a) {
  for (; e < a; ) {
    var n = e + a >>> 1;
    r[n][1] < t ? e = n + 1 : a = n;
  }
  return e;
}, Yf = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "time", a;
    }
    return t.prototype.getLabel = function(e) {
      var a = this.getSetting("useUTC");
      return Il(e.value, Cp[DA(Sn(this._minLevelUnit))] || Cp.second, a, this.getSetting("locale"));
    }, t.prototype.getFormattedLabel = function(e, a, n) {
      var i = this.getSetting("useUTC"), o = this.getSetting("locale");
      return AA(e, a, n, o, i);
    }, t.prototype.getTicks = function() {
      var e = this._interval, a = this._extent, n = [];
      if (!e)
        return n;
      n.push({
        value: a[0],
        level: 0
      });
      var i = this.getSetting("useUTC"), o = UM(this._minLevelUnit, this._approxInterval, i, a);
      return n = n.concat(o), n.push({
        value: a[1],
        level: 0
      }), n;
    }, t.prototype.calcNiceExtent = function(e) {
      var a = this._extent;
      if (a[0] === a[1] && (a[0] -= Bt, a[1] += Bt), a[1] === -1 / 0 && a[0] === 1 / 0) {
        var n = /* @__PURE__ */ new Date();
        a[1] = +new Date(n.getFullYear(), n.getMonth(), n.getDate()), a[0] = a[1] - Bt;
      }
      this.calcNiceTicks(e.splitNumber, e.minInterval, e.maxInterval);
    }, t.prototype.calcNiceTicks = function(e, a, n) {
      e = e || 10;
      var i = this._extent, o = i[1] - i[0];
      this._approxInterval = o / e, a != null && this._approxInterval < a && (this._approxInterval = a), n != null && this._approxInterval > n && (this._approxInterval = n);
      var s = Ho.length, l = Math.min(VM(Ho, this._approxInterval, 0, s), s - 1);
      this._interval = Ho[l][1], this._minLevelUnit = Ho[Math.max(l - 1, 0)][0];
    }, t.prototype.parse = function(e) {
      return _e(e) ? e : +vr(e);
    }, t.prototype.contain = function(e) {
      return zl(this.parse(e), this._extent);
    }, t.prototype.normalize = function(e) {
      return Gl(this.parse(e), this._extent);
    }, t.prototype.scale = function(e) {
      return Fl(e, this._extent);
    }, t.type = "time", t;
  }(Mr)
), Ho = [
  // Format                           interval
  ["second", Df],
  ["minute", Af],
  ["hour", Oi],
  ["quarter-day", Oi * 6],
  ["half-day", Oi * 12],
  ["day", Bt * 1.2],
  ["half-week", Bt * 3.5],
  ["week", Bt * 7],
  ["month", Bt * 31],
  ["quarter", Bt * 95],
  ["half-year", Tp / 2],
  ["year", Tp]
  // 1Y
];
function BM(r, t, e, a) {
  var n = vr(t), i = vr(e), o = function(p) {
    return Mp(n, p, a) === Mp(i, p, a);
  }, s = function() {
    return o("year");
  }, l = function() {
    return s() && o("month");
  }, u = function() {
    return l() && o("day");
  }, c = function() {
    return u() && o("hour");
  }, v = function() {
    return c() && o("minute");
  }, f = function() {
    return v() && o("second");
  }, h = function() {
    return f() && o("millisecond");
  };
  switch (r) {
    case "year":
      return s();
    case "month":
      return l();
    case "day":
      return u();
    case "hour":
      return c();
    case "minute":
      return v();
    case "second":
      return f();
    case "millisecond":
      return h();
  }
}
function zM(r, t) {
  return r /= Bt, r > 16 ? 16 : r > 7.5 ? 7 : r > 3.5 ? 4 : r > 1.5 ? 2 : 1;
}
function GM(r) {
  var t = 30 * Bt;
  return r /= t, r > 6 ? 6 : r > 3 ? 3 : r > 2 ? 2 : 1;
}
function FM(r) {
  return r /= Oi, r > 12 ? 12 : r > 6 ? 6 : r > 3.5 ? 4 : r > 2 ? 2 : 1;
}
function Ld(r, t) {
  return r /= t ? Af : Df, r > 30 ? 30 : r > 20 ? 20 : r > 15 ? 15 : r > 10 ? 10 : r > 5 ? 5 : r > 2 ? 2 : 1;
}
function HM(r) {
  return j0(r);
}
function WM(r, t, e) {
  var a = new Date(r);
  switch (Sn(t)) {
    case "year":
    case "month":
      a[P_(e)](0);
    case "day":
      a[N_(e)](1);
    case "hour":
      a[R_(e)](0);
    case "minute":
      a[k_(e)](0);
    case "second":
      a[O_(e)](0), a[V_(e)](0);
  }
  return a.getTime();
}
function UM(r, t, e, a) {
  var n = 1e4, i = L_, o = 0;
  function s(C, M, I, L, P, E, N) {
    for (var O = new Date(M), k = M, V = O[L](); k < I && k <= a[1]; )
      N.push({
        value: k
      }), V += C, O[P](V), k = O.getTime();
    N.push({
      value: k,
      notAdd: !0
    });
  }
  function l(C, M, I) {
    var L = [], P = !M.length;
    if (!BM(Sn(C), a[0], a[1], e)) {
      P && (M = [{
        // TODO Optimize. Not include so may ticks.
        value: WM(new Date(a[0]), C, e)
      }, {
        value: a[1]
      }]);
      for (var E = 0; E < M.length - 1; E++) {
        var N = M[E].value, O = M[E + 1].value;
        if (N !== O) {
          var k = void 0, V = void 0, F = void 0, W = !1;
          switch (C) {
            case "year":
              k = Math.max(1, Math.round(t / Bt / 365)), V = Tf(e), F = TA(e);
              break;
            case "half-year":
            case "quarter":
            case "month":
              k = GM(t), V = xn(e), F = P_(e);
              break;
            case "week":
            case "half-week":
            case "day":
              k = zM(t), V = Ll(e), F = N_(e), W = !0;
              break;
            case "half-day":
            case "quarter-day":
            case "hour":
              k = FM(t), V = Yi(e), F = R_(e);
              break;
            case "minute":
              k = Ld(t, !0), V = El(e), F = k_(e);
              break;
            case "second":
              k = Ld(t, !1), V = Pl(e), F = O_(e);
              break;
            case "millisecond":
              k = HM(t), V = Nl(e), F = V_(e);
              break;
          }
          s(k, N, O, V, F, W, L), C === "year" && I.length > 1 && E === 0 && I.unshift({
            value: I[0].value - k
          });
        }
      }
      for (var E = 0; E < L.length; E++)
        I.push(L[E]);
      return L;
    }
  }
  for (var u = [], c = [], v = 0, f = 0, h = 0; h < i.length && o++ < n; ++h) {
    var p = Sn(i[h]);
    if (wA(i[h])) {
      l(i[h], u[u.length - 1] || [], c);
      var d = i[h + 1] ? Sn(i[h + 1]) : null;
      if (p !== d) {
        if (c.length) {
          f = v, c.sort(function(C, M) {
            return C.value - M.value;
          });
          for (var g = [], y = 0; y < c.length; ++y) {
            var m = c[y].value;
            (y === 0 || c[y - 1].value !== m) && (g.push(c[y]), m >= a[0] && m <= a[1] && v++);
          }
          var _ = (a[1] - a[0]) / t;
          if (v > _ * 1.5 && f > _ / 1.5 || (u.push(g), v > _ || r === i[h]))
            break;
        }
        c = [];
      }
    }
  }
  OM.env.NODE_ENV !== "production" && o >= n && Ve("Exceed safe limit.");
  for (var S = Ae(G(u, function(C) {
    return Ae(C, function(M) {
      return M.value >= a[0] && M.value <= a[1] && !M.notAdd;
    });
  }), function(C) {
    return C.length > 0;
  }), x = [], b = S.length - 1, h = 0; h < S.length; ++h)
    for (var D = S[h], A = 0; A < D.length; ++A)
      x.push({
        value: D[A].value,
        level: b - h
      });
  x.sort(function(C, M) {
    return C.value - M.value;
  });
  for (var T = [], h = 0; h < x.length; ++h)
    (h === 0 || x[h].value !== x[h - 1].value) && T.push(x[h]);
  return T;
}
pr.registerClass(Yf);
var Ed = pr.prototype, Gi = Mr.prototype, $M = ze, YM = Math.floor, ZM = Math.ceil, Wo = Math.pow, Zt = Math.log, Zf = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = "log", e.base = 10, e._originalScale = new Mr(), e._interval = 0, e;
    }
    return t.prototype.getTicks = function(e) {
      var a = this._originalScale, n = this._extent, i = a.getExtent(), o = Gi.getTicks.call(this, e);
      return G(o, function(s) {
        var l = s.value, u = ze(Wo(this.base, l));
        return u = l === n[0] && this._fixMin ? Uo(u, i[0]) : u, u = l === n[1] && this._fixMax ? Uo(u, i[1]) : u, {
          value: u
        };
      }, this);
    }, t.prototype.setExtent = function(e, a) {
      var n = Zt(this.base);
      e = Zt(Math.max(0, e)) / n, a = Zt(Math.max(0, a)) / n, Gi.setExtent.call(this, e, a);
    }, t.prototype.getExtent = function() {
      var e = this.base, a = Ed.getExtent.call(this);
      a[0] = Wo(e, a[0]), a[1] = Wo(e, a[1]);
      var n = this._originalScale, i = n.getExtent();
      return this._fixMin && (a[0] = Uo(a[0], i[0])), this._fixMax && (a[1] = Uo(a[1], i[1])), a;
    }, t.prototype.unionExtent = function(e) {
      this._originalScale.unionExtent(e);
      var a = this.base;
      e[0] = Zt(e[0]) / Zt(a), e[1] = Zt(e[1]) / Zt(a), Ed.unionExtent.call(this, e);
    }, t.prototype.unionExtentFromData = function(e, a) {
      this.unionExtent(e.getApproximateExtent(a));
    }, t.prototype.calcNiceTicks = function(e) {
      e = e || 10;
      var a = this._extent, n = a[1] - a[0];
      if (!(n === 1 / 0 || n <= 0)) {
        var i = oD(n), o = e / n * i;
        for (o <= 0.5 && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && Math.abs(i) > 0; )
          i *= 10;
        var s = [ze(ZM(a[0] / i) * i), ze(YM(a[1] / i) * i)];
        this._interval = i, this._niceExtent = s;
      }
    }, t.prototype.calcNiceExtent = function(e) {
      Gi.calcNiceExtent.call(this, e), this._fixMin = e.fixMin, this._fixMax = e.fixMax;
    }, t.prototype.parse = function(e) {
      return e;
    }, t.prototype.contain = function(e) {
      return e = Zt(e) / Zt(this.base), zl(e, this._extent);
    }, t.prototype.normalize = function(e) {
      return e = Zt(e) / Zt(this.base), Gl(e, this._extent);
    }, t.prototype.scale = function(e) {
      return e = Fl(e, this._extent), Wo(this.base, e);
    }, t.type = "log", t;
  }(pr)
), fx = Zf.prototype;
fx.getMinorTicks = Gi.getMinorTicks;
fx.getLabel = Gi.getLabel;
function Uo(r, t) {
  return $M(r, or(t));
}
pr.registerClass(Zf);
var Iu = { env: {} }, XM = (
  /** @class */
  function() {
    function r(t, e, a) {
      this._prepareParams(t, e, a);
    }
    return r.prototype._prepareParams = function(t, e, a) {
      a[1] < a[0] && (a = [NaN, NaN]), this._dataMin = a[0], this._dataMax = a[1];
      var n = this._isOrdinal = t.type === "ordinal";
      this._needCrossZero = t.type === "interval" && e.getNeedCrossZero && e.getNeedCrossZero();
      var i = e.get("min", !0);
      i == null && (i = e.get("startValue", !0));
      var o = this._modelMinRaw = i;
      X(o) ? this._modelMinNum = $o(t, o({
        min: a[0],
        max: a[1]
      })) : o !== "dataMin" && (this._modelMinNum = $o(t, o));
      var s = this._modelMaxRaw = e.get("max", !0);
      if (X(s) ? this._modelMaxNum = $o(t, s({
        min: a[0],
        max: a[1]
      })) : s !== "dataMax" && (this._modelMaxNum = $o(t, s)), n)
        this._axisDataLen = e.getCategories().length;
      else {
        var l = e.get("boundaryGap"), u = B(l) ? l : [l || 0, l || 0];
        typeof u[0] == "boolean" || typeof u[1] == "boolean" ? (Iu.env.NODE_ENV !== "production" && console.warn('Boolean type for boundaryGap is only allowed for ordinal axis. Please use string in percentage instead, e.g., "20%". Currently, boundaryGap is set to be 0.'), this._boundaryGapInner = [0, 0]) : this._boundaryGapInner = [An(u[0], 1), An(u[1], 1)];
      }
    }, r.prototype.calculate = function() {
      var t = this._isOrdinal, e = this._dataMin, a = this._dataMax, n = this._axisDataLen, i = this._boundaryGapInner, o = t ? null : a - e || Math.abs(e), s = this._modelMinRaw === "dataMin" ? e : this._modelMinNum, l = this._modelMaxRaw === "dataMax" ? a : this._modelMaxNum, u = s != null, c = l != null;
      s == null && (s = t ? n ? 0 : NaN : e - i[0] * o), l == null && (l = t ? n ? n - 1 : NaN : a + i[1] * o), (s == null || !isFinite(s)) && (s = NaN), (l == null || !isFinite(l)) && (l = NaN);
      var v = Dn(s) || Dn(l) || t && !n;
      this._needCrossZero && (s > 0 && l > 0 && !u && (s = 0), s < 0 && l < 0 && !c && (l = 0));
      var f = this._determinedMin, h = this._determinedMax;
      return f != null && (s = f, u = !0), h != null && (l = h, c = !0), {
        min: s,
        max: l,
        minFixed: u,
        maxFixed: c,
        isBlank: v
      };
    }, r.prototype.modifyDataMinMax = function(t, e) {
      Iu.env.NODE_ENV !== "production" && K(!this.frozen), this[qM[t]] = e;
    }, r.prototype.setDeterminedMinMax = function(t, e) {
      var a = KM[t];
      Iu.env.NODE_ENV !== "production" && K(!this.frozen && this[a] == null), this[a] = e;
    }, r.prototype.freeze = function() {
      this.frozen = !0;
    }, r;
  }()
), KM = {
  min: "_determinedMin",
  max: "_determinedMax"
}, qM = {
  min: "_dataMin",
  max: "_dataMax"
};
function hx(r, t, e) {
  var a = r.rawExtentInfo;
  return a || (a = new XM(r, t, e), r.rawExtentInfo = a, a);
}
function $o(r, t) {
  return t == null ? null : Dn(t) ? NaN : r.parse(t);
}
function px(r, t) {
  var e = r.type, a = hx(r, t, r.getExtent()).calculate();
  r.setBlank(a.isBlank);
  var n = a.min, i = a.max, o = t.ecModel;
  if (o && e === "time") {
    var s = ix("bar", o), l = !1;
    if (w(s, function(v) {
      l = l || v.getBaseAxis() === t.axis;
    }), l) {
      var u = ox(s), c = jM(n, i, t, u);
      n = c.min, i = c.max;
    }
  }
  return {
    extent: [n, i],
    // "fix" means "fixed", the value should not be
    // changed in the subsequent steps.
    fixMin: a.minFixed,
    fixMax: a.maxFixed
  };
}
function jM(r, t, e, a) {
  var n = e.axis.getExtent(), i = n[1] - n[0], o = RM(a, e.axis);
  if (o === void 0)
    return {
      min: r,
      max: t
    };
  var s = 1 / 0;
  w(o, function(h) {
    s = Math.min(h.offset, s);
  });
  var l = -1 / 0;
  w(o, function(h) {
    l = Math.max(h.offset + h.width, l);
  }), s = Math.abs(s), l = Math.abs(l);
  var u = s + l, c = t - r, v = 1 - (s + l) / i, f = c / v - c;
  return t += f * (l / u), r -= f * (s / u), {
    min: r,
    max: t
  };
}
function Ln(r, t) {
  var e = t, a = px(r, e), n = a.extent, i = e.get("splitNumber");
  r instanceof Zf && (r.base = e.get("logBase"));
  var o = r.type, s = e.get("interval"), l = o === "interval" || o === "time";
  r.setExtent(n[0], n[1]), r.calcNiceExtent({
    splitNumber: i,
    fixMin: a.fixMin,
    fixMax: a.fixMax,
    minInterval: l ? e.get("minInterval") : null,
    maxInterval: l ? e.get("maxInterval") : null
  }), s != null && r.setInterval && r.setInterval(s);
}
function Wl(r, t) {
  if (t = t || r.get("type"), t)
    switch (t) {
      case "category":
        return new Hl({
          ordinalMeta: r.getOrdinalMeta ? r.getOrdinalMeta() : r.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new Yf({
          locale: r.ecModel.getLocaleModel(),
          useUTC: r.ecModel.get("useUTC")
        });
      default:
        return new (pr.getClass(t) || Mr)();
    }
}
function JM(r) {
  var t = r.scale.getExtent(), e = t[0], a = t[1];
  return !(e > 0 && a > 0 || e < 0 && a < 0);
}
function Qn(r) {
  var t = r.getLabelModel().get("formatter"), e = r.type === "category" ? r.scale.getExtent()[0] : null;
  return r.scale.type === "time" ? /* @__PURE__ */ function(a) {
    return function(n, i) {
      return r.scale.getFormattedLabel(n, i, a);
    };
  }(t) : Y(t) ? /* @__PURE__ */ function(a) {
    return function(n) {
      var i = r.scale.getLabel(n), o = a.replace("{value}", i ?? "");
      return o;
    };
  }(t) : X(t) ? /* @__PURE__ */ function(a) {
    return function(n, i) {
      return e != null && (i = n.value - e), a(Xf(r, n), i, n.level != null ? {
        level: n.level
      } : null);
    };
  }(t) : function(a) {
    return r.scale.getLabel(a);
  };
}
function Xf(r, t) {
  return r.type === "category" ? r.scale.getLabel(t) : t.value;
}
function QM(r) {
  var t = r.model, e = r.scale;
  if (!(!t.get(["axisLabel", "show"]) || e.isBlank())) {
    var a, n, i = e.getExtent();
    e instanceof Hl ? n = e.count() : (a = e.getTicks(), n = a.length);
    var o = r.getLabelModel(), s = Qn(r), l, u = 1;
    n > 40 && (u = Math.ceil(n / 40));
    for (var c = 0; c < n; c += u) {
      var v = a ? a[c] : {
        value: i[0] + c
      }, f = s(v, c), h = o.getTextRect(f), p = eI(h, o.get("rotate") || 0);
      l ? l.union(p) : l = p;
    }
    return l;
  }
}
function eI(r, t) {
  var e = t * Math.PI / 180, a = r.width, n = r.height, i = a * Math.abs(Math.cos(e)) + Math.abs(n * Math.sin(e)), o = a * Math.abs(Math.sin(e)) + Math.abs(n * Math.cos(e)), s = new Te(r.x, r.y, i, o);
  return s;
}
function Kf(r) {
  var t = r.get("interval");
  return t ?? "auto";
}
function dx(r) {
  return r.type === "category" && Kf(r.getLabelModel()) === 0;
}
function Js(r, t) {
  var e = {};
  return w(r.mapDimensionsAll(t), function(a) {
    e[rx(r, a)] = !0;
  }), Fe(e);
}
function tI(r, t, e) {
  t && w(Js(t, e), function(a) {
    var n = t.getApproximateExtent(a);
    n[0] < r[0] && (r[0] = n[0]), n[1] > r[1] && (r[1] = n[1]);
  });
}
var _o = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getNeedCrossZero = function() {
      var t = this.option;
      return !t.scale;
    }, r.prototype.getCoordSysModel = function() {
    }, r;
  }()
), rI = [];
function Lu(r, t) {
  for (var e = 0; e < r.length; e++)
    Ft(r[e], r[e], t);
}
function Pd(r, t, e, a) {
  for (var n = 0; n < r.length; n++) {
    var i = r[n];
    a && (i = a.project(i)), i && isFinite(i[0]) && isFinite(i[1]) && (G0(t, t, i), F0(e, e, i));
  }
}
function aI(r) {
  for (var t = 0, e = 0, a = 0, n = r.length, i = r[n - 1][0], o = r[n - 1][1], s = 0; s < n; s++) {
    var l = r[s][0], u = r[s][1], c = i * u - l * o;
    t += c, e += (i + l) * c, a += (o + u) * c, i = l, o = u;
  }
  return t ? [e / t / 3, a / t / 3, t] : [r[0][0] || 0, r[0][1] || 0];
}
var gx = (
  /** @class */
  function() {
    function r(t) {
      this.name = t;
    }
    return r.prototype.setCenter = function(t) {
      this._center = t;
    }, r.prototype.getCenter = function() {
      var t = this._center;
      return t || (t = this._center = this.calcCenter()), t;
    }, r;
  }()
), Nd = (
  /** @class */
  /* @__PURE__ */ function() {
    function r(t, e) {
      this.type = "polygon", this.exterior = t, this.interiors = e;
    }
    return r;
  }()
), Rd = (
  /** @class */
  /* @__PURE__ */ function() {
    function r(t) {
      this.type = "linestring", this.points = t;
    }
    return r;
  }()
), yx = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this, e) || this;
      return i.type = "geoJSON", i.geometries = a, i._center = n && [n[0], n[1]], i;
    }
    return t.prototype.calcCenter = function() {
      for (var e = this.geometries, a, n = 0, i = 0; i < e.length; i++) {
        var o = e[i], s = o.exterior, l = s && s.length;
        l > n && (a = o, n = l);
      }
      if (a)
        return aI(a.exterior);
      var u = this.getBoundingRect();
      return [u.x + u.width / 2, u.y + u.height / 2];
    }, t.prototype.getBoundingRect = function(e) {
      var a = this._rect;
      if (a && !e)
        return a;
      var n = [1 / 0, 1 / 0], i = [-1 / 0, -1 / 0], o = this.geometries;
      return w(o, function(s) {
        s.type === "polygon" ? Pd(s.exterior, n, i, e) : w(s.points, function(l) {
          Pd(l, n, i, e);
        });
      }), isFinite(n[0]) && isFinite(n[1]) && isFinite(i[0]) && isFinite(i[1]) || (n[0] = n[1] = i[0] = i[1] = 0), a = new Te(n[0], n[1], i[0] - n[0], i[1] - n[1]), e || (this._rect = a), a;
    }, t.prototype.contain = function(e) {
      var a = this.getBoundingRect(), n = this.geometries;
      if (!a.contain(e[0], e[1]))
        return !1;
      e: for (var i = 0, o = n.length; i < o; i++) {
        var s = n[i];
        if (s.type === "polygon") {
          var l = s.exterior, u = s.interiors;
          if (Sa(l, e[0], e[1])) {
            for (var c = 0; c < (u ? u.length : 0); c++)
              if (Sa(u[c], e[0], e[1]))
                continue e;
            return !0;
          }
        }
      }
      return !1;
    }, t.prototype.transformTo = function(e, a, n, i) {
      var o = this.getBoundingRect(), s = o.width / o.height;
      n ? i || (i = n / s) : n = s * i;
      for (var l = new Te(e, a, n, i), u = o.calculateTransform(l), c = this.geometries, v = 0; v < c.length; v++) {
        var f = c[v];
        f.type === "polygon" ? (Lu(f.exterior, u), w(f.interiors, function(h) {
          Lu(h, u);
        })) : w(f.points, function(h) {
          Lu(h, u);
        });
      }
      o = this._rect, o.copy(l), this._center = [o.x + o.width / 2, o.y + o.height / 2];
    }, t.prototype.cloneShallow = function(e) {
      e == null && (e = this.name);
      var a = new t(e, this.geometries, this._center);
      return a._rect = this._rect, a.transformTo = null, a;
    }, t;
  }(gx)
), nI = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a) {
      var n = r.call(this, e) || this;
      return n.type = "geoSVG", n._elOnlyForCalculate = a, n;
    }
    return t.prototype.calcCenter = function() {
      for (var e = this._elOnlyForCalculate, a = e.getBoundingRect(), n = [a.x + a.width / 2, a.y + a.height / 2], i = af(rI), o = e; o && !o.isGeoSVGGraphicRoot; )
        Es(i, o.getLocalTransform(), i), o = o.parent;
      return lo(i, i), Ft(n, n, i), n;
    }, t;
  }(gx)
);
function iI(r) {
  if (!r.UTF8Encoding)
    return r;
  var t = r, e = t.UTF8Scale;
  e == null && (e = 1024);
  var a = t.features;
  return w(a, function(n) {
    var i = n.geometry, o = i.encodeOffsets, s = i.coordinates;
    if (o)
      switch (i.type) {
        case "LineString":
          i.coordinates = mx(s, o, e);
          break;
        case "Polygon":
          Eu(s, o, e);
          break;
        case "MultiLineString":
          Eu(s, o, e);
          break;
        case "MultiPolygon":
          w(s, function(l, u) {
            return Eu(l, o[u], e);
          });
      }
  }), t.UTF8Encoding = !1, t;
}
function Eu(r, t, e) {
  for (var a = 0; a < r.length; a++)
    r[a] = mx(r[a], t[a], e);
}
function mx(r, t, e) {
  for (var a = [], n = t[0], i = t[1], o = 0; o < r.length; o += 2) {
    var s = r.charCodeAt(o) - 64, l = r.charCodeAt(o + 1) - 64;
    s = s >> 1 ^ -(s & 1), l = l >> 1 ^ -(l & 1), s += n, l += i, n = s, i = l, a.push([s / e, l / e]);
  }
  return a;
}
function oI(r, t) {
  return r = iI(r), G(Ae(r.features, function(e) {
    return e.geometry && e.properties && e.geometry.coordinates.length > 0;
  }), function(e) {
    var a = e.properties, n = e.geometry, i = [];
    switch (n.type) {
      case "Polygon":
        var o = n.coordinates;
        i.push(new Nd(o[0], o.slice(1)));
        break;
      case "MultiPolygon":
        w(n.coordinates, function(l) {
          l[0] && i.push(new Nd(l[0], l.slice(1)));
        });
        break;
      case "LineString":
        i.push(new Rd([n.coordinates]));
        break;
      case "MultiLineString":
        i.push(new Rd(n.coordinates));
    }
    var s = new yx(a[t || "name"], i, a.cp);
    return s.properties = a, s;
  });
}
var ji = ue();
function _x(r, t) {
  var e = G(t, function(a) {
    return r.scale.parse(a);
  });
  return r.type === "time" && e.length > 0 && (e.sort(), e.unshift(e[0]), e.push(e[e.length - 1])), e;
}
function sI(r) {
  var t = r.getLabelModel().get("customValues");
  if (t) {
    var e = Qn(r);
    return {
      labels: _x(r, t).map(function(a) {
        var n = {
          value: a
        };
        return {
          formattedLabel: e(n),
          rawLabel: r.scale.getLabel(n),
          tickValue: a
        };
      })
    };
  }
  return r.type === "category" ? uI(r) : vI(r);
}
function lI(r, t) {
  var e = r.getTickModel().get("customValues");
  return e ? {
    ticks: _x(r, e)
  } : r.type === "category" ? cI(r, t) : {
    ticks: G(r.scale.getTicks(), function(a) {
      return a.value;
    })
  };
}
function uI(r) {
  var t = r.getLabelModel(), e = Sx(r, t);
  return !t.get("show") || r.scale.isBlank() ? {
    labels: [],
    labelCategoryInterval: e.labelCategoryInterval
  } : e;
}
function Sx(r, t) {
  var e = xx(r, "labels"), a = Kf(t), n = bx(e, a);
  if (n)
    return n;
  var i, o;
  return X(a) ? i = Ax(r, a) : (o = a === "auto" ? fI(r) : a, i = Dx(r, o)), wx(e, a, {
    labels: i,
    labelCategoryInterval: o
  });
}
function cI(r, t) {
  var e = xx(r, "ticks"), a = Kf(t), n = bx(e, a);
  if (n)
    return n;
  var i, o;
  if ((!t.get("show") || r.scale.isBlank()) && (i = []), X(a))
    i = Ax(r, a, !0);
  else if (a === "auto") {
    var s = Sx(r, r.getLabelModel());
    o = s.labelCategoryInterval, i = G(s.labels, function(l) {
      return l.tickValue;
    });
  } else
    o = a, i = Dx(r, o, !0);
  return wx(e, a, {
    ticks: i,
    tickCategoryInterval: o
  });
}
function vI(r) {
  var t = r.scale.getTicks(), e = Qn(r);
  return {
    labels: G(t, function(a, n) {
      return {
        level: a.level,
        formattedLabel: e(a, n),
        rawLabel: r.scale.getLabel(a),
        tickValue: a.value
      };
    })
  };
}
function xx(r, t) {
  return ji(r)[t] || (ji(r)[t] = []);
}
function bx(r, t) {
  for (var e = 0; e < r.length; e++)
    if (r[e].key === t)
      return r[e].value;
}
function wx(r, t, e) {
  return r.push({
    key: t,
    value: e
  }), e;
}
function fI(r) {
  var t = ji(r).autoInterval;
  return t ?? (ji(r).autoInterval = r.calculateCategoryInterval());
}
function hI(r) {
  var t = pI(r), e = Qn(r), a = (t.axisRotate - t.labelRotate) / 180 * Math.PI, n = r.scale, i = n.getExtent(), o = n.count();
  if (i[1] - i[0] < 1)
    return 0;
  var s = 1;
  o > 40 && (s = Math.max(1, Math.floor(o / 40)));
  for (var l = i[0], u = r.dataToCoord(l + 1) - r.dataToCoord(l), c = Math.abs(u * Math.cos(a)), v = Math.abs(u * Math.sin(a)), f = 0, h = 0; l <= i[1]; l += s) {
    var p = 0, d = 0, g = _l(e({
      value: l
    }), t.font, "center", "top");
    p = g.width * 1.3, d = g.height * 1.3, f = Math.max(f, p, 7), h = Math.max(h, d, 7);
  }
  var y = f / c, m = h / v;
  isNaN(y) && (y = 1 / 0), isNaN(m) && (m = 1 / 0);
  var _ = Math.max(0, Math.floor(Math.min(y, m))), S = ji(r.model), x = r.getExtent(), b = S.lastAutoInterval, D = S.lastTickCount;
  return b != null && D != null && Math.abs(b - _) <= 1 && Math.abs(D - o) <= 1 && b > _ && S.axisExtent0 === x[0] && S.axisExtent1 === x[1] ? _ = b : (S.lastTickCount = o, S.lastAutoInterval = _, S.axisExtent0 = x[0], S.axisExtent1 = x[1]), _;
}
function pI(r) {
  var t = r.getLabelModel();
  return {
    axisRotate: r.getRotate ? r.getRotate() : r.isHorizontal && !r.isHorizontal() ? 90 : 0,
    labelRotate: t.get("rotate") || 0,
    font: t.getFont()
  };
}
function Dx(r, t, e) {
  var a = Qn(r), n = r.scale, i = n.getExtent(), o = r.getLabelModel(), s = [], l = Math.max((t || 0) + 1, 1), u = i[0], c = n.count();
  u !== 0 && l > 1 && c / l > 2 && (u = Math.round(Math.ceil(u / l) * l));
  var v = dx(r), f = o.get("showMinLabel") || v, h = o.get("showMaxLabel") || v;
  f && u !== i[0] && d(i[0]);
  for (var p = u; p <= i[1]; p += l)
    d(p);
  h && p - l !== i[1] && d(i[1]);
  function d(g) {
    var y = {
      value: g
    };
    s.push(e ? g : {
      formattedLabel: a(y),
      rawLabel: n.getLabel(y),
      tickValue: g
    });
  }
  return s;
}
function Ax(r, t, e) {
  var a = r.scale, n = Qn(r), i = [];
  return w(a.getTicks(), function(o) {
    var s = a.getLabel(o), l = o.value;
    t(o.value, s) && i.push(e ? l : {
      formattedLabel: n(o),
      rawLabel: s,
      tickValue: l
    });
  }), i;
}
var kd = [0, 1], rr = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.onBand = !1, this.inverse = !1, this.dim = t, this.scale = e, this._extent = a || [0, 0];
    }
    return r.prototype.contain = function(t) {
      var e = this._extent, a = Math.min(e[0], e[1]), n = Math.max(e[0], e[1]);
      return t >= a && t <= n;
    }, r.prototype.containData = function(t) {
      return this.scale.contain(t);
    }, r.prototype.getExtent = function() {
      return this._extent.slice();
    }, r.prototype.getPixelPrecision = function(t) {
      return K0(t || this.scale.getExtent(), this._extent);
    }, r.prototype.setExtent = function(t, e) {
      var a = this._extent;
      a[0] = t, a[1] = e;
    }, r.prototype.dataToCoord = function(t, e) {
      var a = this._extent, n = this.scale;
      return t = n.normalize(t), this.onBand && n.type === "ordinal" && (a = a.slice(), Od(a, n.count())), xe(t, kd, a, e);
    }, r.prototype.coordToData = function(t, e) {
      var a = this._extent, n = this.scale;
      this.onBand && n.type === "ordinal" && (a = a.slice(), Od(a, n.count()));
      var i = xe(t, a, kd, e);
      return this.scale.scale(i);
    }, r.prototype.pointToData = function(t, e) {
    }, r.prototype.getTicksCoords = function(t) {
      t = t || {};
      var e = t.tickModel || this.getTickModel(), a = lI(this, e), n = a.ticks, i = G(n, function(s) {
        return {
          coord: this.dataToCoord(this.scale.type === "ordinal" ? this.scale.getRawOrdinalNumber(s) : s),
          tickValue: s
        };
      }, this), o = e.get("alignWithLabel");
      return dI(this, i, o, t.clamp), i;
    }, r.prototype.getMinorTicksCoords = function() {
      if (this.scale.type === "ordinal")
        return [];
      var t = this.model.getModel("minorTick"), e = t.get("splitNumber");
      e > 0 && e < 100 || (e = 5);
      var a = this.scale.getMinorTicks(e), n = G(a, function(i) {
        return G(i, function(o) {
          return {
            coord: this.dataToCoord(o),
            tickValue: o
          };
        }, this);
      }, this);
      return n;
    }, r.prototype.getViewLabels = function() {
      return sI(this).labels;
    }, r.prototype.getLabelModel = function() {
      return this.model.getModel("axisLabel");
    }, r.prototype.getTickModel = function() {
      return this.model.getModel("axisTick");
    }, r.prototype.getBandWidth = function() {
      var t = this._extent, e = this.scale.getExtent(), a = e[1] - e[0] + (this.onBand ? 1 : 0);
      a === 0 && (a = 1);
      var n = Math.abs(t[1] - t[0]);
      return Math.abs(n) / a;
    }, r.prototype.calculateCategoryInterval = function() {
      return hI(this);
    }, r;
  }()
);
function Od(r, t) {
  var e = r[1] - r[0], a = t, n = e / a / 2;
  r[0] += n, r[1] -= n;
}
function dI(r, t, e, a) {
  var n = t.length;
  if (!r.onBand || e || !n)
    return;
  var i = r.getExtent(), o, s;
  if (n === 1)
    t[0].coord = i[0], o = t[1] = {
      coord: i[1]
    };
  else {
    var l = t[n - 1].tickValue - t[0].tickValue, u = (t[n - 1].coord - t[0].coord) / l;
    w(t, function(h) {
      h.coord -= u / 2;
    });
    var c = r.scale.getExtent();
    s = 1 + c[1] - t[n - 1].tickValue, o = {
      coord: t[n - 1].coord + u * s
    }, t.push(o);
  }
  var v = i[0] > i[1];
  f(t[0].coord, i[0]) && (a ? t[0].coord = i[0] : t.shift()), a && f(i[0], t[0].coord) && t.unshift({
    coord: i[0]
  }), f(i[1], o.coord) && (a ? o.coord = i[1] : t.pop()), a && f(o.coord, i[1]) && t.push({
    coord: i[1]
  });
  function f(h, p) {
    return h = ze(h), p = ze(p), v ? h > p : h < p;
  }
}
var hi = Math.PI * 2, fa = H0.CMD, gI = ["top", "right", "bottom", "left"];
function yI(r, t, e, a, n) {
  var i = e.width, o = e.height;
  switch (r) {
    case "top":
      a.set(e.x + i / 2, e.y - t), n.set(0, -1);
      break;
    case "bottom":
      a.set(e.x + i / 2, e.y + o + t), n.set(0, 1);
      break;
    case "left":
      a.set(e.x - t, e.y + o / 2), n.set(-1, 0);
      break;
    case "right":
      a.set(e.x + i + t, e.y + o / 2), n.set(1, 0);
      break;
  }
}
function mI(r, t, e, a, n, i, o, s, l) {
  o -= r, s -= t;
  var u = Math.sqrt(o * o + s * s);
  o /= u, s /= u;
  var c = o * e + r, v = s * e + t;
  if (Math.abs(a - n) % hi < 1e-4)
    return l[0] = c, l[1] = v, u - e;
  if (i) {
    var f = a;
    a = _r(n), n = _r(f);
  } else
    a = _r(a), n = _r(n);
  a > n && (n += hi);
  var h = Math.atan2(s, o);
  if (h < 0 && (h += hi), h >= a && h <= n || h + hi >= a && h + hi <= n)
    return l[0] = c, l[1] = v, u - e;
  var p = e * Math.cos(a) + r, d = e * Math.sin(a) + t, g = e * Math.cos(n) + r, y = e * Math.sin(n) + t, m = (p - o) * (p - o) + (d - s) * (d - s), _ = (g - o) * (g - o) + (y - s) * (y - s);
  return m < _ ? (l[0] = p, l[1] = d, Math.sqrt(m)) : (l[0] = g, l[1] = y, Math.sqrt(_));
}
function Qs(r, t, e, a, n, i, o, s) {
  var l = n - r, u = i - t, c = e - r, v = a - t, f = Math.sqrt(c * c + v * v);
  c /= f, v /= f;
  var h = l * c + u * v, p = h / f;
  s && (p = Math.min(Math.max(p, 0), 1)), p *= f;
  var d = o[0] = r + p * c, g = o[1] = t + p * v;
  return Math.sqrt((d - n) * (d - n) + (g - i) * (g - i));
}
function Tx(r, t, e, a, n, i, o) {
  e < 0 && (r = r + e, e = -e), a < 0 && (t = t + a, a = -a);
  var s = r + e, l = t + a, u = o[0] = Math.min(Math.max(n, r), s), c = o[1] = Math.min(Math.max(i, t), l);
  return Math.sqrt((u - n) * (u - n) + (c - i) * (c - i));
}
var Kt = [];
function _I(r, t, e) {
  var a = Tx(t.x, t.y, t.width, t.height, r.x, r.y, Kt);
  return e.set(Kt[0], Kt[1]), a;
}
function SI(r, t, e) {
  for (var a = 0, n = 0, i = 0, o = 0, s, l, u = 1 / 0, c = t.data, v = r.x, f = r.y, h = 0; h < c.length; ) {
    var p = c[h++];
    h === 1 && (a = c[h], n = c[h + 1], i = a, o = n);
    var d = u;
    switch (p) {
      case fa.M:
        i = c[h++], o = c[h++], a = i, n = o;
        break;
      case fa.L:
        d = Qs(a, n, c[h], c[h + 1], v, f, Kt, !0), a = c[h++], n = c[h++];
        break;
      case fa.C:
        d = Iw(a, n, c[h++], c[h++], c[h++], c[h++], c[h], c[h + 1], v, f, Kt), a = c[h++], n = c[h++];
        break;
      case fa.Q:
        d = Mw(a, n, c[h++], c[h++], c[h], c[h + 1], v, f, Kt), a = c[h++], n = c[h++];
        break;
      case fa.A:
        var g = c[h++], y = c[h++], m = c[h++], _ = c[h++], S = c[h++], x = c[h++];
        h += 1;
        var b = !!(1 - c[h++]);
        s = Math.cos(S) * m + g, l = Math.sin(S) * _ + y, h <= 1 && (i = s, o = l);
        var D = (v - g) * _ / m + g;
        d = mI(g, y, _, S, S + x, b, D, f, Kt), a = Math.cos(S + x) * m + g, n = Math.sin(S + x) * _ + y;
        break;
      case fa.R:
        i = a = c[h++], o = n = c[h++];
        var A = c[h++], T = c[h++];
        d = Tx(i, o, A, T, v, f, Kt);
        break;
      case fa.Z:
        d = Qs(a, n, i, o, v, f, Kt, !0), a = i, n = o;
        break;
    }
    d < u && (u = d, e.set(Kt[0], Kt[1]));
  }
  return u;
}
var jt = new Ue(), Me = new Ue(), Ge = new Ue(), ur = new Ue(), ir = new Ue();
function Vd(r, t) {
  if (r) {
    var e = r.getTextGuideLine(), a = r.getTextContent();
    if (a && e) {
      var n = r.textGuideLineConfig || {}, i = [[0, 0], [0, 0], [0, 0]], o = n.candidates || gI, s = a.getBoundingRect().clone();
      s.applyTransform(a.getComputedTransform());
      var l = 1 / 0, u = n.anchor, c = r.getComputedTransform(), v = c && lo([], c), f = t.get("length2") || 0;
      u && Ge.copy(u);
      for (var h = 0; h < o.length; h++) {
        var p = o[h];
        yI(p, 0, s, jt, ur), Ue.scaleAndAdd(Me, jt, ur, f), Me.transform(v);
        var d = r.getBoundingRect(), g = u ? u.distance(Me) : r instanceof Ee ? SI(Me, r.path, Ge) : _I(Me, d, Ge);
        g < l && (l = g, Me.transform(c), Ge.transform(c), Ge.toArray(i[0]), Me.toArray(i[1]), jt.toArray(i[2]));
      }
      Cx(i, t.get("minTurnAngle")), e.setShape({
        points: i
      });
    }
  }
}
var el = [], gt = new Ue();
function Cx(r, t) {
  if (t <= 180 && t > 0) {
    t = t / 180 * Math.PI, jt.fromArray(r[0]), Me.fromArray(r[1]), Ge.fromArray(r[2]), Ue.sub(ur, jt, Me), Ue.sub(ir, Ge, Me);
    var e = ur.len(), a = ir.len();
    if (!(e < 1e-3 || a < 1e-3)) {
      ur.scale(1 / e), ir.scale(1 / a);
      var n = ur.dot(ir), i = Math.cos(t);
      if (i < n) {
        var o = Qs(Me.x, Me.y, Ge.x, Ge.y, jt.x, jt.y, el, !1);
        gt.fromArray(el), gt.scaleAndAdd(ir, o / Math.tan(Math.PI - t));
        var s = Ge.x !== Me.x ? (gt.x - Me.x) / (Ge.x - Me.x) : (gt.y - Me.y) / (Ge.y - Me.y);
        if (isNaN(s))
          return;
        s < 0 ? Ue.copy(gt, Me) : s > 1 && Ue.copy(gt, Ge), gt.toArray(r[1]);
      }
    }
  }
}
function xI(r, t, e) {
  if (e <= 180 && e > 0) {
    e = e / 180 * Math.PI, jt.fromArray(r[0]), Me.fromArray(r[1]), Ge.fromArray(r[2]), Ue.sub(ur, Me, jt), Ue.sub(ir, Ge, Me);
    var a = ur.len(), n = ir.len();
    if (!(a < 1e-3 || n < 1e-3)) {
      ur.scale(1 / a), ir.scale(1 / n);
      var i = ur.dot(t), o = Math.cos(e);
      if (i < o) {
        var s = Qs(Me.x, Me.y, Ge.x, Ge.y, jt.x, jt.y, el, !1);
        gt.fromArray(el);
        var l = Math.PI / 2, u = Math.acos(ir.dot(t)), c = l + u - e;
        if (c >= l)
          Ue.copy(gt, Ge);
        else {
          gt.scaleAndAdd(ir, s / Math.tan(Math.PI / 2 - c));
          var v = Ge.x !== Me.x ? (gt.x - Me.x) / (Ge.x - Me.x) : (gt.y - Me.y) / (Ge.y - Me.y);
          if (isNaN(v))
            return;
          v < 0 ? Ue.copy(gt, Me) : v > 1 && Ue.copy(gt, Ge);
        }
        gt.toArray(r[1]);
      }
    }
  }
}
function Pu(r, t, e, a) {
  var n = e === "normal", i = n ? r : r.ensureState(e);
  i.ignore = t;
  var o = a.get("smooth");
  o && o === !0 && (o = 0.3), i.shape = i.shape || {}, o > 0 && (i.shape.smooth = o);
  var s = a.getModel("lineStyle").getLineStyle();
  n ? r.useStyle(s) : i.style = s;
}
function bI(r, t) {
  var e = t.smooth, a = t.points;
  if (a)
    if (r.moveTo(a[0][0], a[0][1]), e > 0 && a.length >= 3) {
      var n = wa(a[0], a[1]), i = wa(a[1], a[2]);
      if (!n || !i) {
        r.lineTo(a[1][0], a[1][1]), r.lineTo(a[2][0], a[2][1]);
        return;
      }
      var o = Math.min(n, i) * e, s = Jl([], a[1], a[0], o / n), l = Jl([], a[1], a[2], o / i), u = Jl([], s, l, 0.5);
      r.bezierCurveTo(s[0], s[1], s[0], s[1], u[0], u[1]), r.bezierCurveTo(l[0], l[1], l[0], l[1], a[2][0], a[2][1]);
    } else
      for (var c = 1; c < a.length; c++)
        r.lineTo(a[c][0], a[c][1]);
}
function qf(r, t, e) {
  var a = r.getTextGuideLine(), n = r.getTextContent();
  if (!n) {
    a && r.removeTextGuideLine();
    return;
  }
  for (var i = t.normal, o = i.get("show"), s = n.ignore, l = 0; l < Ui.length; l++) {
    var u = Ui[l], c = t[u], v = u === "normal";
    if (c) {
      var f = c.get("show"), h = v ? s : ce(n.states[u] && n.states[u].ignore, s);
      if (h || !ce(f, o)) {
        var p = v ? a : a && a.states[u];
        p && (p.ignore = !0), a && Pu(a, !0, u, c);
        continue;
      }
      a || (a = new Ct(), r.setTextGuideLine(a), !v && (s || !o) && Pu(a, !0, "normal", t.normal), r.stateProxy && (a.stateProxy = r.stateProxy)), Pu(a, !1, u, c);
    }
  }
  if (a) {
    ee(a.style, e), a.style.fill = null;
    var d = i.get("showAbove"), g = r.textGuideLineConfig = r.textGuideLineConfig || {};
    g.showAbove = d || !1, a.buildPath = bI;
  }
}
function jf(r, t) {
  t = t || "labelLine";
  for (var e = {
    normal: r.getModel(t)
  }, a = 0; a < xt.length; a++) {
    var n = xt[a];
    e[n] = r.getModel([n, t]);
  }
  return e;
}
function Mx(r) {
  for (var t = [], e = 0; e < r.length; e++) {
    var a = r[e];
    if (!a.defaultAttr.ignore) {
      var n = a.label, i = n.getComputedTransform(), o = n.getBoundingRect(), s = !i || i[1] < 1e-5 && i[2] < 1e-5, l = n.style.margin || 0, u = o.clone();
      u.applyTransform(i), u.x -= l / 2, u.y -= l / 2, u.width += l, u.height += l;
      var c = s ? new Ps(o, i) : null;
      t.push({
        label: n,
        labelLine: a.labelLine,
        rect: u,
        localRect: o,
        obb: c,
        priority: a.priority,
        defaultAttr: a.defaultAttr,
        layoutOption: a.computedLayoutOption,
        axisAligned: s,
        transform: i
      });
    }
  }
  return t;
}
function Ix(r, t, e, a, n, i) {
  var o = r.length;
  if (o < 2)
    return;
  r.sort(function(A, T) {
    return A.rect[t] - T.rect[t];
  });
  for (var s = 0, l, u = !1, c = 0, v = 0; v < o; v++) {
    var f = r[v], h = f.rect;
    l = h[t] - s, l < 0 && (h[t] -= l, f.label[t] -= l, u = !0);
    var p = Math.max(-l, 0);
    c += p, s = h[t] + h[e];
  }
  c > 0 && i && x(-c / o, 0, o);
  var d = r[0], g = r[o - 1], y, m;
  _(), y < 0 && b(-y, 0.8), m < 0 && b(m, 0.8), _(), S(y, m, 1), S(m, y, -1), _(), y < 0 && D(-y), m < 0 && D(m);
  function _() {
    y = d.rect[t] - a, m = n - g.rect[t] - g.rect[e];
  }
  function S(A, T, C) {
    if (A < 0) {
      var M = Math.min(T, -A);
      if (M > 0) {
        x(M * C, 0, o);
        var I = M + A;
        I < 0 && b(-I * C, 1);
      } else
        b(-A * C, 1);
    }
  }
  function x(A, T, C) {
    A !== 0 && (u = !0);
    for (var M = T; M < C; M++) {
      var I = r[M], L = I.rect;
      L[t] += A, I.label[t] += A;
    }
  }
  function b(A, T) {
    for (var C = [], M = 0, I = 1; I < o; I++) {
      var L = r[I - 1].rect, P = Math.max(r[I].rect[t] - L[t] - L[e], 0);
      C.push(P), M += P;
    }
    if (M) {
      var E = Math.min(Math.abs(A) / M, T);
      if (A > 0)
        for (var I = 0; I < o - 1; I++) {
          var N = C[I] * E;
          x(N, 0, I + 1);
        }
      else
        for (var I = o - 1; I > 0; I--) {
          var N = C[I - 1] * E;
          x(-N, I, o);
        }
    }
  }
  function D(A) {
    var T = A < 0 ? -1 : 1;
    A = Math.abs(A);
    for (var C = Math.ceil(A / (o - 1)), M = 0; M < o - 1; M++)
      if (T > 0 ? x(C, 0, M + 1) : x(-C, o - M - 1, o), A -= C, A <= 0)
        return;
  }
  return u;
}
function wI(r, t, e, a) {
  return Ix(r, "x", "width", t, e, a);
}
function Lx(r, t, e, a) {
  return Ix(r, "y", "height", t, e, a);
}
function Ex(r) {
  var t = [];
  r.sort(function(d, g) {
    return g.priority - d.priority;
  });
  var e = new Te(0, 0, 0, 0);
  function a(d) {
    if (!d.ignore) {
      var g = d.ensureState("emphasis");
      g.ignore == null && (g.ignore = !1);
    }
    d.ignore = !0;
  }
  for (var n = 0; n < r.length; n++) {
    var i = r[n], o = i.axisAligned, s = i.localRect, l = i.transform, u = i.label, c = i.labelLine;
    e.copy(i.rect), e.width -= 0.1, e.height -= 0.1, e.x += 0.05, e.y += 0.05;
    for (var v = i.obb, f = !1, h = 0; h < t.length; h++) {
      var p = t[h];
      if (e.intersect(p.rect)) {
        if (o && p.axisAligned) {
          f = !0;
          break;
        }
        if (p.obb || (p.obb = new Ps(p.localRect, p.transform)), v || (v = new Ps(s, l)), v.intersect(p.obb)) {
          f = !0;
          break;
        }
      }
    }
    f ? (a(u), c && a(c)) : (u.attr("ignore", i.defaultAttr.ignore), c && c.attr("ignore", i.defaultAttr.labelGuideIgnore), t.push(i));
  }
}
function DI(r) {
  if (r) {
    for (var t = [], e = 0; e < r.length; e++)
      t.push(r[e].slice());
    return t;
  }
}
function AI(r, t) {
  var e = r.label, a = t && t.getTextGuideLine();
  return {
    dataIndex: r.dataIndex,
    dataType: r.dataType,
    seriesIndex: r.seriesModel.seriesIndex,
    text: r.label.style.text,
    rect: r.hostRect,
    labelRect: r.rect,
    // x: labelAttr.x,
    // y: labelAttr.y,
    align: e.style.align,
    verticalAlign: e.style.verticalAlign,
    labelLinePoints: DI(a && a.shape.points)
  };
}
var Bd = ["align", "verticalAlign", "width", "height", "fontSize"], ht = new gn(), Nu = ue(), TI = ue();
function Yo(r, t, e) {
  for (var a = 0; a < e.length; a++) {
    var n = e[a];
    t[n] != null && (r[n] = t[n]);
  }
}
var Zo = ["x", "y", "rotation"], CI = (
  /** @class */
  function() {
    function r() {
      this._labelList = [], this._chartViewList = [];
    }
    return r.prototype.clearLabels = function() {
      this._labelList = [], this._chartViewList = [];
    }, r.prototype._addLabel = function(t, e, a, n, i) {
      var o = n.style, s = n.__hostTarget, l = s.textConfig || {}, u = n.getComputedTransform(), c = n.getBoundingRect().plain();
      Te.applyTransform(c, c, u), u ? ht.setLocalTransform(u) : (ht.x = ht.y = ht.rotation = ht.originX = ht.originY = 0, ht.scaleX = ht.scaleY = 1), ht.rotation = _r(ht.rotation);
      var v = n.__hostTarget, f;
      if (v) {
        f = v.getBoundingRect().plain();
        var h = v.getComputedTransform();
        Te.applyTransform(f, f, h);
      }
      var p = f && v.getTextGuideLine();
      this._labelList.push({
        label: n,
        labelLine: p,
        seriesModel: a,
        dataIndex: t,
        dataType: e,
        layoutOption: i,
        computedLayoutOption: null,
        rect: c,
        hostRect: f,
        // Label with lower priority will be hidden when overlapped
        // Use rect size as default priority
        priority: f ? f.width * f.height : 0,
        // Save default label attributes.
        // For restore if developers want get back to default value in callback.
        defaultAttr: {
          ignore: n.ignore,
          labelGuideIgnore: p && p.ignore,
          x: ht.x,
          y: ht.y,
          scaleX: ht.scaleX,
          scaleY: ht.scaleY,
          rotation: ht.rotation,
          style: {
            x: o.x,
            y: o.y,
            align: o.align,
            verticalAlign: o.verticalAlign,
            width: o.width,
            height: o.height,
            fontSize: o.fontSize
          },
          cursor: n.cursor,
          attachedPos: l.position,
          attachedRot: l.rotation
        }
      });
    }, r.prototype.addLabelsOfSeries = function(t) {
      var e = this;
      this._chartViewList.push(t);
      var a = t.__model, n = a.get("labelLayout");
      (X(n) || Fe(n).length) && t.group.traverse(function(i) {
        if (i.ignore)
          return !0;
        var o = i.getTextContent(), s = j(i);
        o && !o.disableLabelLayout && e._addLabel(s.dataIndex, s.dataType, a, o, n);
      });
    }, r.prototype.updateLayoutConfig = function(t) {
      var e = t.getWidth(), a = t.getHeight();
      function n(_, S) {
        return function() {
          Vd(_, S);
        };
      }
      for (var i = 0; i < this._labelList.length; i++) {
        var o = this._labelList[i], s = o.label, l = s.__hostTarget, u = o.defaultAttr, c = void 0;
        X(o.layoutOption) ? c = o.layoutOption(AI(o, l)) : c = o.layoutOption, c = c || {}, o.computedLayoutOption = c;
        var v = Math.PI / 180;
        l && l.setTextConfig({
          // Force to set local false.
          local: !1,
          // Ignore position and rotation config on the host el if x or y is changed.
          position: c.x != null || c.y != null ? null : u.attachedPos,
          // Ignore rotation config on the host el if rotation is changed.
          rotation: c.rotate != null ? c.rotate * v : u.attachedRot,
          offset: [c.dx || 0, c.dy || 0]
        });
        var f = !1;
        if (c.x != null ? (s.x = H(c.x, e), s.setStyle("x", 0), f = !0) : (s.x = u.x, s.setStyle("x", u.style.x)), c.y != null ? (s.y = H(c.y, a), s.setStyle("y", 0), f = !0) : (s.y = u.y, s.setStyle("y", u.style.y)), c.labelLinePoints) {
          var h = l.getTextGuideLine();
          h && (h.setShape({
            points: c.labelLinePoints
          }), f = !1);
        }
        var p = Nu(s);
        p.needsUpdateLabelLine = f, s.rotation = c.rotate != null ? c.rotate * v : u.rotation, s.scaleX = u.scaleX, s.scaleY = u.scaleY;
        for (var d = 0; d < Bd.length; d++) {
          var g = Bd[d];
          s.setStyle(g, c[g] != null ? c[g] : u.style[g]);
        }
        if (c.draggable) {
          if (s.draggable = !0, s.cursor = "move", l) {
            var y = o.seriesModel;
            if (o.dataIndex != null) {
              var m = o.seriesModel.getData(o.dataType);
              y = m.getItemModel(o.dataIndex);
            }
            s.on("drag", n(l, y.getModel("labelLine")));
          }
        } else
          s.off("drag"), s.cursor = u.cursor;
      }
    }, r.prototype.layout = function(t) {
      var e = t.getWidth(), a = t.getHeight(), n = Mx(this._labelList), i = Ae(n, function(l) {
        return l.layoutOption.moveOverlap === "shiftX";
      }), o = Ae(n, function(l) {
        return l.layoutOption.moveOverlap === "shiftY";
      });
      wI(i, 0, e), Lx(o, 0, a);
      var s = Ae(n, function(l) {
        return l.layoutOption.hideOverlap;
      });
      Ex(s);
    }, r.prototype.processLabelsOverall = function() {
      var t = this;
      w(this._chartViewList, function(e) {
        var a = e.__model, n = e.ignoreLabelLineUpdate, i = a.isAnimationEnabled();
        e.group.traverse(function(o) {
          if (o.ignore && !o.forceLabelAnimation)
            return !0;
          var s = !n, l = o.getTextContent();
          !s && l && (s = Nu(l).needsUpdateLabelLine), s && t._updateLabelLine(o, a), i && t._animateLabels(o, a);
        });
      });
    }, r.prototype._updateLabelLine = function(t, e) {
      var a = t.getTextContent(), n = j(t), i = n.dataIndex;
      if (a && i != null) {
        var o = e.getData(n.dataType), s = o.getItemModel(i), l = {}, u = o.getItemVisual(i, "style");
        if (u) {
          var c = o.getVisual("drawType");
          l.stroke = u[c];
        }
        var v = s.getModel("labelLine");
        qf(t, jf(s), l), Vd(t, v);
      }
    }, r.prototype._animateLabels = function(t, e) {
      var a = t.getTextContent(), n = t.getTextGuideLine();
      if (a && (t.forceLabelAnimation || !a.ignore && !a.invisible && !t.disableLabelAnimation && !mn(t))) {
        var i = Nu(a), o = i.oldLayout, s = j(t), l = s.dataIndex, u = {
          x: a.x,
          y: a.y,
          rotation: a.rotation
        }, c = e.getData(s.dataType);
        if (o) {
          a.attr(o);
          var f = t.prevStates;
          f && (fe(f, "select") >= 0 && a.attr(i.oldLayoutSelect), fe(f, "emphasis") >= 0 && a.attr(i.oldLayoutEmphasis)), pe(a, u, e, l);
        } else if (a.attr(u), !Un(a).valueAnimation) {
          var v = ce(a.style.opacity, 1);
          a.style.opacity = 0, Pe(a, {
            style: {
              opacity: v
            }
          }, e, l);
        }
        if (i.oldLayout = u, a.states.select) {
          var h = i.oldLayoutSelect = {};
          Yo(h, u, Zo), Yo(h, a.states.select, Zo);
        }
        if (a.states.emphasis) {
          var p = i.oldLayoutEmphasis = {};
          Yo(p, u, Zo), Yo(p, a.states.emphasis, Zo);
        }
        A_(a, l, c, e, e);
      }
      if (n && !n.ignore && !n.invisible) {
        var i = TI(n), o = i.oldLayout, d = {
          points: n.shape.points
        };
        o ? (n.attr({
          shape: o
        }), pe(n, {
          shape: d
        }, e)) : (n.setShape(d), n.style.strokePercent = 0, Pe(n, {
          style: {
            strokePercent: 1
          }
        }, e)), i.oldLayout = d;
      }
    }, r;
  }()
), Ru = ue();
function MI(r) {
  r.registerUpdateLifecycle("series:beforeupdate", function(t, e, a) {
    var n = Ru(e).labelManager;
    n || (n = Ru(e).labelManager = new CI()), n.clearLabels();
  }), r.registerUpdateLifecycle("series:layoutlabels", function(t, e, a) {
    var n = Ru(e).labelManager;
    a.updatedSeries.forEach(function(i) {
      n.addLabelsOfSeries(e.getViewOfSeriesModel(i));
    }), n.updateLayoutConfig(e), n.layout(e), n.processLabelsOverall();
  });
}
function II(r) {
  r.registerPainter("svg", Lw);
}
function LI(r) {
  r.registerPainter("canvas", Ew);
}
var EI = { env: {} }, PI = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.hasSymbolVisual = !0, e;
    }
    return t.prototype.getInitialData = function(e) {
      if (EI.env.NODE_ENV !== "production") {
        var a = e.coordinateSystem;
        if (a !== "polar" && a !== "cartesian2d")
          throw new Error("Line not support coordinateSystem besides cartesian and polar");
      }
      return Pr(null, this, {
        useEncodeDefaulter: !0
      });
    }, t.prototype.getLegendIcon = function(e) {
      var a = new re(), n = Ze("line", 0, e.itemHeight / 2, e.itemWidth, 0, e.lineStyle.stroke, !1);
      a.add(n), n.setStyle(e.lineStyle);
      var i = this.getData().getVisual("symbol"), o = this.getData().getVisual("symbolRotate"), s = i === "none" ? "circle" : i, l = e.itemHeight * 0.8, u = Ze(s, (e.itemWidth - l) / 2, (e.itemHeight - l) / 2, l, l, e.itemStyle.fill);
      a.add(u), u.setStyle(e.itemStyle);
      var c = e.iconRotate === "inherit" ? o : e.iconRotate || 0;
      return u.rotation = c * Math.PI / 180, u.setOrigin([e.itemWidth / 2, e.itemHeight / 2]), s.indexOf("empty") > -1 && (u.style.stroke = u.style.fill, u.style.fill = "#fff", u.style.lineWidth = 2), a;
    }, t.type = "series.line", t.dependencies = ["grid", "polar"], t.defaultOption = {
      // zlevel: 0,
      z: 3,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      clip: !0,
      label: {
        position: "top"
      },
      // itemStyle: {
      // },
      endLabel: {
        show: !1,
        valueAnimation: !0,
        distance: 8
      },
      lineStyle: {
        width: 2,
        type: "solid"
      },
      emphasis: {
        scale: !0
      },
      // areaStyle: {
      // origin of areaStyle. Valid values:
      // `'auto'/null/undefined`: from axisLine to data
      // `'start'`: from min to data
      // `'end'`: from data to max
      // origin: 'auto'
      // },
      // false, 'start', 'end', 'middle'
      step: !1,
      // Disabled if step is true
      smooth: !1,
      smoothMonotone: null,
      symbol: "emptyCircle",
      symbolSize: 4,
      symbolRotate: null,
      showSymbol: !0,
      // `false`: follow the label interval strategy.
      // `true`: show all symbols.
      // `'auto'`: If possible, show all symbols, otherwise
      //           follow the label interval strategy.
      showAllSymbol: "auto",
      // Whether to connect break point.
      connectNulls: !1,
      // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.
      sampling: "none",
      animationEasing: "linear",
      // Disable progressive
      progressive: 0,
      hoverLayerThreshold: 1 / 0,
      universalTransition: {
        divideShape: "clone"
      },
      triggerLineEvent: !1
    }, t;
  }(Le)
);
function En(r, t) {
  var e = r.mapDimensionsAll("defaultedLabel"), a = e.length;
  if (a === 1) {
    var n = Mn(r, t, e[0]);
    return n != null ? n + "" : null;
  } else if (a) {
    for (var i = [], o = 0; o < e.length; o++)
      i.push(Mn(r, t, e[o]));
    return i.join(" ");
  }
}
function Px(r, t) {
  var e = r.mapDimensionsAll("defaultedLabel");
  if (!B(t))
    return t + "";
  for (var a = [], n = 0; n < e.length; n++) {
    var i = r.getDimensionIndex(e[n]);
    i >= 0 && a.push(t[i]);
  }
  return a.join(" ");
}
var So = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n, i) {
      var o = r.call(this) || this;
      return o.updateData(e, a, n, i), o;
    }
    return t.prototype._createSymbol = function(e, a, n, i, o) {
      this.removeAll();
      var s = Ze(e, -1, -1, 2, 2, null, o);
      s.attr({
        z2: 100,
        culling: !0,
        scaleX: i[0] / 2,
        scaleY: i[1] / 2
      }), s.drift = NI, this._symbolType = e, this.add(s);
    }, t.prototype.stopSymbolAnimation = function(e) {
      this.childAt(0).stopAnimation(null, e);
    }, t.prototype.getSymbolType = function() {
      return this._symbolType;
    }, t.prototype.getSymbolPath = function() {
      return this.childAt(0);
    }, t.prototype.highlight = function() {
      Ar(this.childAt(0));
    }, t.prototype.downplay = function() {
      Tr(this.childAt(0));
    }, t.prototype.setZ = function(e, a) {
      var n = this.childAt(0);
      n.zlevel = e, n.z = a;
    }, t.prototype.setDraggable = function(e, a) {
      var n = this.childAt(0);
      n.draggable = e, n.cursor = !a && e ? "move" : n.cursor;
    }, t.prototype.updateData = function(e, a, n, i) {
      this.silent = !1;
      var o = e.getItemVisual(a, "symbol") || "circle", s = e.hostModel, l = t.getSymbolSize(e, a), u = o !== this._symbolType, c = i && i.disableAnimation;
      if (u) {
        var v = e.getItemVisual(a, "symbolKeepAspect");
        this._createSymbol(o, e, a, l, v);
      } else {
        var f = this.childAt(0);
        f.silent = !1;
        var h = {
          scaleX: l[0] / 2,
          scaleY: l[1] / 2
        };
        c ? f.attr(h) : pe(f, h, s, a), er(f);
      }
      if (this._updateCommon(e, a, l, n, i), u) {
        var f = this.childAt(0);
        if (!c) {
          var h = {
            scaleX: this._sizeX,
            scaleY: this._sizeY,
            style: {
              // Always fadeIn. Because it has fadeOut animation when symbol is removed..
              opacity: f.style.opacity
            }
          };
          f.scaleX = f.scaleY = 0, f.style.opacity = 0, Pe(f, h, s, a);
        }
      }
      c && this.childAt(0).stopAnimation("leave");
    }, t.prototype._updateCommon = function(e, a, n, i, o) {
      var s = this.childAt(0), l = e.hostModel, u, c, v, f, h, p, d, g, y;
      if (i && (u = i.emphasisItemStyle, c = i.blurItemStyle, v = i.selectItemStyle, f = i.focus, h = i.blurScope, d = i.labelStatesModels, g = i.hoverScale, y = i.cursorStyle, p = i.emphasisDisabled), !i || e.hasItemOption) {
        var m = i && i.itemModel ? i.itemModel : e.getItemModel(a), _ = m.getModel("emphasis");
        u = _.getModel("itemStyle").getItemStyle(), v = m.getModel(["select", "itemStyle"]).getItemStyle(), c = m.getModel(["blur", "itemStyle"]).getItemStyle(), f = _.get("focus"), h = _.get("blurScope"), p = _.get("disabled"), d = tt(m), g = _.getShallow("scale"), y = m.getShallow("cursor");
      }
      var S = e.getItemVisual(a, "symbolRotate");
      s.attr("rotation", (S || 0) * Math.PI / 180 || 0);
      var x = $a(e.getItemVisual(a, "symbolOffset"), n);
      x && (s.x = x[0], s.y = x[1]), y && s.attr("cursor", y);
      var b = e.getItemVisual(a, "style"), D = b.fill;
      if (s instanceof Ut) {
        var A = s.style;
        s.useStyle(z({
          // TODO other properties like x, y ?
          image: A.image,
          x: A.x,
          y: A.y,
          width: A.width,
          height: A.height
        }, b));
      } else
        s.__isEmptyBrush ? s.useStyle(z({}, b)) : s.useStyle(b), s.style.decal = null, s.setColor(D, o && o.symbolInnerColor), s.style.strokeNoScale = !0;
      var T = e.getItemVisual(a, "liftZ"), C = this._z2;
      T != null ? C == null && (this._z2 = s.z2, s.z2 += T) : C != null && (s.z2 = C, this._z2 = null);
      var M = o && o.useNameLabel;
      lt(s, d, {
        labelFetcher: l,
        labelDataIndex: a,
        defaultText: I,
        inheritColor: D,
        defaultOpacity: b.opacity
      });
      function I(E) {
        return M ? e.getName(E) : En(e, E);
      }
      this._sizeX = n[0] / 2, this._sizeY = n[1] / 2;
      var L = s.ensureState("emphasis");
      L.style = u, s.ensureState("select").style = v, s.ensureState("blur").style = c;
      var P = g == null || g === !0 ? Math.max(1.1, 3 / this._sizeY) : isFinite(g) && g > 0 ? +g : 1;
      L.scaleX = this._sizeX * P, L.scaleY = this._sizeY * P, this.setSymbolScale(1), Be(this, f, h, p);
    }, t.prototype.setSymbolScale = function(e) {
      this.scaleX = this.scaleY = e;
    }, t.prototype.fadeOut = function(e, a, n) {
      var i = this.childAt(0), o = j(this).dataIndex, s = n && n.animation;
      if (this.silent = i.silent = !0, n && n.fadeLabel) {
        var l = i.getTextContent();
        l && Qr(l, {
          style: {
            opacity: 0
          }
        }, a, {
          dataIndex: o,
          removeOpt: s,
          cb: function() {
            i.removeTextContent();
          }
        });
      } else
        i.removeTextContent();
      Qr(i, {
        style: {
          opacity: 0
        },
        scaleX: 0,
        scaleY: 0
      }, a, {
        dataIndex: o,
        cb: e,
        removeOpt: s
      });
    }, t.getSymbolSize = function(e, a) {
      return Jn(e.getItemVisual(a, "symbolSize"));
    }, t;
  }(re)
);
function NI(r, t) {
  this.parent.drift(r, t);
}
function ku(r, t, e, a) {
  return t && !isNaN(t[0]) && !isNaN(t[1]) && !(a.isIgnore && a.isIgnore(e)) && !(a.clipShape && !a.clipShape.contain(t[0], t[1])) && r.getItemVisual(e, "symbol") !== "none";
}
function zd(r) {
  return r != null && !J(r) && (r = {
    isIgnore: r
  }), r || {};
}
function Gd(r) {
  var t = r.hostModel, e = t.getModel("emphasis");
  return {
    emphasisItemStyle: e.getModel("itemStyle").getItemStyle(),
    blurItemStyle: t.getModel(["blur", "itemStyle"]).getItemStyle(),
    selectItemStyle: t.getModel(["select", "itemStyle"]).getItemStyle(),
    focus: e.get("focus"),
    blurScope: e.get("blurScope"),
    emphasisDisabled: e.get("disabled"),
    hoverScale: e.get("scale"),
    labelStatesModels: tt(t),
    cursorStyle: t.get("cursor")
  };
}
var xo = (
  /** @class */
  function() {
    function r(t) {
      this.group = new re(), this._SymbolCtor = t || So;
    }
    return r.prototype.updateData = function(t, e) {
      this._progressiveEls = null, e = zd(e);
      var a = this.group, n = t.hostModel, i = this._data, o = this._SymbolCtor, s = e.disableAnimation, l = Gd(t), u = {
        disableAnimation: s
      }, c = e.getSymbolPoint || function(v) {
        return t.getItemLayout(v);
      };
      i || a.removeAll(), t.diff(i).add(function(v) {
        var f = c(v);
        if (ku(t, f, v, e)) {
          var h = new o(t, v, l, u);
          h.setPosition(f), t.setItemGraphicEl(v, h), a.add(h);
        }
      }).update(function(v, f) {
        var h = i.getItemGraphicEl(f), p = c(v);
        if (!ku(t, p, v, e)) {
          a.remove(h);
          return;
        }
        var d = t.getItemVisual(v, "symbol") || "circle", g = h && h.getSymbolType && h.getSymbolType();
        if (!h || g && g !== d)
          a.remove(h), h = new o(t, v, l, u), h.setPosition(p);
        else {
          h.updateData(t, v, l, u);
          var y = {
            x: p[0],
            y: p[1]
          };
          s ? h.attr(y) : pe(h, y, n);
        }
        a.add(h), t.setItemGraphicEl(v, h);
      }).remove(function(v) {
        var f = i.getItemGraphicEl(v);
        f && f.fadeOut(function() {
          a.remove(f);
        }, n);
      }).execute(), this._getSymbolPoint = c, this._data = t;
    }, r.prototype.updateLayout = function() {
      var t = this, e = this._data;
      e && e.eachItemGraphicEl(function(a, n) {
        var i = t._getSymbolPoint(n);
        a.setPosition(i), a.markRedraw();
      });
    }, r.prototype.incrementalPrepareUpdate = function(t) {
      this._seriesScope = Gd(t), this._data = null, this.group.removeAll();
    }, r.prototype.incrementalUpdate = function(t, e, a) {
      this._progressiveEls = [], a = zd(a);
      function n(l) {
        l.isGroup || (l.incremental = !0, l.ensureState("emphasis").hoverLayer = !0);
      }
      for (var i = t.start; i < t.end; i++) {
        var o = e.getItemLayout(i);
        if (ku(e, o, i, a)) {
          var s = new this._SymbolCtor(e, i, this._seriesScope);
          s.traverse(n), s.setPosition(o), this.group.add(s), e.setItemGraphicEl(i, s), this._progressiveEls.push(s);
        }
      }
    }, r.prototype.eachRendered = function(t) {
      ia(this._progressiveEls || this.group, t);
    }, r.prototype.remove = function(t) {
      var e = this.group, a = this._data;
      a && t ? a.eachItemGraphicEl(function(n) {
        n.fadeOut(function() {
          e.remove(n);
        }, a.hostModel);
      }) : e.removeAll();
    }, r;
  }()
);
function Nx(r, t, e) {
  var a = r.getBaseAxis(), n = r.getOtherAxis(a), i = RI(n, e), o = a.dim, s = n.dim, l = t.mapDimension(s), u = t.mapDimension(o), c = s === "x" || s === "radius" ? 1 : 0, v = G(r.dimensions, function(p) {
    return t.mapDimension(p);
  }), f = !1, h = t.getCalculationInfo("stackResultDimension");
  return ta(
    t,
    v[0]
    /* , dims[1] */
  ) && (f = !0, v[0] = h), ta(
    t,
    v[1]
    /* , dims[0] */
  ) && (f = !0, v[1] = h), {
    dataDimsForPoint: v,
    valueStart: i,
    valueAxisDim: s,
    baseAxisDim: o,
    stacked: !!f,
    valueDim: l,
    baseDim: u,
    baseDataOffset: c,
    stackedOverDimension: t.getCalculationInfo("stackedOverDimension")
  };
}
function RI(r, t) {
  var e = 0, a = r.scale.getExtent();
  return t === "start" ? e = a[0] : t === "end" ? e = a[1] : _e(t) && !isNaN(t) ? e = t : a[0] > 0 ? e = a[0] : a[1] < 0 && (e = a[1]), e;
}
function Rx(r, t, e, a) {
  var n = NaN;
  r.stacked && (n = e.get(e.getCalculationInfo("stackedOverDimension"), a)), isNaN(n) && (n = r.valueStart);
  var i = r.baseDataOffset, o = [];
  return o[i] = e.get(r.baseDim, a), o[1 - i] = n, t.dataToPoint(o);
}
function kI(r, t) {
  var e = [];
  return t.diff(r).add(function(a) {
    e.push({
      cmd: "+",
      idx: a
    });
  }).update(function(a, n) {
    e.push({
      cmd: "=",
      idx: n,
      idx1: a
    });
  }).remove(function(a) {
    e.push({
      cmd: "-",
      idx: a
    });
  }).execute(), e;
}
function OI(r, t, e, a, n, i, o, s) {
  for (var l = kI(r, t), u = [], c = [], v = [], f = [], h = [], p = [], d = [], g = Nx(n, t, o), y = r.getLayout("points") || [], m = t.getLayout("points") || [], _ = 0; _ < l.length; _++) {
    var S = l[_], x = !0, b = void 0, D = void 0;
    switch (S.cmd) {
      case "=":
        b = S.idx * 2, D = S.idx1 * 2;
        var A = y[b], T = y[b + 1], C = m[D], M = m[D + 1];
        (isNaN(A) || isNaN(T)) && (A = C, T = M), u.push(A, T), c.push(C, M), v.push(e[b], e[b + 1]), f.push(a[D], a[D + 1]), d.push(t.getRawIndex(S.idx1));
        break;
      case "+":
        var I = S.idx, L = g.dataDimsForPoint, P = n.dataToPoint([t.get(L[0], I), t.get(L[1], I)]);
        D = I * 2, u.push(P[0], P[1]), c.push(m[D], m[D + 1]);
        var E = Rx(g, n, t, I);
        v.push(E[0], E[1]), f.push(a[D], a[D + 1]), d.push(t.getRawIndex(I));
        break;
      case "-":
        x = !1;
    }
    x && (h.push(S), p.push(p.length));
  }
  p.sort(function(ge, Se) {
    return d[ge] - d[Se];
  });
  for (var N = u.length, O = lr(N), k = lr(N), V = lr(N), F = lr(N), W = [], _ = 0; _ < p.length; _++) {
    var q = p[_], ae = _ * 2, ie = q * 2;
    O[ae] = u[ie], O[ae + 1] = u[ie + 1], k[ae] = c[ie], k[ae + 1] = c[ie + 1], V[ae] = v[ie], V[ae + 1] = v[ie + 1], F[ae] = f[ie], F[ae + 1] = f[ie + 1], W[_] = h[q];
  }
  return {
    current: O,
    next: k,
    stackedOnCurrent: V,
    stackedOnNext: F,
    status: W
  };
}
var Vr = Math.min, Br = Math.max;
function Pa(r, t) {
  return isNaN(r) || isNaN(t);
}
function mv(r, t, e, a, n, i, o, s, l) {
  for (var u, c, v, f, h, p, d = e, g = 0; g < a; g++) {
    var y = t[d * 2], m = t[d * 2 + 1];
    if (d >= n || d < 0)
      break;
    if (Pa(y, m)) {
      if (l) {
        d += i;
        continue;
      }
      break;
    }
    if (d === e)
      r[i > 0 ? "moveTo" : "lineTo"](y, m), v = y, f = m;
    else {
      var _ = y - u, S = m - c;
      if (_ * _ + S * S < 0.5) {
        d += i;
        continue;
      }
      if (o > 0) {
        for (var x = d + i, b = t[x * 2], D = t[x * 2 + 1]; b === y && D === m && g < a; )
          g++, x += i, d += i, b = t[x * 2], D = t[x * 2 + 1], y = t[d * 2], m = t[d * 2 + 1], _ = y - u, S = m - c;
        var A = g + 1;
        if (l)
          for (; Pa(b, D) && A < a; )
            A++, x += i, b = t[x * 2], D = t[x * 2 + 1];
        var T = 0.5, C = 0, M = 0, I = void 0, L = void 0;
        if (A >= a || Pa(b, D))
          h = y, p = m;
        else {
          C = b - u, M = D - c;
          var P = y - u, E = b - y, N = m - c, O = D - m, k = void 0, V = void 0;
          if (s === "x") {
            k = Math.abs(P), V = Math.abs(E);
            var F = C > 0 ? 1 : -1;
            h = y - F * k * o, p = m, I = y + F * V * o, L = m;
          } else if (s === "y") {
            k = Math.abs(N), V = Math.abs(O);
            var W = M > 0 ? 1 : -1;
            h = y, p = m - W * k * o, I = y, L = m + W * V * o;
          } else
            k = Math.sqrt(P * P + N * N), V = Math.sqrt(E * E + O * O), T = V / (V + k), h = y - C * o * (1 - T), p = m - M * o * (1 - T), I = y + C * o * T, L = m + M * o * T, I = Vr(I, Br(b, y)), L = Vr(L, Br(D, m)), I = Br(I, Vr(b, y)), L = Br(L, Vr(D, m)), C = I - y, M = L - m, h = y - C * k / V, p = m - M * k / V, h = Vr(h, Br(u, y)), p = Vr(p, Br(c, m)), h = Br(h, Vr(u, y)), p = Br(p, Vr(c, m)), C = y - h, M = m - p, I = y + C * V / k, L = m + M * V / k;
        }
        r.bezierCurveTo(v, f, h, p, y, m), v = I, f = L;
      } else
        r.lineTo(y, m);
    }
    u = y, c = m, d += i;
  }
  return g;
}
var kx = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
      this.smooth = 0, this.smoothConstraint = !0;
    }
    return r;
  }()
), VI = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "ec-polyline", a;
    }
    return t.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, t.prototype.getDefaultShape = function() {
      return new kx();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.points, i = 0, o = n.length / 2;
      if (a.connectNulls) {
        for (; o > 0 && Pa(n[o * 2 - 2], n[o * 2 - 1]); o--)
          ;
        for (; i < o && Pa(n[i * 2], n[i * 2 + 1]); i++)
          ;
      }
      for (; i < o; )
        i += mv(e, n, i, o, o, 1, a.smooth, a.smoothMonotone, a.connectNulls) + 1;
    }, t.prototype.getPointOn = function(e, a) {
      this.path || (this.createPathProxy(), this.buildPath(this.path, this.shape));
      for (var n = this.path, i = n.data, o = H0.CMD, s, l, u = a === "x", c = [], v = 0; v < i.length; ) {
        var f = i[v++], h = void 0, p = void 0, d = void 0, g = void 0, y = void 0, m = void 0, _ = void 0;
        switch (f) {
          case o.M:
            s = i[v++], l = i[v++];
            break;
          case o.L:
            if (h = i[v++], p = i[v++], _ = u ? (e - s) / (h - s) : (e - l) / (p - l), _ <= 1 && _ >= 0) {
              var S = u ? (p - l) * _ + l : (h - s) * _ + s;
              return u ? [e, S] : [S, e];
            }
            s = h, l = p;
            break;
          case o.C:
            h = i[v++], p = i[v++], d = i[v++], g = i[v++], y = i[v++], m = i[v++];
            var x = u ? qh(s, h, d, y, e, c) : qh(l, p, g, m, e, c);
            if (x > 0)
              for (var b = 0; b < x; b++) {
                var D = c[b];
                if (D <= 1 && D >= 0) {
                  var S = u ? jh(l, p, g, m, D) : jh(s, h, d, y, D);
                  return u ? [e, S] : [S, e];
                }
              }
            s = y, l = m;
            break;
        }
      }
    }, t;
  }(Ee)
), BI = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t;
  }(kx)
), Ox = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "ec-polygon", a;
    }
    return t.prototype.getDefaultShape = function() {
      return new BI();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.points, i = a.stackedOnPoints, o = 0, s = n.length / 2, l = a.smoothMonotone;
      if (a.connectNulls) {
        for (; s > 0 && Pa(n[s * 2 - 2], n[s * 2 - 1]); s--)
          ;
        for (; o < s && Pa(n[o * 2], n[o * 2 + 1]); o++)
          ;
      }
      for (; o < s; ) {
        var u = mv(e, n, o, s, s, 1, a.smooth, l, a.connectNulls);
        mv(e, i, o + u - 1, u, s, -1, a.stackedOnSmooth, l, a.connectNulls), o += u + 1, e.closePath();
      }
    }, t;
  }(Ee)
);
function Vx(r, t, e, a, n) {
  var i = r.getArea(), o = i.x, s = i.y, l = i.width, u = i.height, c = e.get(["lineStyle", "width"]) || 2;
  o -= c / 2, s -= c / 2, l += c, u += c, l = Math.ceil(l), o !== Math.floor(o) && (o = Math.floor(o), l++);
  var v = new de({
    shape: {
      x: o,
      y: s,
      width: l,
      height: u
    }
  });
  if (t) {
    var f = r.getBaseAxis(), h = f.isHorizontal(), p = f.inverse;
    h ? (p && (v.shape.x += l), v.shape.width = 0) : (p || (v.shape.y += u), v.shape.height = 0);
    var d = X(n) ? function(g) {
      n(g, v);
    } : null;
    Pe(v, {
      shape: {
        width: l,
        height: u,
        x: o,
        y: s
      }
    }, e, null, a, d);
  }
  return v;
}
function Bx(r, t, e) {
  var a = r.getArea(), n = ze(a.r0, 1), i = ze(a.r, 1), o = new Ht({
    shape: {
      cx: ze(r.cx, 1),
      cy: ze(r.cy, 1),
      r0: n,
      r: i,
      startAngle: a.startAngle,
      endAngle: a.endAngle,
      clockwise: a.clockwise
    }
  });
  if (t) {
    var s = r.getBaseAxis().dim === "angle";
    s ? o.shape.endAngle = a.startAngle : o.shape.r = n, Pe(o, {
      shape: {
        endAngle: a.endAngle,
        r: i
      }
    }, e);
  }
  return o;
}
function bo(r, t, e, a, n) {
  if (r) {
    if (r.type === "polar")
      return Bx(r, t, e);
    if (r.type === "cartesian2d")
      return Vx(r, t, e, a, n);
  } else return null;
  return null;
}
function Za(r, t) {
  return r.type === t;
}
var _v = { env: {} };
function Fd(r, t) {
  if (r.length === t.length) {
    for (var e = 0; e < r.length; e++)
      if (r[e] !== t[e])
        return;
    return !0;
  }
}
function Hd(r) {
  for (var t = 1 / 0, e = 1 / 0, a = -1 / 0, n = -1 / 0, i = 0; i < r.length; ) {
    var o = r[i++], s = r[i++];
    isNaN(o) || (t = Math.min(o, t), a = Math.max(o, a)), isNaN(s) || (e = Math.min(s, e), n = Math.max(s, n));
  }
  return [[t, e], [a, n]];
}
function Wd(r, t) {
  var e = Hd(r), a = e[0], n = e[1], i = Hd(t), o = i[0], s = i[1];
  return Math.max(Math.abs(a[0] - o[0]), Math.abs(a[1] - o[1]), Math.abs(n[0] - s[0]), Math.abs(n[1] - s[1]));
}
function Ud(r) {
  return _e(r) ? r : r ? 0.5 : 0;
}
function zI(r, t, e) {
  if (!e.valueDim)
    return [];
  for (var a = t.count(), n = lr(a * 2), i = 0; i < a; i++) {
    var o = Rx(e, r, t, i);
    n[i * 2] = o[0], n[i * 2 + 1] = o[1];
  }
  return n;
}
function zr(r, t, e, a) {
  var n = t.getBaseAxis(), i = n.dim === "x" || n.dim === "radius" ? 0 : 1, o = [], s = 0, l = [], u = [], c = [], v = [];
  if (a) {
    for (s = 0; s < r.length; s += 2)
      !isNaN(r[s]) && !isNaN(r[s + 1]) && v.push(r[s], r[s + 1]);
    r = v;
  }
  for (s = 0; s < r.length - 2; s += 2)
    switch (c[0] = r[s + 2], c[1] = r[s + 3], u[0] = r[s], u[1] = r[s + 1], o.push(u[0], u[1]), e) {
      case "end":
        l[i] = c[i], l[1 - i] = u[1 - i], o.push(l[0], l[1]);
        break;
      case "middle":
        var f = (u[i] + c[i]) / 2, h = [];
        l[i] = h[i] = f, l[1 - i] = u[1 - i], h[1 - i] = c[1 - i], o.push(l[0], l[1]), o.push(h[0], h[1]);
        break;
      default:
        l[i] = u[i], l[1 - i] = c[1 - i], o.push(l[0], l[1]);
    }
  return o.push(r[s++], r[s++]), o;
}
function GI(r, t) {
  var e = [], a = r.length, n, i;
  function o(c, v, f) {
    var h = c.coord, p = (f - h) / (v.coord - h), d = Pw(p, [c.color, v.color]);
    return {
      coord: f,
      color: d
    };
  }
  for (var s = 0; s < a; s++) {
    var l = r[s], u = l.coord;
    if (u < 0)
      n = l;
    else if (u > t) {
      i ? e.push(o(i, l, t)) : n && e.push(o(n, l, 0), o(n, l, t));
      break;
    } else
      n && (e.push(o(n, l, 0)), n = null), e.push(l), i = l;
  }
  return e;
}
function FI(r, t, e) {
  var a = r.getVisual("visualMeta");
  if (!(!a || !a.length || !r.count())) {
    if (t.type !== "cartesian2d") {
      _v.env.NODE_ENV !== "production" && console.warn("Visual map on line style is only supported on cartesian2d.");
      return;
    }
    for (var n, i, o = a.length - 1; o >= 0; o--) {
      var s = r.getDimensionInfo(a[o].dimension);
      if (n = s && s.coordDim, n === "x" || n === "y") {
        i = a[o];
        break;
      }
    }
    if (!i) {
      _v.env.NODE_ENV !== "production" && console.warn("Visual map on line style only support x or y dimension.");
      return;
    }
    var l = t.getAxis(n), u = G(i.stops, function(_) {
      return {
        coord: l.toGlobalCoord(l.dataToCoord(_.value)),
        color: _.color
      };
    }), c = u.length, v = i.outerColors.slice();
    c && u[0].coord > u[c - 1].coord && (u.reverse(), v.reverse());
    var f = GI(u, n === "x" ? e.getWidth() : e.getHeight()), h = f.length;
    if (!h && c)
      return u[0].coord < 0 ? v[1] ? v[1] : u[c - 1].color : v[0] ? v[0] : u[0].color;
    var p = 10, d = f[0].coord - p, g = f[h - 1].coord + p, y = g - d;
    if (y < 1e-3)
      return "transparent";
    w(f, function(_) {
      _.offset = (_.coord - d) / y;
    }), f.push({
      // NOTE: inRangeStopLen may still be 0 if stoplen is zero.
      offset: h ? f[h - 1].offset : 0.5,
      color: v[1] || "transparent"
    }), f.unshift({
      offset: h ? f[0].offset : 0.5,
      color: v[0] || "transparent"
    });
    var m = new ml(0, 0, 0, 0, f, !0);
    return m[n] = d, m[n + "2"] = g, m;
  }
}
function HI(r, t, e) {
  var a = r.get("showAllSymbol"), n = a === "auto";
  if (!(a && !n)) {
    var i = e.getAxesByScale("ordinal")[0];
    if (i && !(n && WI(i, t))) {
      var o = t.mapDimension(i.dim), s = {};
      return w(i.getViewLabels(), function(l) {
        var u = i.scale.getRawOrdinalNumber(l.tickValue);
        s[u] = 1;
      }), function(l) {
        return !s.hasOwnProperty(t.get(o, l));
      };
    }
  }
}
function WI(r, t) {
  var e = r.getExtent(), a = Math.abs(e[1] - e[0]) / r.scale.count();
  isNaN(a) && (a = 0);
  for (var n = t.count(), i = Math.max(1, Math.round(n / 5)), o = 0; o < n; o += i)
    if (So.getSymbolSize(
      t,
      o
      // Only for cartesian, where `isHorizontal` exists.
    )[r.isHorizontal() ? 1 : 0] * 1.5 > a)
      return !1;
  return !0;
}
function UI(r, t) {
  return isNaN(r) || isNaN(t);
}
function $I(r) {
  for (var t = r.length / 2; t > 0 && UI(r[t * 2 - 2], r[t * 2 - 1]); t--)
    ;
  return t - 1;
}
function $d(r, t) {
  return [r[t * 2], r[t * 2 + 1]];
}
function YI(r, t, e) {
  for (var a = r.length / 2, n = e === "x" ? 0 : 1, i, o, s = 0, l = -1, u = 0; u < a; u++)
    if (o = r[u * 2 + n], !(isNaN(o) || isNaN(r[u * 2 + 1 - n]))) {
      if (u === 0) {
        i = o;
        continue;
      }
      if (i <= t && o >= t || i >= t && o <= t) {
        l = u;
        break;
      }
      s = u, i = o;
    }
  return {
    range: [s, l],
    t: (t - i) / (o - i)
  };
}
function zx(r) {
  if (r.get(["endLabel", "show"]))
    return !0;
  for (var t = 0; t < xt.length; t++)
    if (r.get([xt[t], "endLabel", "show"]))
      return !0;
  return !1;
}
function Ou(r, t, e, a) {
  if (Za(t, "cartesian2d")) {
    var n = a.getModel("endLabel"), i = n.get("valueAnimation"), o = a.getData(), s = {
      lastFrameIndex: 0
    }, l = zx(a) ? function(h, p) {
      r._endLabelOnDuring(h, p, o, s, i, n, t);
    } : null, u = t.getBaseAxis().isHorizontal(), c = Vx(t, e, a, function() {
      var h = r._endLabel;
      h && e && s.originalX != null && h.attr({
        x: s.originalX,
        y: s.originalY
      });
    }, l);
    if (!a.get("clip", !0)) {
      var v = c.shape, f = Math.max(v.width, v.height);
      u ? (v.y -= f, v.height += f * 2) : (v.x -= f, v.width += f * 2);
    }
    return l && l(1, c), c;
  } else
    return _v.env.NODE_ENV !== "production" && a.get(["endLabel", "show"]) && console.warn("endLabel is not supported for lines in polar systems."), Bx(t, e, a);
}
function ZI(r, t) {
  var e = t.getBaseAxis(), a = e.isHorizontal(), n = e.inverse, i = a ? n ? "right" : "left" : "center", o = a ? "middle" : n ? "top" : "bottom";
  return {
    normal: {
      align: r.get("align") || i,
      verticalAlign: r.get("verticalAlign") || o
    }
  };
}
var XI = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.init = function() {
      var e = new re(), a = new xo();
      this.group.add(a.group), this._symbolDraw = a, this._lineGroup = e;
    }, t.prototype.render = function(e, a, n) {
      var i = this, o = e.coordinateSystem, s = this.group, l = e.getData(), u = e.getModel("lineStyle"), c = e.getModel("areaStyle"), v = l.getLayout("points") || [], f = o.type === "polar", h = this._coordSys, p = this._symbolDraw, d = this._polyline, g = this._polygon, y = this._lineGroup, m = !a.ssr && e.get("animation"), _ = !c.isEmpty(), S = c.get("origin"), x = Nx(o, l, S), b = _ && zI(o, l, x), D = e.get("showSymbol"), A = e.get("connectNulls"), T = D && !f && HI(e, l, o), C = this._data;
      C && C.eachItemGraphicEl(function(Se, he) {
        Se.__temp && (s.remove(Se), C.setItemGraphicEl(he, null));
      }), D || p.remove(), s.add(y);
      var M = f ? !1 : e.get("step"), I;
      o && o.getArea && e.get("clip", !0) && (I = o.getArea(), I.width != null ? (I.x -= 0.1, I.y -= 0.1, I.width += 0.2, I.height += 0.2) : I.r0 && (I.r0 -= 0.5, I.r += 0.5)), this._clipShapeForSymbol = I;
      var L = FI(l, o, n) || l.getVisual("style")[l.getVisual("drawType")];
      if (!(d && h.type === o.type && M === this._step))
        D && p.updateData(l, {
          isIgnore: T,
          clipShape: I,
          disableAnimation: !0,
          getSymbolPoint: function(Se) {
            return [v[Se * 2], v[Se * 2 + 1]];
          }
        }), m && this._initSymbolLabelAnimation(l, o, I), M && (v = zr(v, o, M, A), b && (b = zr(b, o, M, A))), d = this._newPolyline(v), _ ? g = this._newPolygon(v, b) : g && (y.remove(g), g = this._polygon = null), f || this._initOrUpdateEndLabel(e, o, Ga(L)), y.setClipPath(Ou(this, o, !0, e));
      else {
        _ && !g ? g = this._newPolygon(v, b) : g && !_ && (y.remove(g), g = this._polygon = null), f || this._initOrUpdateEndLabel(e, o, Ga(L));
        var P = y.getClipPath();
        if (P) {
          var E = Ou(this, o, !1, e);
          Pe(P, {
            shape: E.shape
          }, e);
        } else
          y.setClipPath(Ou(this, o, !0, e));
        D && p.updateData(l, {
          isIgnore: T,
          clipShape: I,
          disableAnimation: !0,
          getSymbolPoint: function(Se) {
            return [v[Se * 2], v[Se * 2 + 1]];
          }
        }), (!Fd(this._stackedOnPoints, b) || !Fd(this._points, v)) && (m ? this._doUpdateAnimation(l, b, o, n, M, S, A) : (M && (v = zr(v, o, M, A), b && (b = zr(b, o, M, A))), d.setShape({
          points: v
        }), g && g.setShape({
          points: v,
          stackedOnPoints: b
        })));
      }
      var N = e.getModel("emphasis"), O = N.get("focus"), k = N.get("blurScope"), V = N.get("disabled");
      if (d.useStyle(ee(
        // Use color in lineStyle first
        u.getLineStyle(),
        {
          fill: "none",
          stroke: L,
          lineJoin: "bevel"
        }
      )), st(d, e, "lineStyle"), d.style.lineWidth > 0 && e.get(["emphasis", "lineStyle", "width"]) === "bolder") {
        var F = d.getState("emphasis").style;
        F.lineWidth = +d.style.lineWidth + 1;
      }
      j(d).seriesIndex = e.seriesIndex, Be(d, O, k, V);
      var W = Ud(e.get("smooth")), q = e.get("smoothMonotone");
      if (d.setShape({
        smooth: W,
        smoothMonotone: q,
        connectNulls: A
      }), g) {
        var ae = l.getCalculationInfo("stackedOnSeries"), ie = 0;
        g.useStyle(ee(c.getAreaStyle(), {
          fill: L,
          opacity: 0.7,
          lineJoin: "bevel",
          decal: l.getVisual("style").decal
        })), ae && (ie = Ud(ae.get("smooth"))), g.setShape({
          smooth: W,
          stackedOnSmooth: ie,
          smoothMonotone: q,
          connectNulls: A
        }), st(g, e, "areaStyle"), j(g).seriesIndex = e.seriesIndex, Be(g, O, k, V);
      }
      var ge = function(Se) {
        i._changePolyState(Se);
      };
      l.eachItemGraphicEl(function(Se) {
        Se && (Se.onHoverStateChange = ge);
      }), this._polyline.onHoverStateChange = ge, this._data = l, this._coordSys = o, this._stackedOnPoints = b, this._points = v, this._step = M, this._valueOrigin = S, e.get("triggerLineEvent") && (this.packEventData(e, d), g && this.packEventData(e, g));
    }, t.prototype.packEventData = function(e, a) {
      j(a).eventData = {
        componentType: "series",
        componentSubType: "line",
        componentIndex: e.componentIndex,
        seriesIndex: e.seriesIndex,
        seriesName: e.name,
        seriesType: "line"
      };
    }, t.prototype.highlight = function(e, a, n, i) {
      var o = e.getData(), s = Va(o, i);
      if (this._changePolyState("emphasis"), !(s instanceof Array) && s != null && s >= 0) {
        var l = o.getLayout("points"), u = o.getItemGraphicEl(s);
        if (!u) {
          var c = l[s * 2], v = l[s * 2 + 1];
          if (isNaN(c) || isNaN(v) || this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(c, v))
            return;
          var f = e.get("zlevel") || 0, h = e.get("z") || 0;
          u = new So(o, s), u.x = c, u.y = v, u.setZ(f, h);
          var p = u.getSymbolPath().getTextContent();
          p && (p.zlevel = f, p.z = h, p.z2 = this._polyline.z2 + 1), u.__temp = !0, o.setItemGraphicEl(s, u), u.stopSymbolAnimation(!0), this.group.add(u);
        }
        u.highlight();
      } else
        De.prototype.highlight.call(this, e, a, n, i);
    }, t.prototype.downplay = function(e, a, n, i) {
      var o = e.getData(), s = Va(o, i);
      if (this._changePolyState("normal"), s != null && s >= 0) {
        var l = o.getItemGraphicEl(s);
        l && (l.__temp ? (o.setItemGraphicEl(s, null), this.group.remove(l)) : l.downplay());
      } else
        De.prototype.downplay.call(this, e, a, n, i);
    }, t.prototype._changePolyState = function(e) {
      var a = this._polygon;
      Bs(this._polyline, e), a && Bs(a, e);
    }, t.prototype._newPolyline = function(e) {
      var a = this._polyline;
      return a && this._lineGroup.remove(a), a = new VI({
        shape: {
          points: e
        },
        segmentIgnoreThreshold: 2,
        z2: 10
      }), this._lineGroup.add(a), this._polyline = a, a;
    }, t.prototype._newPolygon = function(e, a) {
      var n = this._polygon;
      return n && this._lineGroup.remove(n), n = new Ox({
        shape: {
          points: e,
          stackedOnPoints: a
        },
        segmentIgnoreThreshold: 2
      }), this._lineGroup.add(n), this._polygon = n, n;
    }, t.prototype._initSymbolLabelAnimation = function(e, a, n) {
      var i, o, s = a.getBaseAxis(), l = s.inverse;
      a.type === "cartesian2d" ? (i = s.isHorizontal(), o = !1) : a.type === "polar" && (i = s.dim === "angle", o = !0);
      var u = e.hostModel, c = u.get("animationDuration");
      X(c) && (c = c(null));
      var v = u.get("animationDelay") || 0, f = X(v) ? v(null) : v;
      e.eachItemGraphicEl(function(h, p) {
        var d = h;
        if (d) {
          var g = [h.x, h.y], y = void 0, m = void 0, _ = void 0;
          if (n)
            if (o) {
              var S = n, x = a.pointToCoord(g);
              i ? (y = S.startAngle, m = S.endAngle, _ = -x[1] / 180 * Math.PI) : (y = S.r0, m = S.r, _ = x[0]);
            } else {
              var b = n;
              i ? (y = b.x, m = b.x + b.width, _ = h.x) : (y = b.y + b.height, m = b.y, _ = h.y);
            }
          var D = m === y ? 0 : (_ - y) / (m - y);
          l && (D = 1 - D);
          var A = X(v) ? v(p) : c * D + f, T = d.getSymbolPath(), C = T.getTextContent();
          d.attr({
            scaleX: 0,
            scaleY: 0
          }), d.animateTo({
            scaleX: 1,
            scaleY: 1
          }, {
            duration: 200,
            setToFinal: !0,
            delay: A
          }), C && C.animateFrom({
            style: {
              opacity: 0
            }
          }, {
            duration: 300,
            delay: A
          }), T.disableLabelAnimation = !0;
        }
      });
    }, t.prototype._initOrUpdateEndLabel = function(e, a, n) {
      var i = e.getModel("endLabel");
      if (zx(e)) {
        var o = e.getData(), s = this._polyline, l = o.getLayout("points");
        if (!l) {
          s.removeTextContent(), this._endLabel = null;
          return;
        }
        var u = this._endLabel;
        u || (u = this._endLabel = new ve({
          z2: 200
          // should be higher than item symbol
        }), u.ignoreClip = !0, s.setTextContent(this._endLabel), s.disableLabelAnimation = !0);
        var c = $I(l);
        c >= 0 && (lt(s, tt(e, "endLabel"), {
          inheritColor: n,
          labelFetcher: e,
          labelDataIndex: c,
          defaultText: function(v, f, h) {
            return h != null ? Px(o, h) : En(o, v);
          },
          enableTextSetter: !0
        }, ZI(i, a)), s.textConfig.position = null);
      } else this._endLabel && (this._polyline.removeTextContent(), this._endLabel = null);
    }, t.prototype._endLabelOnDuring = function(e, a, n, i, o, s, l) {
      var u = this._endLabel, c = this._polyline;
      if (u) {
        e < 1 && i.originalX == null && (i.originalX = u.x, i.originalY = u.y);
        var v = n.getLayout("points"), f = n.hostModel, h = f.get("connectNulls"), p = s.get("precision"), d = s.get("distance") || 0, g = l.getBaseAxis(), y = g.isHorizontal(), m = g.inverse, _ = a.shape, S = m ? y ? _.x : _.y + _.height : y ? _.x + _.width : _.y, x = (y ? d : 0) * (m ? -1 : 1), b = (y ? 0 : -d) * (m ? -1 : 1), D = y ? "x" : "y", A = YI(v, S, D), T = A.range, C = T[1] - T[0], M = void 0;
        if (C >= 1) {
          if (C > 1 && !h) {
            var I = $d(v, T[0]);
            u.attr({
              x: I[0] + x,
              y: I[1] + b
            }), o && (M = f.getRawValue(T[0]));
          } else {
            var I = c.getPointOn(S, D);
            I && u.attr({
              x: I[0] + x,
              y: I[1] + b
            });
            var L = f.getRawValue(T[0]), P = f.getRawValue(T[1]);
            o && (M = i_(n, p, L, P, A.t));
          }
          i.lastFrameIndex = T[0];
        } else {
          var E = e === 1 || i.lastFrameIndex > 0 ? T[0] : 0, I = $d(v, E);
          o && (M = f.getRawValue(E)), u.attr({
            x: I[0] + x,
            y: I[1] + b
          });
        }
        if (o) {
          var N = Un(u);
          typeof N.setLabelText == "function" && N.setLabelText(M);
        }
      }
    }, t.prototype._doUpdateAnimation = function(e, a, n, i, o, s, l) {
      var u = this._polyline, c = this._polygon, v = e.hostModel, f = OI(this._data, e, this._stackedOnPoints, a, this._coordSys, n, this._valueOrigin), h = f.current, p = f.stackedOnCurrent, d = f.next, g = f.stackedOnNext;
      if (o && (h = zr(f.current, n, o, l), p = zr(f.stackedOnCurrent, n, o, l), d = zr(f.next, n, o, l), g = zr(f.stackedOnNext, n, o, l)), Wd(h, d) > 3e3 || c && Wd(p, g) > 3e3) {
        u.stopAnimation(), u.setShape({
          points: d
        }), c && (c.stopAnimation(), c.setShape({
          points: d,
          stackedOnPoints: g
        }));
        return;
      }
      u.shape.__points = f.current, u.shape.points = h;
      var y = {
        shape: {
          points: d
        }
      };
      f.current !== h && (y.shape.__points = f.next), u.stopAnimation(), pe(u, y, v), c && (c.setShape({
        // Reuse the points with polyline.
        points: h,
        stackedOnPoints: p
      }), c.stopAnimation(), pe(c, {
        shape: {
          stackedOnPoints: g
        }
      }, v), u.shape.points !== c.shape.points && (c.shape.points = u.shape.points));
      for (var m = [], _ = f.status, S = 0; S < _.length; S++) {
        var x = _[S].cmd;
        if (x === "=") {
          var b = e.getItemGraphicEl(_[S].idx1);
          b && m.push({
            el: b,
            ptIdx: S
            // Index of points
          });
        }
      }
      u.animators && u.animators.length && u.animators[0].during(function() {
        c && c.dirtyShape();
        for (var D = u.shape.__points, A = 0; A < m.length; A++) {
          var T = m[A].el, C = m[A].ptIdx * 2;
          T.x = D[C], T.y = D[C + 1], T.markRedraw();
        }
      });
    }, t.prototype.remove = function(e) {
      var a = this.group, n = this._data;
      this._lineGroup.removeAll(), this._symbolDraw.remove(!0), n && n.eachItemGraphicEl(function(i, o) {
        i.__temp && (a.remove(i), n.setItemGraphicEl(o, null));
      }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;
    }, t.type = "line", t;
  }(De)
);
function wo(r, t) {
  return {
    seriesType: r,
    plan: qn(),
    reset: function(e) {
      var a = e.getData(), n = e.coordinateSystem, i = e.pipelineContext, o = t || i.large;
      if (n) {
        var s = G(n.dimensions, function(h) {
          return a.mapDimension(h);
        }).slice(0, 2), l = s.length, u = a.getCalculationInfo("stackResultDimension");
        ta(a, s[0]) && (s[0] = u), ta(a, s[1]) && (s[1] = u);
        var c = a.getStore(), v = a.getDimensionIndex(s[0]), f = a.getDimensionIndex(s[1]);
        return l && {
          progress: function(h, p) {
            for (var d = h.end - h.start, g = o && lr(d * l), y = [], m = [], _ = h.start, S = 0; _ < h.end; _++) {
              var x = void 0;
              if (l === 1) {
                var b = c.get(v, _);
                x = n.dataToPoint(b, null, m);
              } else
                y[0] = c.get(v, _), y[1] = c.get(f, _), x = n.dataToPoint(y, null, m);
              o ? (g[S++] = x[0], g[S++] = x[1]) : p.setItemLayout(_, x.slice());
            }
            o && p.setLayout("points", g);
          }
        };
      }
    }
  };
}
var KI = {
  average: function(r) {
    for (var t = 0, e = 0, a = 0; a < r.length; a++)
      isNaN(r[a]) || (t += r[a], e++);
    return e === 0 ? NaN : t / e;
  },
  sum: function(r) {
    for (var t = 0, e = 0; e < r.length; e++)
      t += r[e] || 0;
    return t;
  },
  max: function(r) {
    for (var t = -1 / 0, e = 0; e < r.length; e++)
      r[e] > t && (t = r[e]);
    return isFinite(t) ? t : NaN;
  },
  min: function(r) {
    for (var t = 1 / 0, e = 0; e < r.length; e++)
      r[e] < t && (t = r[e]);
    return isFinite(t) ? t : NaN;
  },
  minmax: function(r) {
    for (var t = -1 / 0, e = -1 / 0, a = 0; a < r.length; a++) {
      var n = r[a], i = Math.abs(n);
      i > t && (t = i, e = n);
    }
    return isFinite(e) ? e : NaN;
  },
  // TODO
  // Median
  nearest: function(r) {
    return r[0];
  }
}, qI = function(r) {
  return Math.round(r.length / 2);
};
function Gx(r) {
  return {
    seriesType: r,
    // FIXME:TS never used, so comment it
    // modifyOutputEnd: true,
    reset: function(t, e, a) {
      var n = t.getData(), i = t.get("sampling"), o = t.coordinateSystem, s = n.count();
      if (s > 10 && o.type === "cartesian2d" && i) {
        var l = o.getBaseAxis(), u = o.getOtherAxis(l), c = l.getExtent(), v = a.getDevicePixelRatio(), f = Math.abs(c[1] - c[0]) * (v || 1), h = Math.round(s / f);
        if (isFinite(h) && h > 1) {
          i === "lttb" && t.setData(n.lttbDownSample(n.mapDimension(u.dim), 1 / h));
          var p = void 0;
          Y(i) ? p = KI[i] : X(i) && (p = i), p && t.setData(n.downSample(n.mapDimension(u.dim), 1 / h, p, qI));
        }
      }
    }
  };
}
function jI(r) {
  r.registerChartView(XI), r.registerSeriesModel(PI), r.registerLayout(wo("line", !0)), r.registerVisual({
    seriesType: "line",
    reset: function(t) {
      var e = t.getData(), a = t.getModel("lineStyle").getLineStyle();
      a && !a.stroke && (a.stroke = e.getVisual("style").fill), e.setVisual("legendLineStyle", a);
    }
  }), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, Gx("line"));
}
var Ji = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.getInitialData = function(e, a) {
      return Pr(null, this, {
        useEncodeDefaulter: !0
      });
    }, t.prototype.getMarkerPosition = function(e, a, n) {
      var i = this.coordinateSystem;
      if (i && i.clampData) {
        var o = i.clampData(e), s = i.dataToPoint(o);
        if (n)
          w(i.getAxes(), function(f, h) {
            if (f.type === "category" && a != null) {
              var p = f.getTicksCoords(), d = f.getTickModel().get("alignWithLabel"), g = o[h], y = a[h] === "x1" || a[h] === "y1";
              if (y && !d && (g += 1), p.length < 2)
                return;
              if (p.length === 2) {
                s[h] = f.toGlobalCoord(f.getExtent()[y ? 1 : 0]);
                return;
              }
              for (var m = void 0, _ = void 0, S = 1, x = 0; x < p.length; x++) {
                var b = p[x].coord, D = x === p.length - 1 ? p[x - 1].tickValue + S : p[x].tickValue;
                if (D === g) {
                  _ = b;
                  break;
                } else if (D < g)
                  m = b;
                else if (m != null && D > g) {
                  _ = (b + m) / 2;
                  break;
                }
                x === 1 && (S = D - p[0].tickValue);
              }
              _ == null && (m ? m && (_ = p[p.length - 1].coord) : _ = p[0].coord), s[h] = f.toGlobalCoord(_);
            }
          });
        else {
          var l = this.getData(), u = l.getLayout("offset"), c = l.getLayout("size"), v = i.getBaseAxis().isHorizontal() ? 0 : 1;
          s[v] += u + c / 2;
        }
        return s;
      }
      return [NaN, NaN];
    }, t.type = "series.__base_bar__", t.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // stack: null
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      barMinHeight: 0,
      barMinAngle: 0,
      // cursor: null,
      large: !1,
      largeThreshold: 400,
      progressive: 3e3,
      progressiveChunkMode: "mod"
    }, t;
  }(Le)
);
Le.registerClass(Ji);
var JI = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.getInitialData = function() {
      return Pr(null, this, {
        useEncodeDefaulter: !0,
        createInvertedIndices: !!this.get("realtimeSort", !0) || null
      });
    }, t.prototype.getProgressive = function() {
      return this.get("large") ? this.get("progressive") : !1;
    }, t.prototype.getProgressiveThreshold = function() {
      var e = this.get("progressiveThreshold"), a = this.get("largeThreshold");
      return a > e && (e = a), e;
    }, t.prototype.brushSelector = function(e, a, n) {
      return n.rect(a.getItemLayout(e));
    }, t.type = "series.bar", t.dependencies = ["grid", "polar"], t.defaultOption = oa(Ji.defaultOption, {
      // If clipped
      // Only available on cartesian2d
      clip: !0,
      roundCap: !1,
      showBackground: !1,
      backgroundStyle: {
        color: "rgba(180, 180, 180, 0.2)",
        borderColor: null,
        borderWidth: 0,
        borderType: "solid",
        borderRadius: 0,
        shadowBlur: 0,
        shadowColor: null,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      realtimeSort: !1
    }), t;
  }(Ji)
), QI = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
      this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
    }
    return r;
  }()
), tl = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "sausage", a;
    }
    return t.prototype.getDefaultShape = function() {
      return new QI();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.cx, i = a.cy, o = Math.max(a.r0 || 0, 0), s = Math.max(a.r, 0), l = (s - o) * 0.5, u = o + l, c = a.startAngle, v = a.endAngle, f = a.clockwise, h = Math.PI * 2, p = f ? v - c < h : c - v < h;
      p || (c = v - (f ? h : -h));
      var d = Math.cos(c), g = Math.sin(c), y = Math.cos(v), m = Math.sin(v);
      p ? (e.moveTo(d * o + n, g * o + i), e.arc(d * u + n, g * u + i, l, -Math.PI + c, c, !f)) : e.moveTo(d * s + n, g * s + i), e.arc(n, i, s, c, v, !f), e.arc(y * u + n, m * u + i, l, v - Math.PI * 2, v - Math.PI, !f), o !== 0 && e.arc(n, i, o, v, c, f);
    }, t;
  }(Ee)
);
function eL(r, t) {
  t = t || {};
  var e = t.isRoundCap;
  return function(a, n, i) {
    var o = n.position;
    if (!o || o instanceof Array)
      return Wc(a, n, i);
    var s = r(o), l = n.distance != null ? n.distance : 5, u = this.shape, c = u.cx, v = u.cy, f = u.r, h = u.r0, p = (f + h) / 2, d = u.startAngle, g = u.endAngle, y = (d + g) / 2, m = e ? Math.abs(f - h) / 2 : 0, _ = Math.cos, S = Math.sin, x = c + f * _(d), b = v + f * S(d), D = "left", A = "top";
    switch (s) {
      case "startArc":
        x = c + (h - l) * _(y), b = v + (h - l) * S(y), D = "center", A = "top";
        break;
      case "insideStartArc":
        x = c + (h + l) * _(y), b = v + (h + l) * S(y), D = "center", A = "bottom";
        break;
      case "startAngle":
        x = c + p * _(d) + Xo(d, l + m, !1), b = v + p * S(d) + Ko(d, l + m, !1), D = "right", A = "middle";
        break;
      case "insideStartAngle":
        x = c + p * _(d) + Xo(d, -l + m, !1), b = v + p * S(d) + Ko(d, -l + m, !1), D = "left", A = "middle";
        break;
      case "middle":
        x = c + p * _(y), b = v + p * S(y), D = "center", A = "middle";
        break;
      case "endArc":
        x = c + (f + l) * _(y), b = v + (f + l) * S(y), D = "center", A = "bottom";
        break;
      case "insideEndArc":
        x = c + (f - l) * _(y), b = v + (f - l) * S(y), D = "center", A = "top";
        break;
      case "endAngle":
        x = c + p * _(g) + Xo(g, l + m, !0), b = v + p * S(g) + Ko(g, l + m, !0), D = "left", A = "middle";
        break;
      case "insideEndAngle":
        x = c + p * _(g) + Xo(g, -l + m, !0), b = v + p * S(g) + Ko(g, -l + m, !0), D = "right", A = "middle";
        break;
      default:
        return Wc(a, n, i);
    }
    return a = a || {}, a.x = x, a.y = b, a.align = D, a.verticalAlign = A, a;
  };
}
function tL(r, t, e, a) {
  if (_e(a)) {
    r.setTextConfig({
      rotation: a
    });
    return;
  } else if (B(t)) {
    r.setTextConfig({
      rotation: 0
    });
    return;
  }
  var n = r.shape, i = n.clockwise ? n.startAngle : n.endAngle, o = n.clockwise ? n.endAngle : n.startAngle, s = (i + o) / 2, l, u = e(t);
  switch (u) {
    case "startArc":
    case "insideStartArc":
    case "middle":
    case "insideEndArc":
    case "endArc":
      l = s;
      break;
    case "startAngle":
    case "insideStartAngle":
      l = i;
      break;
    case "endAngle":
    case "insideEndAngle":
      l = o;
      break;
    default:
      r.setTextConfig({
        rotation: 0
      });
      return;
  }
  var c = Math.PI * 1.5 - l;
  u === "middle" && c > Math.PI / 2 && c < Math.PI * 1.5 && (c -= Math.PI), r.setTextConfig({
    rotation: c
  });
}
function Xo(r, t, e) {
  return t * Math.sin(r) * (e ? -1 : 1);
}
function Ko(r, t, e) {
  return t * Math.cos(r) * (e ? 1 : -1);
}
function Ca(r, t, e) {
  var a = r.get("borderRadius");
  if (a == null)
    return e ? {
      cornerRadius: 0
    } : null;
  B(a) || (a = [a, a, a, a]);
  var n = Math.abs(t.r || 0 - t.r0 || 0);
  return {
    cornerRadius: G(a, function(i) {
      return An(i, n);
    })
  };
}
var Fx = { env: {} }, Vu = Math.max, Bu = Math.min;
function rL(r, t) {
  var e = r.getArea && r.getArea();
  if (Za(r, "cartesian2d")) {
    var a = r.getBaseAxis();
    if (a.type !== "category" || !a.onBand) {
      var n = t.getLayout("bandWidth");
      a.isHorizontal() ? (e.x -= n, e.width += n * 2) : (e.y -= n, e.height += n * 2);
    }
  }
  return e;
}
var aL = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r.call(this) || this;
      return e.type = t.type, e._isFirstFrame = !0, e;
    }
    return t.prototype.render = function(e, a, n, i) {
      this._model = e, this._removeOnRenderedListener(n), this._updateDrawMode(e);
      var o = e.get("coordinateSystem");
      o === "cartesian2d" || o === "polar" ? (this._progressiveEls = null, this._isLargeDraw ? this._renderLarge(e, a, n) : this._renderNormal(e, a, n, i)) : Fx.env.NODE_ENV !== "production" && Ve("Only cartesian2d and polar supported for bar.");
    }, t.prototype.incrementalPrepareRender = function(e) {
      this._clear(), this._updateDrawMode(e), this._updateLargeClip(e);
    }, t.prototype.incrementalRender = function(e, a) {
      this._progressiveEls = [], this._incrementalRenderLarge(e, a);
    }, t.prototype.eachRendered = function(e) {
      ia(this._progressiveEls || this.group, e);
    }, t.prototype._updateDrawMode = function(e) {
      var a = e.pipelineContext.large;
      (this._isLargeDraw == null || a !== this._isLargeDraw) && (this._isLargeDraw = a, this._clear());
    }, t.prototype._renderNormal = function(e, a, n, i) {
      var o = this.group, s = e.getData(), l = this._data, u = e.coordinateSystem, c = u.getBaseAxis(), v;
      u.type === "cartesian2d" ? v = c.isHorizontal() : u.type === "polar" && (v = c.dim === "angle");
      var f = e.isAnimationEnabled() ? e : null, h = nL(e, u);
      h && this._enableRealtimeSort(h, s, n);
      var p = e.get("clip", !0) || h, d = rL(u, s);
      o.removeClipPath();
      var g = e.get("roundCap", !0), y = e.get("showBackground", !0), m = e.getModel("backgroundStyle"), _ = m.get("borderRadius") || 0, S = [], x = this._backgroundEls, b = i && i.isInitSort, D = i && i.type === "changeAxisOrder";
      function A(M) {
        var I = qo[u.type](s, M), L = vL(u, v, I);
        return L.useStyle(m.getItemStyle()), u.type === "cartesian2d" ? L.setShape("r", _) : L.setShape("cornerRadius", _), S[M] = L, L;
      }
      s.diff(l).add(function(M) {
        var I = s.getItemModel(M), L = qo[u.type](s, M, I);
        if (y && A(M), !(!s.hasValue(M) || !qd[u.type](L))) {
          var P = !1;
          p && (P = Yd[u.type](d, L));
          var E = Zd[u.type](e, s, M, L, v, f, c.model, !1, g);
          h && (E.forceLabelAnimation = !0), jd(E, s, M, I, L, e, v, u.type === "polar"), b ? E.attr({
            shape: L
          }) : h ? Xd(h, f, E, L, M, v, !1, !1) : Pe(E, {
            shape: L
          }, e, M), s.setItemGraphicEl(M, E), o.add(E), E.ignore = P;
        }
      }).update(function(M, I) {
        var L = s.getItemModel(M), P = qo[u.type](s, M, L);
        if (y) {
          var E = void 0;
          x.length === 0 ? E = A(I) : (E = x[I], E.useStyle(m.getItemStyle()), u.type === "cartesian2d" ? E.setShape("r", _) : E.setShape("cornerRadius", _), S[M] = E);
          var N = qo[u.type](s, M), O = Wx(v, N, u);
          pe(E, {
            shape: O
          }, f, M);
        }
        var k = l.getItemGraphicEl(I);
        if (!s.hasValue(M) || !qd[u.type](P)) {
          o.remove(k);
          return;
        }
        var V = !1;
        if (p && (V = Yd[u.type](d, P), V && o.remove(k)), k ? er(k) : k = Zd[u.type](e, s, M, P, v, f, c.model, !!k, g), h && (k.forceLabelAnimation = !0), D) {
          var F = k.getTextContent();
          if (F) {
            var W = Un(F);
            W.prevValue != null && (W.prevValue = W.value);
          }
        } else
          jd(k, s, M, L, P, e, v, u.type === "polar");
        b ? k.attr({
          shape: P
        }) : h ? Xd(h, f, k, P, M, v, !0, D) : pe(k, {
          shape: P
        }, e, M, null), s.setItemGraphicEl(M, k), k.ignore = V, o.add(k);
      }).remove(function(M) {
        var I = l.getItemGraphicEl(M);
        I && $i(I, e, M);
      }).execute();
      var T = this._backgroundGroup || (this._backgroundGroup = new re());
      T.removeAll();
      for (var C = 0; C < S.length; ++C)
        T.add(S[C]);
      o.add(T), this._backgroundEls = S, this._data = s;
    }, t.prototype._renderLarge = function(e, a, n) {
      this._clear(), Qd(e, this.group), this._updateLargeClip(e);
    }, t.prototype._incrementalRenderLarge = function(e, a) {
      this._removeBackground(), Qd(a, this.group, this._progressiveEls, !0);
    }, t.prototype._updateLargeClip = function(e) {
      var a = e.get("clip", !0) && bo(e.coordinateSystem, !1, e), n = this.group;
      a ? n.setClipPath(a) : n.removeClipPath();
    }, t.prototype._enableRealtimeSort = function(e, a, n) {
      var i = this;
      if (a.count()) {
        var o = e.baseAxis;
        if (this._isFirstFrame)
          this._dispatchInitSort(a, e, n), this._isFirstFrame = !1;
        else {
          var s = function(l) {
            var u = a.getItemGraphicEl(l), c = u && u.shape;
            return c && // The result should be consistent with the initial sort by data value.
            // Do not support the case that both positive and negative exist.
            Math.abs(o.isHorizontal() ? c.height : c.width) || 0;
          };
          this._onRendered = function() {
            i._updateSortWithinSameData(a, s, o, n);
          }, n.getZr().on("rendered", this._onRendered);
        }
      }
    }, t.prototype._dataSort = function(e, a, n) {
      var i = [];
      return e.each(e.mapDimension(a.dim), function(o, s) {
        var l = n(s);
        l = l ?? NaN, i.push({
          dataIndex: s,
          mappedValue: l,
          ordinalNumber: o
        });
      }), i.sort(function(o, s) {
        return s.mappedValue - o.mappedValue;
      }), {
        ordinalNumbers: G(i, function(o) {
          return o.ordinalNumber;
        })
      };
    }, t.prototype._isOrderChangedWithinSameData = function(e, a, n) {
      for (var i = n.scale, o = e.mapDimension(n.dim), s = Number.MAX_VALUE, l = 0, u = i.getOrdinalMeta().categories.length; l < u; ++l) {
        var c = e.rawIndexOf(o, i.getRawOrdinalNumber(l)), v = c < 0 ? Number.MIN_VALUE : a(e.indexOfRawIndex(c));
        if (v > s)
          return !0;
        s = v;
      }
      return !1;
    }, t.prototype._isOrderDifferentInView = function(e, a) {
      for (var n = a.scale, i = n.getExtent(), o = Math.max(0, i[0]), s = Math.min(i[1], n.getOrdinalMeta().categories.length - 1); o <= s; ++o)
        if (e.ordinalNumbers[o] !== n.getRawOrdinalNumber(o))
          return !0;
    }, t.prototype._updateSortWithinSameData = function(e, a, n, i) {
      if (this._isOrderChangedWithinSameData(e, a, n)) {
        var o = this._dataSort(e, n, a);
        this._isOrderDifferentInView(o, n) && (this._removeOnRenderedListener(i), i.dispatchAction({
          type: "changeAxisOrder",
          componentType: n.dim + "Axis",
          axisId: n.index,
          sortInfo: o
        }));
      }
    }, t.prototype._dispatchInitSort = function(e, a, n) {
      var i = a.baseAxis, o = this._dataSort(e, i, function(s) {
        return e.get(e.mapDimension(a.otherAxis.dim), s);
      });
      n.dispatchAction({
        type: "changeAxisOrder",
        componentType: i.dim + "Axis",
        isInitSort: !0,
        axisId: i.index,
        sortInfo: o
      });
    }, t.prototype.remove = function(e, a) {
      this._clear(this._model), this._removeOnRenderedListener(a);
    }, t.prototype.dispose = function(e, a) {
      this._removeOnRenderedListener(a);
    }, t.prototype._removeOnRenderedListener = function(e) {
      this._onRendered && (e.getZr().off("rendered", this._onRendered), this._onRendered = null);
    }, t.prototype._clear = function(e) {
      var a = this.group, n = this._data;
      e && e.isAnimationEnabled() && n && !this._isLargeDraw ? (this._removeBackground(), this._backgroundEls = [], n.eachItemGraphicEl(function(i) {
        $i(i, e, j(i).dataIndex);
      })) : a.removeAll(), this._data = null, this._isFirstFrame = !0;
    }, t.prototype._removeBackground = function() {
      this.group.remove(this._backgroundGroup), this._backgroundGroup = null;
    }, t.type = "bar", t;
  }(De)
), Yd = {
  cartesian2d: function(r, t) {
    var e = t.width < 0 ? -1 : 1, a = t.height < 0 ? -1 : 1;
    e < 0 && (t.x += t.width, t.width = -t.width), a < 0 && (t.y += t.height, t.height = -t.height);
    var n = r.x + r.width, i = r.y + r.height, o = Vu(t.x, r.x), s = Bu(t.x + t.width, n), l = Vu(t.y, r.y), u = Bu(t.y + t.height, i), c = s < o, v = u < l;
    return t.x = c && o > n ? s : o, t.y = v && l > i ? u : l, t.width = c ? 0 : s - o, t.height = v ? 0 : u - l, e < 0 && (t.x += t.width, t.width = -t.width), a < 0 && (t.y += t.height, t.height = -t.height), c || v;
  },
  polar: function(r, t) {
    var e = t.r0 <= t.r ? 1 : -1;
    if (e < 0) {
      var a = t.r;
      t.r = t.r0, t.r0 = a;
    }
    var n = Bu(t.r, r.r), i = Vu(t.r0, r.r0);
    t.r = n, t.r0 = i;
    var o = n - i < 0;
    if (e < 0) {
      var a = t.r;
      t.r = t.r0, t.r0 = a;
    }
    return o;
  }
}, Zd = {
  cartesian2d: function(r, t, e, a, n, i, o, s, l) {
    var u = new de({
      shape: z({}, a),
      z2: 1
    });
    if (u.__dataIndex = e, u.name = "item", i) {
      var c = u.shape, v = n ? "height" : "width";
      c[v] = 0;
    }
    return u;
  },
  polar: function(r, t, e, a, n, i, o, s, l) {
    var u = !n && l ? tl : Ht, c = new u({
      shape: a,
      z2: 1
    });
    c.name = "item";
    var v = Hx(n);
    if (c.calculateTextPosition = eL(v, {
      isRoundCap: u === tl
    }), i) {
      var f = c.shape, h = n ? "r" : "endAngle", p = {};
      f[h] = n ? a.r0 : a.startAngle, p[h] = a[h], (s ? pe : Pe)(c, {
        shape: p
        // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue
      }, i);
    }
    return c;
  }
};
function nL(r, t) {
  var e = r.get("realtimeSort", !0), a = t.getBaseAxis();
  if (Fx.env.NODE_ENV !== "production" && e && (a.type !== "category" && Ve("`realtimeSort` will not work because this bar series is not based on a category axis."), t.type !== "cartesian2d" && Ve("`realtimeSort` will not work because this bar series is not on cartesian2d.")), e && a.type === "category" && t.type === "cartesian2d")
    return {
      baseAxis: a,
      otherAxis: t.getOtherAxis(a)
    };
}
function Xd(r, t, e, a, n, i, o, s) {
  var l, u;
  i ? (u = {
    x: a.x,
    width: a.width
  }, l = {
    y: a.y,
    height: a.height
  }) : (u = {
    y: a.y,
    height: a.height
  }, l = {
    x: a.x,
    width: a.width
  }), s || (o ? pe : Pe)(e, {
    shape: l
  }, t, n, null);
  var c = t ? r.baseAxis.model : null;
  (o ? pe : Pe)(e, {
    shape: u
  }, c, n);
}
function Kd(r, t) {
  for (var e = 0; e < t.length; e++)
    if (!isFinite(r[t[e]]))
      return !0;
  return !1;
}
var iL = ["x", "y", "width", "height"], oL = ["cx", "cy", "r", "startAngle", "endAngle"], qd = {
  cartesian2d: function(r) {
    return !Kd(r, iL);
  },
  polar: function(r) {
    return !Kd(r, oL);
  }
}, qo = {
  // itemModel is only used to get borderWidth, which is not needed
  // when calculating bar background layout.
  cartesian2d: function(r, t, e) {
    var a = r.getItemLayout(t), n = e ? lL(e, a) : 0, i = a.width > 0 ? 1 : -1, o = a.height > 0 ? 1 : -1;
    return {
      x: a.x + i * n / 2,
      y: a.y + o * n / 2,
      width: a.width - i * n,
      height: a.height - o * n
    };
  },
  polar: function(r, t, e) {
    var a = r.getItemLayout(t);
    return {
      cx: a.cx,
      cy: a.cy,
      r0: a.r0,
      r: a.r,
      startAngle: a.startAngle,
      endAngle: a.endAngle,
      clockwise: a.clockwise
    };
  }
};
function sL(r) {
  return r.startAngle != null && r.endAngle != null && r.startAngle === r.endAngle;
}
function Hx(r) {
  return /* @__PURE__ */ function(t) {
    var e = t ? "Arc" : "Angle";
    return function(a) {
      switch (a) {
        case "start":
        case "insideStart":
        case "end":
        case "insideEnd":
          return a + e;
        default:
          return a;
      }
    };
  }(r);
}
function jd(r, t, e, a, n, i, o, s) {
  var l = t.getItemVisual(e, "style");
  if (s) {
    if (!i.get("roundCap")) {
      var c = r.shape, v = Ca(a.getModel("itemStyle"), c, !0);
      z(c, v), r.setShape(c);
    }
  } else {
    var u = a.get(["itemStyle", "borderRadius"]) || 0;
    r.setShape("r", u);
  }
  r.useStyle(l);
  var f = a.getShallow("cursor");
  f && r.attr("cursor", f);
  var h = s ? o ? n.r >= n.r0 ? "endArc" : "startArc" : n.endAngle >= n.startAngle ? "endAngle" : "startAngle" : o ? n.height >= 0 ? "bottom" : "top" : n.width >= 0 ? "right" : "left", p = tt(a);
  lt(r, p, {
    labelFetcher: i,
    labelDataIndex: e,
    defaultText: En(i.getData(), e),
    inheritColor: l.fill,
    defaultOpacity: l.opacity,
    defaultOutsidePosition: h
  });
  var d = r.getTextContent();
  if (s && d) {
    var g = a.get(["label", "position"]);
    r.textConfig.inside = g === "middle" ? !0 : null, tL(r, g === "outside" ? h : g, Hx(o), a.get(["label", "rotate"]));
  }
  D_(d, p, i.getRawValue(e), function(m) {
    return Px(t, m);
  });
  var y = a.getModel(["emphasis"]);
  Be(r, y.get("focus"), y.get("blurScope"), y.get("disabled")), st(r, a), sL(n) && (r.style.fill = "none", r.style.stroke = "none", w(r.states, function(m) {
    m.style && (m.style.fill = m.style.stroke = "none");
  }));
}
function lL(r, t) {
  var e = r.get(["itemStyle", "borderColor"]);
  if (!e || e === "none")
    return 0;
  var a = r.get(["itemStyle", "borderWidth"]) || 0, n = isNaN(t.width) ? Number.MAX_VALUE : Math.abs(t.width), i = isNaN(t.height) ? Number.MAX_VALUE : Math.abs(t.height);
  return Math.min(a, n, i);
}
var uL = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
    }
    return r;
  }()
), Jd = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "largeBar", a;
    }
    return t.prototype.getDefaultShape = function() {
      return new uL();
    }, t.prototype.buildPath = function(e, a) {
      for (var n = a.points, i = this.baseDimIdx, o = 1 - this.baseDimIdx, s = [], l = [], u = this.barWidth, c = 0; c < n.length; c += 3)
        l[i] = u, l[o] = n[c + 2], s[i] = n[c + i], s[o] = n[c + o], e.rect(s[0], s[1], l[0], l[1]);
    }, t;
  }(Ee)
);
function Qd(r, t, e, a) {
  var n = r.getData(), i = n.getLayout("valueAxisHorizontal") ? 1 : 0, o = n.getLayout("largeDataIndices"), s = n.getLayout("size"), l = r.getModel("backgroundStyle"), u = n.getLayout("largeBackgroundPoints");
  if (u) {
    var c = new Jd({
      shape: {
        points: u
      },
      incremental: !!a,
      silent: !0,
      z2: 0
    });
    c.baseDimIdx = i, c.largeDataIndices = o, c.barWidth = s, c.useStyle(l.getItemStyle()), t.add(c), e && e.push(c);
  }
  var v = new Jd({
    shape: {
      points: n.getLayout("largePoints")
    },
    incremental: !!a,
    ignoreCoarsePointer: !0,
    z2: 1
  });
  v.baseDimIdx = i, v.largeDataIndices = o, v.barWidth = s, t.add(v), v.useStyle(n.getVisual("style")), j(v).seriesIndex = r.seriesIndex, r.get("silent") || (v.on("mousedown", eg), v.on("mousemove", eg)), e && e.push(v);
}
var eg = Of(function(r) {
  var t = this, e = cL(t, r.offsetX, r.offsetY);
  j(t).dataIndex = e >= 0 ? e : null;
}, 30, !1);
function cL(r, t, e) {
  for (var a = r.baseDimIdx, n = 1 - a, i = r.shape.points, o = r.largeDataIndices, s = [], l = [], u = r.barWidth, c = 0, v = i.length / 3; c < v; c++) {
    var f = c * 3;
    if (l[a] = u, l[n] = i[f + 2], s[a] = i[f + a], s[n] = i[f + n], l[n] < 0 && (s[n] += l[n], l[n] = -l[n]), t >= s[0] && t <= s[0] + l[0] && e >= s[1] && e <= s[1] + l[1])
      return o[c];
  }
  return -1;
}
function Wx(r, t, e) {
  if (Za(e, "cartesian2d")) {
    var a = t, n = e.getArea();
    return {
      x: r ? a.x : n.x,
      y: r ? n.y : a.y,
      width: r ? a.width : n.width,
      height: r ? n.height : a.height
    };
  } else {
    var n = e.getArea(), i = t;
    return {
      cx: n.cx,
      cy: n.cy,
      r0: r ? n.r0 : i.r0,
      r: r ? n.r : i.r,
      startAngle: r ? i.startAngle : 0,
      endAngle: r ? i.endAngle : Math.PI * 2
    };
  }
}
function vL(r, t, e) {
  var a = r.type === "polar" ? Ht : de;
  return new a({
    shape: Wx(t, e, r),
    silent: !0,
    z2: 0
  });
}
function fL(r) {
  r.registerChartView(aL), r.registerSeriesModel(JI), r.registerLayout(r.PRIORITY.VISUAL.LAYOUT, te(lx, "bar")), r.registerLayout(r.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, ux("bar")), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, Gx("bar")), r.registerAction({
    type: "changeAxisOrder",
    event: "changeAxisOrder",
    update: "update"
  }, function(t, e) {
    var a = t.componentType || "series";
    e.eachComponent({
      mainType: a,
      query: t
    }, function(n) {
      t.sortInfo && n.axis.setCategorySortInfo(t.sortInfo);
    });
  });
}
var tg = Math.PI * 2, jo = Math.PI / 180;
function Ux(r, t) {
  return qe(r.getBoxLayoutParams(), {
    width: t.getWidth(),
    height: t.getHeight()
  });
}
function $x(r, t) {
  var e = Ux(r, t), a = r.get("center"), n = r.get("radius");
  B(n) || (n = [0, n]);
  var i = H(e.width, t.getWidth()), o = H(e.height, t.getHeight()), s = Math.min(i, o), l = H(n[0], s / 2), u = H(n[1], s / 2), c, v, f = r.coordinateSystem;
  if (f) {
    var h = f.dataToPoint(a);
    c = h[0] || 0, v = h[1] || 0;
  } else
    B(a) || (a = [a, a]), c = H(a[0], i) + e.x, v = H(a[1], o) + e.y;
  return {
    cx: c,
    cy: v,
    r0: l,
    r: u
  };
}
function hL(r, t, e) {
  t.eachSeriesByType(r, function(a) {
    var n = a.getData(), i = n.mapDimension("value"), o = Ux(a, e), s = $x(a, e), l = s.cx, u = s.cy, c = s.r, v = s.r0, f = -a.get("startAngle") * jo, h = a.get("endAngle"), p = a.get("padAngle") * jo;
    h = h === "auto" ? f - tg : -h * jo;
    var d = a.get("minAngle") * jo, g = d + p, y = 0;
    n.each(i, function(O) {
      !isNaN(O) && y++;
    });
    var m = n.getSum(i), _ = Math.PI / (m || y) * 2, S = a.get("clockwise"), x = a.get("roseType"), b = a.get("stillShowZeroSum"), D = n.getDataExtent(i);
    D[0] = 0;
    var A = S ? 1 : -1, T = [f, h], C = A * p / 2;
    W0(T, !S), f = T[0], h = T[1];
    var M = Yx(a);
    M.startAngle = f, M.endAngle = h, M.clockwise = S;
    var I = Math.abs(h - f), L = I, P = 0, E = f;
    if (n.setLayout({
      viewRect: o,
      r: c
    }), n.each(i, function(O, k) {
      var V;
      if (isNaN(O)) {
        n.setItemLayout(k, {
          angle: NaN,
          startAngle: NaN,
          endAngle: NaN,
          clockwise: S,
          cx: l,
          cy: u,
          r0: v,
          r: x ? NaN : c
        });
        return;
      }
      x !== "area" ? V = m === 0 && b ? _ : O * _ : V = I / y, V < g ? (V = g, L -= g) : P += O;
      var F = E + A * V, W = 0, q = 0;
      p > V ? (W = E + A * V / 2, q = W) : (W = E + C, q = F - C), n.setItemLayout(k, {
        angle: V,
        startAngle: W,
        endAngle: q,
        clockwise: S,
        cx: l,
        cy: u,
        r0: v,
        r: x ? xe(O, D, [v, c]) : c
      }), E = F;
    }), L < tg && y)
      if (L <= 1e-3) {
        var N = I / y;
        n.each(i, function(O, k) {
          if (!isNaN(O)) {
            var V = n.getItemLayout(k);
            V.angle = N;
            var F = 0, W = 0;
            N < p ? (F = f + A * (k + 1 / 2) * N, W = F) : (F = f + A * k * N + C, W = f + A * (k + 1) * N - C), V.startAngle = F, V.endAngle = W;
          }
        });
      } else
        _ = L / P, E = f, n.each(i, function(O, k) {
          if (!isNaN(O)) {
            var V = n.getItemLayout(k), F = V.angle === g ? g : O * _, W = 0, q = 0;
            F < p ? (W = E + A * F / 2, q = W) : (W = E + C, q = E + A * F - C), V.startAngle = W, V.endAngle = q, E += A * F;
          }
        });
  });
}
var Yx = ue();
function Do(r) {
  return {
    seriesType: r,
    reset: function(t, e) {
      var a = e.findComponents({
        mainType: "legend"
      });
      if (!(!a || !a.length)) {
        var n = t.getData();
        n.filterSelf(function(i) {
          for (var o = n.getName(i), s = 0; s < a.length; s++)
            if (!a[s].isSelected(o))
              return !1;
          return !0;
        });
      }
    }
  };
}
var pL = Math.PI / 180;
function rg(r, t, e, a, n, i, o, s, l, u) {
  if (r.length < 2)
    return;
  function c(d) {
    for (var g = d.rB, y = g * g, m = 0; m < d.list.length; m++) {
      var _ = d.list[m], S = Math.abs(_.label.y - e), x = a + _.len, b = x * x, D = Math.sqrt((1 - Math.abs(S * S / y)) * b), A = t + (D + _.len2) * n, T = A - _.label.x, C = _.targetTextWidth - T * n;
      Zx(_, C, !0), _.label.x = A;
    }
  }
  function v(d) {
    for (var g = {
      list: [],
      maxY: 0
    }, y = {
      list: [],
      maxY: 0
    }, m = 0; m < d.length; m++)
      if (d[m].labelAlignTo === "none") {
        var _ = d[m], S = _.label.y > e ? y : g, x = Math.abs(_.label.y - e);
        if (x >= S.maxY) {
          var b = _.label.x - t - _.len2 * n, D = a + _.len, A = Math.abs(b) < D ? Math.sqrt(x * x / (1 - b * b / D / D)) : D;
          S.rB = A, S.maxY = x;
        }
        S.list.push(_);
      }
    c(g), c(y);
  }
  for (var f = r.length, h = 0; h < f; h++)
    if (r[h].position === "outer" && r[h].labelAlignTo === "labelLine") {
      var p = r[h].label.x - u;
      r[h].linePoints[1][0] += p, r[h].label.x = u;
    }
  Lx(r, l, l + o) && v(r);
}
function dL(r, t, e, a, n, i, o, s) {
  for (var l = [], u = [], c = Number.MAX_VALUE, v = -Number.MAX_VALUE, f = 0; f < r.length; f++) {
    var h = r[f].label;
    zu(r[f]) || (h.x < t ? (c = Math.min(c, h.x), l.push(r[f])) : (v = Math.max(v, h.x), u.push(r[f])));
  }
  for (var f = 0; f < r.length; f++) {
    var p = r[f];
    if (!zu(p) && p.linePoints) {
      if (p.labelStyleWidth != null)
        continue;
      var h = p.label, d = p.linePoints, g = void 0;
      p.labelAlignTo === "edge" ? h.x < t ? g = d[2][0] - p.labelDistance - o - p.edgeDistance : g = o + n - p.edgeDistance - d[2][0] - p.labelDistance : p.labelAlignTo === "labelLine" ? h.x < t ? g = c - o - p.bleedMargin : g = o + n - v - p.bleedMargin : h.x < t ? g = h.x - o - p.bleedMargin : g = o + n - h.x - p.bleedMargin, p.targetTextWidth = g, Zx(p, g);
    }
  }
  rg(u, t, e, a, 1, n, i, o, s, v), rg(l, t, e, a, -1, n, i, o, s, c);
  for (var f = 0; f < r.length; f++) {
    var p = r[f];
    if (!zu(p) && p.linePoints) {
      var h = p.label, d = p.linePoints, y = p.labelAlignTo === "edge", m = h.style.padding, _ = m ? m[1] + m[3] : 0, S = h.style.backgroundColor ? 0 : _, x = p.rect.width + S, b = d[1][0] - d[2][0];
      y ? h.x < t ? d[2][0] = o + p.edgeDistance + x + p.labelDistance : d[2][0] = o + n - p.edgeDistance - x - p.labelDistance : (h.x < t ? d[2][0] = h.x + p.labelDistance : d[2][0] = h.x - p.labelDistance, d[1][0] = d[2][0] + b), d[1][1] = d[2][1] = h.y;
    }
  }
}
function Zx(r, t, e) {
  if (e === void 0 && (e = !1), r.labelStyleWidth == null) {
    var a = r.label, n = a.style, i = r.rect, o = n.backgroundColor, s = n.padding, l = s ? s[1] + s[3] : 0, u = n.overflow, c = i.width + (o ? 0 : l);
    if (t < c || e) {
      var v = i.height;
      if (u && u.match("break")) {
        a.setStyle("backgroundColor", null), a.setStyle("width", t - l);
        var f = a.getBoundingRect();
        a.setStyle("width", Math.ceil(f.width)), a.setStyle("backgroundColor", o);
      } else {
        var h = t - l, p = t < c ? h : (
          // Current available width is enough, but the text may have
          // already been wrapped with a smaller available width.
          e ? h > r.unconstrainedWidth ? null : h : null
        );
        a.setStyle("width", p);
      }
      var d = a.getBoundingRect();
      i.width = d.width;
      var g = (a.style.margin || 0) + 2.1;
      i.height = d.height + g, i.y -= (i.height - v) / 2;
    }
  }
}
function zu(r) {
  return r.position === "center";
}
function gL(r) {
  var t = r.getData(), e = [], a, n, i = !1, o = (r.get("minShowLabelAngle") || 0) * pL, s = t.getLayout("viewRect"), l = t.getLayout("r"), u = s.width, c = s.x, v = s.y, f = s.height;
  function h(b) {
    b.ignore = !0;
  }
  function p(b) {
    if (!b.ignore)
      return !0;
    for (var D in b.states)
      if (b.states[D].ignore === !1)
        return !0;
    return !1;
  }
  t.each(function(b) {
    var D = t.getItemGraphicEl(b), A = D.shape, T = D.getTextContent(), C = D.getTextGuideLine(), M = t.getItemModel(b), I = M.getModel("label"), L = I.get("position") || M.get(["emphasis", "label", "position"]), P = I.get("distanceToLabelLine"), E = I.get("alignTo"), N = H(I.get("edgeDistance"), u), O = I.get("bleedMargin"), k = M.getModel("labelLine"), V = k.get("length");
    V = H(V, u);
    var F = k.get("length2");
    if (F = H(F, u), Math.abs(A.endAngle - A.startAngle) < o) {
      w(T.states, h), T.ignore = !0, C && (w(C.states, h), C.ignore = !0);
      return;
    }
    if (p(T)) {
      var W = (A.startAngle + A.endAngle) / 2, q = Math.cos(W), ae = Math.sin(W), ie, ge, Se, he;
      a = A.cx, n = A.cy;
      var ne = L === "inside" || L === "inner";
      if (L === "center")
        ie = A.cx, ge = A.cy, he = "center";
      else {
        var Ce = (ne ? (A.r + A.r0) / 2 * q : A.r * q) + a, be = (ne ? (A.r + A.r0) / 2 * ae : A.r * ae) + n;
        if (ie = Ce + q * 3, ge = be + ae * 3, !ne) {
          var ke = Ce + q * (V + l - A.r), je = be + ae * (V + l - A.r), ut = ke + (q < 0 ? -1 : 1) * F, Ne = je;
          E === "edge" ? ie = q < 0 ? c + N : c + u - N : ie = ut + (q < 0 ? -P : P), ge = Ne, Se = [[Ce, be], [ke, je], [ut, Ne]];
        }
        he = ne ? "center" : E === "edge" ? q > 0 ? "right" : "left" : q > 0 ? "left" : "right";
      }
      var Xe = Math.PI, Je = 0, Mt = I.get("rotate");
      if (_e(Mt))
        Je = Mt * (Xe / 180);
      else if (L === "center")
        Je = 0;
      else if (Mt === "radial" || Mt === !0) {
        var Io = q < 0 ? -W + Xe : -W;
        Je = Io;
      } else if (Mt === "tangential" && L !== "outside" && L !== "outer") {
        var dr = Math.atan2(q, ae);
        dr < 0 && (dr = Xe * 2 + dr);
        var fw = ae > 0;
        fw && (dr = Xe + dr), Je = dr - Xe;
      }
      if (i = !!Je, T.x = ie, T.y = ge, T.rotation = Je, T.setStyle({
        verticalAlign: "middle"
      }), ne) {
        T.setStyle({
          align: he
        });
        var ql = T.states.select;
        ql && (ql.x += T.x, ql.y += T.y);
      } else {
        var ti = T.getBoundingRect().clone();
        ti.applyTransform(T.getComputedTransform());
        var Zh = (T.style.margin || 0) + 2.1;
        ti.y -= Zh / 2, ti.height += Zh, e.push({
          label: T,
          labelLine: C,
          position: L,
          len: V,
          len2: F,
          minTurnAngle: k.get("minTurnAngle"),
          maxSurfaceAngle: k.get("maxSurfaceAngle"),
          surfaceNormal: new Ue(q, ae),
          linePoints: Se,
          textAlign: he,
          labelDistance: P,
          labelAlignTo: E,
          edgeDistance: N,
          bleedMargin: O,
          rect: ti,
          unconstrainedWidth: ti.width,
          labelStyleWidth: T.style.width
        });
      }
      D.setTextConfig({
        inside: ne
      });
    }
  }), !i && r.get("avoidLabelOverlap") && dL(e, a, n, l, u, f, c, v);
  for (var d = 0; d < e.length; d++) {
    var g = e[d], y = g.label, m = g.labelLine, _ = isNaN(y.x) || isNaN(y.y);
    if (y) {
      y.setStyle({
        align: g.textAlign
      }), _ && (w(y.states, h), y.ignore = !0);
      var S = y.states.select;
      S && (S.x += y.x, S.y += y.y);
    }
    if (m) {
      var x = g.linePoints;
      _ || !x ? (w(m.states, h), m.ignore = !0) : (Cx(x, g.minTurnAngle), xI(x, g.surfaceNormal, g.maxSurfaceAngle), m.setShape({
        points: x
      }), y.__hostTarget.textGuideLineConfig = {
        anchor: new Ue(x[0][0], x[0][1])
      });
    }
  }
}
var yL = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this) || this;
      i.z2 = 2;
      var o = new ve();
      return i.setTextContent(o), i.updateData(e, a, n, !0), i;
    }
    return t.prototype.updateData = function(e, a, n, i) {
      var o = this, s = e.hostModel, l = e.getItemModel(a), u = l.getModel("emphasis"), c = e.getItemLayout(a), v = z(Ca(l.getModel("itemStyle"), c, !0), c);
      if (isNaN(v.startAngle)) {
        o.setShape(v);
        return;
      }
      if (i) {
        o.setShape(v);
        var f = s.getShallow("animationType");
        s.ecModel.ssr ? (Pe(o, {
          scaleX: 0,
          scaleY: 0
        }, s, {
          dataIndex: a,
          isFrom: !0
        }), o.originX = v.cx, o.originY = v.cy) : f === "scale" ? (o.shape.r = c.r0, Pe(o, {
          shape: {
            r: c.r
          }
        }, s, a)) : n != null ? (o.setShape({
          startAngle: n,
          endAngle: n
        }), Pe(o, {
          shape: {
            startAngle: c.startAngle,
            endAngle: c.endAngle
          }
        }, s, a)) : (o.shape.endAngle = c.startAngle, pe(o, {
          shape: {
            endAngle: c.endAngle
          }
        }, s, a));
      } else
        er(o), pe(o, {
          shape: v
        }, s, a);
      o.useStyle(e.getItemVisual(a, "style")), st(o, l);
      var h = (c.startAngle + c.endAngle) / 2, p = s.get("selectedOffset"), d = Math.cos(h) * p, g = Math.sin(h) * p, y = l.getShallow("cursor");
      y && o.attr("cursor", y), this._updateLabel(s, e, a), o.ensureState("emphasis").shape = z({
        r: c.r + (u.get("scale") && u.get("scaleSize") || 0)
      }, Ca(u.getModel("itemStyle"), c)), z(o.ensureState("select"), {
        x: d,
        y: g,
        shape: Ca(l.getModel(["select", "itemStyle"]), c)
      }), z(o.ensureState("blur"), {
        shape: Ca(l.getModel(["blur", "itemStyle"]), c)
      });
      var m = o.getTextGuideLine(), _ = o.getTextContent();
      m && z(m.ensureState("select"), {
        x: d,
        y: g
      }), z(_.ensureState("select"), {
        x: d,
        y: g
      }), Be(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, t.prototype._updateLabel = function(e, a, n) {
      var i = this, o = a.getItemModel(n), s = o.getModel("labelLine"), l = a.getItemVisual(n, "style"), u = l && l.fill, c = l && l.opacity;
      lt(i, tt(o), {
        labelFetcher: a.hostModel,
        labelDataIndex: n,
        inheritColor: u,
        defaultOpacity: c,
        defaultText: e.getFormattedLabel(n, "normal") || a.getName(n)
      });
      var v = i.getTextContent();
      i.setTextConfig({
        // reset position, rotation
        position: null,
        rotation: null
      }), v.attr({
        z2: 10
      });
      var f = e.get(["label", "position"]);
      if (f !== "outside" && f !== "outer")
        i.removeTextGuideLine();
      else {
        var h = this.getTextGuideLine();
        h || (h = new Ct(), this.setTextGuideLine(h)), qf(this, jf(o), {
          stroke: u,
          opacity: na(s.get(["lineStyle", "opacity"]), c, 1)
        });
      }
    }, t;
  }(Ht)
), mL = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.ignoreLabelLineUpdate = !0, e;
    }
    return t.prototype.render = function(e, a, n, i) {
      var o = e.getData(), s = this._data, l = this.group, u;
      if (!s && o.count() > 0) {
        for (var c = o.getItemLayout(0), v = 1; isNaN(c && c.startAngle) && v < o.count(); ++v)
          c = o.getItemLayout(v);
        c && (u = c.startAngle);
      }
      if (this._emptyCircleSector && l.remove(this._emptyCircleSector), o.count() === 0 && e.get("showEmptyCircle")) {
        var f = Yx(e), h = new Ht({
          shape: z($x(e, n), f)
        });
        h.useStyle(e.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = h, l.add(h);
      }
      o.diff(s).add(function(p) {
        var d = new yL(o, p, u);
        o.setItemGraphicEl(p, d), l.add(d);
      }).update(function(p, d) {
        var g = s.getItemGraphicEl(d);
        g.updateData(o, p, u), g.off("click"), l.add(g), o.setItemGraphicEl(p, g);
      }).remove(function(p) {
        var d = s.getItemGraphicEl(p);
        $i(d, e, p);
      }).execute(), gL(e), e.get("animationTypeUpdate") !== "expansion" && (this._data = o);
    }, t.prototype.dispose = function() {
    }, t.prototype.containPoint = function(e, a) {
      var n = a.getData(), i = n.getItemLayout(0);
      if (i) {
        var o = e[0] - i.cx, s = e[1] - i.cy, l = Math.sqrt(o * o + s * s);
        return l <= i.r && l >= i.r0;
      }
    }, t.type = "pie", t;
  }(De)
);
function ei(r, t, e) {
  t = B(t) && {
    coordDimensions: t
  } || z({
    encodeDefine: r.getEncode()
  }, t);
  var a = r.getSource(), n = mo(a, t).dimensions, i = new yt(n, r);
  return i.initData(a, e), i;
}
var Ao = (
  /** @class */
  function() {
    function r(t, e) {
      this._getDataWithEncodedVisual = t, this._getRawData = e;
    }
    return r.prototype.getAllNames = function() {
      var t = this._getRawData();
      return t.mapArray(t.getName);
    }, r.prototype.containName = function(t) {
      var e = this._getRawData();
      return e.indexOfName(t) >= 0;
    }, r.prototype.indexOfName = function(t) {
      var e = this._getDataWithEncodedVisual();
      return e.indexOfName(t);
    }, r.prototype.getItemVisual = function(t, e) {
      var a = this._getDataWithEncodedVisual();
      return a.getItemVisual(t, e);
    }, r;
  }()
), _L = ue(), SL = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.init = function(e) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new Ao(U(this.getData, this), U(this.getRawData, this)), this._defaultLabelLine(e);
    }, t.prototype.mergeOption = function() {
      r.prototype.mergeOption.apply(this, arguments);
    }, t.prototype.getInitialData = function() {
      return ei(this, {
        coordDimensions: ["value"],
        encodeDefaulter: te(Mf, this)
      });
    }, t.prototype.getDataParams = function(e) {
      var a = this.getData(), n = _L(a), i = n.seats;
      if (!i) {
        var o = [];
        a.each(a.mapDimension("value"), function(l) {
          o.push(l);
        }), i = n.seats = aD(o, a.hostModel.get("percentPrecision"));
      }
      var s = r.prototype.getDataParams.call(this, e);
      return s.percent = i[e] || 0, s.$vars.push("percent"), s;
    }, t.prototype._defaultLabelLine = function(e) {
      Oa(e, "labelLine", ["show"]);
      var a = e.labelLine, n = e.emphasis.labelLine;
      a.show = a.show && e.label.show, n.show = n.show && e.emphasis.label.show;
    }, t.type = "series.pie", t.defaultOption = {
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      endAngle: "auto",
      padAngle: 0,
      // 最小角度改为0
      minAngle: 0,
      // If the angle of a sector less than `minShowLabelAngle`,
      // the label will not be displayed.
      minShowLabelAngle: 0,
      // 选中时扇区偏移量
      selectedOffset: 10,
      // 选择模式，默认关闭，可选single，multiple
      // selectedMode: false,
      // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）
      // roseType: null,
      percentPrecision: 2,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // cursor: null,
      left: 0,
      top: 0,
      right: 0,
      bottom: 0,
      width: null,
      height: null,
      label: {
        // color: 'inherit',
        // If rotate around circle
        rotate: 0,
        show: !0,
        overflow: "truncate",
        // 'outer', 'inside', 'center'
        position: "outer",
        // 'none', 'labelLine', 'edge'. Works only when position is 'outer'
        alignTo: "none",
        // Closest distance between label and chart edge.
        // Works only position is 'outer' and alignTo is 'edge'.
        edgeDistance: "25%",
        // Works only position is 'outer' and alignTo is not 'edge'.
        bleedMargin: 10,
        // Distance between text and label line.
        distanceToLabelLine: 5
        // formatter: 标签文本格式器，同 tooltip.formatter，不支持异步回调
        // 默认使用全局文本样式，详见 textStyle
        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数
      },
      // Enabled when label.normal.position is 'outer'
      labelLine: {
        show: !0,
        // 引导线两段中的第一段长度
        length: 15,
        // 引导线两段中的第二段长度
        length2: 15,
        smooth: !1,
        minTurnAngle: 90,
        maxSurfaceAngle: 90,
        lineStyle: {
          // color: 各异,
          width: 1,
          type: "solid"
        }
      },
      itemStyle: {
        borderWidth: 1,
        borderJoin: "round"
      },
      showEmptyCircle: !0,
      emptyCircleStyle: {
        color: "lightgray",
        opacity: 1
      },
      labelLayout: {
        // Hide the overlapped label.
        hideOverlap: !0
      },
      emphasis: {
        scale: !0,
        scaleSize: 5
      },
      // If use strategy to avoid label overlapping
      avoidLabelOverlap: !0,
      // Animation type. Valid values: expansion, scale
      animationType: "expansion",
      animationDuration: 1e3,
      // Animation type when update. Valid values: transition, expansion
      animationTypeUpdate: "transition",
      animationEasingUpdate: "cubicInOut",
      animationDurationUpdate: 500,
      animationEasing: "cubicInOut"
    }, t;
  }(Le)
);
function xL(r) {
  return {
    seriesType: r,
    reset: function(t, e) {
      var a = t.getData();
      a.filterSelf(function(n) {
        var i = a.mapDimension("value"), o = a.get(i, n);
        return !(_e(o) && !isNaN(o) && o < 0);
      });
    }
  };
}
function bL(r) {
  r.registerChartView(mL), r.registerSeriesModel(SL), ES("pie", r.registerAction), r.registerLayout(te(hL, "pie")), r.registerProcessor(Do("pie")), r.registerProcessor(xL("pie"));
}
var wL = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.hasSymbolVisual = !0, e;
    }
    return t.prototype.getInitialData = function(e, a) {
      return Pr(null, this, {
        useEncodeDefaulter: !0
      });
    }, t.prototype.getProgressive = function() {
      var e = this.option.progressive;
      return e ?? (this.option.large ? 5e3 : this.get("progressive"));
    }, t.prototype.getProgressiveThreshold = function() {
      var e = this.option.progressiveThreshold;
      return e ?? (this.option.large ? 1e4 : this.get("progressiveThreshold"));
    }, t.prototype.brushSelector = function(e, a, n) {
      return n.point(a.getItemLayout(e));
    }, t.prototype.getZLevelKey = function() {
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : "";
    }, t.type = "series.scatter", t.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], t.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      symbolSize: 10,
      // symbolRotate: null,  // 图形旋转控制
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      // cursor: null,
      itemStyle: {
        opacity: 0.8
        // color: 各异
      },
      emphasis: {
        scale: !0
      },
      // If clip the overflow graphics
      // Works on cartesian / polar series
      clip: !0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      universalTransition: {
        divideShape: "clone"
      }
      // progressive: null
    }, t;
  }(Le)
), Xx = 4, DL = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
    }
    return r;
  }()
), AL = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a._off = 0, a.hoverDataIdx = -1, a;
    }
    return t.prototype.getDefaultShape = function() {
      return new DL();
    }, t.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, t.prototype.buildPath = function(e, a) {
      var n = a.points, i = a.size, o = this.symbolProxy, s = o.shape, l = e.getContext ? e.getContext() : e, u = l && i[0] < Xx, c = this.softClipShape, v;
      if (u) {
        this._ctx = l;
        return;
      }
      for (this._ctx = null, v = this._off; v < n.length; ) {
        var f = n[v++], h = n[v++];
        isNaN(f) || isNaN(h) || c && !c.contain(f, h) || (s.x = f - i[0] / 2, s.y = h - i[1] / 2, s.width = i[0], s.height = i[1], o.buildPath(e, s, !0));
      }
      this.incremental && (this._off = v, this.notClear = !0);
    }, t.prototype.afterBrush = function() {
      var e = this.shape, a = e.points, n = e.size, i = this._ctx, o = this.softClipShape, s;
      if (i) {
        for (s = this._off; s < a.length; ) {
          var l = a[s++], u = a[s++];
          isNaN(l) || isNaN(u) || o && !o.contain(l, u) || i.fillRect(l - n[0] / 2, u - n[1] / 2, n[0], n[1]);
        }
        this.incremental && (this._off = s, this.notClear = !0);
      }
    }, t.prototype.findDataIndex = function(e, a) {
      for (var n = this.shape, i = n.points, o = n.size, s = Math.max(o[0], 4), l = Math.max(o[1], 4), u = i.length / 2 - 1; u >= 0; u--) {
        var c = u * 2, v = i[c] - s / 2, f = i[c + 1] - l / 2;
        if (e >= v && a >= f && e <= v + s && a <= f + l)
          return u;
      }
      return -1;
    }, t.prototype.contain = function(e, a) {
      var n = this.transformCoordToLocal(e, a), i = this.getBoundingRect();
      if (e = n[0], a = n[1], i.contain(e, a)) {
        var o = this.hoverDataIdx = this.findDataIndex(e, a);
        return o >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, t.prototype.getBoundingRect = function() {
      var e = this._rect;
      if (!e) {
        for (var a = this.shape, n = a.points, i = a.size, o = i[0], s = i[1], l = 1 / 0, u = 1 / 0, c = -1 / 0, v = -1 / 0, f = 0; f < n.length; ) {
          var h = n[f++], p = n[f++];
          l = Math.min(h, l), c = Math.max(h, c), u = Math.min(p, u), v = Math.max(p, v);
        }
        e = this._rect = new Te(l - o / 2, u - s / 2, c - l + o, v - u + s);
      }
      return e;
    }, t;
  }(Ee)
), TL = (
  /** @class */
  function() {
    function r() {
      this.group = new re();
    }
    return r.prototype.updateData = function(t, e) {
      this._clear();
      var a = this._create();
      a.setShape({
        points: t.getLayout("points")
      }), this._setCommon(a, t, e);
    }, r.prototype.updateLayout = function(t) {
      var e = t.getLayout("points");
      this.group.eachChild(function(a) {
        if (a.startIndex != null) {
          var n = (a.endIndex - a.startIndex) * 2, i = a.startIndex * 4 * 2;
          e = new Float32Array(e.buffer, i, n);
        }
        a.setShape("points", e), a.reset();
      });
    }, r.prototype.incrementalPrepareUpdate = function(t) {
      this._clear();
    }, r.prototype.incrementalUpdate = function(t, e, a) {
      var n = this._newAdded[0], i = e.getLayout("points"), o = n && n.shape.points;
      if (o && o.length < 2e4) {
        var s = o.length, l = new Float32Array(s + i.length);
        l.set(o), l.set(i, s), n.endIndex = t.end, n.setShape({
          points: l
        });
      } else {
        this._newAdded = [];
        var u = this._create();
        u.startIndex = t.start, u.endIndex = t.end, u.incremental = !0, u.setShape({
          points: i
        }), this._setCommon(u, e, a);
      }
    }, r.prototype.eachRendered = function(t) {
      this._newAdded[0] && t(this._newAdded[0]);
    }, r.prototype._create = function() {
      var t = new AL({
        cursor: "default"
      });
      return t.ignoreCoarsePointer = !0, this.group.add(t), this._newAdded.push(t), t;
    }, r.prototype._setCommon = function(t, e, a) {
      var n = e.hostModel;
      a = a || {};
      var i = e.getVisual("symbolSize");
      t.setShape("size", i instanceof Array ? i : [i, i]), t.softClipShape = a.clipShape || null, t.symbolProxy = Ze(e.getVisual("symbol"), 0, 0, 0, 0), t.setColor = t.symbolProxy.setColor;
      var o = t.shape.size[0] < Xx;
      t.useStyle(
        // Draw shadow when doing fillRect is extremely slow.
        n.getModel("itemStyle").getItemStyle(o ? ["color", "shadowBlur", "shadowColor"] : ["color"])
      );
      var s = e.getVisual("style"), l = s && s.fill;
      l && t.setColor(l);
      var u = j(t);
      u.seriesIndex = n.seriesIndex, t.on("mousemove", function(c) {
        u.dataIndex = null;
        var v = t.hoverDataIdx;
        v >= 0 && (u.dataIndex = v + (t.startIndex || 0));
      });
    }, r.prototype.remove = function() {
      this._clear();
    }, r.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, r;
  }()
), CL = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = e.getData(), o = this._updateSymbolDraw(i, e);
      o.updateData(i, {
        // TODO
        // If this parameter should be a shape or a bounding volume
        // shape will be more general.
        // But bounding volume like bounding rect will be much faster in the contain calculation
        clipShape: this._getClipShape(e)
      }), this._finished = !0;
    }, t.prototype.incrementalPrepareRender = function(e, a, n) {
      var i = e.getData(), o = this._updateSymbolDraw(i, e);
      o.incrementalPrepareUpdate(i), this._finished = !1;
    }, t.prototype.incrementalRender = function(e, a, n) {
      this._symbolDraw.incrementalUpdate(e, a.getData(), {
        clipShape: this._getClipShape(a)
      }), this._finished = e.end === a.getData().count();
    }, t.prototype.updateTransform = function(e, a, n) {
      var i = e.getData();
      if (this.group.dirty(), !this._finished || i.count() > 1e4)
        return {
          update: !0
        };
      var o = wo("").reset(e, a, n);
      o.progress && o.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._symbolDraw.updateLayout(i);
    }, t.prototype.eachRendered = function(e) {
      this._symbolDraw && this._symbolDraw.eachRendered(e);
    }, t.prototype._getClipShape = function(e) {
      if (e.get("clip", !0)) {
        var a = e.coordinateSystem;
        return a && a.getArea && a.getArea(0.1);
      }
    }, t.prototype._updateSymbolDraw = function(e, a) {
      var n = this._symbolDraw, i = a.pipelineContext, o = i.large;
      return (!n || o !== this._isLargeDraw) && (n && n.remove(), n = this._symbolDraw = o ? new TL() : new xo(), this._isLargeDraw = o, this.group.removeAll()), this.group.add(n.group), n;
    }, t.prototype.remove = function(e, a) {
      this._symbolDraw && this._symbolDraw.remove(!0), this._symbolDraw = null;
    }, t.prototype.dispose = function() {
    }, t.type = "scatter", t;
  }(De)
), ML = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.type = "grid", t.dependencies = ["xAxis", "yAxis"], t.layoutMode = "box", t.defaultOption = {
      show: !1,
      // zlevel: 0,
      z: 0,
      left: "10%",
      top: 60,
      right: "10%",
      bottom: 70,
      // If grid size contain label
      containLabel: !1,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      backgroundColor: "rgba(0,0,0,0)",
      borderWidth: 1,
      borderColor: "#ccc"
    }, t;
  }(se)
), Sv = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("grid", Ye).models[0];
    }, t.type = "cartesian2dAxis", t;
  }(se)
);
at(Sv, _o);
var Kx = {
  show: !0,
  // zlevel: 0,
  z: 0,
  // Inverse the axis.
  inverse: !1,
  // Axis name displayed.
  name: "",
  // 'start' | 'middle' | 'end'
  nameLocation: "end",
  // By degree. By default auto rotate by nameLocation.
  nameRotate: null,
  nameTruncate: {
    maxWidth: null,
    ellipsis: "...",
    placeholder: "."
  },
  // Use global text style by default.
  nameTextStyle: {},
  // The gap between axisName and axisLine.
  nameGap: 15,
  // Default `false` to support tooltip.
  silent: !1,
  // Default `false` to avoid legacy user event listener fail.
  triggerEvent: !1,
  tooltip: {
    show: !1
  },
  axisPointer: {},
  axisLine: {
    show: !0,
    onZero: !0,
    onZeroAxisIndex: null,
    lineStyle: {
      color: "#6E7079",
      width: 1,
      type: "solid"
    },
    // The arrow at both ends the the axis.
    symbol: ["none", "none"],
    symbolSize: [10, 15]
  },
  axisTick: {
    show: !0,
    // Whether axisTick is inside the grid or outside the grid.
    inside: !1,
    // The length of axisTick.
    length: 5,
    lineStyle: {
      width: 1
    }
  },
  axisLabel: {
    show: !0,
    // Whether axisLabel is inside the grid or outside the grid.
    inside: !1,
    rotate: 0,
    // true | false | null/undefined (auto)
    showMinLabel: null,
    // true | false | null/undefined (auto)
    showMaxLabel: null,
    margin: 8,
    // formatter: null,
    fontSize: 12
  },
  splitLine: {
    show: !0,
    lineStyle: {
      color: ["#E0E6F1"],
      width: 1,
      type: "solid"
    }
  },
  splitArea: {
    show: !1,
    areaStyle: {
      color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"]
    }
  }
}, IL = le({
  // The gap at both ends of the axis. For categoryAxis, boolean.
  boundaryGap: !0,
  // Set false to faster category collection.
  deduplication: null,
  // splitArea: {
  // show: false
  // },
  splitLine: {
    show: !1
  },
  axisTick: {
    // If tick is align with label when boundaryGap is true
    alignWithLabel: !1,
    interval: "auto"
  },
  axisLabel: {
    interval: "auto"
  }
}, Kx), Jf = le({
  boundaryGap: [0, 0],
  axisLine: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  axisTick: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  // TODO
  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]
  splitNumber: 5,
  minorTick: {
    // Minor tick, not available for cateogry axis.
    show: !1,
    // Split number of minor ticks. The value should be in range of (0, 100)
    splitNumber: 5,
    // Length of minor tick
    length: 3,
    // Line style
    lineStyle: {
      // Default to be same with axisTick
    }
  },
  minorSplitLine: {
    show: !1,
    lineStyle: {
      color: "#F4F7FD",
      width: 1
    }
  }
}, Kx), LL = le({
  splitNumber: 6,
  axisLabel: {
    // To eliminate labels that are not nice
    showMinLabel: !1,
    showMaxLabel: !1,
    rich: {
      primary: {
        fontWeight: "bold"
      }
    }
  },
  splitLine: {
    show: !1
  }
}, Jf), EL = ee({
  logBase: 10
}, Jf);
const qx = {
  category: IL,
  value: Jf,
  time: LL,
  log: EL
};
var PL = {
  value: 1,
  category: 1,
  time: 1,
  log: 1
};
function Pn(r, t, e, a) {
  w(PL, function(n, i) {
    var o = le(le({}, qx[i], !0), a, !0), s = (
      /** @class */
      function(l) {
        R(u, l);
        function u() {
          var c = l !== null && l.apply(this, arguments) || this;
          return c.type = t + "Axis." + i, c;
        }
        return u.prototype.mergeDefaultAndTheme = function(c, v) {
          var f = Zi(this), h = f ? Zn(c) : {}, p = v.getTheme();
          le(c, p.get(i + "Axis")), le(c, this.getDefaultOption()), c.type = ag(c), f && ea(c, h, f);
        }, u.prototype.optionUpdated = function() {
          var c = this.option;
          c.type === "category" && (this.__ordinalMeta = dv.createByAxisModel(this));
        }, u.prototype.getCategories = function(c) {
          var v = this.option;
          if (v.type === "category")
            return c ? v.data : this.__ordinalMeta.categories;
        }, u.prototype.getOrdinalMeta = function() {
          return this.__ordinalMeta;
        }, u.type = t + "Axis." + i, u.defaultOption = o, u;
      }(e)
    );
    r.registerComponentModel(s);
  }), r.registerSubTypeDefaulter(t + "Axis", ag);
}
function ag(r) {
  return r.type || (r.data ? "category" : "value");
}
var NL = (
  /** @class */
  function() {
    function r(t) {
      this.type = "cartesian", this._dimList = [], this._axes = {}, this.name = t || "";
    }
    return r.prototype.getAxis = function(t) {
      return this._axes[t];
    }, r.prototype.getAxes = function() {
      return G(this._dimList, function(t) {
        return this._axes[t];
      }, this);
    }, r.prototype.getAxesByScale = function(t) {
      return t = t.toLowerCase(), Ae(this.getAxes(), function(e) {
        return e.scale.type === t;
      });
    }, r.prototype.addAxis = function(t) {
      var e = t.dim;
      this._axes[e] = t, this._dimList.push(e);
    }, r;
  }()
), xv = ["x", "y"];
function ng(r) {
  return r.type === "interval" || r.type === "time";
}
var RL = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = "cartesian2d", e.dimensions = xv, e;
    }
    return t.prototype.calcAffineTransform = function() {
      this._transform = this._invTransform = null;
      var e = this.getAxis("x").scale, a = this.getAxis("y").scale;
      if (!(!ng(e) || !ng(a))) {
        var n = e.getExtent(), i = a.getExtent(), o = this.dataToPoint([n[0], i[0]]), s = this.dataToPoint([n[1], i[1]]), l = n[1] - n[0], u = i[1] - i[0];
        if (!(!l || !u)) {
          var c = (s[0] - o[0]) / l, v = (s[1] - o[1]) / u, f = o[0] - n[0] * c, h = o[1] - i[0] * v, p = this._transform = [c, 0, 0, v, f, h];
          this._invTransform = lo([], p);
        }
      }
    }, t.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x");
    }, t.prototype.containPoint = function(e) {
      var a = this.getAxis("x"), n = this.getAxis("y");
      return a.contain(a.toLocalCoord(e[0])) && n.contain(n.toLocalCoord(e[1]));
    }, t.prototype.containData = function(e) {
      return this.getAxis("x").containData(e[0]) && this.getAxis("y").containData(e[1]);
    }, t.prototype.containZone = function(e, a) {
      var n = this.dataToPoint(e), i = this.dataToPoint(a), o = this.getArea(), s = new Te(n[0], n[1], i[0] - n[0], i[1] - n[1]);
      return o.intersect(s);
    }, t.prototype.dataToPoint = function(e, a, n) {
      n = n || [];
      var i = e[0], o = e[1];
      if (this._transform && i != null && isFinite(i) && o != null && isFinite(o))
        return Ft(n, e, this._transform);
      var s = this.getAxis("x"), l = this.getAxis("y");
      return n[0] = s.toGlobalCoord(s.dataToCoord(i, a)), n[1] = l.toGlobalCoord(l.dataToCoord(o, a)), n;
    }, t.prototype.clampData = function(e, a) {
      var n = this.getAxis("x").scale, i = this.getAxis("y").scale, o = n.getExtent(), s = i.getExtent(), l = n.parse(e[0]), u = i.parse(e[1]);
      return a = a || [], a[0] = Math.min(Math.max(Math.min(o[0], o[1]), l), Math.max(o[0], o[1])), a[1] = Math.min(Math.max(Math.min(s[0], s[1]), u), Math.max(s[0], s[1])), a;
    }, t.prototype.pointToData = function(e, a) {
      var n = [];
      if (this._invTransform)
        return Ft(n, e, this._invTransform);
      var i = this.getAxis("x"), o = this.getAxis("y");
      return n[0] = i.coordToData(i.toLocalCoord(e[0]), a), n[1] = o.coordToData(o.toLocalCoord(e[1]), a), n;
    }, t.prototype.getOtherAxis = function(e) {
      return this.getAxis(e.dim === "x" ? "y" : "x");
    }, t.prototype.getArea = function(e) {
      e = e || 0;
      var a = this.getAxis("x").getGlobalExtent(), n = this.getAxis("y").getGlobalExtent(), i = Math.min(a[0], a[1]) - e, o = Math.min(n[0], n[1]) - e, s = Math.max(a[0], a[1]) - i + e, l = Math.max(n[0], n[1]) - o + e;
      return new Te(i, o, s, l);
    }, t;
  }(NL)
), kL = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n, i, o) {
      var s = r.call(this, e, a, n) || this;
      return s.index = 0, s.type = i || "value", s.position = o || "bottom", s;
    }
    return t.prototype.isHorizontal = function() {
      var e = this.position;
      return e === "top" || e === "bottom";
    }, t.prototype.getGlobalExtent = function(e) {
      var a = this.getExtent();
      return a[0] = this.toGlobalCoord(a[0]), a[1] = this.toGlobalCoord(a[1]), e && a[0] > a[1] && a.reverse(), a;
    }, t.prototype.pointToData = function(e, a) {
      return this.coordToData(this.toLocalCoord(e[this.dim === "x" ? 0 : 1]), a);
    }, t.prototype.setCategorySortInfo = function(e) {
      if (this.type !== "category")
        return !1;
      this.model.option.categorySortInfo = e, this.scale.setSortInfo(e);
    }, t;
  }(rr)
), OL = { env: {} };
function bv(r, t, e) {
  e = e || {};
  var a = r.coordinateSystem, n = t.axis, i = {}, o = n.getAxesOnZeroOf()[0], s = n.position, l = o ? "onZero" : s, u = n.dim, c = a.getRect(), v = [c.x, c.x + c.width, c.y, c.y + c.height], f = {
    left: 0,
    right: 1,
    top: 0,
    bottom: 1,
    onZero: 2
  }, h = t.get("offset") || 0, p = u === "x" ? [v[2] - h, v[3] + h] : [v[0] - h, v[1] + h];
  if (o) {
    var d = o.toGlobalCoord(o.dataToCoord(0));
    p[f.onZero] = Math.max(Math.min(d, p[1]), p[0]);
  }
  i.position = [u === "y" ? p[f[l]] : v[0], u === "x" ? p[f[l]] : v[3]], i.rotation = Math.PI / 2 * (u === "x" ? 0 : 1);
  var g = {
    top: -1,
    bottom: 1,
    left: -1,
    right: 1
  };
  i.labelDirection = i.tickDirection = i.nameDirection = g[s], i.labelOffset = o ? p[f[s]] - p[f.onZero] : 0, t.get(["axisTick", "inside"]) && (i.tickDirection = -i.tickDirection), $e(e.labelInside, t.get(["axisLabel", "inside"])) && (i.labelDirection = -i.labelDirection);
  var y = t.get(["axisLabel", "rotate"]);
  return i.labelRotate = l === "top" ? -y : y, i.z2 = 1, i;
}
function ig(r) {
  return r.get("coordinateSystem") === "cartesian2d";
}
function og(r) {
  var t = {
    xAxisModel: null,
    yAxisModel: null
  };
  return w(t, function(e, a) {
    var n = a.replace(/Model$/, ""), i = r.getReferringComponents(n, Ye).models[0];
    if (OL.env.NODE_ENV !== "production" && !i)
      throw new Error(n + ' "' + na(r.get(n + "Index"), r.get(n + "Id"), 0) + '" not found');
    t[a] = i;
  }), t;
}
var VL = { env: {} }, Gu = Math.log;
function jx(r, t, e) {
  var a = Mr.prototype, n = a.getTicks.call(e), i = a.getTicks.call(e, !0), o = n.length - 1, s = a.getInterval.call(e), l = px(r, t), u = l.extent, c = l.fixMin, v = l.fixMax;
  if (r.type === "log") {
    var f = Gu(r.base);
    u = [Gu(u[0]) / f, Gu(u[1]) / f];
  }
  r.setExtent(u[0], u[1]), r.calcNiceExtent({
    splitNumber: o,
    fixMin: c,
    fixMax: v
  });
  var h = a.getExtent.call(r);
  c && (u[0] = h[0]), v && (u[1] = h[1]);
  var p = a.getInterval.call(r), d = u[0], g = u[1];
  if (c && v)
    p = (g - d) / o;
  else if (c)
    for (g = u[0] + p * o; g < u[1] && isFinite(g) && isFinite(u[1]); )
      p = Mu(p), g = u[0] + p * o;
  else if (v)
    for (d = u[1] - p * o; d > u[0] && isFinite(d) && isFinite(u[0]); )
      p = Mu(p), d = u[1] - p * o;
  else {
    var y = r.getTicks().length - 1;
    y > o && (p = Mu(p));
    var m = p * o;
    g = Math.ceil(u[1] / p) * p, d = ze(g - m), d < 0 && u[0] >= 0 ? (d = 0, g = ze(m)) : g > 0 && u[1] <= 0 && (g = 0, d = -ze(m));
  }
  var _ = (n[0].value - i[0].value) / s, S = (n[o].value - i[o].value) / s;
  if (a.setExtent.call(r, d + p * _, g + p * S), a.setInterval.call(r, p), (_ || S) && a.setNiceExtent.call(r, d + p, g - p), VL.env.NODE_ENV !== "production") {
    var x = a.getTicks.call(r);
    x[1] && (!MM(p) || Yc(x[1].value) > Yc(p)) && Ve(
      // eslint-disable-next-line
      "The ticks may be not readable when set min: " + t.get("min") + ", max: " + t.get("max") + " and alignTicks: true"
    );
  }
}
var BL = { env: {} }, zL = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.type = "grid", this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this.axisPointerEnabled = !0, this.dimensions = xv, this._initCartesian(t, e, a), this.model = t;
    }
    return r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype.update = function(t, e) {
      var a = this._axesMap;
      this._updateScale(t, this.model);
      function n(o) {
        var s, l = Fe(o), u = l.length;
        if (u) {
          for (var c = [], v = u - 1; v >= 0; v--) {
            var f = +l[v], h = o[f], p = h.model, d = h.scale;
            // Only value and log axis without interval support alignTicks.
            gv(d) && p.get("alignTicks") && p.get("interval") == null ? c.push(h) : (Ln(d, p), gv(d) && (s = h));
          }
          c.length && (s || (s = c.pop(), Ln(s.scale, s.model)), w(c, function(g) {
            jx(g.scale, g.model, s.scale);
          }));
        }
      }
      n(a.x), n(a.y);
      var i = {};
      w(a.x, function(o) {
        sg(a, "y", o, i);
      }), w(a.y, function(o) {
        sg(a, "x", o, i);
      }), this.resize(this.model, e);
    }, r.prototype.resize = function(t, e, a) {
      var n = t.getBoxLayoutParams(), i = !a && t.get("containLabel"), o = qe(n, {
        width: e.getWidth(),
        height: e.getHeight()
      });
      this._rect = o;
      var s = this._axesList;
      l(), i && (w(s, function(u) {
        if (!u.model.get(["axisLabel", "inside"])) {
          var c = QM(u);
          if (c) {
            var v = u.isHorizontal() ? "height" : "width", f = u.model.get(["axisLabel", "margin"]);
            o[v] -= c[v] + f, u.position === "top" ? o.y += c.height + f : u.position === "left" && (o.x += c.width + f);
          }
        }
      }), l()), w(this._coordsList, function(u) {
        u.calcAffineTransform();
      });
      function l() {
        w(s, function(u) {
          var c = u.isHorizontal(), v = c ? [0, o.width] : [0, o.height], f = u.inverse ? 1 : 0;
          u.setExtent(v[f], v[1 - f]), GL(u, c ? o.x : o.y);
        });
      }
    }, r.prototype.getAxis = function(t, e) {
      var a = this._axesMap[t];
      if (a != null)
        return a[e || 0];
    }, r.prototype.getAxes = function() {
      return this._axesList.slice();
    }, r.prototype.getCartesian = function(t, e) {
      if (t != null && e != null) {
        var a = "x" + t + "y" + e;
        return this._coordsMap[a];
      }
      J(t) && (e = t.yAxisIndex, t = t.xAxisIndex);
      for (var n = 0, i = this._coordsList; n < i.length; n++)
        if (i[n].getAxis("x").index === t || i[n].getAxis("y").index === e)
          return i[n];
    }, r.prototype.getCartesians = function() {
      return this._coordsList.slice();
    }, r.prototype.convertToPixel = function(t, e, a) {
      var n = this._findConvertTarget(e);
      return n.cartesian ? n.cartesian.dataToPoint(a) : n.axis ? n.axis.toGlobalCoord(n.axis.dataToCoord(a)) : null;
    }, r.prototype.convertFromPixel = function(t, e, a) {
      var n = this._findConvertTarget(e);
      return n.cartesian ? n.cartesian.pointToData(a) : n.axis ? n.axis.coordToData(n.axis.toLocalCoord(a)) : null;
    }, r.prototype._findConvertTarget = function(t) {
      var e = t.seriesModel, a = t.xAxisModel || e && e.getReferringComponents("xAxis", Ye).models[0], n = t.yAxisModel || e && e.getReferringComponents("yAxis", Ye).models[0], i = t.gridModel, o = this._coordsList, s, l;
      if (e)
        s = e.coordinateSystem, fe(o, s) < 0 && (s = null);
      else if (a && n)
        s = this.getCartesian(a.componentIndex, n.componentIndex);
      else if (a)
        l = this.getAxis("x", a.componentIndex);
      else if (n)
        l = this.getAxis("y", n.componentIndex);
      else if (i) {
        var u = i.coordinateSystem;
        u === this && (s = this._coordsList[0]);
      }
      return {
        cartesian: s,
        axis: l
      };
    }, r.prototype.containPoint = function(t) {
      var e = this._coordsList[0];
      if (e)
        return e.containPoint(t);
    }, r.prototype._initCartesian = function(t, e, a) {
      var n = this, i = this, o = {
        left: !1,
        right: !1,
        top: !1,
        bottom: !1
      }, s = {
        x: {},
        y: {}
      }, l = {
        x: 0,
        y: 0
      };
      if (e.eachComponent("xAxis", u("x"), this), e.eachComponent("yAxis", u("y"), this), !l.x || !l.y) {
        this._axesMap = {}, this._axesList = [];
        return;
      }
      this._axesMap = s, w(s.x, function(c, v) {
        w(s.y, function(f, h) {
          var p = "x" + v + "y" + h, d = new RL(p);
          d.master = n, d.model = t, n._coordsMap[p] = d, n._coordsList.push(d), d.addAxis(c), d.addAxis(f);
        });
      });
      function u(c) {
        return function(v, f) {
          if (Fu(v, t)) {
            var h = v.get("position");
            c === "x" ? h !== "top" && h !== "bottom" && (h = o.bottom ? "top" : "bottom") : h !== "left" && h !== "right" && (h = o.left ? "right" : "left"), o[h] = !0;
            var p = new kL(c, Wl(v), [0, 0], v.get("type"), h), d = p.type === "category";
            p.onBand = d && v.get("boundaryGap"), p.inverse = v.get("inverse"), v.axis = p, p.model = v, p.grid = i, p.index = f, i._axesList.push(p), s[c][f] = p, l[c]++;
          }
        };
      }
    }, r.prototype._updateScale = function(t, e) {
      w(this._axesList, function(n) {
        if (n.scale.setExtent(1 / 0, -1 / 0), n.type === "category") {
          var i = n.model.get("categorySortInfo");
          n.scale.setSortInfo(i);
        }
      }), t.eachSeries(function(n) {
        if (ig(n)) {
          var i = og(n), o = i.xAxisModel, s = i.yAxisModel;
          if (!Fu(o, e) || !Fu(s, e))
            return;
          var l = this.getCartesian(o.componentIndex, s.componentIndex), u = n.getData(), c = l.getAxis("x"), v = l.getAxis("y");
          a(u, c), a(u, v);
        }
      }, this);
      function a(n, i) {
        w(Js(n, i.dim), function(o) {
          i.scale.unionExtentFromData(n, o);
        });
      }
    }, r.prototype.getTooltipAxes = function(t) {
      var e = [], a = [];
      return w(this.getCartesians(), function(n) {
        var i = t != null && t !== "auto" ? n.getAxis(t) : n.getBaseAxis(), o = n.getOtherAxis(i);
        fe(e, i) < 0 && e.push(i), fe(a, o) < 0 && a.push(o);
      }), {
        baseAxes: e,
        otherAxes: a
      };
    }, r.create = function(t, e) {
      var a = [];
      return t.eachComponent("grid", function(n, i) {
        var o = new r(n, t, e);
        o.name = "grid_" + i, o.resize(n, e, !0), n.coordinateSystem = o, a.push(o);
      }), t.eachSeries(function(n) {
        if (ig(n)) {
          var i = og(n), o = i.xAxisModel, s = i.yAxisModel, l = o.getCoordSysModel();
          if (BL.env.NODE_ENV !== "production") {
            if (!l)
              throw new Error('Grid "' + na(o.get("gridIndex"), o.get("gridId"), 0) + '" not found');
            if (o.getCoordSysModel() !== s.getCoordSysModel())
              throw new Error("xAxis and yAxis must use the same grid");
          }
          var u = l.coordinateSystem;
          n.coordinateSystem = u.getCartesian(o.componentIndex, s.componentIndex);
        }
      }), a;
    }, r.dimensions = xv, r;
  }()
);
function Fu(r, t) {
  return r.getCoordSysModel() === t;
}
function sg(r, t, e, a) {
  e.getAxesOnZeroOf = function() {
    return i ? [i] : [];
  };
  var n = r[t], i, o = e.model, s = o.get(["axisLine", "onZero"]), l = o.get(["axisLine", "onZeroAxisIndex"]);
  if (!s)
    return;
  if (l != null)
    lg(n[l]) && (i = n[l]);
  else
    for (var u in n)
      if (n.hasOwnProperty(u) && lg(n[u]) && !a[c(n[u])]) {
        i = n[u];
        break;
      }
  i && (a[c(i)] = !0);
  function c(v) {
    return v.dim + "_" + v.index;
  }
}
function lg(r) {
  return r && r.type !== "category" && r.type !== "time" && JM(r);
}
function GL(r, t) {
  var e = r.getExtent(), a = e[0] + e[1];
  r.toGlobalCoord = r.dim === "x" ? function(n) {
    return n + t;
  } : function(n) {
    return a - n + t;
  }, r.toLocalCoord = r.dim === "x" ? function(n) {
    return n - t;
  } : function(n) {
    return a - n + t;
  };
}
var Hr = Math.PI, mt = (
  /** @class */
  function() {
    function r(t, e) {
      this.group = new re(), this.opt = e, this.axisModel = t, ee(e, {
        labelOffset: 0,
        nameDirection: 1,
        tickDirection: 1,
        labelDirection: 1,
        silent: !0,
        handleAutoShown: function() {
          return !0;
        }
      });
      var a = new re({
        x: e.position[0],
        y: e.position[1],
        rotation: e.rotation
      });
      a.updateTransform(), this._transformGroup = a;
    }
    return r.prototype.hasBuilder = function(t) {
      return !!ug[t];
    }, r.prototype.add = function(t) {
      ug[t](this.opt, this.axisModel, this.group, this._transformGroup);
    }, r.prototype.getGroup = function() {
      return this.group;
    }, r.innerTextLayout = function(t, e, a) {
      var n = q0(e - t), i, o;
      return Wi(n) ? (o = a > 0 ? "top" : "bottom", i = "center") : Wi(n - Hr) ? (o = a > 0 ? "bottom" : "top", i = "center") : (o = "middle", n > 0 && n < Hr ? i = a > 0 ? "right" : "left" : i = a > 0 ? "left" : "right"), {
        rotation: n,
        textAlign: i,
        textVerticalAlign: o
      };
    }, r.makeAxisEventDataBase = function(t) {
      var e = {
        componentType: t.mainType,
        componentIndex: t.componentIndex
      };
      return e[t.mainType + "Index"] = t.componentIndex, e;
    }, r.isLabelSilent = function(t) {
      var e = t.get("tooltip");
      return t.get("silent") || !(t.get("triggerEvent") || e && e.show);
    }, r;
  }()
), ug = {
  axisLine: function(r, t, e, a) {
    var n = t.get(["axisLine", "show"]);
    if (n === "auto" && r.handleAutoShown && (n = r.handleAutoShown("axisLine")), !!n) {
      var i = t.axis.getExtent(), o = a.transform, s = [i[0], 0], l = [i[1], 0], u = s[0] > l[0];
      o && (Ft(s, s, o), Ft(l, l, o));
      var c = z({
        lineCap: "round"
      }, t.getModel(["axisLine", "lineStyle"]).getLineStyle()), v = new it({
        shape: {
          x1: s[0],
          y1: s[1],
          x2: l[0],
          y2: l[1]
        },
        style: c,
        strokeContainThreshold: r.strokeContainThreshold || 5,
        silent: !0,
        z2: 1
      });
      Cn(v.shape, v.style.lineWidth), v.anid = "line", e.add(v);
      var f = t.get(["axisLine", "symbol"]);
      if (f != null) {
        var h = t.get(["axisLine", "symbolSize"]);
        Y(f) && (f = [f, f]), (Y(h) || _e(h)) && (h = [h, h]);
        var p = $a(t.get(["axisLine", "symbolOffset"]) || 0, h), d = h[0], g = h[1];
        w([{
          rotate: r.rotation + Math.PI / 2,
          offset: p[0],
          r: 0
        }, {
          rotate: r.rotation - Math.PI / 2,
          offset: p[1],
          r: Math.sqrt((s[0] - l[0]) * (s[0] - l[0]) + (s[1] - l[1]) * (s[1] - l[1]))
        }], function(y, m) {
          if (f[m] !== "none" && f[m] != null) {
            var _ = Ze(f[m], -d / 2, -g / 2, d, g, c.stroke, !0), S = y.r + y.offset, x = u ? l : s;
            _.attr({
              rotation: y.rotate,
              x: x[0] + S * Math.cos(r.rotation),
              y: x[1] - S * Math.sin(r.rotation),
              silent: !0,
              z2: 11
            }), e.add(_);
          }
        });
      }
    }
  },
  axisTickLabel: function(r, t, e, a) {
    var n = WL(e, a, t, r), i = $L(e, a, t, r);
    if (HL(t, i, n), UL(e, a, t, r.tickDirection), t.get(["axisLabel", "hideOverlap"])) {
      var o = Mx(G(i, function(s) {
        return {
          label: s,
          priority: s.z2,
          defaultAttr: {
            ignore: s.ignore
          }
        };
      }));
      Ex(o);
    }
  },
  axisName: function(r, t, e, a) {
    var n = $e(r.axisName, t.get("name"));
    if (n) {
      var i = t.get("nameLocation"), o = r.nameDirection, s = t.getModel("nameTextStyle"), l = t.get("nameGap") || 0, u = t.axis.getExtent(), c = u[0] > u[1] ? -1 : 1, v = [
        i === "start" ? u[0] - c * l : i === "end" ? u[1] + c * l : (u[0] + u[1]) / 2,
        // Reuse labelOffset.
        vg(i) ? r.labelOffset + o * l : 0
      ], f, h = t.get("nameRotate");
      h != null && (h = h * Hr / 180);
      var p;
      vg(i) ? f = mt.innerTextLayout(
        r.rotation,
        h ?? r.rotation,
        // Adapt to axis.
        o
      ) : (f = FL(r.rotation, i, h || 0, u), p = r.axisNameAvailableWidth, p != null && (p = Math.abs(p / Math.sin(f.rotation)), !isFinite(p) && (p = null)));
      var d = s.getFont(), g = t.get("nameTruncate", !0) || {}, y = g.ellipsis, m = $e(r.nameTruncateMaxWidth, g.maxWidth, p), _ = new ve({
        x: v[0],
        y: v[1],
        rotation: f.rotation,
        silent: mt.isLabelSilent(t),
        style: Ie(s, {
          text: n,
          font: d,
          overflow: "truncate",
          width: m,
          ellipsis: y,
          fill: s.getTextColor() || t.get(["axisLine", "lineStyle", "color"]),
          align: s.get("align") || f.textAlign,
          verticalAlign: s.get("verticalAlign") || f.textVerticalAlign
        }),
        z2: 1
      });
      if (Wn({
        el: _,
        componentModel: t,
        itemName: n
      }), _.__fullText = n, _.anid = "name", t.get("triggerEvent")) {
        var S = mt.makeAxisEventDataBase(t);
        S.targetType = "axisName", S.name = n, j(_).eventData = S;
      }
      a.add(_), _.updateTransform(), e.add(_), _.decomposeTransform();
    }
  }
};
function FL(r, t, e, a) {
  var n = q0(e - r), i, o, s = a[0] > a[1], l = t === "start" && !s || t !== "start" && s;
  return Wi(n - Hr / 2) ? (o = l ? "bottom" : "top", i = "center") : Wi(n - Hr * 1.5) ? (o = l ? "top" : "bottom", i = "center") : (o = "middle", n < Hr * 1.5 && n > Hr / 2 ? i = l ? "left" : "right" : i = l ? "right" : "left"), {
    rotation: n,
    textAlign: i,
    textVerticalAlign: o
  };
}
function HL(r, t, e) {
  if (!dx(r.axis)) {
    var a = r.get(["axisLabel", "showMinLabel"]), n = r.get(["axisLabel", "showMaxLabel"]);
    t = t || [], e = e || [];
    var i = t[0], o = t[1], s = t[t.length - 1], l = t[t.length - 2], u = e[0], c = e[1], v = e[e.length - 1], f = e[e.length - 2];
    a === !1 ? (Et(i), Et(u)) : cg(i, o) && (a ? (Et(o), Et(c)) : (Et(i), Et(u))), n === !1 ? (Et(s), Et(v)) : cg(l, s) && (n ? (Et(l), Et(f)) : (Et(s), Et(v)));
  }
}
function Et(r) {
  r && (r.ignore = !0);
}
function cg(r, t) {
  var e = r && r.getBoundingRect().clone(), a = t && t.getBoundingRect().clone();
  if (!(!e || !a)) {
    var n = af([]);
    return co(n, n, -r.rotation), e.applyTransform(Es([], n, r.getLocalTransform())), a.applyTransform(Es([], n, t.getLocalTransform())), e.intersect(a);
  }
}
function vg(r) {
  return r === "middle" || r === "center";
}
function Jx(r, t, e, a, n) {
  for (var i = [], o = [], s = [], l = 0; l < r.length; l++) {
    var u = r[l].coord;
    o[0] = u, o[1] = 0, s[0] = u, s[1] = e, t && (Ft(o, o, t), Ft(s, s, t));
    var c = new it({
      shape: {
        x1: o[0],
        y1: o[1],
        x2: s[0],
        y2: s[1]
      },
      style: a,
      z2: 2,
      autoBatch: !0,
      silent: !0
    });
    Cn(c.shape, c.style.lineWidth), c.anid = n + "_" + r[l].tickValue, i.push(c);
  }
  return i;
}
function WL(r, t, e, a) {
  var n = e.axis, i = e.getModel("axisTick"), o = i.get("show");
  if (o === "auto" && a.handleAutoShown && (o = a.handleAutoShown("axisTick")), !(!o || n.scale.isBlank())) {
    for (var s = i.getModel("lineStyle"), l = a.tickDirection * i.get("length"), u = n.getTicksCoords(), c = Jx(u, t.transform, l, ee(s.getLineStyle(), {
      stroke: e.get(["axisLine", "lineStyle", "color"])
    }), "ticks"), v = 0; v < c.length; v++)
      r.add(c[v]);
    return c;
  }
}
function UL(r, t, e, a) {
  var n = e.axis, i = e.getModel("minorTick");
  if (!(!i.get("show") || n.scale.isBlank())) {
    var o = n.getMinorTicksCoords();
    if (o.length)
      for (var s = i.getModel("lineStyle"), l = a * i.get("length"), u = ee(s.getLineStyle(), ee(e.getModel("axisTick").getLineStyle(), {
        stroke: e.get(["axisLine", "lineStyle", "color"])
      })), c = 0; c < o.length; c++)
        for (var v = Jx(o[c], t.transform, l, u, "minorticks_" + c), f = 0; f < v.length; f++)
          r.add(v[f]);
  }
}
function $L(r, t, e, a) {
  var n = e.axis, i = $e(a.axisLabelShow, e.get(["axisLabel", "show"]));
  if (!(!i || n.scale.isBlank())) {
    var o = e.getModel("axisLabel"), s = o.get("margin"), l = n.getViewLabels(), u = ($e(a.labelRotate, o.get("rotate")) || 0) * Hr / 180, c = mt.innerTextLayout(a.rotation, u, a.labelDirection), v = e.getCategories && e.getCategories(!0), f = [], h = mt.isLabelSilent(e), p = e.get("triggerEvent");
    return w(l, function(d, g) {
      var y = n.scale.type === "ordinal" ? n.scale.getRawOrdinalNumber(d.tickValue) : d.tickValue, m = d.formattedLabel, _ = d.rawLabel, S = o;
      if (v && v[y]) {
        var x = v[y];
        J(x) && x.textStyle && (S = new me(x.textStyle, o, e.ecModel));
      }
      var b = S.getTextColor() || e.get(["axisLine", "lineStyle", "color"]), D = n.dataToCoord(y), A = S.getShallow("align", !0) || c.textAlign, T = ce(S.getShallow("alignMinLabel", !0), A), C = ce(S.getShallow("alignMaxLabel", !0), A), M = S.getShallow("verticalAlign", !0) || S.getShallow("baseline", !0) || c.textVerticalAlign, I = ce(S.getShallow("verticalAlignMinLabel", !0), M), L = ce(S.getShallow("verticalAlignMaxLabel", !0), M), P = new ve({
        x: D,
        y: a.labelOffset + a.labelDirection * s,
        rotation: c.rotation,
        silent: h,
        z2: 10 + (d.level || 0),
        style: Ie(S, {
          text: m,
          align: g === 0 ? T : g === l.length - 1 ? C : A,
          verticalAlign: g === 0 ? I : g === l.length - 1 ? L : M,
          fill: X(b) ? b(
            // (1) In category axis with data zoom, tick is not the original
            // index of axis.data. So tick should not be exposed to user
            // in category axis.
            // (2) Compatible with previous version, which always use formatted label as
            // input. But in interval scale the formatted label is like '223,445', which
            // maked user replace ','. So we modify it to return original val but remain
            // it as 'string' to avoid error in replacing.
            n.type === "category" ? _ : n.type === "value" ? y + "" : y,
            g
          ) : b
        })
      });
      if (P.anid = "label_" + y, p) {
        var E = mt.makeAxisEventDataBase(e);
        E.targetType = "axisLabel", E.value = _, E.tickIndex = g, n.type === "category" && (E.dataIndex = y), j(P).eventData = E;
      }
      t.add(P), P.updateTransform(), f.push(P), r.add(P), P.decomposeTransform();
    }), f;
  }
}
function YL(r, t) {
  var e = {
    /**
     * key: makeKey(axis.model)
     * value: {
     *      axis,
     *      coordSys,
     *      axisPointerModel,
     *      triggerTooltip,
     *      triggerEmphasis,
     *      involveSeries,
     *      snap,
     *      seriesModels,
     *      seriesDataCount
     * }
     */
    axesInfo: {},
    seriesInvolved: !1,
    /**
     * key: makeKey(coordSys.model)
     * value: Object: key makeKey(axis.model), value: axisInfo
     */
    coordSysAxesInfo: {},
    coordSysMap: {}
  };
  return ZL(e, r, t), e.seriesInvolved && KL(e, r), e;
}
function ZL(r, t, e) {
  var a = t.getComponent("tooltip"), n = t.getComponent("axisPointer"), i = n.get("link", !0) || [], o = [];
  w(e.getCoordinateSystems(), function(s) {
    if (!s.axisPointerEnabled)
      return;
    var l = Qi(s.model), u = r.coordSysAxesInfo[l] = {};
    r.coordSysMap[l] = s;
    var c = s.model, v = c.getModel("tooltip", a);
    if (w(s.getAxes(), te(d, !1, null)), s.getTooltipAxes && a && v.get("show")) {
      var f = v.get("trigger") === "axis", h = v.get(["axisPointer", "type"]) === "cross", p = s.getTooltipAxes(v.get(["axisPointer", "axis"]));
      (f || h) && w(p.baseAxes, te(d, h ? "cross" : !0, f)), h && w(p.otherAxes, te(d, "cross", !1));
    }
    function d(g, y, m) {
      var _ = m.model.getModel("axisPointer", n), S = _.get("show");
      if (!(!S || S === "auto" && !g && !wv(_))) {
        y == null && (y = _.get("triggerTooltip")), _ = g ? XL(m, v, n, t, g, y) : _;
        var x = _.get("snap"), b = _.get("triggerEmphasis"), D = Qi(m.model), A = y || x || m.type === "category", T = r.axesInfo[D] = {
          key: D,
          axis: m,
          coordSys: s,
          axisPointerModel: _,
          triggerTooltip: y,
          triggerEmphasis: b,
          involveSeries: A,
          snap: x,
          useHandle: wv(_),
          seriesModels: [],
          linkGroup: null
        };
        u[D] = T, r.seriesInvolved = r.seriesInvolved || A;
        var C = qL(i, m);
        if (C != null) {
          var M = o[C] || (o[C] = {
            axesInfo: {}
          });
          M.axesInfo[D] = T, M.mapper = i[C].mapper, T.linkGroup = M;
        }
      }
    }
  });
}
function XL(r, t, e, a, n, i) {
  var o = t.getModel("axisPointer"), s = ["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], l = {};
  w(s, function(f) {
    l[f] = Q(o.get(f));
  }), l.snap = r.type !== "category" && !!i, o.get("type") === "cross" && (l.type = "line");
  var u = l.label || (l.label = {});
  if (u.show == null && (u.show = !1), n === "cross") {
    var c = o.get(["label", "show"]);
    if (u.show = c ?? !0, !i) {
      var v = l.lineStyle = o.get("crossStyle");
      v && ee(u, v.textStyle);
    }
  }
  return r.model.getModel("axisPointer", new me(l, e, a));
}
function KL(r, t) {
  t.eachSeries(function(e) {
    var a = e.coordinateSystem, n = e.get(["tooltip", "trigger"], !0), i = e.get(["tooltip", "show"], !0);
    !a || n === "none" || n === !1 || n === "item" || i === !1 || e.get(["axisPointer", "show"], !0) === !1 || w(r.coordSysAxesInfo[Qi(a.model)], function(o) {
      var s = o.axis;
      a.getAxis(s.dim) === s && (o.seriesModels.push(e), o.seriesDataCount == null && (o.seriesDataCount = 0), o.seriesDataCount += e.getData().count());
    });
  });
}
function qL(r, t) {
  for (var e = t.model, a = t.dim, n = 0; n < r.length; n++) {
    var i = r[n] || {};
    if (Hu(i[a + "AxisId"], e.id) || Hu(i[a + "AxisIndex"], e.componentIndex) || Hu(i[a + "AxisName"], e.name))
      return n;
  }
}
function Hu(r, t) {
  return r === "all" || B(r) && fe(r, t) >= 0 || r === t;
}
function jL(r) {
  var t = Qf(r);
  if (t) {
    var e = t.axisPointerModel, a = t.axis.scale, n = e.option, i = e.get("status"), o = e.get("value");
    o != null && (o = a.parse(o));
    var s = wv(e);
    i == null && (n.status = s ? "show" : "hide");
    var l = a.getExtent().slice();
    l[0] > l[1] && l.reverse(), // Pick a value on axis when initializing.
    (o == null || o > l[1]) && (o = l[1]), o < l[0] && (o = l[0]), n.value = o, s && (n.status = t.axis.scale.isBlank() ? "hide" : "show");
  }
}
function Qf(r) {
  var t = (r.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
  return t && t.axesInfo[Qi(r)];
}
function JL(r) {
  var t = Qf(r);
  return t && t.axisPointerModel;
}
function wv(r) {
  return !!r.get(["handle", "show"]);
}
function Qi(r) {
  return r.type + "||" + r.id;
}
var QL = { env: {} }, Wu = {}, Xa = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n, i) {
      this.axisPointerClass && jL(e), r.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(e, n, !0);
    }, t.prototype.updateAxisPointer = function(e, a, n, i) {
      this._doUpdateAxisPointerClass(e, n, !1);
    }, t.prototype.remove = function(e, a) {
      var n = this._axisPointer;
      n && n.remove(a);
    }, t.prototype.dispose = function(e, a) {
      this._disposeAxisPointer(a), r.prototype.dispose.apply(this, arguments);
    }, t.prototype._doUpdateAxisPointerClass = function(e, a, n) {
      var i = t.getAxisPointerClass(this.axisPointerClass);
      if (i) {
        var o = JL(e);
        o ? (this._axisPointer || (this._axisPointer = new i())).render(e, o, a, n) : this._disposeAxisPointer(a);
      }
    }, t.prototype._disposeAxisPointer = function(e) {
      this._axisPointer && this._axisPointer.dispose(e), this._axisPointer = null;
    }, t.registerAxisPointerClass = function(e, a) {
      if (QL.env.NODE_ENV !== "production" && Wu[e])
        throw new Error("axisPointer " + e + " exists");
      Wu[e] = a;
    }, t.getAxisPointerClass = function(e) {
      return e && Wu[e];
    }, t.type = "axis", t;
  }(Re)
), Dv = ue();
function Qx(r, t, e, a) {
  var n = e.axis;
  if (!n.scale.isBlank()) {
    var i = e.getModel("splitArea"), o = i.getModel("areaStyle"), s = o.get("color"), l = a.coordinateSystem.getRect(), u = n.getTicksCoords({
      tickModel: i,
      clamp: !0
    });
    if (u.length) {
      var c = s.length, v = Dv(r).splitAreaColors, f = Z(), h = 0;
      if (v)
        for (var p = 0; p < u.length; p++) {
          var d = v.get(u[p].tickValue);
          if (d != null) {
            h = (d + (c - 1) * p) % c;
            break;
          }
        }
      var g = n.toGlobalCoord(u[0].coord), y = o.getAreaStyle();
      s = B(s) ? s : [s];
      for (var p = 1; p < u.length; p++) {
        var m = n.toGlobalCoord(u[p].coord), _ = void 0, S = void 0, x = void 0, b = void 0;
        n.isHorizontal() ? (_ = g, S = l.y, x = m - _, b = l.height, g = _ + x) : (_ = l.x, S = g, x = l.width, b = m - S, g = S + b);
        var D = u[p - 1].tickValue;
        D != null && f.set(D, h), t.add(new de({
          anid: D != null ? "area_" + D : null,
          shape: {
            x: _,
            y: S,
            width: x,
            height: b
          },
          style: ee({
            fill: s[h]
          }, y),
          autoBatch: !0,
          silent: !0
        })), h = (h + 1) % c;
      }
      Dv(r).splitAreaColors = f;
    }
  }
}
function e1(r) {
  Dv(r).splitAreaColors = null;
}
var eE = ["axisLine", "axisTickLabel", "axisName"], tE = ["splitArea", "splitLine", "minorSplitLine"], t1 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.axisPointerClass = "CartesianAxisPointer", e;
    }
    return t.prototype.render = function(e, a, n, i) {
      this.group.removeAll();
      var o = this._axisGroup;
      if (this._axisGroup = new re(), this.group.add(this._axisGroup), !!e.get("show")) {
        var s = e.getCoordSysModel(), l = bv(s, e), u = new mt(e, z({
          handleAutoShown: function(v) {
            for (var f = s.coordinateSystem.getCartesians(), h = 0; h < f.length; h++)
              if (gv(f[h].getOtherAxis(e.axis).scale))
                return !0;
            return !1;
          }
        }, l));
        w(eE, u.add, u), this._axisGroup.add(u.getGroup()), w(tE, function(v) {
          e.get([v, "show"]) && rE[v](this, this._axisGroup, e, s);
        }, this);
        var c = i && i.type === "changeAxisOrder" && i.isInitSort;
        c || po(o, this._axisGroup, e), r.prototype.render.call(this, e, a, n, i);
      }
    }, t.prototype.remove = function() {
      e1(this);
    }, t.type = "cartesianAxis", t;
  }(Xa)
), rE = {
  splitLine: function(r, t, e, a) {
    var n = e.axis;
    if (!n.scale.isBlank()) {
      var i = e.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color");
      s = B(s) ? s : [s];
      for (var l = a.coordinateSystem.getRect(), u = n.isHorizontal(), c = 0, v = n.getTicksCoords({
        tickModel: i
      }), f = [], h = [], p = o.getLineStyle(), d = 0; d < v.length; d++) {
        var g = n.toGlobalCoord(v[d].coord);
        u ? (f[0] = g, f[1] = l.y, h[0] = g, h[1] = l.y + l.height) : (f[0] = l.x, f[1] = g, h[0] = l.x + l.width, h[1] = g);
        var y = c++ % s.length, m = v[d].tickValue, _ = new it({
          anid: m != null ? "line_" + v[d].tickValue : null,
          autoBatch: !0,
          shape: {
            x1: f[0],
            y1: f[1],
            x2: h[0],
            y2: h[1]
          },
          style: ee({
            stroke: s[y]
          }, p),
          silent: !0
        });
        Cn(_.shape, p.lineWidth), t.add(_);
      }
    }
  },
  minorSplitLine: function(r, t, e, a) {
    var n = e.axis, i = e.getModel("minorSplitLine"), o = i.getModel("lineStyle"), s = a.coordinateSystem.getRect(), l = n.isHorizontal(), u = n.getMinorTicksCoords();
    if (u.length)
      for (var c = [], v = [], f = o.getLineStyle(), h = 0; h < u.length; h++)
        for (var p = 0; p < u[h].length; p++) {
          var d = n.toGlobalCoord(u[h][p].coord);
          l ? (c[0] = d, c[1] = s.y, v[0] = d, v[1] = s.y + s.height) : (c[0] = s.x, c[1] = d, v[0] = s.x + s.width, v[1] = d);
          var g = new it({
            anid: "minor_line_" + u[h][p].tickValue,
            autoBatch: !0,
            shape: {
              x1: c[0],
              y1: c[1],
              x2: v[0],
              y2: v[1]
            },
            style: f,
            silent: !0
          });
          Cn(g.shape, f.lineWidth), t.add(g);
        }
  },
  splitArea: function(r, t, e, a) {
    Qx(r, t, e, a);
  }
}, r1 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "xAxis", t;
  }(t1)
), aE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = r1.type, e;
    }
    return t.type = "yAxis", t;
  }(t1)
), nE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = "grid", e;
    }
    return t.prototype.render = function(e, a) {
      this.group.removeAll(), e.get("show") && this.group.add(new de({
        shape: e.coordinateSystem.getRect(),
        style: ee({
          fill: e.get("backgroundColor")
        }, e.getItemStyle()),
        silent: !0,
        z2: -1
      }));
    }, t.type = "grid", t;
  }(Re)
), fg = {
  // gridIndex: 0,
  // gridId: '',
  offset: 0
};
function a1(r) {
  r.registerComponentView(nE), r.registerComponentModel(ML), r.registerCoordinateSystem("cartesian2d", zL), Pn(r, "x", Sv, fg), Pn(r, "y", Sv, fg), r.registerComponentView(r1), r.registerComponentView(aE), r.registerPreprocessor(function(t) {
    t.xAxis && t.yAxis && !t.grid && (t.grid = {});
  });
}
function iE(r) {
  oe(a1), r.registerSeriesModel(wL), r.registerChartView(CL), r.registerLayout(wo("scatter"));
}
function oE(r) {
  r.eachSeriesByType("radar", function(t) {
    var e = t.getData(), a = [], n = t.coordinateSystem;
    if (n) {
      var i = n.getIndicatorAxes();
      w(i, function(o, s) {
        e.each(e.mapDimension(i[s].dim), function(l, u) {
          a[u] = a[u] || [];
          var c = n.dataToPoint(l, s);
          a[u][s] = hg(c) ? c : pg(n);
        });
      }), e.each(function(o) {
        var s = Nw(a[o], function(l) {
          return hg(l);
        }) || pg(n);
        a[o].push(s.slice()), e.setItemLayout(o, a[o]);
      });
    }
  });
}
function hg(r) {
  return !isNaN(r[0]) && !isNaN(r[1]);
}
function pg(r) {
  return [r.cx, r.cy];
}
function sE(r) {
  var t = r.polar;
  if (t) {
    B(t) || (t = [t]);
    var e = [];
    w(t, function(a, n) {
      a.indicator ? (a.type && !a.shape && (a.shape = a.type), r.radar = r.radar || [], B(r.radar) || (r.radar = [r.radar]), r.radar.push(a)) : e.push(a);
    }), r.polar = e;
  }
  w(r.series, function(a) {
    a && a.type === "radar" && a.polarIndex && (a.radarIndex = a.polarIndex);
  });
}
var lE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = e.coordinateSystem, o = this.group, s = e.getData(), l = this._data;
      function u(f, h) {
        var p = f.getItemVisual(h, "symbol") || "circle";
        if (p !== "none") {
          var d = Jn(f.getItemVisual(h, "symbolSize")), g = Ze(p, -1, -1, 2, 2), y = f.getItemVisual(h, "symbolRotate") || 0;
          return g.attr({
            style: {
              strokeNoScale: !0
            },
            z2: 100,
            scaleX: d[0] / 2,
            scaleY: d[1] / 2,
            rotation: y * Math.PI / 180 || 0
          }), g;
        }
      }
      function c(f, h, p, d, g, y) {
        p.removeAll();
        for (var m = 0; m < h.length - 1; m++) {
          var _ = u(d, g);
          _ && (_.__dimIdx = m, f[m] ? (_.setPosition(f[m]), Ua[y ? "initProps" : "updateProps"](_, {
            x: h[m][0],
            y: h[m][1]
          }, e, g)) : _.setPosition(h[m]), p.add(_));
        }
      }
      function v(f) {
        return G(f, function(h) {
          return [i.cx, i.cy];
        });
      }
      s.diff(l).add(function(f) {
        var h = s.getItemLayout(f);
        if (h) {
          var p = new Wt(), d = new Ct(), g = {
            shape: {
              points: h
            }
          };
          p.shape.points = v(h), d.shape.points = v(h), Pe(p, g, e, f), Pe(d, g, e, f);
          var y = new re(), m = new re();
          y.add(d), y.add(p), y.add(m), c(d.shape.points, h, m, s, f, !0), s.setItemGraphicEl(f, y);
        }
      }).update(function(f, h) {
        var p = l.getItemGraphicEl(h), d = p.childAt(0), g = p.childAt(1), y = p.childAt(2), m = {
          shape: {
            points: s.getItemLayout(f)
          }
        };
        m.shape.points && (c(d.shape.points, m.shape.points, y, s, f, !1), er(g), er(d), pe(d, m, e), pe(g, m, e), s.setItemGraphicEl(f, p));
      }).remove(function(f) {
        o.remove(l.getItemGraphicEl(f));
      }).execute(), s.eachItemGraphicEl(function(f, h) {
        var p = s.getItemModel(h), d = f.childAt(0), g = f.childAt(1), y = f.childAt(2), m = s.getItemVisual(h, "style"), _ = m.fill;
        o.add(f), d.useStyle(ee(p.getModel("lineStyle").getLineStyle(), {
          fill: "none",
          stroke: _
        })), st(d, p, "lineStyle"), st(g, p, "areaStyle");
        var S = p.getModel("areaStyle"), x = S.isEmpty() && S.parentModel.isEmpty();
        g.ignore = x, w(["emphasis", "select", "blur"], function(A) {
          var T = p.getModel([A, "areaStyle"]), C = T.isEmpty() && T.parentModel.isEmpty();
          g.ensureState(A).ignore = C && x;
        }), g.useStyle(ee(S.getAreaStyle(), {
          fill: _,
          opacity: 0.7,
          decal: m.decal
        }));
        var b = p.getModel("emphasis"), D = b.getModel("itemStyle").getItemStyle();
        y.eachChild(function(A) {
          if (A instanceof Ut) {
            var T = A.style;
            A.useStyle(z({
              // TODO other properties like x, y ?
              image: T.image,
              x: T.x,
              y: T.y,
              width: T.width,
              height: T.height
            }, m));
          } else
            A.useStyle(m), A.setColor(_), A.style.strokeNoScale = !0;
          var C = A.ensureState("emphasis");
          C.style = Q(D);
          var M = s.getStore().get(s.getDimensionIndex(A.__dimIdx), h);
          (M == null || isNaN(M)) && (M = ""), lt(A, tt(p), {
            labelFetcher: s.hostModel,
            labelDataIndex: h,
            labelDimIndex: A.__dimIdx,
            defaultText: M,
            inheritColor: _,
            defaultOpacity: m.opacity
          });
        }), Be(f, b.get("focus"), b.get("blurScope"), b.get("disabled"));
      }), this._data = s;
    }, t.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, t.type = "radar", t;
  }(De)
), uE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.hasSymbolVisual = !0, e;
    }
    return t.prototype.init = function(e) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new Ao(U(this.getData, this), U(this.getRawData, this));
    }, t.prototype.getInitialData = function(e, a) {
      return ei(this, {
        generateCoord: "indicator_",
        generateCoordCount: 1 / 0
      });
    }, t.prototype.formatTooltip = function(e, a, n) {
      var i = this.getData(), o = this.coordinateSystem, s = o.getIndicatorAxes(), l = this.getData().getName(e), u = l === "" ? this.name : l, c = mS(this, e);
      return rt("section", {
        header: u,
        sortBlocks: !0,
        blocks: G(s, function(v) {
          var f = i.get(i.mapDimension(v.dim), e);
          return rt("nameValue", {
            markerType: "subItem",
            markerColor: c,
            name: v.name,
            value: f,
            sortParam: f
          });
        })
      });
    }, t.prototype.getTooltipPosition = function(e) {
      if (e != null) {
        for (var a = this.getData(), n = this.coordinateSystem, i = a.getValues(G(n.dimensions, function(u) {
          return a.mapDimension(u);
        }), e), o = 0, s = i.length; o < s; o++)
          if (!isNaN(i[o])) {
            var l = n.getIndicatorAxes();
            return n.coordToPoint(l[o].dataToCoord(i[o]), o);
          }
      }
    }, t.type = "series.radar", t.dependencies = ["radar"], t.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "radar",
      legendHoverLink: !0,
      radarIndex: 0,
      lineStyle: {
        width: 2,
        type: "solid",
        join: "round"
      },
      label: {
        position: "top"
      },
      // areaStyle: {
      // },
      // itemStyle: {}
      symbolSize: 8
      // symbolRotate: null
    }, t;
  }(Le)
), pi = qx.value;
function Jo(r, t) {
  return ee({
    show: t
  }, r);
}
var cE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.optionUpdated = function() {
      var e = this.get("boundaryGap"), a = this.get("splitNumber"), n = this.get("scale"), i = this.get("axisLine"), o = this.get("axisTick"), s = this.get("axisLabel"), l = this.get("axisName"), u = this.get(["axisName", "show"]), c = this.get(["axisName", "formatter"]), v = this.get("axisNameGap"), f = this.get("triggerEvent"), h = G(this.get("indicator") || [], function(p) {
        p.max != null && p.max > 0 && !p.min ? p.min = 0 : p.min != null && p.min < 0 && !p.max && (p.max = 0);
        var d = l;
        p.color != null && (d = ee({
          color: p.color
        }, l));
        var g = le(Q(p), {
          boundaryGap: e,
          splitNumber: a,
          scale: n,
          axisLine: i,
          axisTick: o,
          // axisType: axisType,
          axisLabel: s,
          // Compatible with 2 and use text
          name: p.text,
          showName: u,
          nameLocation: "end",
          nameGap: v,
          // min: 0,
          nameTextStyle: d,
          triggerEvent: f
        }, !1);
        if (Y(c)) {
          var y = g.name;
          g.name = c.replace("{value}", y ?? "");
        } else X(c) && (g.name = c(g.name, g));
        var m = new me(g, null, this.ecModel);
        return at(m, _o.prototype), m.mainType = "radar", m.componentIndex = this.componentIndex, m;
      }, this);
      this._indicatorModels = h;
    }, t.prototype.getIndicatorModels = function() {
      return this._indicatorModels;
    }, t.type = "radar", t.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "75%",
      startAngle: 90,
      axisName: {
        show: !0
        // formatter: null
        // textStyle: {}
      },
      boundaryGap: [0, 0],
      splitNumber: 5,
      axisNameGap: 15,
      scale: !1,
      // Polygon or circle
      shape: "polygon",
      axisLine: le({
        lineStyle: {
          color: "#bbb"
        }
      }, pi.axisLine),
      axisLabel: Jo(pi.axisLabel, !1),
      axisTick: Jo(pi.axisTick, !1),
      // axisType: 'value',
      splitLine: Jo(pi.splitLine, !0),
      splitArea: Jo(pi.splitArea, !0),
      // {text, min, max}
      indicator: []
    }, t;
  }(se)
), vE = { env: {} }, fE = ["axisLine", "axisTickLabel", "axisName"], hE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = this.group;
      i.removeAll(), this._buildAxes(e), this._buildSplitLineAndArea(e);
    }, t.prototype._buildAxes = function(e) {
      var a = e.coordinateSystem, n = a.getIndicatorAxes(), i = G(n, function(o) {
        var s = o.model.get("showName") ? o.name : "", l = new mt(o.model, {
          axisName: s,
          position: [a.cx, a.cy],
          rotation: o.angle,
          labelDirection: -1,
          tickDirection: -1,
          nameDirection: 1
        });
        return l;
      });
      w(i, function(o) {
        w(fE, o.add, o), this.group.add(o.getGroup());
      }, this);
    }, t.prototype._buildSplitLineAndArea = function(e) {
      var a = e.coordinateSystem, n = a.getIndicatorAxes();
      if (!n.length)
        return;
      var i = e.get("shape"), o = e.getModel("splitLine"), s = e.getModel("splitArea"), l = o.getModel("lineStyle"), u = s.getModel("areaStyle"), c = o.get("show"), v = s.get("show"), f = l.get("color"), h = u.get("color"), p = B(f) ? f : [f], d = B(h) ? h : [h], g = [], y = [];
      function m(E, N, O) {
        var k = O % N.length;
        return E[k] = E[k] || [], k;
      }
      if (i === "circle")
        for (var _ = n[0].getTicksCoords(), S = a.cx, x = a.cy, b = 0; b < _.length; b++) {
          if (c) {
            var D = m(g, p, b);
            g[D].push(new Wa({
              shape: {
                cx: S,
                cy: x,
                r: _[b].coord
              }
            }));
          }
          if (v && b < _.length - 1) {
            var D = m(y, d, b);
            y[D].push(new gl({
              shape: {
                cx: S,
                cy: x,
                r0: _[b].coord,
                r: _[b + 1].coord
              }
            }));
          }
        }
      else
        for (var A, T = G(n, function(E, N) {
          var O = E.getTicksCoords();
          return A = A == null ? O.length - 1 : Math.min(O.length - 1, A), G(O, function(k) {
            return a.coordToPoint(k.coord, N);
          });
        }), C = [], b = 0; b <= A; b++) {
          for (var M = [], I = 0; I < n.length; I++)
            M.push(T[I][b]);
          if (M[0] ? M.push(M[0].slice()) : vE.env.NODE_ENV !== "production" && console.error("Can't draw value axis " + b), c) {
            var D = m(g, p, b);
            g[D].push(new Ct({
              shape: {
                points: M
              }
            }));
          }
          if (v && C) {
            var D = m(y, d, b - 1);
            y[D].push(new Wt({
              shape: {
                points: M.concat(C)
              }
            }));
          }
          C = M.slice().reverse();
        }
      var L = l.getLineStyle(), P = u.getAreaStyle();
      w(y, function(E, N) {
        this.group.add(Vt(E, {
          style: ee({
            stroke: "none",
            fill: d[N % d.length]
          }, P),
          silent: !0
        }));
      }, this), w(g, function(E, N) {
        this.group.add(Vt(E, {
          style: ee({
            fill: "none",
            stroke: p[N % p.length]
          }, L),
          silent: !0
        }));
      }, this);
    }, t.type = "radar", t;
  }(Re)
), pE = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this, e, a, n) || this;
      return i.type = "value", i.angle = 0, i.name = "", i;
    }
    return t;
  }(rr)
), dE = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.dimensions = [], this._model = t, this._indicatorAxes = G(t.getIndicatorModels(), function(n, i) {
        var o = "indicator_" + i, s = new pE(
          o,
          new Mr()
          // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()
        );
        return s.name = n.get("name"), s.model = n, n.axis = s, this.dimensions.push(o), s;
      }, this), this.resize(t, a);
    }
    return r.prototype.getIndicatorAxes = function() {
      return this._indicatorAxes;
    }, r.prototype.dataToPoint = function(t, e) {
      var a = this._indicatorAxes[e];
      return this.coordToPoint(a.dataToCoord(t), e);
    }, r.prototype.coordToPoint = function(t, e) {
      var a = this._indicatorAxes[e], n = a.angle, i = this.cx + t * Math.cos(n), o = this.cy - t * Math.sin(n);
      return [i, o];
    }, r.prototype.pointToData = function(t) {
      var e = t[0] - this.cx, a = t[1] - this.cy, n = Math.sqrt(e * e + a * a);
      e /= n, a /= n;
      for (var i = Math.atan2(-a, e), o = 1 / 0, s, l = -1, u = 0; u < this._indicatorAxes.length; u++) {
        var c = this._indicatorAxes[u], v = Math.abs(i - c.angle);
        v < o && (s = c, l = u, o = v);
      }
      return [l, +(s && s.coordToData(n))];
    }, r.prototype.resize = function(t, e) {
      var a = t.get("center"), n = e.getWidth(), i = e.getHeight(), o = Math.min(n, i) / 2;
      this.cx = H(a[0], n), this.cy = H(a[1], i), this.startAngle = t.get("startAngle") * Math.PI / 180;
      var s = t.get("radius");
      (Y(s) || _e(s)) && (s = [0, s]), this.r0 = H(s[0], o), this.r = H(s[1], o), w(this._indicatorAxes, function(l, u) {
        l.setExtent(this.r0, this.r);
        var c = this.startAngle + u * Math.PI * 2 / this._indicatorAxes.length;
        c = Math.atan2(Math.sin(c), Math.cos(c)), l.angle = c;
      }, this);
    }, r.prototype.update = function(t, e) {
      var a = this._indicatorAxes, n = this._model;
      w(a, function(s) {
        s.scale.setExtent(1 / 0, -1 / 0);
      }), t.eachSeriesByType("radar", function(s, l) {
        if (!(s.get("coordinateSystem") !== "radar" || t.getComponent("radar", s.get("radarIndex")) !== n)) {
          var u = s.getData();
          w(a, function(c) {
            c.scale.unionExtentFromData(u, u.mapDimension(c.dim));
          });
        }
      }, this);
      var i = n.get("splitNumber"), o = new Mr();
      o.setExtent(0, i), o.setInterval(1), w(a, function(s, l) {
        jx(s.scale, s.model, o);
      });
    }, r.prototype.convertToPixel = function(t, e, a) {
      return console.warn("Not implemented."), null;
    }, r.prototype.convertFromPixel = function(t, e, a) {
      return console.warn("Not implemented."), null;
    }, r.prototype.containPoint = function(t) {
      return console.warn("Not implemented."), !1;
    }, r.create = function(t, e) {
      var a = [];
      return t.eachComponent("radar", function(n) {
        var i = new r(n, t, e);
        a.push(i), n.coordinateSystem = i;
      }), t.eachSeriesByType("radar", function(n) {
        n.get("coordinateSystem") === "radar" && (n.coordinateSystem = a[n.get("radarIndex") || 0]);
      }), a;
    }, r.dimensions = [], r;
  }()
);
function gE(r) {
  r.registerCoordinateSystem("radar", dE), r.registerComponentModel(cE), r.registerComponentView(hE), r.registerVisual({
    seriesType: "radar",
    reset: function(t) {
      var e = t.getData();
      e.each(function(a) {
        e.setItemVisual(a, "legendIcon", "roundRect");
      }), e.setVisual("legendIcon", "roundRect");
    }
  });
}
function yE(r) {
  oe(gE), r.registerChartView(lE), r.registerSeriesModel(uE), r.registerLayout(oE), r.registerProcessor(Do("radar")), r.registerPreprocessor(sE);
}
var dg = "\0_ec_interaction_mutex";
function mE(r, t, e) {
  var a = eh(r);
  a[t] = e;
}
function _E(r, t, e) {
  var a = eh(r), n = a[t];
  n === e && (a[t] = null);
}
function gg(r, t) {
  return !!eh(r)[t];
}
function eh(r) {
  return r[dg] || (r[dg] = {});
}
hr({
  type: "takeGlobalCursor",
  event: "globalCursorTaken",
  update: "update"
}, _t);
var To = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this) || this;
      a._zr = e;
      var n = U(a._mousedownHandler, a), i = U(a._mousemoveHandler, a), o = U(a._mouseupHandler, a), s = U(a._mousewheelHandler, a), l = U(a._pinchHandler, a);
      return a.enable = function(u, c) {
        this.disable(), this._opt = ee(Q(c) || {}, {
          zoomOnMouseWheel: !0,
          moveOnMouseMove: !0,
          // By default, wheel do not trigger move.
          moveOnMouseWheel: !1,
          preventDefaultMouseMove: !0
        }), u == null && (u = !0), (u === !0 || u === "move" || u === "pan") && (e.on("mousedown", n), e.on("mousemove", i), e.on("mouseup", o)), (u === !0 || u === "scale" || u === "zoom") && (e.on("mousewheel", s), e.on("pinch", l));
      }, a.disable = function() {
        e.off("mousedown", n), e.off("mousemove", i), e.off("mouseup", o), e.off("mousewheel", s), e.off("pinch", l);
      }, a;
    }
    return t.prototype.isDragging = function() {
      return this._dragging;
    }, t.prototype.isPinching = function() {
      return this._pinching;
    }, t.prototype.setPointerChecker = function(e) {
      this.pointerChecker = e;
    }, t.prototype.dispose = function() {
      this.disable();
    }, t.prototype._mousedownHandler = function(e) {
      if (!Jh(e)) {
        for (var a = e.target; a; ) {
          if (a.draggable)
            return;
          a = a.__hostTarget || a.parent;
        }
        var n = e.offsetX, i = e.offsetY;
        this.pointerChecker && this.pointerChecker(e, n, i) && (this._x = n, this._y = i, this._dragging = !0);
      }
    }, t.prototype._mousemoveHandler = function(e) {
      if (!(!this._dragging || !ws("moveOnMouseMove", e, this._opt) || e.gestureEvent === "pinch" || gg(this._zr, "globalPan"))) {
        var a = e.offsetX, n = e.offsetY, i = this._x, o = this._y, s = a - i, l = n - o;
        this._x = a, this._y = n, this._opt.preventDefaultMouseMove && jr(e.event), n1(this, "pan", "moveOnMouseMove", e, {
          dx: s,
          dy: l,
          oldX: i,
          oldY: o,
          newX: a,
          newY: n,
          isAvailableBehavior: null
        });
      }
    }, t.prototype._mouseupHandler = function(e) {
      Jh(e) || (this._dragging = !1);
    }, t.prototype._mousewheelHandler = function(e) {
      var a = ws("zoomOnMouseWheel", e, this._opt), n = ws("moveOnMouseWheel", e, this._opt), i = e.wheelDelta, o = Math.abs(i), s = e.offsetX, l = e.offsetY;
      if (!(i === 0 || !a && !n)) {
        if (a) {
          var u = o > 3 ? 1.4 : o > 1 ? 1.2 : 1.1, c = i > 0 ? u : 1 / u;
          Uu(this, "zoom", "zoomOnMouseWheel", e, {
            scale: c,
            originX: s,
            originY: l,
            isAvailableBehavior: null
          });
        }
        if (n) {
          var v = Math.abs(i), f = (i > 0 ? 1 : -1) * (v > 3 ? 0.4 : v > 1 ? 0.15 : 0.05);
          Uu(this, "scrollMove", "moveOnMouseWheel", e, {
            scrollDelta: f,
            originX: s,
            originY: l,
            isAvailableBehavior: null
          });
        }
      }
    }, t.prototype._pinchHandler = function(e) {
      if (!gg(this._zr, "globalPan")) {
        var a = e.pinchScale > 1 ? 1.1 : 1 / 1.1;
        Uu(this, "zoom", null, e, {
          scale: a,
          originX: e.pinchX,
          originY: e.pinchY,
          isAvailableBehavior: null
        });
      }
    }, t;
  }(Bn)
);
function Uu(r, t, e, a, n) {
  r.pointerChecker && r.pointerChecker(a, n.originX, n.originY) && (jr(a.event), n1(r, t, e, a, n));
}
function n1(r, t, e, a, n) {
  n.isAvailableBehavior = U(ws, null, e, a), r.trigger(t, n);
}
function ws(r, t, e) {
  var a = e[r];
  return !r || a && (!Y(a) || t.event[a + "Key"]);
}
function th(r, t, e) {
  var a = r.target;
  a.x += t, a.y += e, a.dirty();
}
function rh(r, t, e, a) {
  var n = r.target, i = r.zoomLimit, o = r.zoom = r.zoom || 1;
  if (o *= t, i) {
    var s = i.min || 0, l = i.max || 1 / 0;
    o = Math.max(Math.min(l, o), s);
  }
  var u = o / r.zoom;
  r.zoom = o, n.x -= (e - n.x) * (u - 1), n.y -= (a - n.y) * (u - 1), n.scaleX *= u, n.scaleY *= u, n.dirty();
}
var SE = {
  axisPointer: 1,
  tooltip: 1,
  brush: 1
};
function Ul(r, t, e) {
  var a = t.getComponentByElement(r.topTarget), n = a && a.coordinateSystem;
  return a && a !== e && !SE.hasOwnProperty(a.mainType) && n && n.model !== e;
}
var xE = Z([
  "rect",
  "circle",
  "line",
  "ellipse",
  "polygon",
  "polyline",
  "path",
  // <text> <tspan> are also enabled because some SVG might paint text itself,
  // but still need to trigger events or tooltip.
  "text",
  "tspan",
  // <g> is also enabled because this case: if multiple tags share one name
  // and need label displayed, every tags will display the name, which is not
  // expected. So we can put them into a <g name="xxx">. Thereby only one label
  // displayed and located based on the bounding rect of the <g>.
  "g"
]), bE = (
  /** @class */
  function() {
    function r(t, e) {
      this.type = "geoSVG", this._usedGraphicMap = Z(), this._freedGraphics = [], this._mapName = t, this._parsedXML = Rw(e);
    }
    return r.prototype.load = function() {
      var t = this._firstGraphic;
      if (!t) {
        t = this._firstGraphic = this._buildGraphic(this._parsedXML), this._freedGraphics.push(t), this._boundingRect = this._firstGraphic.boundingRect.clone();
        var e = DE(t.named), a = e.regions, n = e.regionsMap;
        this._regions = a, this._regionsMap = n;
      }
      return {
        boundingRect: this._boundingRect,
        regions: this._regions,
        regionsMap: this._regionsMap
      };
    }, r.prototype._buildGraphic = function(t) {
      var e, a;
      try {
        e = t && kw(t, {
          ignoreViewBox: !0,
          ignoreRootClip: !0
        }) || {}, a = e.root, K(a != null);
      } catch (g) {
        throw new Error(`Invalid svg format
` + g.message);
      }
      var n = new re();
      n.add(a), n.isGeoSVGGraphicRoot = !0;
      var i = e.width, o = e.height, s = e.viewBoxRect, l = this._boundingRect;
      if (!l) {
        var u = void 0, c = void 0, v = void 0, f = void 0;
        if (i != null ? (u = 0, v = i) : s && (u = s.x, v = s.width), o != null ? (c = 0, f = o) : s && (c = s.y, f = s.height), u == null || c == null) {
          var h = a.getBoundingRect();
          u == null && (u = h.x, v = h.width), c == null && (c = h.y, f = h.height);
        }
        l = this._boundingRect = new Te(u, c, v, f);
      }
      if (s) {
        var p = Ow(s, l);
        a.scaleX = a.scaleY = p.scale, a.x = p.x, a.y = p.y;
      }
      n.setClipPath(new de({
        shape: l.plain()
      }));
      var d = [];
      return w(e.named, function(g) {
        xE.get(g.svgNodeTagLower) != null && (d.push(g), wE(g.el));
      }), {
        root: n,
        boundingRect: l,
        named: d
      };
    }, r.prototype.useGraphic = function(t) {
      var e = this._usedGraphicMap, a = e.get(t);
      return a || (a = this._freedGraphics.pop() || this._buildGraphic(this._parsedXML), e.set(t, a), a);
    }, r.prototype.freeGraphic = function(t) {
      var e = this._usedGraphicMap, a = e.get(t);
      a && (e.removeKey(t), this._freedGraphics.push(a));
    }, r;
  }()
);
function wE(r) {
  r.silent = !1, r.isGroup && r.traverse(function(t) {
    t.silent = !1;
  });
}
function DE(r) {
  var t = [], e = Z();
  return w(r, function(a) {
    if (a.namedFrom == null) {
      var n = new nI(a.name, a.el);
      t.push(n), e.set(a.name, n);
    }
  }), {
    regions: t,
    regionsMap: e
  };
}
var Av = [126, 25], yg = "南海诸岛", pa = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];
for (var ha = 0; ha < pa.length; ha++)
  for (var an = 0; an < pa[ha].length; an++)
    pa[ha][an][0] /= 10.5, pa[ha][an][1] /= -10.5 / 0.75, pa[ha][an][0] += Av[0], pa[ha][an][1] += Av[1];
function AE(r, t) {
  if (r === "china") {
    for (var e = 0; e < t.length; e++)
      if (t[e].name === yg)
        return;
    t.push(new yx(yg, G(pa, function(a) {
      return {
        type: "polygon",
        exterior: a
      };
    }), Av));
  }
}
var TE = {
  南海诸岛: [32, 80],
  // 全国
  广东: [0, -10],
  香港: [10, 5],
  澳门: [-10, 10],
  // '北京': [-10, 0],
  天津: [5, 5]
};
function CE(r, t) {
  if (r === "china") {
    var e = TE[t.name];
    if (e) {
      var a = t.getCenter();
      a[0] += e[0] / 10.5, a[1] += -e[1] / (10.5 / 0.75), t.setCenter(a);
    }
  }
}
var ME = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];
function IE(r, t) {
  r === "china" && t.name === "台湾" && t.geometries.push({
    type: "polygon",
    exterior: ME[0]
  });
}
var LE = "name", EE = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.type = "geoJSON", this._parsedMap = Z(), this._mapName = t, this._specialAreas = a, this._geoJSON = NE(e);
    }
    return r.prototype.load = function(t, e) {
      e = e || LE;
      var a = this._parsedMap.get(e);
      if (!a) {
        var n = this._parseToRegions(e);
        a = this._parsedMap.set(e, {
          regions: n,
          boundingRect: PE(n)
        });
      }
      var i = Z(), o = [];
      return w(a.regions, function(s) {
        var l = s.name;
        t && $(t, l) && (s = s.cloneShallow(l = t[l])), o.push(s), i.set(l, s);
      }), {
        regions: o,
        boundingRect: a.boundingRect || new Te(0, 0, 0, 0),
        regionsMap: i
      };
    }, r.prototype._parseToRegions = function(t) {
      var e = this._mapName, a = this._geoJSON, n;
      try {
        n = a ? oI(a, t) : [];
      } catch (i) {
        throw new Error(`Invalid geoJson format
` + i.message);
      }
      return AE(e, n), w(n, function(i) {
        var o = i.name;
        CE(e, i), IE(e, i);
        var s = this._specialAreas && this._specialAreas[o];
        s && i.transformTo(s.left, s.top, s.width, s.height);
      }, this), n;
    }, r.prototype.getMapForUser = function() {
      return {
        // For backward compatibility, use geoJson
        // PENDING: it has been returning them without clone.
        // do we need to avoid outsite modification?
        geoJson: this._geoJSON,
        geoJSON: this._geoJSON,
        specialAreas: this._specialAreas
      };
    }, r;
  }()
);
function PE(r) {
  for (var t, e = 0; e < r.length; e++) {
    var a = r[e].getBoundingRect();
    t = t || a.clone(), t.union(a);
  }
  return t;
}
function NE(r) {
  return Y(r) ? typeof JSON < "u" && JSON.parse ? JSON.parse(r) : new Function("return (" + r + ");")() : r;
}
var RE = { env: {} }, di = Z();
const Ir = {
  /**
   * Compatible with previous `echarts.registerMap`.
   *
   * @usage
   * ```js
   *
   * echarts.registerMap('USA', geoJson, specialAreas);
   *
   * echarts.registerMap('USA', {
   *     geoJson: geoJson,
   *     specialAreas: {...}
   * });
   * echarts.registerMap('USA', {
   *     geoJSON: geoJson,
   *     specialAreas: {...}
   * });
   *
   * echarts.registerMap('airport', {
   *     svg: svg
   * }
   * ```
   *
   * Note:
   * Do not support that register multiple geoJSON or SVG
   * one map name. Because different geoJSON and SVG have
   * different unit. It's not easy to make sure how those
   * units are mapping/normalize.
   * If intending to use multiple geoJSON or SVG, we can
   * use multiple geo coordinate system.
   */
  registerMap: function(r, t, e) {
    if (t.svg) {
      var a = new bE(r, t.svg);
      di.set(r, a);
    } else {
      var n = t.geoJson || t.geoJSON;
      n && !t.features ? e = t.specialAreas : n = t;
      var a = new EE(r, n, e);
      di.set(r, a);
    }
  },
  getGeoResource: function(r) {
    return di.get(r);
  },
  /**
   * Only for exporting to users.
   * **MUST NOT** used internally.
   */
  getMapForUser: function(r) {
    var t = di.get(r);
    return t && t.type === "geoJSON" && t.getMapForUser();
  },
  load: function(r, t, e) {
    var a = di.get(r);
    if (!a) {
      RE.env.NODE_ENV !== "production" && console.error("Map " + r + " not exists. The GeoJSON of the map must be provided.");
      return;
    }
    return a.load(t, e);
  }
};
var ah = ["rect", "circle", "line", "ellipse", "polygon", "polyline", "path"], kE = Z(ah), OE = Z(ah.concat(["g"])), VE = Z(ah.concat(["g"])), i1 = ue();
function Qo(r) {
  var t = r.getItemStyle(), e = r.get("areaColor");
  return e != null && (t.fill = e), t;
}
function mg(r) {
  var t = r.style;
  t && (t.stroke = t.stroke || t.fill, t.fill = null);
}
var o1 = (
  /** @class */
  function() {
    function r(t) {
      var e = new re();
      this.uid = $n("ec_map_draw"), this._controller = new To(t.getZr()), this._controllerHost = {
        target: e
      }, this.group = e, e.add(this._regionsGroup = new re()), e.add(this._svgGroup = new re());
    }
    return r.prototype.draw = function(t, e, a, n, i) {
      var o = t.mainType === "geo", s = t.getData && t.getData();
      o && e.eachComponent({
        mainType: "series",
        subType: "map"
      }, function(y) {
        !s && y.getHostGeoModel() === t && (s = y.getData());
      });
      var l = t.coordinateSystem, u = this._regionsGroup, c = this.group, v = l.getTransformInfo(), f = v.raw, h = v.roam, p = !u.childAt(0) || i;
      p ? (c.x = h.x, c.y = h.y, c.scaleX = h.scaleX, c.scaleY = h.scaleY, c.dirty()) : pe(c, h, t);
      var d = s && s.getVisual("visualMeta") && s.getVisual("visualMeta").length > 0, g = {
        api: a,
        geo: l,
        mapOrGeoModel: t,
        data: s,
        isVisualEncodedByVisualMap: d,
        isGeo: o,
        transformInfoRaw: f
      };
      l.resourceType === "geoJSON" ? this._buildGeoJSON(g) : l.resourceType === "geoSVG" && this._buildSVG(g), this._updateController(t, e, a), this._updateMapSelectHandler(t, u, a, n);
    }, r.prototype._buildGeoJSON = function(t) {
      var e = this._regionsGroupByName = Z(), a = Z(), n = this._regionsGroup, i = t.transformInfoRaw, o = t.mapOrGeoModel, s = t.data, l = t.geo.projection, u = l && l.stream;
      function c(h, p) {
        return p && (h = p(h)), h && [h[0] * i.scaleX + i.x, h[1] * i.scaleY + i.y];
      }
      function v(h) {
        for (var p = [], d = !u && l && l.project, g = 0; g < h.length; ++g) {
          var y = c(h[g], d);
          y && p.push(y);
        }
        return p;
      }
      function f(h) {
        return {
          shape: {
            points: v(h)
          }
        };
      }
      n.removeAll(), w(t.geo.regions, function(h) {
        var p = h.name, d = e.get(p), g = a.get(p) || {}, y = g.dataIdx, m = g.regionModel;
        d || (d = e.set(p, new re()), n.add(d), y = s ? s.indexOfName(p) : null, m = t.isGeo ? o.getRegionModel(p) : s ? s.getItemModel(y) : null, a.set(p, {
          dataIdx: y,
          regionModel: m
        }));
        var _ = [], S = [];
        w(h.geometries, function(D) {
          if (D.type === "polygon") {
            var A = [D.exterior].concat(D.interiors || []);
            u && (A = Dg(A, u)), w(A, function(C) {
              _.push(new Wt(f(C)));
            });
          } else {
            var T = D.points;
            u && (T = Dg(T, u, !0)), w(T, function(C) {
              S.push(new Ct(f(C)));
            });
          }
        });
        var x = c(h.getCenter(), l && l.project);
        function b(D, A) {
          if (D.length) {
            var T = new B0({
              culling: !0,
              segmentIgnoreThreshold: 1,
              shape: {
                paths: D
              }
            });
            d.add(T), _g(t, T, y, m), Sg(t, T, p, m, o, y, x), A && (mg(T), w(T.states, mg));
          }
        }
        b(_), b(S, !0);
      }), e.each(function(h, p) {
        var d = a.get(p), g = d.dataIdx, y = d.regionModel;
        xg(t, h, p, y, o, g), bg(t, h, p, y, o), wg(t, h, p, y, o);
      }, this);
    }, r.prototype._buildSVG = function(t) {
      var e = t.geo.map, a = t.transformInfoRaw;
      this._svgGroup.x = a.x, this._svgGroup.y = a.y, this._svgGroup.scaleX = a.scaleX, this._svgGroup.scaleY = a.scaleY, this._svgResourceChanged(e) && (this._freeSVG(), this._useSVG(e));
      var n = this._svgDispatcherMap = Z(), i = !1;
      w(this._svgGraphicRecord.named, function(o) {
        var s = o.name, l = t.mapOrGeoModel, u = t.data, c = o.svgNodeTagLower, v = o.el, f = u ? u.indexOfName(s) : null, h = l.getRegionModel(s);
        if (kE.get(c) != null && v instanceof Ra && _g(t, v, f, h), v instanceof Ra && (v.culling = !0), v.z2EmphasisLift = 0, !o.namedFrom && (VE.get(c) != null && Sg(t, v, s, h, l, f, null), xg(t, v, s, h, l, f), bg(t, v, s, h, l), OE.get(c) != null)) {
          var p = wg(t, v, s, h, l);
          p === "self" && (i = !0);
          var d = n.get(s) || n.set(s, []);
          d.push(v);
        }
      }, this), this._enableBlurEntireSVG(i, t);
    }, r.prototype._enableBlurEntireSVG = function(t, e) {
      if (t && e.isGeo) {
        var a = e.mapOrGeoModel.getModel(["blur", "itemStyle"]).getItemStyle(), n = a.opacity;
        this._svgGraphicRecord.root.traverse(function(i) {
          if (!i.isGroup) {
            za(i);
            var o = i.ensureState("blur").style || {};
            o.opacity == null && n != null && (o.opacity = n), i.ensureState("emphasis");
          }
        });
      }
    }, r.prototype.remove = function() {
      this._regionsGroup.removeAll(), this._regionsGroupByName = null, this._svgGroup.removeAll(), this._freeSVG(), this._controller.dispose(), this._controllerHost = null;
    }, r.prototype.findHighDownDispatchers = function(t, e) {
      if (t == null)
        return [];
      var a = e.coordinateSystem;
      if (a.resourceType === "geoJSON") {
        var n = this._regionsGroupByName;
        if (n) {
          var i = n.get(t);
          return i ? [i] : [];
        }
      } else if (a.resourceType === "geoSVG")
        return this._svgDispatcherMap && this._svgDispatcherMap.get(t) || [];
    }, r.prototype._svgResourceChanged = function(t) {
      return this._svgMapName !== t;
    }, r.prototype._useSVG = function(t) {
      var e = Ir.getGeoResource(t);
      if (e && e.type === "geoSVG") {
        var a = e.useGraphic(this.uid);
        this._svgGroup.add(a.root), this._svgGraphicRecord = a, this._svgMapName = t;
      }
    }, r.prototype._freeSVG = function() {
      var t = this._svgMapName;
      if (t != null) {
        var e = Ir.getGeoResource(t);
        e && e.type === "geoSVG" && e.freeGraphic(this.uid), this._svgGraphicRecord = null, this._svgDispatcherMap = null, this._svgGroup.removeAll(), this._svgMapName = null;
      }
    }, r.prototype._updateController = function(t, e, a) {
      var n = t.coordinateSystem, i = this._controller, o = this._controllerHost;
      o.zoomLimit = t.get("scaleLimit"), o.zoom = n.getZoom(), i.enable(t.get("roam") || !1);
      var s = t.mainType;
      function l() {
        var u = {
          type: "geoRoam",
          componentType: s
        };
        return u[s + "Id"] = t.id, u;
      }
      i.off("pan").on("pan", function(u) {
        this._mouseDownFlag = !1, th(o, u.dx, u.dy), a.dispatchAction(z(l(), {
          dx: u.dx,
          dy: u.dy,
          animation: {
            duration: 0
          }
        }));
      }, this), i.off("zoom").on("zoom", function(u) {
        this._mouseDownFlag = !1, rh(o, u.scale, u.originX, u.originY), a.dispatchAction(z(l(), {
          totalZoom: o.zoom,
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY,
          animation: {
            duration: 0
          }
        }));
      }, this), i.setPointerChecker(function(u, c, v) {
        return n.containPoint([c, v]) && !Ul(u, a, t);
      });
    }, r.prototype.resetForLabelLayout = function() {
      this.group.traverse(function(t) {
        var e = t.getTextContent();
        e && (e.ignore = i1(e).ignore);
      });
    }, r.prototype._updateMapSelectHandler = function(t, e, a, n) {
      var i = this;
      e.off("mousedown"), e.off("click"), t.get("selectedMode") && (e.on("mousedown", function() {
        i._mouseDownFlag = !0;
      }), e.on("click", function(o) {
        i._mouseDownFlag && (i._mouseDownFlag = !1);
      }));
    }, r;
  }()
);
function _g(r, t, e, a) {
  var n = a.getModel("itemStyle"), i = a.getModel(["emphasis", "itemStyle"]), o = a.getModel(["blur", "itemStyle"]), s = a.getModel(["select", "itemStyle"]), l = Qo(n), u = Qo(i), c = Qo(s), v = Qo(o), f = r.data;
  if (f) {
    var h = f.getItemVisual(e, "style"), p = f.getItemVisual(e, "decal");
    r.isVisualEncodedByVisualMap && h.fill && (l.fill = h.fill), p && (l.decal = In(p, r.api));
  }
  t.setStyle(l), t.style.strokeNoScale = !0, t.ensureState("emphasis").style = u, t.ensureState("select").style = c, t.ensureState("blur").style = v, za(t);
}
function Sg(r, t, e, a, n, i, o) {
  var s = r.data, l = r.isGeo, u = s && isNaN(s.get(s.mapDimension("value"), i)), c = s && s.getItemLayout(i);
  if (l || u || c && c.showLabel) {
    var v = l ? e : i, f = void 0;
    (!s || i >= 0) && (f = n);
    var h = o ? {
      normal: {
        align: "center",
        verticalAlign: "middle"
      }
    } : null;
    lt(t, tt(a), {
      labelFetcher: f,
      labelDataIndex: v,
      defaultText: e
    }, h);
    var p = t.getTextContent();
    if (p && (i1(p).ignore = p.ignore, t.textConfig && o)) {
      var d = t.getBoundingRect().clone();
      t.textConfig.layoutRect = d, t.textConfig.position = [(o[0] - d.x) / d.width * 100 + "%", (o[1] - d.y) / d.height * 100 + "%"];
    }
    t.disableLabelAnimation = !0;
  } else
    t.removeTextContent(), t.removeTextConfig(), t.disableLabelAnimation = null;
}
function xg(r, t, e, a, n, i) {
  r.data ? r.data.setItemGraphicEl(i, t) : j(t).eventData = {
    componentType: "geo",
    componentIndex: n.componentIndex,
    geoIndex: n.componentIndex,
    name: e,
    region: a && a.option || {}
  };
}
function bg(r, t, e, a, n) {
  r.data || Wn({
    el: t,
    componentModel: n,
    itemName: e,
    // @ts-ignore FIXME:TS fix the "compatible with each other"?
    itemTooltipOption: a.get("tooltip")
  });
}
function wg(r, t, e, a, n) {
  t.highDownSilentOnTouch = !!n.get("selectedMode");
  var i = a.getModel("emphasis"), o = i.get("focus");
  return Be(t, o, i.get("blurScope"), i.get("disabled")), r.isGeo && qD(t, n, e), o;
}
function Dg(r, t, e) {
  var a = [], n;
  function i() {
    n = [];
  }
  function o() {
    n.length && (a.push(n), n = []);
  }
  var s = t({
    polygonStart: i,
    polygonEnd: o,
    lineStart: i,
    lineEnd: o,
    point: function(l, u) {
      isFinite(l) && isFinite(u) && n.push([l, u]);
    },
    sphere: function() {
    }
  });
  return !e && s.polygonStart(), w(r, function(l) {
    s.lineStart();
    for (var u = 0; u < l.length; u++)
      s.point(l[u][0], l[u][1]);
    s.lineEnd();
  }), !e && s.polygonEnd(), a;
}
var BE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n, i) {
      if (!(i && i.type === "mapToggleSelect" && i.from === this.uid)) {
        var o = this.group;
        if (o.removeAll(), !e.getHostGeoModel()) {
          if (this._mapDraw && i && i.type === "geoRoam" && this._mapDraw.resetForLabelLayout(), i && i.type === "geoRoam" && i.componentType === "series" && i.seriesId === e.id) {
            var s = this._mapDraw;
            s && o.add(s.group);
          } else if (e.needsDrawMap) {
            var s = this._mapDraw || new o1(n);
            o.add(s.group), s.draw(e, a, n, this, i), this._mapDraw = s;
          } else
            this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
          e.get("showLegendSymbol") && a.getComponent("legend") && this._renderSymbols(e, a, n);
        }
      }
    }, t.prototype.remove = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll();
    }, t.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
    }, t.prototype._renderSymbols = function(e, a, n) {
      var i = e.originalData, o = this.group;
      i.each(i.mapDimension("value"), function(s, l) {
        if (!isNaN(s)) {
          var u = i.getItemLayout(l);
          if (!(!u || !u.point)) {
            var c = u.point, v = u.offset, f = new Wa({
              style: {
                // Because the special of map draw.
                // Which needs statistic of multiple series and draw on one map.
                // And each series also need a symbol with legend color
                //
                // Layout and visual are put one the different data
                // TODO
                fill: e.getData().getVisual("style").fill
              },
              shape: {
                cx: c[0] + v * 9,
                cy: c[1],
                r: 3
              },
              silent: !0,
              // Do not overlap the first series, on which labels are displayed.
              z2: 8 + (v ? 0 : Fn + 1)
            });
            if (!v) {
              var h = e.mainSeries.getData(), p = i.getName(l), d = h.indexOfName(p), g = i.getItemModel(l), y = g.getModel("label"), m = h.getItemGraphicEl(d);
              lt(f, tt(g), {
                labelFetcher: {
                  getFormattedLabel: function(_, S) {
                    return e.getFormattedLabel(d, S);
                  }
                },
                defaultText: p
              }), f.disableLabelAnimation = !0, y.get("position") || f.setTextConfig({
                position: "bottom"
              }), m.onHoverStateChange = function(_) {
                Bs(f, _);
              };
            }
            o.add(f);
          }
        }
      });
    }, t.type = "map", t;
  }(De)
), zE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.needsDrawMap = !1, e.seriesGroup = [], e.getTooltipPosition = function(a) {
        if (a != null) {
          var n = this.getData().getName(a), i = this.coordinateSystem, o = i.getRegion(n);
          return o && i.dataToPoint(o.getCenter());
        }
      }, e;
    }
    return t.prototype.getInitialData = function(e) {
      for (var a = ei(this, {
        coordDimensions: ["value"],
        encodeDefaulter: te(Mf, this)
      }), n = Z(), i = [], o = 0, s = a.count(); o < s; o++) {
        var l = a.getName(o);
        n.set(l, !0);
      }
      var u = Ir.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);
      return w(u.regions, function(c) {
        var v = c.name;
        n.get(v) || i.push(v);
      }), a.appendValues([], i), a;
    }, t.prototype.getHostGeoModel = function() {
      var e = this.option.geoIndex;
      return e != null ? this.ecModel.getComponent("geo", e) : null;
    }, t.prototype.getMapType = function() {
      return (this.getHostGeoModel() || this).option.map;
    }, t.prototype.getRawValue = function(e) {
      var a = this.getData();
      return a.get(a.mapDimension("value"), e);
    }, t.prototype.getRegionModel = function(e) {
      var a = this.getData();
      return a.getItemModel(a.indexOfName(e));
    }, t.prototype.formatTooltip = function(e, a, n) {
      for (var i = this.getData(), o = this.getRawValue(e), s = i.getName(e), l = this.seriesGroup, u = [], c = 0; c < l.length; c++) {
        var v = l[c].originalData.indexOfName(s), f = i.mapDimension("value");
        isNaN(l[c].originalData.get(f, v)) || u.push(l[c].name);
      }
      return rt("section", {
        header: u.join(", "),
        noHeader: !u.length,
        blocks: [rt("nameValue", {
          name: s,
          value: o
        })]
      });
    }, t.prototype.setZoom = function(e) {
      this.option.zoom = e;
    }, t.prototype.setCenter = function(e) {
      this.option.center = e;
    }, t.prototype.getLegendIcon = function(e) {
      var a = e.icon || "roundRect", n = Ze(a, 0, 0, e.itemWidth, e.itemHeight, e.itemStyle.fill);
      return n.setStyle(e.itemStyle), n.style.stroke = "none", a.indexOf("empty") > -1 && (n.style.stroke = n.style.fill, n.style.fill = "#fff", n.style.lineWidth = 2), n;
    }, t.type = "series.map", t.dependencies = ["geo"], t.layoutMode = "box", t.defaultOption = {
      // 一级层叠
      // zlevel: 0,
      // 二级层叠
      z: 2,
      coordinateSystem: "geo",
      // map should be explicitly specified since ec3.
      map: "",
      // If `geoIndex` is not specified, a exclusive geo will be
      // created. Otherwise use the specified geo component, and
      // `map` and `mapType` are ignored.
      // geoIndex: 0,
      // 'center' | 'left' | 'right' | 'x%' | {number}
      left: "center",
      // 'center' | 'top' | 'bottom' | 'x%' | {number}
      top: "center",
      // right
      // bottom
      // width:
      // height
      // Aspect is width / height. Inited to be geoJson bbox aspect
      // This parameter is used for scale this aspect
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient.
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      showLegendSymbol: !0,
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ],
      // higher priority than center and zoom
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      selectedMode: !0,
      label: {
        show: !1,
        color: "#000"
      },
      // scaleLimit: null,
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444",
        areaColor: "#eee"
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          areaColor: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      nameProperty: "name"
    }, t;
  }(Le)
);
function GE(r, t) {
  var e = {};
  return w(r, function(a) {
    a.each(a.mapDimension("value"), function(n, i) {
      var o = "ec-" + a.getName(i);
      e[o] = e[o] || [], isNaN(n) || e[o].push(n);
    });
  }), r[0].map(r[0].mapDimension("value"), function(a, n) {
    for (var i = "ec-" + r[0].getName(n), o = 0, s = 1 / 0, l = -1 / 0, u = e[i].length, c = 0; c < u; c++)
      s = Math.min(s, e[i][c]), l = Math.max(l, e[i][c]), o += e[i][c];
    var v;
    return t === "min" ? v = s : t === "max" ? v = l : t === "average" ? v = o / u : v = o, u === 0 ? NaN : v;
  });
}
function FE(r) {
  var t = {};
  r.eachSeriesByType("map", function(e) {
    var a = e.getHostGeoModel(), n = a ? "o" + a.id : "i" + e.getMapType();
    (t[n] = t[n] || []).push(e);
  }), w(t, function(e, a) {
    for (var n = GE(G(e, function(o) {
      return o.getData();
    }), e[0].get("mapValueCalculation")), i = 0; i < e.length; i++)
      e[i].originalData = e[i].getData();
    for (var i = 0; i < e.length; i++)
      e[i].seriesGroup = e, e[i].needsDrawMap = i === 0 && !e[i].getHostGeoModel(), e[i].setData(n.cloneShallow()), e[i].mainSeries = e[0];
  });
}
function HE(r) {
  var t = {};
  r.eachSeriesByType("map", function(e) {
    var a = e.getMapType();
    if (!(e.getHostGeoModel() || t[a])) {
      var n = {};
      w(e.seriesGroup, function(o) {
        var s = o.coordinateSystem, l = o.originalData;
        o.get("showLegendSymbol") && r.getComponent("legend") && l.each(l.mapDimension("value"), function(u, c) {
          var v = l.getName(c), f = s.getRegion(v);
          if (!(!f || isNaN(u))) {
            var h = n[v] || 0, p = s.dataToPoint(f.getCenter());
            n[v] = h + 1, l.setItemLayout(c, {
              point: p,
              offset: h
            });
          }
        });
      });
      var i = e.getData();
      i.each(function(o) {
        var s = i.getName(o), l = i.getItemLayout(o) || {};
        l.showLabel = !n[s], i.setItemLayout(o, l);
      }), t[a] = !0;
    }
  });
}
var Ag = Ft, Co = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this) || this;
      return a.type = "view", a.dimensions = ["x", "y"], a._roamTransformable = new gn(), a._rawTransformable = new gn(), a.name = e, a;
    }
    return t.prototype.setBoundingRect = function(e, a, n, i) {
      return this._rect = new Te(e, a, n, i), this._rect;
    }, t.prototype.getBoundingRect = function() {
      return this._rect;
    }, t.prototype.setViewRect = function(e, a, n, i) {
      this._transformTo(e, a, n, i), this._viewRect = new Te(e, a, n, i);
    }, t.prototype._transformTo = function(e, a, n, i) {
      var o = this.getBoundingRect(), s = this._rawTransformable;
      s.transform = o.calculateTransform(new Te(e, a, n, i));
      var l = s.parent;
      s.parent = null, s.decomposeTransform(), s.parent = l, this._updateTransform();
    }, t.prototype.setCenter = function(e, a) {
      e && (this._center = [H(e[0], a.getWidth()), H(e[1], a.getHeight())], this._updateCenterAndZoom());
    }, t.prototype.setZoom = function(e) {
      e = e || 1;
      var a = this.zoomLimit;
      a && (a.max != null && (e = Math.min(a.max, e)), a.min != null && (e = Math.max(a.min, e))), this._zoom = e, this._updateCenterAndZoom();
    }, t.prototype.getDefaultCenter = function() {
      var e = this.getBoundingRect(), a = e.x + e.width / 2, n = e.y + e.height / 2;
      return [a, n];
    }, t.prototype.getCenter = function() {
      return this._center || this.getDefaultCenter();
    }, t.prototype.getZoom = function() {
      return this._zoom || 1;
    }, t.prototype.getRoamTransform = function() {
      return this._roamTransformable.getLocalTransform();
    }, t.prototype._updateCenterAndZoom = function() {
      var e = this._rawTransformable.getLocalTransform(), a = this._roamTransformable, n = this.getDefaultCenter(), i = this.getCenter(), o = this.getZoom();
      i = Ft([], i, e), n = Ft([], n, e), a.originX = i[0], a.originY = i[1], a.x = n[0] - i[0], a.y = n[1] - i[1], a.scaleX = a.scaleY = o, this._updateTransform();
    }, t.prototype._updateTransform = function() {
      var e = this._roamTransformable, a = this._rawTransformable;
      a.parent = e, e.updateTransform(), a.updateTransform(), Vw(this.transform || (this.transform = []), a.transform || zn()), this._rawTransform = a.getLocalTransform(), this.invTransform = this.invTransform || [], lo(this.invTransform, this.transform), this.decomposeTransform();
    }, t.prototype.getTransformInfo = function() {
      var e = this._rawTransformable, a = this._roamTransformable, n = new gn();
      return n.transform = a.transform, n.decomposeTransform(), {
        roam: {
          x: n.x,
          y: n.y,
          scaleX: n.scaleX,
          scaleY: n.scaleY
        },
        raw: {
          x: e.x,
          y: e.y,
          scaleX: e.scaleX,
          scaleY: e.scaleY
        }
      };
    }, t.prototype.getViewRect = function() {
      return this._viewRect;
    }, t.prototype.getViewRectAfterRoam = function() {
      var e = this.getBoundingRect().clone();
      return e.applyTransform(this.transform), e;
    }, t.prototype.dataToPoint = function(e, a, n) {
      var i = a ? this._rawTransform : this.transform;
      return n = n || [], i ? Ag(n, e, i) : dt(n, e);
    }, t.prototype.pointToData = function(e) {
      var a = this.invTransform;
      return a ? Ag([], e, a) : [e[0], e[1]];
    }, t.prototype.convertToPixel = function(e, a, n) {
      var i = Tg(a);
      return i === this ? i.dataToPoint(n) : null;
    }, t.prototype.convertFromPixel = function(e, a, n) {
      var i = Tg(a);
      return i === this ? i.pointToData(n) : null;
    }, t.prototype.containPoint = function(e) {
      return this.getViewRectAfterRoam().contain(e[0], e[1]);
    }, t.dimensions = ["x", "y"], t;
  }(gn)
);
function Tg(r) {
  var t = r.seriesModel;
  return t ? t.coordinateSystem : null;
}
var $u = { env: {} }, WE = {
  geoJSON: {
    aspectScale: 0.75,
    invertLongitute: !0
  },
  geoSVG: {
    aspectScale: 1,
    invertLongitute: !1
  }
}, s1 = ["lng", "lat"], l1 = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this, e) || this;
      i.dimensions = s1, i.type = "geo", i._nameCoordMap = Z(), i.map = a;
      var o = n.projection, s = Ir.load(a, n.nameMap, n.nameProperty), l = Ir.getGeoResource(a), u = i.resourceType = l ? l.type : null, c = i.regions = s.regions, v = WE[l.type];
      i._regionsMap = s.regionsMap, i.regions = s.regions, $u.env.NODE_ENV !== "production" && o && (u === "geoSVG" && ($u.env.NODE_ENV !== "production" && Ve("Map " + a + " with SVG source can't use projection. Only GeoJSON source supports projection."), o = null), o.project && o.unproject || ($u.env.NODE_ENV !== "production" && Ve("project and unproject must be both provided in the projeciton."), o = null)), i.projection = o;
      var f;
      if (o)
        for (var h = 0; h < c.length; h++) {
          var p = c[h].getBoundingRect(o);
          f = f || p.clone(), f.union(p);
        }
      else
        f = s.boundingRect;
      return i.setBoundingRect(f.x, f.y, f.width, f.height), i.aspectScale = o ? 1 : ce(n.aspectScale, v.aspectScale), i._invertLongitute = o ? !1 : v.invertLongitute, i;
    }
    return t.prototype._transformTo = function(e, a, n, i) {
      var o = this.getBoundingRect(), s = this._invertLongitute;
      o = o.clone(), s && (o.y = -o.y - o.height);
      var l = this._rawTransformable;
      l.transform = o.calculateTransform(new Te(e, a, n, i));
      var u = l.parent;
      l.parent = null, l.decomposeTransform(), l.parent = u, s && (l.scaleY = -l.scaleY), this._updateTransform();
    }, t.prototype.getRegion = function(e) {
      return this._regionsMap.get(e);
    }, t.prototype.getRegionByCoord = function(e) {
      for (var a = this.regions, n = 0; n < a.length; n++) {
        var i = a[n];
        if (i.type === "geoJSON" && i.contain(e))
          return a[n];
      }
    }, t.prototype.addGeoCoord = function(e, a) {
      this._nameCoordMap.set(e, a);
    }, t.prototype.getGeoCoord = function(e) {
      var a = this._regionsMap.get(e);
      return this._nameCoordMap.get(e) || a && a.getCenter();
    }, t.prototype.dataToPoint = function(e, a, n) {
      if (Y(e) && (e = this.getGeoCoord(e)), e) {
        var i = this.projection;
        return i && (e = i.project(e)), e && this.projectedToPoint(e, a, n);
      }
    }, t.prototype.pointToData = function(e) {
      var a = this.projection;
      return a && (e = a.unproject(e)), e && this.pointToProjected(e);
    }, t.prototype.pointToProjected = function(e) {
      return r.prototype.pointToData.call(this, e);
    }, t.prototype.projectedToPoint = function(e, a, n) {
      return r.prototype.dataToPoint.call(this, e, a, n);
    }, t.prototype.convertToPixel = function(e, a, n) {
      var i = Cg(a);
      return i === this ? i.dataToPoint(n) : null;
    }, t.prototype.convertFromPixel = function(e, a, n) {
      var i = Cg(a);
      return i === this ? i.pointToData(n) : null;
    }, t;
  }(Co)
);
at(l1, Co);
function Cg(r) {
  var t = r.geoModel, e = r.seriesModel;
  return t ? t.coordinateSystem : e ? e.coordinateSystem || (e.getReferringComponents("geo", Ye).models[0] || {}).coordinateSystem : null;
}
const Mg = l1;
var Ig = { env: {} };
function Lg(r, t) {
  var e = r.get("boundingCoords");
  if (e != null) {
    var a = e[0], n = e[1];
    if (!(isFinite(a[0]) && isFinite(a[1]) && isFinite(n[0]) && isFinite(n[1])))
      Ig.env.NODE_ENV !== "production" && console.error("Invalid boundingCoords");
    else {
      var i = this.projection;
      if (i) {
        var o = a[0], s = a[1], l = n[0], u = n[1];
        a = [1 / 0, 1 / 0], n = [-1 / 0, -1 / 0];
        var c = function(b, D, A, T) {
          for (var C = A - b, M = T - D, I = 0; I <= 100; I++) {
            var L = I / 100, P = i.project([b + C * L, D + M * L]);
            G0(a, a, P), F0(n, n, P);
          }
        };
        c(o, s, l, s), c(l, s, l, u), c(l, u, o, u), c(o, u, l, s);
      }
      this.setBoundingRect(a[0], a[1], n[0] - a[0], n[1] - a[1]);
    }
  }
  var v = this.getBoundingRect(), f = r.get("layoutCenter"), h = r.get("layoutSize"), p = t.getWidth(), d = t.getHeight(), g = v.width / v.height * this.aspectScale, y = !1, m, _;
  f && h && (m = [H(f[0], p), H(f[1], d)], _ = H(h, Math.min(p, d)), !isNaN(m[0]) && !isNaN(m[1]) && !isNaN(_) ? y = !0 : Ig.env.NODE_ENV !== "production" && console.warn("Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead."));
  var S;
  if (y)
    S = {}, g > 1 ? (S.width = _, S.height = _ / g) : (S.height = _, S.width = _ * g), S.y = m[1] - S.height / 2, S.x = m[0] - S.width / 2;
  else {
    var x = r.getBoxLayoutParams();
    x.aspect = g, S = qe(x, {
      width: p,
      height: d
    });
  }
  this.setViewRect(S.x, S.y, S.width, S.height), this.setCenter(r.get("center"), t), this.setZoom(r.get("zoom"));
}
function UE(r, t) {
  w(t.get("geoCoord"), function(e, a) {
    r.addGeoCoord(a, e);
  });
}
var $E = (
  /** @class */
  function() {
    function r() {
      this.dimensions = s1;
    }
    return r.prototype.create = function(t, e) {
      var a = [];
      function n(o) {
        return {
          nameProperty: o.get("nameProperty"),
          aspectScale: o.get("aspectScale"),
          projection: o.get("projection")
        };
      }
      t.eachComponent("geo", function(o, s) {
        var l = o.get("map"), u = new Mg(l + s, l, z({
          nameMap: o.get("nameMap")
        }, n(o)));
        u.zoomLimit = o.get("scaleLimit"), a.push(u), o.coordinateSystem = u, u.model = o, u.resize = Lg, u.resize(o, e);
      }), t.eachSeries(function(o) {
        var s = o.get("coordinateSystem");
        if (s === "geo") {
          var l = o.get("geoIndex") || 0;
          o.coordinateSystem = a[l];
        }
      });
      var i = {};
      return t.eachSeriesByType("map", function(o) {
        if (!o.getHostGeoModel()) {
          var s = o.getMapType();
          i[s] = i[s] || [], i[s].push(o);
        }
      }), w(i, function(o, s) {
        var l = G(o, function(c) {
          return c.get("nameMap");
        }), u = new Mg(s, s, z({
          nameMap: of(l)
        }, n(o[0])));
        u.zoomLimit = $e.apply(null, G(o, function(c) {
          return c.get("scaleLimit");
        })), a.push(u), u.resize = Lg, u.resize(o[0], e), w(o, function(c) {
          c.coordinateSystem = u, UE(u, c);
        });
      }), a;
    }, r.prototype.getFilledRegions = function(t, e, a, n) {
      for (var i = (t || []).slice(), o = Z(), s = 0; s < i.length; s++)
        o.set(i[s].name, i[s]);
      var l = Ir.load(e, a, n);
      return w(l.regions, function(u) {
        var c = u.name;
        !o.get(c) && i.push({
          name: c
        });
      }), i;
    }, r;
  }()
), u1 = new $E(), YE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e, a, n) {
      var i = Ir.getGeoResource(e.map);
      if (i && i.type === "geoJSON") {
        var o = e.itemStyle = e.itemStyle || {};
        "color" in o || (o.color = "#eee");
      }
      this.mergeDefaultAndTheme(e, n), Oa(e, "label", ["show"]);
    }, t.prototype.optionUpdated = function() {
      var e = this, a = this.option;
      a.regions = u1.getFilledRegions(a.regions, a.map, a.nameMap, a.nameProperty);
      var n = {};
      this._optionModelMap = wn(a.regions || [], function(i, o) {
        var s = o.name;
        return s && (i.set(s, new me(o, e, e.ecModel)), o.selected && (n[s] = !0)), i;
      }, Z()), a.selectedMap || (a.selectedMap = n);
    }, t.prototype.getRegionModel = function(e) {
      return this._optionModelMap.get(e) || new me(null, this, this.ecModel);
    }, t.prototype.getFormattedLabel = function(e, a) {
      var n = this.getRegionModel(e), i = a === "normal" ? n.get(["label", "formatter"]) : n.get(["emphasis", "label", "formatter"]), o = {
        name: e
      };
      if (X(i))
        return o.status = a, i(o);
      if (Y(i))
        return i.replace("{a}", e ?? "");
    }, t.prototype.setZoom = function(e) {
      this.option.zoom = e;
    }, t.prototype.setCenter = function(e) {
      this.option.center = e;
    }, t.prototype.select = function(e) {
      var a = this.option, n = a.selectedMode;
      if (n) {
        n !== "multiple" && (a.selectedMap = null);
        var i = a.selectedMap || (a.selectedMap = {});
        i[e] = !0;
      }
    }, t.prototype.unSelect = function(e) {
      var a = this.option.selectedMap;
      a && (a[e] = !1);
    }, t.prototype.toggleSelected = function(e) {
      this[this.isSelected(e) ? "unSelect" : "select"](e);
    }, t.prototype.isSelected = function(e) {
      var a = this.option.selectedMap;
      return !!(a && a[e]);
    }, t.type = "geo", t.layoutMode = "box", t.defaultOption = {
      // zlevel: 0,
      z: 0,
      show: !0,
      left: "center",
      top: "center",
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // /// Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      silent: !1,
      // Map type
      map: "",
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ]
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      // selectedMode: false
      label: {
        show: !1,
        color: "#000"
      },
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444"
        // Default color:
        // + geoJSON: #eee
        // + geoSVG: null (use SVG original `fill`)
        // color: '#eee'
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      regions: []
      // tooltip: {
      //     show: false
      // }
    }, t;
  }(se)
);
function Eg(r, t) {
  return r.pointToProjected ? r.pointToProjected(t) : r.pointToData(t);
}
function nh(r, t, e, a) {
  var n = r.getZoom(), i = r.getCenter(), o = t.zoom, s = r.projectedToPoint ? r.projectedToPoint(i) : r.dataToPoint(i);
  if (t.dx != null && t.dy != null && (s[0] -= t.dx, s[1] -= t.dy, r.setCenter(Eg(r, s), a)), o != null) {
    if (e) {
      var l = e.min || 0, u = e.max || 1 / 0;
      o = Math.max(Math.min(n * o, u), l) / n;
    }
    r.scaleX *= o, r.scaleY *= o;
    var c = (t.originX - r.x) * (o - 1), v = (t.originY - r.y) * (o - 1);
    r.x -= c, r.y -= v, r.updateTransform(), r.setCenter(Eg(r, s), a), r.setZoom(o * n);
  }
  return {
    center: r.getCenter(),
    zoom: r.getZoom()
  };
}
var ZE = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.focusBlurEnabled = !0, e;
    }
    return t.prototype.init = function(e, a) {
      this._api = a;
    }, t.prototype.render = function(e, a, n, i) {
      if (this._model = e, !e.get("show")) {
        this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
        return;
      }
      this._mapDraw || (this._mapDraw = new o1(n));
      var o = this._mapDraw;
      o.draw(e, a, n, this, i), o.group.on("click", this._handleRegionClick, this), o.group.silent = e.get("silent"), this.group.add(o.group), this.updateSelectStatus(e, a, n);
    }, t.prototype._handleRegionClick = function(e) {
      var a;
      Ta(e.target, function(n) {
        return (a = j(n).eventData) != null;
      }, !0), a && this._api.dispatchAction({
        type: "geoToggleSelect",
        geoId: this._model.id,
        name: a.name
      });
    }, t.prototype.updateSelectStatus = function(e, a, n) {
      var i = this;
      this._mapDraw.group.traverse(function(o) {
        var s = j(o).eventData;
        if (s)
          return i._model.isSelected(s.name) ? n.enterSelect(o) : n.leaveSelect(o), !0;
      });
    }, t.prototype.findHighDownDispatchers = function(e) {
      return this._mapDraw && this._mapDraw.findHighDownDispatchers(e, this._model);
    }, t.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove();
    }, t.type = "geo", t;
  }(Re)
);
function XE(r, t, e) {
  Ir.registerMap(r, t, e);
}
function c1(r) {
  r.registerCoordinateSystem("geo", u1), r.registerComponentModel(YE), r.registerComponentView(ZE), r.registerImpl("registerMap", XE), r.registerImpl("getMap", function(e) {
    return Ir.getMapForUser(e);
  });
  function t(e, a) {
    a.update = "geo:updateSelectStatus", r.registerAction(a, function(n, i) {
      var o = {}, s = [];
      return i.eachComponent({
        mainType: "geo",
        query: n
      }, function(l) {
        l[e](n.name);
        var u = l.coordinateSystem;
        w(u.regions, function(v) {
          o[v.name] = l.isSelected(v.name) || !1;
        });
        var c = [];
        w(o, function(v, f) {
          o[f] && c.push(f);
        }), s.push({
          geoIndex: l.componentIndex,
          // Use singular, the same naming convention as the event `selectchanged`.
          name: c
        });
      }), {
        selected: o,
        allSelected: s,
        name: n.name
      };
    });
  }
  t("toggleSelected", {
    type: "geoToggleSelect",
    event: "geoselectchanged"
  }), t("select", {
    type: "geoSelect",
    event: "geoselected"
  }), t("unSelect", {
    type: "geoUnSelect",
    event: "geounselected"
  }), r.registerAction({
    type: "geoRoam",
    event: "geoRoam",
    update: "updateTransform"
  }, function(e, a, n) {
    var i = e.componentType || "series";
    a.eachComponent({
      mainType: i,
      query: e
    }, function(o) {
      var s = o.coordinateSystem;
      if (s.type === "geo") {
        var l = nh(s, e, o.get("scaleLimit"), n);
        o.setCenter && o.setCenter(l.center), o.setZoom && o.setZoom(l.zoom), i === "series" && w(o.seriesGroup, function(u) {
          u.setCenter(l.center), u.setZoom(l.zoom);
        });
      }
    });
  });
}
function KE(r) {
  oe(c1), r.registerChartView(BE), r.registerSeriesModel(zE), r.registerLayout(HE), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, FE), ES("map", r.registerAction);
}
function qE(r) {
  var t = r;
  t.hierNode = {
    defaultAncestor: null,
    ancestor: t,
    prelim: 0,
    modifier: 0,
    change: 0,
    shift: 0,
    i: 0,
    thread: null
  };
  for (var e = [t], a, n; a = e.pop(); )
    if (n = a.children, a.isExpand && n.length)
      for (var i = n.length, o = i - 1; o >= 0; o--) {
        var s = n[o];
        s.hierNode = {
          defaultAncestor: null,
          ancestor: s,
          prelim: 0,
          modifier: 0,
          change: 0,
          shift: 0,
          i: o,
          thread: null
        }, e.push(s);
      }
}
function jE(r, t) {
  var e = r.isExpand ? r.children : [], a = r.parentNode.children, n = r.hierNode.i ? a[r.hierNode.i - 1] : null;
  if (e.length) {
    eP(r);
    var i = (e[0].hierNode.prelim + e[e.length - 1].hierNode.prelim) / 2;
    n ? (r.hierNode.prelim = n.hierNode.prelim + t(r, n), r.hierNode.modifier = r.hierNode.prelim - i) : r.hierNode.prelim = i;
  } else n && (r.hierNode.prelim = n.hierNode.prelim + t(r, n));
  r.parentNode.hierNode.defaultAncestor = tP(r, n, r.parentNode.hierNode.defaultAncestor || a[0], t);
}
function JE(r) {
  var t = r.hierNode.prelim + r.parentNode.hierNode.modifier;
  r.setLayout({
    x: t
  }, !0), r.hierNode.modifier += r.parentNode.hierNode.modifier;
}
function Pg(r) {
  return arguments.length ? r : nP;
}
function Ci(r, t) {
  return r -= Math.PI / 2, {
    x: t * Math.cos(r),
    y: t * Math.sin(r)
  };
}
function QE(r, t) {
  return qe(r.getBoxLayoutParams(), {
    width: t.getWidth(),
    height: t.getHeight()
  });
}
function eP(r) {
  for (var t = r.children, e = t.length, a = 0, n = 0; --e >= 0; ) {
    var i = t[e];
    i.hierNode.prelim += a, i.hierNode.modifier += a, n += i.hierNode.change, a += i.hierNode.shift + n;
  }
}
function tP(r, t, e, a) {
  if (t) {
    for (var n = r, i = r, o = i.parentNode.children[0], s = t, l = n.hierNode.modifier, u = i.hierNode.modifier, c = o.hierNode.modifier, v = s.hierNode.modifier; s = Yu(s), i = Zu(i), s && i; ) {
      n = Yu(n), o = Zu(o), n.hierNode.ancestor = r;
      var f = s.hierNode.prelim + v - i.hierNode.prelim - u + a(s, i);
      f > 0 && (aP(rP(s, r, e), r, f), u += f, l += f), v += s.hierNode.modifier, u += i.hierNode.modifier, l += n.hierNode.modifier, c += o.hierNode.modifier;
    }
    s && !Yu(n) && (n.hierNode.thread = s, n.hierNode.modifier += v - l), i && !Zu(o) && (o.hierNode.thread = i, o.hierNode.modifier += u - c, e = r);
  }
  return e;
}
function Yu(r) {
  var t = r.children;
  return t.length && r.isExpand ? t[t.length - 1] : r.hierNode.thread;
}
function Zu(r) {
  var t = r.children;
  return t.length && r.isExpand ? t[0] : r.hierNode.thread;
}
function rP(r, t, e) {
  return r.hierNode.ancestor.parentNode === t.parentNode ? r.hierNode.ancestor : e;
}
function aP(r, t, e) {
  var a = e / (t.hierNode.i - r.hierNode.i);
  t.hierNode.change -= a, t.hierNode.shift += e, t.hierNode.modifier += e, t.hierNode.prelim += e, r.hierNode.change += a;
}
function nP(r, t) {
  return r.parentNode === t.parentNode ? 1 : 2;
}
var iP = { env: {} }, oP = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
      this.parentPoint = [], this.childPoints = [];
    }
    return r;
  }()
), sP = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      return r.call(this, e) || this;
    }
    return t.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, t.prototype.getDefaultShape = function() {
      return new oP();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.childPoints, i = n.length, o = a.parentPoint, s = n[0], l = n[i - 1];
      if (i === 1) {
        e.moveTo(o[0], o[1]), e.lineTo(s[0], s[1]);
        return;
      }
      var u = a.orient, c = u === "TB" || u === "BT" ? 0 : 1, v = 1 - c, f = H(a.forkPosition, 1), h = [];
      h[c] = o[c], h[v] = o[v] + (l[v] - o[v]) * f, e.moveTo(o[0], o[1]), e.lineTo(h[0], h[1]), e.moveTo(s[0], s[1]), h[c] = s[c], e.lineTo(h[0], h[1]), h[c] = l[c], e.lineTo(h[0], h[1]), e.lineTo(l[0], l[1]);
      for (var p = 1; p < i - 1; p++) {
        var d = n[p];
        e.moveTo(d[0], d[1]), h[c] = d[c], e.lineTo(h[0], h[1]);
      }
    }, t;
  }(Ee)
), lP = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._mainGroup = new re(), e;
    }
    return t.prototype.init = function(e, a) {
      this._controller = new To(a.getZr()), this._controllerHost = {
        target: this.group
      }, this.group.add(this._mainGroup);
    }, t.prototype.render = function(e, a, n) {
      var i = e.getData(), o = e.layoutInfo, s = this._mainGroup, l = e.get("layout");
      l === "radial" ? (s.x = o.x + o.width / 2, s.y = o.y + o.height / 2) : (s.x = o.x, s.y = o.y), this._updateViewCoordSys(e, n), this._updateController(e, a, n);
      var u = this._data;
      i.diff(u).add(function(c) {
        Ng(i, c) && Rg(i, c, null, s, e);
      }).update(function(c, v) {
        var f = u.getItemGraphicEl(v);
        if (!Ng(i, c)) {
          f && Og(u, v, f, s, e);
          return;
        }
        Rg(i, c, f, s, e);
      }).remove(function(c) {
        var v = u.getItemGraphicEl(c);
        v && Og(u, c, v, s, e);
      }).execute(), this._nodeScaleRatio = e.get("nodeScaleRatio"), this._updateNodeAndLinkScale(e), e.get("expandAndCollapse") === !0 && i.eachItemGraphicEl(function(c, v) {
        c.off("click").on("click", function() {
          n.dispatchAction({
            type: "treeExpandAndCollapse",
            seriesId: e.id,
            dataIndex: v
          });
        });
      }), this._data = i;
    }, t.prototype._updateViewCoordSys = function(e, a) {
      var n = e.getData(), i = [];
      n.each(function(v) {
        var f = n.getItemLayout(v);
        f && !isNaN(f.x) && !isNaN(f.y) && i.push([+f.x, +f.y]);
      });
      var o = [], s = [];
      U0(i, o, s);
      var l = this._min, u = this._max;
      s[0] - o[0] === 0 && (o[0] = l ? l[0] : o[0] - 1, s[0] = u ? u[0] : s[0] + 1), s[1] - o[1] === 0 && (o[1] = l ? l[1] : o[1] - 1, s[1] = u ? u[1] : s[1] + 1);
      var c = e.coordinateSystem = new Co();
      c.zoomLimit = e.get("scaleLimit"), c.setBoundingRect(o[0], o[1], s[0] - o[0], s[1] - o[1]), c.setCenter(e.get("center"), a), c.setZoom(e.get("zoom")), this.group.attr({
        x: c.x,
        y: c.y,
        scaleX: c.scaleX,
        scaleY: c.scaleY
      }), this._min = o, this._max = s;
    }, t.prototype._updateController = function(e, a, n) {
      var i = this, o = this._controller, s = this._controllerHost, l = this.group;
      o.setPointerChecker(function(u, c, v) {
        var f = l.getBoundingRect();
        return f.applyTransform(l.transform), f.contain(c, v) && !Ul(u, n, e);
      }), o.enable(e.get("roam")), s.zoomLimit = e.get("scaleLimit"), s.zoom = e.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
        th(s, u.dx, u.dy), n.dispatchAction({
          seriesId: e.id,
          type: "treeRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        rh(s, u.scale, u.originX, u.originY), n.dispatchAction({
          seriesId: e.id,
          type: "treeRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), i._updateNodeAndLinkScale(e), n.updateLabelLayout();
      });
    }, t.prototype._updateNodeAndLinkScale = function(e) {
      var a = e.getData(), n = this._getNodeGlobalScale(e);
      a.eachItemGraphicEl(function(i, o) {
        i.setSymbolScale(n);
      });
    }, t.prototype._getNodeGlobalScale = function(e) {
      var a = e.coordinateSystem;
      if (a.type !== "view")
        return 1;
      var n = this._nodeScaleRatio, i = a.scaleX || 1, o = a.getZoom(), s = (o - 1) * n + 1;
      return s / i;
    }, t.prototype.dispose = function() {
      this._controller && this._controller.dispose(), this._controllerHost = null;
    }, t.prototype.remove = function() {
      this._mainGroup.removeAll(), this._data = null;
    }, t.type = "tree", t;
  }(De)
);
function Ng(r, t) {
  var e = r.getItemLayout(t);
  return e && !isNaN(e.x) && !isNaN(e.y);
}
function Rg(r, t, e, a, n) {
  var i = !e, o = r.tree.getNodeByDataIndex(t), s = o.getModel(), l = o.getVisual("style").fill, u = o.isExpand === !1 && o.children.length !== 0 ? l : "#fff", c = r.tree.root, v = o.parentNode === c ? o : o.parentNode || o, f = r.getItemGraphicEl(v.dataIndex), h = v.getLayout(), p = f ? {
    x: f.__oldX,
    y: f.__oldY,
    rawX: f.__radialOldRawX,
    rawY: f.__radialOldRawY
  } : h, d = o.getLayout();
  i ? (e = new So(r, t, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), e.x = p.x, e.y = p.y) : e.updateData(r, t, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), e.__radialOldRawX = e.__radialRawX, e.__radialOldRawY = e.__radialRawY, e.__radialRawX = d.rawX, e.__radialRawY = d.rawY, a.add(e), r.setItemGraphicEl(t, e), e.__oldX = e.x, e.__oldY = e.y, pe(e, {
    x: d.x,
    y: d.y
  }, n);
  var g = e.getSymbolPath();
  if (n.get("layout") === "radial") {
    var y = c.children[0], m = y.getLayout(), _ = y.children.length, S = void 0, x = void 0;
    if (d.x === m.x && o.isExpand === !0 && y.children.length) {
      var b = {
        x: (y.children[0].getLayout().x + y.children[_ - 1].getLayout().x) / 2,
        y: (y.children[0].getLayout().y + y.children[_ - 1].getLayout().y) / 2
      };
      S = Math.atan2(b.y - m.y, b.x - m.x), S < 0 && (S = Math.PI * 2 + S), x = b.x < m.x, x && (S = S - Math.PI);
    } else
      S = Math.atan2(d.y - m.y, d.x - m.x), S < 0 && (S = Math.PI * 2 + S), o.children.length === 0 || o.children.length !== 0 && o.isExpand === !1 ? (x = d.x < m.x, x && (S = S - Math.PI)) : (x = d.x > m.x, x || (S = S - Math.PI));
    var D = x ? "left" : "right", A = s.getModel("label"), T = A.get("rotate"), C = T * (Math.PI / 180), M = g.getTextContent();
    M && (g.setTextConfig({
      position: A.get("position") || D,
      rotation: T == null ? -S : C,
      origin: "center"
    }), M.setStyle("verticalAlign", "middle"));
  }
  var I = s.get(["emphasis", "focus"]), L = I === "relative" ? Rs(o.getAncestorsIndices(), o.getDescendantIndices()) : I === "ancestor" ? o.getAncestorsIndices() : I === "descendant" ? o.getDescendantIndices() : null;
  L && (j(e).focus = L), uP(n, o, c, e, p, h, d, a), e.__edge && (e.onHoverStateChange = function(P) {
    if (P !== "blur") {
      var E = o.parentNode && r.getItemGraphicEl(o.parentNode.dataIndex);
      E && E.hoverState === ho || Bs(e.__edge, P);
    }
  });
}
function uP(r, t, e, a, n, i, o, s) {
  var l = t.getModel(), u = r.get("edgeShape"), c = r.get("layout"), v = r.getOrient(), f = r.get(["lineStyle", "curveness"]), h = r.get("edgeForkPosition"), p = l.getModel("lineStyle").getLineStyle(), d = a.__edge;
  if (u === "curve")
    t.parentNode && t.parentNode !== e && (d || (d = a.__edge = new yl({
      shape: Tv(c, v, f, n, n)
    })), pe(d, {
      shape: Tv(c, v, f, i, o)
    }, r));
  else if (u === "polyline") {
    if (c === "orthogonal") {
      if (t !== e && t.children && t.children.length !== 0 && t.isExpand === !0) {
        for (var g = t.children, y = [], m = 0; m < g.length; m++) {
          var _ = g[m].getLayout();
          y.push([_.x, _.y]);
        }
        d || (d = a.__edge = new sP({
          shape: {
            parentPoint: [o.x, o.y],
            childPoints: [[o.x, o.y]],
            orient: v,
            forkPosition: h
          }
        })), pe(d, {
          shape: {
            parentPoint: [o.x, o.y],
            childPoints: y
          }
        }, r);
      }
    } else if (iP.env.NODE_ENV !== "production")
      throw new Error("The polyline edgeShape can only be used in orthogonal layout");
  }
  d && !(u === "polyline" && !t.isExpand) && (d.useStyle(ee({
    strokeNoScale: !0,
    fill: null
  }, p)), st(d, l, "lineStyle"), za(d), s.add(d));
}
function kg(r, t, e, a, n) {
  var i = t.tree.root, o = v1(i, r), s = o.source, l = o.sourceLayout, u = t.getItemGraphicEl(r.dataIndex);
  if (u) {
    var c = t.getItemGraphicEl(s.dataIndex), v = c.__edge, f = u.__edge || (s.isExpand === !1 || s.children.length === 1 ? v : void 0), h = a.get("edgeShape"), p = a.get("layout"), d = a.get("orient"), g = a.get(["lineStyle", "curveness"]);
    f && (h === "curve" ? Qr(f, {
      shape: Tv(p, d, g, l, l),
      style: {
        opacity: 0
      }
    }, a, {
      cb: function() {
        e.remove(f);
      },
      removeOpt: n
    }) : h === "polyline" && a.get("layout") === "orthogonal" && Qr(f, {
      shape: {
        parentPoint: [l.x, l.y],
        childPoints: [[l.x, l.y]]
      },
      style: {
        opacity: 0
      }
    }, a, {
      cb: function() {
        e.remove(f);
      },
      removeOpt: n
    }));
  }
}
function v1(r, t) {
  for (var e = t.parentNode === r ? t : t.parentNode || t, a; a = e.getLayout(), a == null; )
    e = e.parentNode === r ? e : e.parentNode || e;
  return {
    source: e,
    sourceLayout: a
  };
}
function Og(r, t, e, a, n) {
  var i = r.tree.getNodeByDataIndex(t), o = r.tree.root, s = v1(o, i).sourceLayout, l = {
    duration: n.get("animationDurationUpdate"),
    easing: n.get("animationEasingUpdate")
  };
  Qr(e, {
    x: s.x + 1,
    y: s.y + 1
  }, n, {
    cb: function() {
      a.remove(e), r.setItemGraphicEl(t, null);
    },
    removeOpt: l
  }), e.fadeOut(null, r.hostModel, {
    fadeLabel: !0,
    animation: l
  }), i.children.forEach(function(u) {
    kg(u, r, a, n, l);
  }), kg(i, r, a, n, l);
}
function Tv(r, t, e, a, n) {
  var i, o, s, l, u, c, v, f;
  if (r === "radial") {
    u = a.rawX, v = a.rawY, c = n.rawX, f = n.rawY;
    var h = Ci(u, v), p = Ci(u, v + (f - v) * e), d = Ci(c, f + (v - f) * e), g = Ci(c, f);
    return {
      x1: h.x || 0,
      y1: h.y || 0,
      x2: g.x || 0,
      y2: g.y || 0,
      cpx1: p.x || 0,
      cpy1: p.y || 0,
      cpx2: d.x || 0,
      cpy2: d.y || 0
    };
  } else
    u = a.x, v = a.y, c = n.x, f = n.y, (t === "LR" || t === "RL") && (i = u + (c - u) * e, o = v, s = c + (u - c) * e, l = f), (t === "TB" || t === "BT") && (i = u, o = v + (f - v) * e, s = c, l = f + (v - f) * e);
  return {
    x1: u,
    y1: v,
    x2: c,
    y2: f,
    cpx1: i,
    cpy1: o,
    cpx2: s,
    cpy2: l
  };
}
var Gt = ue();
function f1(r) {
  var t = r.mainData, e = r.datas;
  e || (e = {
    main: t
  }, r.datasAttr = {
    main: "data"
  }), r.datas = r.mainData = null, h1(t, e, r), w(e, function(a) {
    w(t.TRANSFERABLE_METHODS, function(n) {
      a.wrapMethod(n, te(cP, r));
    });
  }), t.wrapMethod("cloneShallow", te(fP, r)), w(t.CHANGABLE_METHODS, function(a) {
    t.wrapMethod(a, te(vP, r));
  }), K(e[t.dataType] === t);
}
function cP(r, t) {
  if (dP(this)) {
    var e = z({}, Gt(this).datas);
    e[this.dataType] = t, h1(t, e, r);
  } else
    ih(t, this.dataType, Gt(this).mainData, r);
  return t;
}
function vP(r, t) {
  return r.struct && r.struct.update(), t;
}
function fP(r, t) {
  return w(Gt(t).datas, function(e, a) {
    e !== t && ih(e.cloneShallow(), a, t, r);
  }), t;
}
function hP(r) {
  var t = Gt(this).mainData;
  return r == null || t == null ? t : Gt(t).datas[r];
}
function pP() {
  var r = Gt(this).mainData;
  return r == null ? [{
    data: r
  }] : G(Fe(Gt(r).datas), function(t) {
    return {
      type: t,
      data: Gt(r).datas[t]
    };
  });
}
function dP(r) {
  return Gt(r).mainData === r;
}
function h1(r, t, e) {
  Gt(r).datas = {}, w(t, function(a, n) {
    ih(a, n, r, e);
  });
}
function ih(r, t, e, a) {
  Gt(e).datas[t] = r, Gt(r).mainData = e, r.dataType = t, a.struct && (r[a.structAttr] = a.struct, a.struct[a.datasAttr[t]] = r), r.getLinkedData = hP, r.getLinkedDataAll = pP;
}
var gP = (
  /** @class */
  function() {
    function r(t, e) {
      this.depth = 0, this.height = 0, this.dataIndex = -1, this.children = [], this.viewChildren = [], this.isExpand = !1, this.name = t || "", this.hostTree = e;
    }
    return r.prototype.isRemoved = function() {
      return this.dataIndex < 0;
    }, r.prototype.eachNode = function(t, e, a) {
      X(t) && (a = e, e = t, t = null), t = t || {}, Y(t) && (t = {
        order: t
      });
      var n = t.order || "preorder", i = this[t.attr || "children"], o;
      n === "preorder" && (o = e.call(a, this));
      for (var s = 0; !o && s < i.length; s++)
        i[s].eachNode(t, e, a);
      n === "postorder" && e.call(a, this);
    }, r.prototype.updateDepthAndHeight = function(t) {
      var e = 0;
      this.depth = t;
      for (var a = 0; a < this.children.length; a++) {
        var n = this.children[a];
        n.updateDepthAndHeight(t + 1), n.height > e && (e = n.height);
      }
      this.height = e + 1;
    }, r.prototype.getNodeById = function(t) {
      if (this.getId() === t)
        return this;
      for (var e = 0, a = this.children, n = a.length; e < n; e++) {
        var i = a[e].getNodeById(t);
        if (i)
          return i;
      }
    }, r.prototype.contains = function(t) {
      if (t === this)
        return !0;
      for (var e = 0, a = this.children, n = a.length; e < n; e++) {
        var i = a[e].contains(t);
        if (i)
          return i;
      }
    }, r.prototype.getAncestors = function(t) {
      for (var e = [], a = t ? this : this.parentNode; a; )
        e.push(a), a = a.parentNode;
      return e.reverse(), e;
    }, r.prototype.getAncestorsIndices = function() {
      for (var t = [], e = this; e; )
        t.push(e.dataIndex), e = e.parentNode;
      return t.reverse(), t;
    }, r.prototype.getDescendantIndices = function() {
      var t = [];
      return this.eachNode(function(e) {
        t.push(e.dataIndex);
      }), t;
    }, r.prototype.getValue = function(t) {
      var e = this.hostTree.data;
      return e.getStore().get(e.getDimensionIndex(t || "value"), this.dataIndex);
    }, r.prototype.setLayout = function(t, e) {
      this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, t, e);
    }, r.prototype.getLayout = function() {
      return this.hostTree.data.getItemLayout(this.dataIndex);
    }, r.prototype.getModel = function(t) {
      if (!(this.dataIndex < 0)) {
        var e = this.hostTree, a = e.data.getItemModel(this.dataIndex);
        return a.getModel(t);
      }
    }, r.prototype.getLevelModel = function() {
      return (this.hostTree.levelModels || [])[this.depth];
    }, r.prototype.setVisual = function(t, e) {
      this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, t, e);
    }, r.prototype.getVisual = function(t) {
      return this.hostTree.data.getItemVisual(this.dataIndex, t);
    }, r.prototype.getRawIndex = function() {
      return this.hostTree.data.getRawIndex(this.dataIndex);
    }, r.prototype.getId = function() {
      return this.hostTree.data.getId(this.dataIndex);
    }, r.prototype.getChildIndex = function() {
      if (this.parentNode) {
        for (var t = this.parentNode.children, e = 0; e < t.length; ++e)
          if (t[e] === this)
            return e;
        return -1;
      }
      return -1;
    }, r.prototype.isAncestorOf = function(t) {
      for (var e = t.parentNode; e; ) {
        if (e === this)
          return !0;
        e = e.parentNode;
      }
      return !1;
    }, r.prototype.isDescendantOf = function(t) {
      return t !== this && t.isAncestorOf(this);
    }, r;
  }()
), oh = (
  /** @class */
  function() {
    function r(t) {
      this.type = "tree", this._nodes = [], this.hostModel = t;
    }
    return r.prototype.eachNode = function(t, e, a) {
      this.root.eachNode(t, e, a);
    }, r.prototype.getNodeByDataIndex = function(t) {
      var e = this.data.getRawIndex(t);
      return this._nodes[e];
    }, r.prototype.getNodeById = function(t) {
      return this.root.getNodeById(t);
    }, r.prototype.update = function() {
      for (var t = this.data, e = this._nodes, a = 0, n = e.length; a < n; a++)
        e[a].dataIndex = -1;
      for (var a = 0, n = t.count(); a < n; a++)
        e[t.getRawIndex(a)].dataIndex = a;
    }, r.prototype.clearLayouts = function() {
      this.data.clearItemLayouts();
    }, r.createTree = function(t, e, a) {
      var n = new r(e), i = [], o = 1;
      s(t);
      function s(c, v) {
        var f = c.value;
        o = Math.max(o, B(f) ? f.length : 1), i.push(c);
        var h = new gP(Ke(c.name, ""), n);
        v ? yP(h, v) : n.root = h, n._nodes.push(h);
        var p = c.children;
        if (p)
          for (var d = 0; d < p.length; d++)
            s(p[d], h);
      }
      n.root.updateDepthAndHeight(0);
      var l = mo(i, {
        coordDimensions: ["value"],
        dimensionsCount: o
      }).dimensions, u = new yt(l, e);
      return u.initData(i), a && a(u), f1({
        mainData: u,
        struct: n,
        structAttr: "tree"
      }), n.update(), n;
    }, r;
  }()
);
function yP(r, t) {
  var e = t.children;
  r.parentNode !== t && (e.push(r), r.parentNode = t);
}
function eo(r, t, e) {
  if (r && fe(t, r.type) >= 0) {
    var a = e.getData().tree.root, n = r.targetNode;
    if (Y(n) && (n = a.getNodeById(n)), n && a.contains(n))
      return {
        node: n
      };
    var i = r.targetNodeId;
    if (i != null && (n = a.getNodeById(i)))
      return {
        node: n
      };
  }
}
function p1(r) {
  for (var t = []; r; )
    r = r.parentNode, r && t.push(r);
  return t.reverse();
}
function sh(r, t) {
  var e = p1(r);
  return fe(e, t) >= 0;
}
function $l(r, t) {
  for (var e = []; r; ) {
    var a = r.dataIndex;
    e.push({
      name: r.name,
      dataIndex: a,
      value: t.getRawValue(a)
    }), r = r.parentNode;
  }
  return e.reverse(), e;
}
var mP = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.hasSymbolVisual = !0, e.ignoreStyleOnData = !0, e;
    }
    return t.prototype.getInitialData = function(e) {
      var a = {
        name: e.name,
        children: e.data
      }, n = e.leaves || {}, i = new me(n, this, this.ecModel), o = oh.createTree(a, this, s);
      function s(v) {
        v.wrapMethod("getItemModel", function(f, h) {
          var p = o.getNodeByDataIndex(h);
          return p && p.children.length && p.isExpand || (f.parentModel = i), f;
        });
      }
      var l = 0;
      o.eachNode("preorder", function(v) {
        v.depth > l && (l = v.depth);
      });
      var u = e.expandAndCollapse, c = u && e.initialTreeDepth >= 0 ? e.initialTreeDepth : l;
      return o.root.eachNode("preorder", function(v) {
        var f = v.hostTree.data.getRawDataItem(v.dataIndex);
        v.isExpand = f && f.collapsed != null ? !f.collapsed : v.depth <= c;
      }), o.data;
    }, t.prototype.getOrient = function() {
      var e = this.get("orient");
      return e === "horizontal" ? e = "LR" : e === "vertical" && (e = "TB"), e;
    }, t.prototype.setZoom = function(e) {
      this.option.zoom = e;
    }, t.prototype.setCenter = function(e) {
      this.option.center = e;
    }, t.prototype.formatTooltip = function(e, a, n) {
      for (var i = this.getData().tree, o = i.root.children[0], s = i.getNodeByDataIndex(e), l = s.getValue(), u = s.name; s && s !== o; )
        u = s.parentNode.name + "." + u, s = s.parentNode;
      return rt("nameValue", {
        name: u,
        value: l,
        noValue: isNaN(l) || l == null
      });
    }, t.prototype.getDataParams = function(e) {
      var a = r.prototype.getDataParams.apply(this, arguments), n = this.getData().tree.getNodeByDataIndex(e);
      return a.treeAncestors = $l(n, this), a.collapsed = !n.isExpand, a;
    }, t.type = "series.tree", t.layoutMode = "box", t.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // the position of the whole view
      left: "12%",
      top: "12%",
      right: "12%",
      bottom: "12%",
      // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'
      layout: "orthogonal",
      // value can be 'polyline'
      edgeShape: "curve",
      edgeForkPosition: "50%",
      // true | false | 'move' | 'scale', see module:component/helper/RoamController.
      roam: !1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.4,
      // Default on center of graph
      center: null,
      zoom: 1,
      orient: "LR",
      symbol: "emptyCircle",
      symbolSize: 7,
      expandAndCollapse: !0,
      initialTreeDepth: 2,
      lineStyle: {
        color: "#ccc",
        width: 1.5,
        curveness: 0.5
      },
      itemStyle: {
        color: "lightsteelblue",
        // borderColor: '#c23531',
        borderWidth: 1.5
      },
      label: {
        show: !0
      },
      animationEasing: "linear",
      animationDuration: 700,
      animationDurationUpdate: 500
    }, t;
  }(Le)
);
function _P(r, t, e) {
  for (var a = [r], n = [], i; i = a.pop(); )
    if (n.push(i), i.isExpand) {
      var o = i.children;
      if (o.length)
        for (var s = 0; s < o.length; s++)
          a.push(o[s]);
    }
  for (; i = n.pop(); )
    t(i, e);
}
function gi(r, t) {
  for (var e = [r], a; a = e.pop(); )
    if (t(a), a.isExpand) {
      var n = a.children;
      if (n.length)
        for (var i = n.length - 1; i >= 0; i--)
          e.push(n[i]);
    }
}
function SP(r, t) {
  r.eachSeriesByType("tree", function(e) {
    xP(e, t);
  });
}
function xP(r, t) {
  var e = QE(r, t);
  r.layoutInfo = e;
  var a = r.get("layout"), n = 0, i = 0, o = null;
  a === "radial" ? (n = 2 * Math.PI, i = Math.min(e.height, e.width) / 2, o = Pg(function(_, S) {
    return (_.parentNode === S.parentNode ? 1 : 2) / _.depth;
  })) : (n = e.width, i = e.height, o = Pg());
  var s = r.getData().tree.root, l = s.children[0];
  if (l) {
    qE(s), _P(l, jE, o), s.hierNode.modifier = -l.hierNode.prelim, gi(l, JE);
    var u = l, c = l, v = l;
    gi(l, function(_) {
      var S = _.getLayout().x;
      S < u.getLayout().x && (u = _), S > c.getLayout().x && (c = _), _.depth > v.depth && (v = _);
    });
    var f = u === c ? 1 : o(u, c) / 2, h = f - u.getLayout().x, p = 0, d = 0, g = 0, y = 0;
    if (a === "radial")
      p = n / (c.getLayout().x + f + h), d = i / (v.depth - 1 || 1), gi(l, function(_) {
        g = (_.getLayout().x + h) * p, y = (_.depth - 1) * d;
        var S = Ci(g, y);
        _.setLayout({
          x: S.x,
          y: S.y,
          rawX: g,
          rawY: y
        }, !0);
      });
    else {
      var m = r.getOrient();
      m === "RL" || m === "LR" ? (d = i / (c.getLayout().x + f + h), p = n / (v.depth - 1 || 1), gi(l, function(_) {
        y = (_.getLayout().x + h) * d, g = m === "LR" ? (_.depth - 1) * p : n - (_.depth - 1) * p, _.setLayout({
          x: g,
          y
        }, !0);
      })) : (m === "TB" || m === "BT") && (p = n / (c.getLayout().x + f + h), d = i / (v.depth - 1 || 1), gi(l, function(_) {
        g = (_.getLayout().x + h) * p, y = m === "TB" ? (_.depth - 1) * d : i - (_.depth - 1) * d, _.setLayout({
          x: g,
          y
        }, !0);
      }));
    }
  }
}
function bP(r) {
  r.eachSeriesByType("tree", function(t) {
    var e = t.getData(), a = e.tree;
    a.eachNode(function(n) {
      var i = n.getModel(), o = i.getModel("itemStyle").getItemStyle(), s = e.ensureUniqueItemVisual(n.dataIndex, "style");
      z(s, o);
    });
  });
}
function wP(r) {
  r.registerAction({
    type: "treeExpandAndCollapse",
    event: "treeExpandAndCollapse",
    update: "update"
  }, function(t, e) {
    e.eachComponent({
      mainType: "series",
      subType: "tree",
      query: t
    }, function(a) {
      var n = t.dataIndex, i = a.getData().tree, o = i.getNodeByDataIndex(n);
      o.isExpand = !o.isExpand;
    });
  }), r.registerAction({
    type: "treeRoam",
    event: "treeRoam",
    // Here we set 'none' instead of 'update', because roam action
    // just need to update the transform matrix without having to recalculate
    // the layout. So don't need to go through the whole update process, such
    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.
    update: "none"
  }, function(t, e, a) {
    e.eachComponent({
      mainType: "series",
      subType: "tree",
      query: t
    }, function(n) {
      var i = n.coordinateSystem, o = nh(i, t, void 0, a);
      n.setCenter && n.setCenter(o.center), n.setZoom && n.setZoom(o.zoom);
    });
  });
}
function DP(r) {
  r.registerChartView(lP), r.registerSeriesModel(mP), r.registerLayout(SP), r.registerVisual(bP), wP(r);
}
var Vg = ["treemapZoomToNode", "treemapRender", "treemapMove"];
function AP(r) {
  for (var t = 0; t < Vg.length; t++)
    r.registerAction({
      type: Vg[t],
      update: "updateView"
    }, _t);
  r.registerAction({
    type: "treemapRootToNode",
    update: "updateView"
  }, function(e, a) {
    a.eachComponent({
      mainType: "series",
      subType: "treemap",
      query: e
    }, n);
    function n(i, o) {
      var s = ["treemapZoomToNode", "treemapRootToNode"], l = eo(e, s, i);
      if (l) {
        var u = i.getViewRoot();
        u && (e.direction = sh(u, l.node) ? "rollUp" : "drillDown"), i.resetViewRoot(l.node);
      }
    }
  });
}
function d1(r) {
  var t = r.getData(), e = t.tree, a = {};
  e.eachNode(function(n) {
    for (var i = n; i && i.depth > 1; )
      i = i.parentNode;
    var o = iv(r.ecModel, i.name || i.dataIndex + "", a);
    n.setVisual("decal", o);
  });
}
var TP = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.preventUsingHoverLayer = !0, e;
    }
    return t.prototype.getInitialData = function(e, a) {
      var n = {
        name: e.name,
        children: e.data
      };
      g1(n);
      var i = e.levels || [], o = this.designatedVisualItemStyle = {}, s = new me({
        itemStyle: o
      }, this, a);
      i = e.levels = CP(i, a);
      var l = G(i || [], function(v) {
        return new me(v, s, a);
      }, this), u = oh.createTree(n, this, c);
      function c(v) {
        v.wrapMethod("getItemModel", function(f, h) {
          var p = u.getNodeByDataIndex(h), d = p ? l[p.depth] : null;
          return f.parentModel = d || s, f;
        });
      }
      return u.data;
    }, t.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, t.prototype.formatTooltip = function(e, a, n) {
      var i = this.getData(), o = this.getRawValue(e), s = i.getName(e);
      return rt("nameValue", {
        name: s,
        value: o
      });
    }, t.prototype.getDataParams = function(e) {
      var a = r.prototype.getDataParams.apply(this, arguments), n = this.getData().tree.getNodeByDataIndex(e);
      return a.treeAncestors = $l(n, this), a.treePathInfo = a.treeAncestors, a;
    }, t.prototype.setLayoutInfo = function(e) {
      this.layoutInfo = this.layoutInfo || {}, z(this.layoutInfo, e);
    }, t.prototype.mapIdToIndex = function(e) {
      var a = this._idIndexMap;
      a || (a = this._idIndexMap = Z(), this._idIndexMapCount = 0);
      var n = a.get(e);
      return n == null && a.set(e, n = this._idIndexMapCount++), n;
    }, t.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, t.prototype.resetViewRoot = function(e) {
      e ? this._viewRoot = e : e = this._viewRoot;
      var a = this.getRawData().tree.root;
      (!e || e !== a && !a.contains(e)) && (this._viewRoot = a);
    }, t.prototype.enableAriaDecal = function() {
      d1(this);
    }, t.type = "series.treemap", t.layoutMode = "box", t.defaultOption = {
      // Disable progressive rendering
      progressive: 0,
      // size: ['80%', '80%'],            // deprecated, compatible with ec2.
      left: "center",
      top: "middle",
      width: "80%",
      height: "80%",
      sort: !0,
      clipWindow: "origin",
      squareRatio: 0.5 * (1 + Math.sqrt(5)),
      leafDepth: null,
      drillDownIcon: "▶",
      // to align specialized icon. ▷▶❒❐▼✚
      zoomToNodeRatio: 0.32 * 0.32,
      scaleLimit: null,
      roam: !0,
      nodeClick: "zoomToNode",
      animation: !0,
      animationDurationUpdate: 900,
      animationEasing: "quinticInOut",
      breadcrumb: {
        show: !0,
        height: 22,
        left: "center",
        top: "bottom",
        // right
        // bottom
        emptyItemWidth: 25,
        itemStyle: {
          color: "rgba(0,0,0,0.7)",
          textStyle: {
            color: "#fff"
          }
        },
        emphasis: {
          itemStyle: {
            color: "rgba(0,0,0,0.9)"
            // '#5793f3',
          }
        }
      },
      label: {
        show: !0,
        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.
        distance: 0,
        padding: 5,
        position: "inside",
        // formatter: null,
        color: "#fff",
        overflow: "truncate"
        // align
        // verticalAlign
      },
      upperLabel: {
        show: !1,
        position: [0, "50%"],
        height: 20,
        // formatter: null,
        // color: '#fff',
        overflow: "truncate",
        // align: null,
        verticalAlign: "middle"
      },
      itemStyle: {
        color: null,
        colorAlpha: null,
        colorSaturation: null,
        borderWidth: 0,
        gapWidth: 0,
        borderColor: "#fff",
        borderColorSaturation: null
        // If specified, borderColor will be ineffective, and the
        // border color is evaluated by color of current node and
        // borderColorSaturation.
      },
      emphasis: {
        upperLabel: {
          show: !0,
          position: [0, "50%"],
          overflow: "truncate",
          verticalAlign: "middle"
        }
      },
      visualDimension: 0,
      visualMin: null,
      visualMax: null,
      color: [],
      // level[n].color (if necessary).
      // + Specify color list of each level. level[0].color would be global
      // color list if not specified. (see method `setDefault`).
      // + But set as a empty array to forbid fetch color from global palette
      // when using nodeModel.get('color'), otherwise nodes on deep level
      // will always has color palette set and are not able to inherit color
      // from parent node.
      // + TreemapSeries.color can not be set as 'none', otherwise effect
      // legend color fetching (see seriesColor.js).
      colorAlpha: null,
      colorSaturation: null,
      colorMappingBy: "index",
      visibleMin: 10,
      // be rendered. Only works when sort is 'asc' or 'desc'.
      childrenVisibleMin: null,
      // grandchildren will not show.
      // Why grandchildren? If not grandchildren but children,
      // some siblings show children and some not,
      // the appearance may be mess and not consistent,
      levels: []
      // Each item: {
      //     visibleMin, itemStyle, visualDimension, label
      // }
    }, t;
  }(Le)
);
function g1(r) {
  var t = 0;
  w(r.children, function(a) {
    g1(a);
    var n = a.value;
    B(n) && (n = n[0]), t += n;
  });
  var e = r.value;
  B(e) && (e = e[0]), (e == null || isNaN(e)) && (e = t), e < 0 && (e = 0), B(r.value) ? r.value[0] = e : r.value = e;
}
function CP(r, t) {
  var e = we(t.get("color")), a = we(t.get(["aria", "decal", "decals"]));
  if (e) {
    r = r || [];
    var n, i;
    w(r, function(s) {
      var l = new me(s), u = l.get("color"), c = l.get("decal");
      (l.get(["itemStyle", "color"]) || u && u !== "none") && (n = !0), (l.get(["itemStyle", "decal"]) || c && c !== "none") && (i = !0);
    });
    var o = r[0] || (r[0] = {});
    return n || (o.color = e.slice()), !i && a && (o.decal = a.slice()), r;
  }
}
var MP = 8, Bg = 8, Xu = 5, IP = (
  /** @class */
  function() {
    function r(t) {
      this.group = new re(), t.add(this.group);
    }
    return r.prototype.render = function(t, e, a, n) {
      var i = t.getModel("breadcrumb"), o = this.group;
      if (o.removeAll(), !(!i.get("show") || !a)) {
        var s = i.getModel("itemStyle"), l = i.getModel("emphasis"), u = s.getModel("textStyle"), c = l.getModel(["itemStyle", "textStyle"]), v = {
          pos: {
            left: i.get("left"),
            right: i.get("right"),
            top: i.get("top"),
            bottom: i.get("bottom")
          },
          box: {
            width: e.getWidth(),
            height: e.getHeight()
          },
          emptyItemWidth: i.get("emptyItemWidth"),
          totalWidth: 0,
          renderList: []
        };
        this._prepare(a, v, u), this._renderContent(t, v, s, l, u, c, n), Rl(o, v.pos, v.box);
      }
    }, r.prototype._prepare = function(t, e, a) {
      for (var n = t; n; n = n.parentNode) {
        var i = Ke(n.getModel().get("name"), ""), o = a.getTextRect(i), s = Math.max(o.width + MP * 2, e.emptyItemWidth);
        e.totalWidth += s + Bg, e.renderList.push({
          node: n,
          text: i,
          width: s
        });
      }
    }, r.prototype._renderContent = function(t, e, a, n, i, o, s) {
      for (var l = 0, u = e.emptyItemWidth, c = t.get(["breadcrumb", "height"]), v = IA(e.pos, e.box), f = e.totalWidth, h = e.renderList, p = n.getModel("itemStyle").getItemStyle(), d = h.length - 1; d >= 0; d--) {
        var g = h[d], y = g.node, m = g.width, _ = g.text;
        f > v.width && (f -= m - u, m = u, _ = null);
        var S = new Wt({
          shape: {
            points: LP(l, 0, m, c, d === h.length - 1, d === 0)
          },
          style: ee(a.getItemStyle(), {
            lineJoin: "bevel"
          }),
          textContent: new ve({
            style: Ie(i, {
              text: _
            })
          }),
          textConfig: {
            position: "inside"
          },
          z2: Fn * 1e4,
          onclick: te(s, y)
        });
        S.disableLabelAnimation = !0, S.getTextContent().ensureState("emphasis").style = Ie(o, {
          text: _
        }), S.ensureState("emphasis").style = p, Be(S, n.get("focus"), n.get("blurScope"), n.get("disabled")), this.group.add(S), EP(S, t, y), l += m + Bg;
      }
    }, r.prototype.remove = function() {
      this.group.removeAll();
    }, r;
  }()
);
function LP(r, t, e, a, n, i) {
  var o = [[n ? r : r - Xu, t], [r + e, t], [r + e, t + a], [n ? r : r - Xu, t + a]];
  return !i && o.splice(2, 0, [r + e + Xu, t + a / 2]), !n && o.push([r, t + a / 2]), o;
}
function EP(r, t, e) {
  j(r).eventData = {
    componentType: "series",
    componentSubType: "treemap",
    componentIndex: t.componentIndex,
    seriesIndex: t.seriesIndex,
    seriesName: t.name,
    seriesType: "treemap",
    selfType: "breadcrumb",
    nodeData: {
      dataIndex: e && e.dataIndex,
      name: e && e.name
    },
    treePathInfo: e && $l(e, t)
  };
}
var PP = (
  /** @class */
  function() {
    function r() {
      this._storage = [], this._elExistsMap = {};
    }
    return r.prototype.add = function(t, e, a, n, i) {
      return this._elExistsMap[t.id] ? !1 : (this._elExistsMap[t.id] = !0, this._storage.push({
        el: t,
        target: e,
        duration: a,
        delay: n,
        easing: i
      }), !0);
    }, r.prototype.finished = function(t) {
      return this._finishedCallback = t, this;
    }, r.prototype.start = function() {
      for (var t = this, e = this._storage.length, a = function() {
        e--, e <= 0 && (t._storage.length = 0, t._elExistsMap = {}, t._finishedCallback && t._finishedCallback());
      }, n = 0, i = this._storage.length; n < i; n++) {
        var o = this._storage[n];
        o.el.animateTo(o.target, {
          duration: o.duration,
          delay: o.delay,
          easing: o.easing,
          setToFinal: !0,
          done: a,
          aborted: a
        });
      }
      return this;
    }, r;
  }()
);
function NP() {
  return new PP();
}
var Cv = re, zg = de, Gg = 3, Fg = "label", Hg = "upperLabel", RP = Fn * 10, kP = Fn * 2, OP = Fn * 3, da = Ba([
  ["fill", "color"],
  // `borderColor` and `borderWidth` has been occupied,
  // so use `stroke` to indicate the stroke of the rect.
  ["stroke", "strokeColor"],
  ["lineWidth", "strokeWidth"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
]), Wg = function(r) {
  var t = da(r);
  return t.stroke = t.fill = t.lineWidth = null, t;
}, rl = ue(), VP = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._state = "ready", e._storage = yi(), e;
    }
    return t.prototype.render = function(e, a, n, i) {
      var o = a.findComponents({
        mainType: "series",
        subType: "treemap",
        query: i
      });
      if (!(fe(o, e) < 0)) {
        this.seriesModel = e, this.api = n, this.ecModel = a;
        var s = ["treemapZoomToNode", "treemapRootToNode"], l = eo(i, s, e), u = i && i.type, c = e.layoutInfo, v = !this._oldTree, f = this._storage, h = u === "treemapRootToNode" && l && f ? {
          rootNodeGroup: f.nodeGroup[l.node.getRawIndex()],
          direction: i.direction
        } : null, p = this._giveContainerGroup(c), d = e.get("animation"), g = this._doRender(p, e, h);
        d && !v && (!u || u === "treemapZoomToNode" || u === "treemapRootToNode") ? this._doAnimation(p, g, e, h) : g.renderFinally(), this._resetController(n), this._renderBreadcrumb(e, n, l);
      }
    }, t.prototype._giveContainerGroup = function(e) {
      var a = this._containerGroup;
      return a || (a = this._containerGroup = new Cv(), this._initEvents(a), this.group.add(a)), a.x = e.x, a.y = e.y, a;
    }, t.prototype._doRender = function(e, a, n) {
      var i = a.getData().tree, o = this._oldTree, s = yi(), l = yi(), u = this._storage, c = [];
      function v(m, _, S, x) {
        return BP(a, l, u, n, s, c, m, _, S, x);
      }
      d(i.root ? [i.root] : [], o && o.root ? [o.root] : [], e, i === o || !o, 0);
      var f = g(u);
      if (this._oldTree = i, this._storage = l, this._controllerHost) {
        var h = this.seriesModel.layoutInfo, p = i.root.getLayout();
        p.width === h.width && p.height === h.height && (this._controllerHost.zoom = 1);
      }
      return {
        lastsForAnimation: s,
        willDeleteEls: f,
        renderFinally: y
      };
      function d(m, _, S, x, b) {
        x ? (_ = m, w(m, function(T, C) {
          !T.isRemoved() && A(C, C);
        })) : new Cr(_, m, D, D).add(A).update(A).remove(te(A, null)).execute();
        function D(T) {
          return T.getId();
        }
        function A(T, C) {
          var M = T != null ? m[T] : null, I = C != null ? _[C] : null, L = v(M, I, S, b);
          L && d(M && M.viewChildren || [], I && I.viewChildren || [], L, x, b + 1);
        }
      }
      function g(m) {
        var _ = yi();
        return m && w(m, function(S, x) {
          var b = _[x];
          w(S, function(D) {
            D && (b.push(D), rl(D).willDelete = !0);
          });
        }), _;
      }
      function y() {
        w(f, function(m) {
          w(m, function(_) {
            _.parent && _.parent.remove(_);
          });
        }), w(c, function(m) {
          m.invisible = !0, m.dirty();
        });
      }
    }, t.prototype._doAnimation = function(e, a, n, i) {
      var o = n.get("animationDurationUpdate"), s = n.get("animationEasing"), l = (X(o) ? 0 : o) || 0, u = (X(s) ? null : s) || "cubicOut", c = NP();
      w(a.willDeleteEls, function(v, f) {
        w(v, function(h, p) {
          if (!h.invisible) {
            var d = h.parent, g, y = rl(d);
            if (i && i.direction === "drillDown")
              g = d === i.rootNodeGroup ? {
                shape: {
                  x: 0,
                  y: 0,
                  width: y.nodeWidth,
                  height: y.nodeHeight
                },
                style: {
                  opacity: 0
                }
              } : {
                style: {
                  opacity: 0
                }
              };
            else {
              var m = 0, _ = 0;
              y.willDelete || (m = y.nodeWidth / 2, _ = y.nodeHeight / 2), g = f === "nodeGroup" ? {
                x: m,
                y: _,
                style: {
                  opacity: 0
                }
              } : {
                shape: {
                  x: m,
                  y: _,
                  width: 0,
                  height: 0
                },
                style: {
                  opacity: 0
                }
              };
            }
            g && c.add(h, g, l, 0, u);
          }
        });
      }), w(this._storage, function(v, f) {
        w(v, function(h, p) {
          var d = a.lastsForAnimation[f][p], g = {};
          d && (h instanceof re ? d.oldX != null && (g.x = h.x, g.y = h.y, h.x = d.oldX, h.y = d.oldY) : (d.oldShape && (g.shape = z({}, h.shape), h.setShape(d.oldShape)), d.fadein ? (h.setStyle("opacity", 0), g.style = {
            opacity: 1
          }) : h.style.opacity !== 1 && (g.style = {
            opacity: 1
          })), c.add(h, g, l, 0, u));
        });
      }, this), this._state = "animating", c.finished(U(function() {
        this._state = "ready", a.renderFinally();
      }, this)).start();
    }, t.prototype._resetController = function(e) {
      var a = this._controller, n = this._controllerHost;
      n || (this._controllerHost = {
        target: this.group
      }, n = this._controllerHost), a || (a = this._controller = new To(e.getZr()), a.enable(this.seriesModel.get("roam")), n.zoomLimit = this.seriesModel.get("scaleLimit"), n.zoom = this.seriesModel.get("zoom"), a.on("pan", U(this._onPan, this)), a.on("zoom", U(this._onZoom, this)));
      var i = new Te(0, 0, e.getWidth(), e.getHeight());
      a.setPointerChecker(function(o, s, l) {
        return i.contain(s, l);
      });
    }, t.prototype._clearController = function() {
      var e = this._controller;
      this._controllerHost = null, e && (e.dispose(), e = null);
    }, t.prototype._onPan = function(e) {
      if (this._state !== "animating" && (Math.abs(e.dx) > Gg || Math.abs(e.dy) > Gg)) {
        var a = this.seriesModel.getData().tree.root;
        if (!a)
          return;
        var n = a.getLayout();
        if (!n)
          return;
        this.api.dispatchAction({
          type: "treemapMove",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: n.x + e.dx,
            y: n.y + e.dy,
            width: n.width,
            height: n.height
          }
        });
      }
    }, t.prototype._onZoom = function(e) {
      var a = e.originX, n = e.originY, i = e.scale;
      if (this._state !== "animating") {
        var o = this.seriesModel.getData().tree.root;
        if (!o)
          return;
        var s = o.getLayout();
        if (!s)
          return;
        var l = new Te(s.x, s.y, s.width, s.height), u = null, c = this._controllerHost;
        u = c.zoomLimit;
        var v = c.zoom = c.zoom || 1;
        if (v *= i, u) {
          var f = u.min || 0, h = u.max || 1 / 0;
          v = Math.max(Math.min(h, v), f);
        }
        var p = v / c.zoom;
        c.zoom = v;
        var d = this.seriesModel.layoutInfo;
        a -= d.x, n -= d.y;
        var g = zn();
        ka(g, g, [-a, -n]), Bw(g, g, [p, p]), ka(g, g, [a, n]), l.applyTransform(g), this.api.dispatchAction({
          type: "treemapRender",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: l.x,
            y: l.y,
            width: l.width,
            height: l.height
          }
        });
      }
    }, t.prototype._initEvents = function(e) {
      var a = this;
      e.on("click", function(n) {
        if (a._state === "ready") {
          var i = a.seriesModel.get("nodeClick", !0);
          if (i) {
            var o = a.findTarget(n.offsetX, n.offsetY);
            if (o) {
              var s = o.node;
              if (s.getLayout().isLeafRoot)
                a._rootToNode(o);
              else if (i === "zoomToNode")
                a._zoomToNode(o);
              else if (i === "link") {
                var l = s.hostTree.data.getItemModel(s.dataIndex), u = l.get("link", !0), c = l.get("target", !0) || "blank";
                u && Ws(u, c);
              }
            }
          }
        }
      }, this);
    }, t.prototype._renderBreadcrumb = function(e, a, n) {
      var i = this;
      n || (n = e.get("leafDepth", !0) != null ? {
        node: e.getViewRoot()
      } : this.findTarget(a.getWidth() / 2, a.getHeight() / 2), n || (n = {
        node: e.getData().tree.root
      })), (this._breadcrumb || (this._breadcrumb = new IP(this.group))).render(e, a, n.node, function(o) {
        i._state !== "animating" && (sh(e.getViewRoot(), o) ? i._rootToNode({
          node: o
        }) : i._zoomToNode({
          node: o
        }));
      });
    }, t.prototype.remove = function() {
      this._clearController(), this._containerGroup && this._containerGroup.removeAll(), this._storage = yi(), this._state = "ready", this._breadcrumb && this._breadcrumb.remove();
    }, t.prototype.dispose = function() {
      this._clearController();
    }, t.prototype._zoomToNode = function(e) {
      this.api.dispatchAction({
        type: "treemapZoomToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: e.node
      });
    }, t.prototype._rootToNode = function(e) {
      this.api.dispatchAction({
        type: "treemapRootToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: e.node
      });
    }, t.prototype.findTarget = function(e, a) {
      var n, i = this.seriesModel.getViewRoot();
      return i.eachNode({
        attr: "viewChildren",
        order: "preorder"
      }, function(o) {
        var s = this._storage.background[o.getRawIndex()];
        if (s) {
          var l = s.transformCoordToLocal(e, a), u = s.shape;
          if (u.x <= l[0] && l[0] <= u.x + u.width && u.y <= l[1] && l[1] <= u.y + u.height)
            n = {
              node: o,
              offsetX: l[0],
              offsetY: l[1]
            };
          else
            return !1;
        }
      }, this), n;
    }, t.type = "treemap", t;
  }(De)
);
function yi() {
  return {
    nodeGroup: [],
    background: [],
    content: []
  };
}
function BP(r, t, e, a, n, i, o, s, l, u) {
  if (!o)
    return;
  var c = o.getLayout(), v = r.getData(), f = o.getModel();
  if (v.setItemGraphicEl(o.dataIndex, null), !c || !c.isInView)
    return;
  var h = c.width, p = c.height, d = c.borderWidth, g = c.invisible, y = o.getRawIndex(), m = s && s.getRawIndex(), _ = o.viewChildren, S = c.upperHeight, x = _ && _.length, b = f.getModel("itemStyle"), D = f.getModel(["emphasis", "itemStyle"]), A = f.getModel(["blur", "itemStyle"]), T = f.getModel(["select", "itemStyle"]), C = b.get("borderRadius") || 0, M = ie("nodeGroup", Cv);
  if (!M)
    return;
  if (l.add(M), M.x = c.x || 0, M.y = c.y || 0, M.markRedraw(), rl(M).nodeWidth = h, rl(M).nodeHeight = p, c.isAboveViewRoot)
    return M;
  var I = ie("background", zg, u, kP);
  I && V(M, I, x && c.upperLabelHeight);
  var L = f.getModel("emphasis"), P = L.get("focus"), E = L.get("blurScope"), N = L.get("disabled"), O = P === "ancestor" ? o.getAncestorsIndices() : P === "descendant" ? o.getDescendantIndices() : P;
  if (x)
    Jr(M) && Da(M, !1), I && (Da(I, !N), v.setItemGraphicEl(o.dataIndex, I), jc(I, O, E));
  else {
    var k = ie("content", zg, u, OP);
    k && F(M, k), I.disableMorphing = !0, I && Jr(I) && Da(I, !1), Da(M, !N), v.setItemGraphicEl(o.dataIndex, M), jc(M, O, E);
  }
  return M;
  function V(he, ne, Ce) {
    var be = j(ne);
    if (be.dataIndex = o.dataIndex, be.seriesIndex = r.seriesIndex, ne.setShape({
      x: 0,
      y: 0,
      width: h,
      height: p,
      r: C
    }), g)
      W(ne);
    else {
      ne.invisible = !1;
      var ke = o.getVisual("style"), je = ke.stroke, ut = Wg(b);
      ut.fill = je;
      var Ne = da(D);
      Ne.fill = D.get("borderColor");
      var Xe = da(A);
      Xe.fill = A.get("borderColor");
      var Je = da(T);
      if (Je.fill = T.get("borderColor"), Ce) {
        var Mt = h - 2 * d;
        q(
          // PENDING: convert ZRColor to ColorString for text.
          ne,
          je,
          ke.opacity,
          {
            x: d,
            y: 0,
            width: Mt,
            height: S
          }
        );
      } else
        ne.removeTextContent();
      ne.setStyle(ut), ne.ensureState("emphasis").style = Ne, ne.ensureState("blur").style = Xe, ne.ensureState("select").style = Je, za(ne);
    }
    he.add(ne);
  }
  function F(he, ne) {
    var Ce = j(ne);
    Ce.dataIndex = o.dataIndex, Ce.seriesIndex = r.seriesIndex;
    var be = Math.max(h - 2 * d, 0), ke = Math.max(p - 2 * d, 0);
    if (ne.culling = !0, ne.setShape({
      x: d,
      y: d,
      width: be,
      height: ke,
      r: C
    }), g)
      W(ne);
    else {
      ne.invisible = !1;
      var je = o.getVisual("style"), ut = je.fill, Ne = Wg(b);
      Ne.fill = ut, Ne.decal = je.decal;
      var Xe = da(D), Je = da(A), Mt = da(T);
      q(ne, ut, je.opacity, null), ne.setStyle(Ne), ne.ensureState("emphasis").style = Xe, ne.ensureState("blur").style = Je, ne.ensureState("select").style = Mt, za(ne);
    }
    he.add(ne);
  }
  function W(he) {
    !he.invisible && i.push(he);
  }
  function q(he, ne, Ce, be) {
    var ke = f.getModel(be ? Hg : Fg), je = Ke(f.get("name"), null), ut = ke.getShallow("show");
    lt(he, tt(f, be ? Hg : Fg), {
      defaultText: ut ? je : null,
      inheritColor: ne,
      defaultOpacity: Ce,
      labelFetcher: r,
      labelDataIndex: o.dataIndex
    });
    var Ne = he.getTextContent();
    if (Ne) {
      var Xe = Ne.style, Je = z0(Xe.padding || 0);
      be && (he.setTextConfig({
        layoutRect: be
      }), Ne.disableLabelLayout = !0), Ne.beforeUpdate = function() {
        var Io = Math.max((be ? be.width : he.shape.width) - Je[1] - Je[3], 0), dr = Math.max((be ? be.height : he.shape.height) - Je[0] - Je[2], 0);
        (Xe.width !== Io || Xe.height !== dr) && Ne.setStyle({
          width: Io,
          height: dr
        });
      }, Xe.truncateMinChar = 2, Xe.lineOverflow = "truncate", ae(Xe, be, c);
      var Mt = Ne.getState("emphasis");
      ae(Mt ? Mt.style : null, be, c);
    }
  }
  function ae(he, ne, Ce) {
    var be = he ? he.text : null;
    if (!ne && Ce.isLeafRoot && be != null) {
      var ke = r.get("drillDownIcon", !0);
      he.text = ke ? ke + " " + be : be;
    }
  }
  function ie(he, ne, Ce, be) {
    var ke = m != null && e[he][m], je = n[he];
    return ke ? (e[he][m] = null, ge(je, ke)) : g || (ke = new ne(), ke instanceof Ra && (ke.z2 = zP(Ce, be)), Se(je, ke)), t[he][y] = ke;
  }
  function ge(he, ne) {
    var Ce = he[y] = {};
    ne instanceof Cv ? (Ce.oldX = ne.x, Ce.oldY = ne.y) : Ce.oldShape = z({}, ne.shape);
  }
  function Se(he, ne) {
    var Ce = he[y] = {}, be = o.parentNode, ke = ne instanceof re;
    if (be && (!a || a.direction === "drillDown")) {
      var je = 0, ut = 0, Ne = n.background[be.getRawIndex()];
      !a && Ne && Ne.oldShape && (je = Ne.oldShape.width, ut = Ne.oldShape.height), ke ? (Ce.oldX = 0, Ce.oldY = ut) : Ce.oldShape = {
        x: je,
        y: ut,
        width: 0,
        height: 0
      };
    }
    Ce.fadein = !ke;
  }
}
function zP(r, t) {
  return r * RP + t;
}
var GP = { env: {} }, to = w, FP = J, al = -1, et = (
  /** @class */
  function() {
    function r(t) {
      var e = t.mappingMethod, a = t.type, n = this.option = Q(t);
      this.type = a, this.mappingMethod = e, this._normalizeData = UP[e];
      var i = r.visualHandlers[a];
      this.applyVisual = i.applyVisual, this.getColorMapper = i.getColorMapper, this._normalizedToVisual = i._normalizedToVisual[e], e === "piecewise" ? (Ku(n), HP(n)) : e === "category" ? n.categories ? WP(n) : Ku(n, !0) : (K(e !== "linear" || n.dataExtent), Ku(n));
    }
    return r.prototype.mapValueToVisual = function(t) {
      var e = this._normalizeData(t);
      return this._normalizedToVisual(e, t);
    }, r.prototype.getNormalizer = function() {
      return U(this._normalizeData, this);
    }, r.listVisualTypes = function() {
      return Fe(r.visualHandlers);
    }, r.isValidType = function(t) {
      return r.visualHandlers.hasOwnProperty(t);
    }, r.eachVisual = function(t, e, a) {
      J(t) ? w(t, e, a) : e.call(a, t);
    }, r.mapVisual = function(t, e, a) {
      var n, i = B(t) ? [] : J(t) ? {} : (n = !0, null);
      return r.eachVisual(t, function(o, s) {
        var l = e.call(a, o, s);
        n ? i = l : i[s] = l;
      }), i;
    }, r.retrieveVisuals = function(t) {
      var e = {}, a;
      return t && to(r.visualHandlers, function(n, i) {
        t.hasOwnProperty(i) && (e[i] = t[i], a = !0);
      }), a ? e : null;
    }, r.prepareVisualTypes = function(t) {
      if (B(t))
        t = t.slice();
      else if (FP(t)) {
        var e = [];
        to(t, function(a, n) {
          e.push(n);
        }), t = e;
      } else
        return [];
      return t.sort(function(a, n) {
        return n === "color" && a !== "color" && a.indexOf("color") === 0 ? 1 : -1;
      }), t;
    }, r.dependsOn = function(t, e) {
      return e === "color" ? !!(t && t.indexOf(e) === 0) : t === e;
    }, r.findPieceIndex = function(t, e, a) {
      for (var n, i = 1 / 0, o = 0, s = e.length; o < s; o++) {
        var l = e[o].value;
        if (l != null) {
          if (l === t || Y(l) && l === t + "")
            return o;
          a && f(l, o);
        }
      }
      for (var o = 0, s = e.length; o < s; o++) {
        var u = e[o], c = u.interval, v = u.close;
        if (c) {
          if (c[0] === -1 / 0) {
            if (ts(v[1], t, c[1]))
              return o;
          } else if (c[1] === 1 / 0) {
            if (ts(v[0], c[0], t))
              return o;
          } else if (ts(v[0], c[0], t) && ts(v[1], t, c[1]))
            return o;
          a && f(c[0], o), a && f(c[1], o);
        }
      }
      if (a)
        return t === 1 / 0 ? e.length - 1 : t === -1 / 0 ? 0 : n;
      function f(h, p) {
        var d = Math.abs(h - t);
        d < i && (i = d, n = p);
      }
    }, r.visualHandlers = {
      color: {
        applyVisual: mi("color"),
        getColorMapper: function() {
          var t = this.option;
          return U(t.mappingMethod === "category" ? function(e, a) {
            return !a && (e = this._normalizeData(e)), Mi.call(this, e);
          } : function(e, a, n) {
            var i = !!n;
            return !a && (e = this._normalizeData(e)), n = Ql(e, t.parsedVisual, n), i ? n : ds(n, "rgba");
          }, this);
        },
        _normalizedToVisual: {
          linear: function(t) {
            return ds(Ql(t, this.option.parsedVisual), "rgba");
          },
          category: Mi,
          piecewise: function(t, e) {
            var a = Iv.call(this, e);
            return a == null && (a = ds(Ql(t, this.option.parsedVisual), "rgba")), a;
          },
          fixed: ga
        }
      },
      colorHue: es(function(t, e) {
        return Ei(t, e);
      }),
      colorSaturation: es(function(t, e) {
        return Ei(t, null, e);
      }),
      colorLightness: es(function(t, e) {
        return Ei(t, null, null, e);
      }),
      colorAlpha: es(function(t, e) {
        return Vs(t, e);
      }),
      decal: {
        applyVisual: mi("decal"),
        _normalizedToVisual: {
          linear: null,
          category: Mi,
          piecewise: null,
          fixed: null
        }
      },
      opacity: {
        applyVisual: mi("opacity"),
        _normalizedToVisual: Mv([0, 1])
      },
      liftZ: {
        applyVisual: mi("liftZ"),
        _normalizedToVisual: {
          linear: ga,
          category: ga,
          piecewise: ga,
          fixed: ga
        }
      },
      symbol: {
        applyVisual: function(t, e, a) {
          var n = this.mapValueToVisual(t);
          a("symbol", n);
        },
        _normalizedToVisual: {
          linear: Ug,
          category: Mi,
          piecewise: function(t, e) {
            var a = Iv.call(this, e);
            return a == null && (a = Ug.call(this, t)), a;
          },
          fixed: ga
        }
      },
      symbolSize: {
        applyVisual: mi("symbolSize"),
        _normalizedToVisual: Mv([0, 1])
      }
    }, r;
  }()
);
function HP(r) {
  var t = r.pieceList;
  r.hasSpecialVisual = !1, w(t, function(e, a) {
    e.originIndex = a, e.visual != null && (r.hasSpecialVisual = !0);
  });
}
function WP(r) {
  var t = r.categories, e = r.categoryMap = {}, a = r.visual;
  if (to(t, function(o, s) {
    e[o] = s;
  }), !B(a)) {
    var n = [];
    J(a) ? to(a, function(o, s) {
      var l = e[s];
      n[l ?? al] = o;
    }) : n[al] = a, a = y1(r, n);
  }
  for (var i = t.length - 1; i >= 0; i--)
    a[i] == null && (delete e[t[i]], t.pop());
}
function Ku(r, t) {
  var e = r.visual, a = [];
  J(e) ? to(e, function(i) {
    a.push(i);
  }) : e != null && a.push(e);
  var n = {
    color: 1,
    symbol: 1
  };
  !t && a.length === 1 && !n.hasOwnProperty(r.type) && (a[1] = a[0]), y1(r, a);
}
function es(r) {
  return {
    applyVisual: function(t, e, a) {
      var n = this.mapValueToVisual(t);
      a("color", r(e("color"), n));
    },
    _normalizedToVisual: Mv([0, 1])
  };
}
function Ug(r) {
  var t = this.option.visual;
  return t[Math.round(xe(r, [0, 1], [0, t.length - 1], !0))] || {};
}
function mi(r) {
  return function(t, e, a) {
    a(r, this.mapValueToVisual(t));
  };
}
function Mi(r) {
  var t = this.option.visual;
  return t[this.option.loop && r !== al ? r % t.length : r];
}
function ga() {
  return this.option.visual[0];
}
function Mv(r) {
  return {
    linear: function(t) {
      return xe(t, r, this.option.visual, !0);
    },
    category: Mi,
    piecewise: function(t, e) {
      var a = Iv.call(this, e);
      return a == null && (a = xe(t, r, this.option.visual, !0)), a;
    },
    fixed: ga
  };
}
function Iv(r) {
  var t = this.option, e = t.pieceList;
  if (t.hasSpecialVisual) {
    var a = et.findPieceIndex(r, e), n = e[a];
    if (n && n.visual)
      return n.visual[this.type];
  }
}
function y1(r, t) {
  return r.visual = t, r.type === "color" && (r.parsedVisual = G(t, function(e) {
    var a = $0(e);
    return !a && GP.env.NODE_ENV !== "production" && Ve("'" + e + "' is an illegal color, fallback to '#000000'", !0), a || [0, 0, 0, 1];
  })), t;
}
var UP = {
  linear: function(r) {
    return xe(r, this.option.dataExtent, [0, 1], !0);
  },
  piecewise: function(r) {
    var t = this.option.pieceList, e = et.findPieceIndex(r, t, !0);
    if (e != null)
      return xe(e, [0, t.length - 1], [0, 1], !0);
  },
  category: function(r) {
    var t = this.option.categories ? this.option.categoryMap[r] : r;
    return t ?? al;
  },
  fixed: _t
};
function ts(r, t, e) {
  return r ? t <= e : t < e;
}
var $P = "itemStyle", m1 = ue();
const YP = {
  seriesType: "treemap",
  reset: function(r) {
    var t = r.getData().tree, e = t.root;
    e.isRemoved() || _1(
      e,
      // Visual should calculate from tree root but not view root.
      {},
      r.getViewRoot().getAncestors(),
      r
    );
  }
};
function _1(r, t, e, a) {
  var n = r.getModel(), i = r.getLayout(), o = r.hostTree.data;
  if (!(!i || i.invisible || !i.isInView)) {
    var s = n.getModel($P), l = ZP(s, t, a), u = o.ensureUniqueItemVisual(r.dataIndex, "style"), c = s.get("borderColor"), v = s.get("borderColorSaturation"), f;
    v != null && (f = $g(l), c = XP(v, f)), u.stroke = c;
    var h = r.viewChildren;
    if (!h || !h.length)
      f = $g(l), u.fill = f;
    else {
      var p = KP(r, n, i, s, l, h);
      w(h, function(d, g) {
        if (d.depth >= e.length || d === e[d.depth]) {
          var y = qP(n, l, d, g, p, a);
          _1(d, y, e, a);
        }
      });
    }
  }
}
function ZP(r, t, e) {
  var a = z({}, t), n = e.designatedVisualItemStyle;
  return w(["color", "colorAlpha", "colorSaturation"], function(i) {
    n[i] = t[i];
    var o = r.get(i);
    n[i] = null, o != null && (a[i] = o);
  }), a;
}
function $g(r) {
  var t = qu(r, "color");
  if (t) {
    var e = qu(r, "colorAlpha"), a = qu(r, "colorSaturation");
    return a && (t = Ei(t, null, null, a)), e && (t = Vs(t, e)), t;
  }
}
function XP(r, t) {
  return t != null ? Ei(t, null, null, r) : null;
}
function qu(r, t) {
  var e = r[t];
  if (e != null && e !== "none")
    return e;
}
function KP(r, t, e, a, n, i) {
  if (!(!i || !i.length)) {
    var o = ju(t, "color") || n.color != null && n.color !== "none" && (ju(t, "colorAlpha") || ju(t, "colorSaturation"));
    if (o) {
      var s = t.get("visualMin"), l = t.get("visualMax"), u = e.dataExtent.slice();
      s != null && s < u[0] && (u[0] = s), l != null && l > u[1] && (u[1] = l);
      var c = t.get("colorMappingBy"), v = {
        type: o.name,
        dataExtent: u,
        visual: o.range
      };
      v.type === "color" && (c === "index" || c === "id") ? (v.mappingMethod = "category", v.loop = !0) : v.mappingMethod = "linear";
      var f = new et(v);
      return m1(f).drColorMappingBy = c, f;
    }
  }
}
function ju(r, t) {
  var e = r.get(t);
  return B(e) && e.length ? {
    name: t,
    range: e
  } : null;
}
function qP(r, t, e, a, n, i) {
  var o = z({}, t);
  if (n) {
    var s = n.type, l = s === "color" && m1(n).drColorMappingBy, u = l === "index" ? a : l === "id" ? i.mapIdToIndex(e.getId()) : e.getValue(r.get("visualDimension"));
    o[s] = n.mapValueToVisual(u);
  }
  return o;
}
var ro = Math.max, nl = Math.min, Yg = $e, lh = w, S1 = ["itemStyle", "borderWidth"], jP = ["itemStyle", "gapWidth"], JP = ["upperLabel", "show"], QP = ["upperLabel", "height"];
const eN = {
  seriesType: "treemap",
  reset: function(r, t, e, a) {
    var n = e.getWidth(), i = e.getHeight(), o = r.option, s = qe(r.getBoxLayoutParams(), {
      width: e.getWidth(),
      height: e.getHeight()
    }), l = o.size || [], u = H(Yg(s.width, l[0]), n), c = H(Yg(s.height, l[1]), i), v = a && a.type, f = ["treemapZoomToNode", "treemapRootToNode"], h = eo(a, f, r), p = v === "treemapRender" || v === "treemapMove" ? a.rootRect : null, d = r.getViewRoot(), g = p1(d);
    if (v !== "treemapMove") {
      var y = v === "treemapZoomToNode" ? oN(r, h, d, u, c) : p ? [p.width, p.height] : [u, c], m = o.sort;
      m && m !== "asc" && m !== "desc" && (m = "desc");
      var _ = {
        squareRatio: o.squareRatio,
        sort: m,
        leafDepth: o.leafDepth
      };
      d.hostTree.clearLayouts();
      var S = {
        x: 0,
        y: 0,
        width: y[0],
        height: y[1],
        area: y[0] * y[1]
      };
      d.setLayout(S), x1(d, _, !1, 0), S = d.getLayout(), lh(g, function(b, D) {
        var A = (g[D + 1] || d).getValue();
        b.setLayout(z({
          dataExtent: [A, A],
          borderWidth: 0,
          upperHeight: 0
        }, S));
      });
    }
    var x = r.getData().tree.root;
    x.setLayout(sN(s, p, h), !0), r.setLayoutInfo(s), b1(
      x,
      // Transform to base element coordinate system.
      new Te(-s.x, -s.y, n, i),
      g,
      d,
      0
    );
  }
};
function x1(r, t, e, a) {
  var n, i;
  if (!r.isRemoved()) {
    var o = r.getLayout();
    n = o.width, i = o.height;
    var s = r.getModel(), l = s.get(S1), u = s.get(jP) / 2, c = w1(s), v = Math.max(l, c), f = l - u, h = v - u;
    r.setLayout({
      borderWidth: l,
      upperHeight: v,
      upperLabelHeight: c
    }, !0), n = ro(n - 2 * f, 0), i = ro(i - f - h, 0);
    var p = n * i, d = tN(r, s, p, t, e, a);
    if (d.length) {
      var g = {
        x: f,
        y: h,
        width: n,
        height: i
      }, y = nl(n, i), m = 1 / 0, _ = [];
      _.area = 0;
      for (var S = 0, x = d.length; S < x; ) {
        var b = d[S];
        _.push(b), _.area += b.getLayout().area;
        var D = iN(_, y, t.squareRatio);
        D <= m ? (S++, m = D) : (_.area -= _.pop().getLayout().area, Zg(_, y, g, u, !1), y = nl(g.width, g.height), _.length = _.area = 0, m = 1 / 0);
      }
      if (_.length && Zg(_, y, g, u, !0), !e) {
        var A = s.get("childrenVisibleMin");
        A != null && p < A && (e = !0);
      }
      for (var S = 0, x = d.length; S < x; S++)
        x1(d[S], t, e, a + 1);
    }
  }
}
function tN(r, t, e, a, n, i) {
  var o = r.children || [], s = a.sort;
  s !== "asc" && s !== "desc" && (s = null);
  var l = a.leafDepth != null && a.leafDepth <= i;
  if (n && !l)
    return r.viewChildren = [];
  o = Ae(o, function(h) {
    return !h.isRemoved();
  }), aN(o, s);
  var u = nN(t, o, s);
  if (u.sum === 0)
    return r.viewChildren = [];
  if (u.sum = rN(t, e, u.sum, s, o), u.sum === 0)
    return r.viewChildren = [];
  for (var c = 0, v = o.length; c < v; c++) {
    var f = o[c].getValue() / u.sum * e;
    o[c].setLayout({
      area: f
    });
  }
  return l && (o.length && r.setLayout({
    isLeafRoot: !0
  }, !0), o.length = 0), r.viewChildren = o, r.setLayout({
    dataExtent: u.dataExtent
  }, !0), o;
}
function rN(r, t, e, a, n) {
  if (!a)
    return e;
  for (var i = r.get("visibleMin"), o = n.length, s = o, l = o - 1; l >= 0; l--) {
    var u = n[a === "asc" ? o - l - 1 : l].getValue();
    u / e * t < i && (s = l, e -= u);
  }
  return a === "asc" ? n.splice(0, o - s) : n.splice(s, o - s), e;
}
function aN(r, t) {
  return t && r.sort(function(e, a) {
    var n = t === "asc" ? e.getValue() - a.getValue() : a.getValue() - e.getValue();
    return n === 0 ? t === "asc" ? e.dataIndex - a.dataIndex : a.dataIndex - e.dataIndex : n;
  }), r;
}
function nN(r, t, e) {
  for (var a = 0, n = 0, i = t.length; n < i; n++)
    a += t[n].getValue();
  var o = r.get("visualDimension"), s;
  return !t || !t.length ? s = [NaN, NaN] : o === "value" && e ? (s = [t[t.length - 1].getValue(), t[0].getValue()], e === "asc" && s.reverse()) : (s = [1 / 0, -1 / 0], lh(t, function(l) {
    var u = l.getValue(o);
    u < s[0] && (s[0] = u), u > s[1] && (s[1] = u);
  })), {
    sum: a,
    dataExtent: s
  };
}
function iN(r, t, e) {
  for (var a = 0, n = 1 / 0, i = 0, o = void 0, s = r.length; i < s; i++)
    o = r[i].getLayout().area, o && (o < n && (n = o), o > a && (a = o));
  var l = r.area * r.area, u = t * t * e;
  return l ? ro(u * a / l, l / (u * n)) : 1 / 0;
}
function Zg(r, t, e, a, n) {
  var i = t === e.width ? 0 : 1, o = 1 - i, s = ["x", "y"], l = ["width", "height"], u = e[s[i]], c = t ? r.area / t : 0;
  (n || c > e[l[o]]) && (c = e[l[o]]);
  for (var v = 0, f = r.length; v < f; v++) {
    var h = r[v], p = {}, d = c ? h.getLayout().area / c : 0, g = p[l[o]] = ro(c - 2 * a, 0), y = e[s[i]] + e[l[i]] - u, m = v === f - 1 || y < d ? y : d, _ = p[l[i]] = ro(m - 2 * a, 0);
    p[s[o]] = e[s[o]] + nl(a, g / 2), p[s[i]] = u + nl(a, _ / 2), u += m, h.setLayout(p, !0);
  }
  e[s[o]] += c, e[l[o]] -= c;
}
function oN(r, t, e, a, n) {
  var i = (t || {}).node, o = [a, n];
  if (!i || i === e)
    return o;
  for (var s, l = a * n, u = l * r.option.zoomToNodeRatio; s = i.parentNode; ) {
    for (var c = 0, v = s.children, f = 0, h = v.length; f < h; f++)
      c += v[f].getValue();
    var p = i.getValue();
    if (p === 0)
      return o;
    u *= c / p;
    var d = s.getModel(), g = d.get(S1), y = Math.max(g, w1(d));
    u += 4 * g * g + (3 * g + y) * Math.pow(u, 0.5), u > ap && (u = ap), i = s;
  }
  u < l && (u = l);
  var m = Math.pow(u / l, 0.5);
  return [a * m, n * m];
}
function sN(r, t, e) {
  if (t)
    return {
      x: t.x,
      y: t.y
    };
  var a = {
    x: 0,
    y: 0
  };
  if (!e)
    return a;
  var n = e.node, i = n.getLayout();
  if (!i)
    return a;
  for (var o = [i.width / 2, i.height / 2], s = n; s; ) {
    var l = s.getLayout();
    o[0] += l.x, o[1] += l.y, s = s.parentNode;
  }
  return {
    x: r.width / 2 - o[0],
    y: r.height / 2 - o[1]
  };
}
function b1(r, t, e, a, n) {
  var i = r.getLayout(), o = e[n], s = o && o === r;
  if (!(o && !s || n === e.length && r !== a)) {
    r.setLayout({
      // isInView means: viewRoot sub tree + viewAbovePath
      isInView: !0,
      // invisible only means: outside view clip so that the node can not
      // see but still layout for animation preparation but not render.
      invisible: !s && !t.intersect(i),
      isAboveViewRoot: s
    }, !0);
    var l = new Te(t.x - i.x, t.y - i.y, t.width, t.height);
    lh(r.viewChildren || [], function(u) {
      b1(u, l, e, a, n + 1);
    });
  }
}
function w1(r) {
  return r.get(JP) ? r.get(QP) : 0;
}
function lN(r) {
  r.registerSeriesModel(TP), r.registerChartView(VP), r.registerVisual(YP), r.registerLayout(eN), AP(r);
}
function uN(r) {
  var t = r.findComponents({
    mainType: "legend"
  });
  !t || !t.length || r.eachSeriesByType("graph", function(e) {
    var a = e.getCategoriesData(), n = e.getGraph(), i = n.data, o = a.mapArray(a.getName);
    i.filterSelf(function(s) {
      var l = i.getItemModel(s), u = l.getShallow("category");
      if (u != null) {
        _e(u) && (u = o[u]);
        for (var c = 0; c < t.length; c++)
          if (!t[c].isSelected(u))
            return !1;
      }
      return !0;
    });
  });
}
function cN(r) {
  var t = {};
  r.eachSeriesByType("graph", function(e) {
    var a = e.getCategoriesData(), n = e.getData(), i = {};
    a.each(function(o) {
      var s = a.getName(o);
      i["ec-" + s] = o;
      var l = a.getItemModel(o), u = l.getModel("itemStyle").getItemStyle();
      u.fill || (u.fill = e.getColorFromPalette(s, t)), a.setItemVisual(o, "style", u);
      for (var c = ["symbol", "symbolSize", "symbolKeepAspect"], v = 0; v < c.length; v++) {
        var f = l.getShallow(c[v], !0);
        f != null && a.setItemVisual(o, c[v], f);
      }
    }), a.count() && n.each(function(o) {
      var s = n.getItemModel(o), l = s.getShallow("category");
      if (l != null) {
        Y(l) && (l = i["ec-" + l]);
        var u = a.getItemVisual(l, "style"), c = n.ensureUniqueItemVisual(o, "style");
        z(c, u);
        for (var v = ["symbol", "symbolSize", "symbolKeepAspect"], f = 0; f < v.length; f++)
          n.setItemVisual(o, v[f], a.getItemVisual(l, v[f]));
      }
    });
  });
}
function rs(r) {
  return r instanceof Array || (r = [r, r]), r;
}
function vN(r) {
  r.eachSeriesByType("graph", function(t) {
    var e = t.getGraph(), a = t.getEdgeData(), n = rs(t.get("edgeSymbol")), i = rs(t.get("edgeSymbolSize"));
    a.setVisual("fromSymbol", n && n[0]), a.setVisual("toSymbol", n && n[1]), a.setVisual("fromSymbolSize", i && i[0]), a.setVisual("toSymbolSize", i && i[1]), a.setVisual("style", t.getModel("lineStyle").getLineStyle()), a.each(function(o) {
      var s = a.getItemModel(o), l = e.getEdgeByIndex(o), u = rs(s.getShallow("symbol", !0)), c = rs(s.getShallow("symbolSize", !0)), v = s.getModel("lineStyle").getLineStyle(), f = a.ensureUniqueItemVisual(o, "style");
      switch (z(f, v), f.stroke) {
        case "source": {
          var h = l.node1.getVisual("style");
          f.stroke = h && h.fill;
          break;
        }
        case "target": {
          var h = l.node2.getVisual("style");
          f.stroke = h && h.fill;
          break;
        }
      }
      u[0] && l.setVisual("fromSymbol", u[0]), u[1] && l.setVisual("toSymbol", u[1]), c[0] && l.setVisual("fromSymbolSize", c[0]), c[1] && l.setVisual("toSymbolSize", c[1]);
    });
  });
}
var Lv = "-->", Yl = function(r) {
  return r.get("autoCurveness") || null;
}, D1 = function(r, t) {
  var e = Yl(r), a = 20, n = [];
  if (_e(e))
    a = e;
  else if (B(e)) {
    r.__curvenessList = e;
    return;
  }
  t > a && (a = t);
  var i = a % 2 ? a + 2 : a + 3;
  n = [];
  for (var o = 0; o < i; o++)
    n.push((o % 2 ? o + 1 : o) / 10 * (o % 2 ? -1 : 1));
  r.__curvenessList = n;
}, ao = function(r, t, e) {
  var a = [r.id, r.dataIndex].join("."), n = [t.id, t.dataIndex].join(".");
  return [e.uid, a, n].join(Lv);
}, A1 = function(r) {
  var t = r.split(Lv);
  return [t[0], t[2], t[1]].join(Lv);
}, fN = function(r, t) {
  var e = ao(r.node1, r.node2, t);
  return t.__edgeMap[e];
}, hN = function(r, t) {
  var e = Ev(ao(r.node1, r.node2, t), t), a = Ev(ao(r.node2, r.node1, t), t);
  return e + a;
}, Ev = function(r, t) {
  var e = t.__edgeMap;
  return e[r] ? e[r].length : 0;
};
function pN(r) {
  Yl(r) && (r.__curvenessList = [], r.__edgeMap = {}, D1(r));
}
function dN(r, t, e, a) {
  if (Yl(e)) {
    var n = ao(r, t, e), i = e.__edgeMap, o = i[A1(n)];
    i[n] && !o ? i[n].isForward = !0 : o && i[n] && (o.isForward = !0, i[n].isForward = !1), i[n] = i[n] || [], i[n].push(a);
  }
}
function uh(r, t, e, a) {
  var n = Yl(t), i = B(n);
  if (!n)
    return null;
  var o = fN(r, t);
  if (!o)
    return null;
  for (var s = -1, l = 0; l < o.length; l++)
    if (o[l] === e) {
      s = l;
      break;
    }
  var u = hN(r, t);
  D1(t, u), r.lineStyle = r.lineStyle || {};
  var c = ao(r.node1, r.node2, t), v = t.__curvenessList, f = i || u % 2 ? 0 : 1;
  if (o.isForward)
    return v[f + s];
  var h = A1(c), p = Ev(h, t), d = v[s + p + f];
  return a ? i ? n && n[0] === 0 ? (p + f) % 2 ? d : -d : ((p % 2 ? 0 : 1) + f) % 2 ? d : -d : (p + f) % 2 ? d : -d : v[s + p + f];
}
function T1(r) {
  var t = r.coordinateSystem;
  if (!(t && t.type !== "view")) {
    var e = r.getGraph();
    e.eachNode(function(a) {
      var n = a.getModel();
      a.setLayout([+n.get("x"), +n.get("y")]);
    }), ch(e, r);
  }
}
function ch(r, t) {
  r.eachEdge(function(e, a) {
    var n = na(e.getModel().get(["lineStyle", "curveness"]), -uh(e, t, a, !0), 0), i = $r(e.node1.getLayout()), o = $r(e.node2.getLayout()), s = [i, o];
    +n && s.push([(i[0] + o[0]) / 2 - (i[1] - o[1]) * n, (i[1] + o[1]) / 2 - (o[0] - i[0]) * n]), e.setLayout(s);
  });
}
function gN(r, t) {
  r.eachSeriesByType("graph", function(e) {
    var a = e.get("layout"), n = e.coordinateSystem;
    if (n && n.type !== "view") {
      var i = e.getData(), o = [];
      w(n.dimensions, function(f) {
        o = o.concat(i.mapDimensionsAll(f));
      });
      for (var s = 0; s < i.count(); s++) {
        for (var l = [], u = !1, c = 0; c < o.length; c++) {
          var v = i.get(o[c], s);
          isNaN(v) || (u = !0), l.push(v);
        }
        u ? i.setItemLayout(s, n.dataToPoint(l)) : i.setItemLayout(s, [NaN, NaN]);
      }
      ch(i.graph, e);
    } else (!a || a === "none") && T1(e);
  });
}
function Ii(r) {
  var t = r.coordinateSystem;
  if (t.type !== "view")
    return 1;
  var e = r.option.nodeScaleRatio, a = t.scaleX, n = t.getZoom(), i = (n - 1) * e + 1;
  return i / a;
}
function Li(r) {
  var t = r.getVisual("symbolSize");
  return t instanceof Array && (t = (t[0] + t[1]) / 2), +t;
}
var Xg = Math.PI, Ju = [];
function vh(r, t, e, a) {
  var n = r.coordinateSystem;
  if (!(n && n.type !== "view")) {
    var i = n.getBoundingRect(), o = r.getData(), s = o.graph, l = i.width / 2 + i.x, u = i.height / 2 + i.y, c = Math.min(i.width, i.height) / 2, v = o.count();
    if (o.setLayout({
      cx: l,
      cy: u
    }), !!v) {
      if (e) {
        var f = n.pointToData(a), h = f[0], p = f[1], d = [h - l, p - u];
        vo(d, d), zw(d, d, c), e.setLayout([l + d[0], u + d[1]], !0);
        var g = r.get(["circular", "rotateLabel"]);
        C1(e, g, l, u);
      }
      yN[t](r, s, o, c, l, u, v), s.eachEdge(function(y, m) {
        var _ = na(y.getModel().get(["lineStyle", "curveness"]), uh(y, r, m), 0), S = $r(y.node1.getLayout()), x = $r(y.node2.getLayout()), b, D = (S[0] + x[0]) / 2, A = (S[1] + x[1]) / 2;
        +_ && (_ *= 3, b = [l * _ + D * (1 - _), u * _ + A * (1 - _)]), y.setLayout([S, x, b]);
      });
    }
  }
}
var yN = {
  value: function(r, t, e, a, n, i, o) {
    var s = 0, l = e.getSum("value"), u = Math.PI * 2 / (l || o);
    t.eachNode(function(c) {
      var v = c.getValue("value"), f = u * (l ? v : 1) / 2;
      s += f, c.setLayout([a * Math.cos(s) + n, a * Math.sin(s) + i]), s += f;
    });
  },
  symbolSize: function(r, t, e, a, n, i, o) {
    var s = 0;
    Ju.length = o;
    var l = Ii(r);
    t.eachNode(function(v) {
      var f = Li(v);
      isNaN(f) && (f = 2), f < 0 && (f = 0), f *= l;
      var h = Math.asin(f / 2 / a);
      isNaN(h) && (h = Xg / 2), Ju[v.dataIndex] = h, s += h * 2;
    });
    var u = (2 * Xg - s) / o / 2, c = 0;
    t.eachNode(function(v) {
      var f = u + Ju[v.dataIndex];
      c += f, (!v.getLayout() || !v.getLayout().fixed) && v.setLayout([a * Math.cos(c) + n, a * Math.sin(c) + i]), c += f;
    });
  }
};
function C1(r, t, e, a) {
  var n = r.getGraphicEl();
  if (n) {
    var i = r.getModel(), o = i.get(["label", "rotate"]) || 0, s = n.getSymbolPath();
    if (t) {
      var l = r.getLayout(), u = Math.atan2(l[1] - a, l[0] - e);
      u < 0 && (u = Math.PI * 2 + u);
      var c = l[0] < e;
      c && (u = u - Math.PI);
      var v = c ? "left" : "right";
      s.setTextConfig({
        rotation: -u,
        position: v,
        origin: "center"
      });
      var f = s.ensureState("emphasis");
      z(f.textConfig || (f.textConfig = {}), {
        position: v
      });
    } else
      s.setTextConfig({
        rotation: o *= Math.PI / 180
      });
  }
}
function mN(r) {
  r.eachSeriesByType("graph", function(t) {
    t.get("layout") === "circular" && vh(t, "symbolSize");
  });
}
var nn = Uc;
function _N(r, t, e) {
  for (var a = r, n = t, i = e.rect, o = i.width, s = i.height, l = [i.x + o / 2, i.y + s / 2], u = e.gravity == null ? 0.1 : e.gravity, c = 0; c < a.length; c++) {
    var v = a[c];
    v.p || (v.p = Gw(o * (Math.random() - 0.5) + l[0], s * (Math.random() - 0.5) + l[1])), v.pp = $r(v.p), v.edges = null;
  }
  var f = e.friction == null ? 0.6 : e.friction, h = f, p, d;
  return {
    warmUp: function() {
      h = f * 0.8;
    },
    setFixed: function(g) {
      a[g].fixed = !0;
    },
    setUnfixed: function(g) {
      a[g].fixed = !1;
    },
    /**
     * Before step hook
     */
    beforeStep: function(g) {
      p = g;
    },
    /**
     * After step hook
     */
    afterStep: function(g) {
      d = g;
    },
    /**
     * Some formulas were originally copied from "d3.js"
     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js
     * with some modifications made for this project.
     * See the license statement at the head of this file.
     */
    step: function(g) {
      p && p(a, n);
      for (var y = [], m = a.length, _ = 0; _ < n.length; _++) {
        var S = n[_];
        if (!S.ignoreForceLayout) {
          var x = S.n1, b = S.n2;
          yn(y, b.p, x.p);
          var D = Qh(y) - S.d, A = b.w / (x.w + b.w);
          isNaN(A) && (A = 0), vo(y, y), !x.fixed && nn(x.p, x.p, y, A * D * h), !b.fixed && nn(b.p, b.p, y, -(1 - A) * D * h);
        }
      }
      for (var _ = 0; _ < m; _++) {
        var T = a[_];
        T.fixed || (yn(y, l, T.p), nn(T.p, T.p, y, u * h));
      }
      for (var _ = 0; _ < m; _++)
        for (var x = a[_], C = _ + 1; C < m; C++) {
          var b = a[C];
          yn(y, b.p, x.p);
          var D = Qh(y);
          D === 0 && (Fw(y, Math.random() - 0.5, Math.random() - 0.5), D = 1);
          var M = (x.rep + b.rep) / D / D;
          !x.fixed && nn(x.pp, x.pp, y, M), !b.fixed && nn(b.pp, b.pp, y, -M);
        }
      for (var I = [], _ = 0; _ < m; _++) {
        var T = a[_];
        T.fixed || (yn(I, T.p, T.pp), nn(T.p, T.p, I, h), dt(T.pp, T.p));
      }
      h = h * 0.992;
      var L = h < 0.01;
      d && d(a, n, L), g && g(L);
    }
  };
}
function SN(r) {
  r.eachSeriesByType("graph", function(t) {
    var e = t.coordinateSystem;
    if (!(e && e.type !== "view"))
      if (t.get("layout") === "force") {
        var a = t.preservedPoints || {}, n = t.getGraph(), i = n.data, o = n.edgeData, s = t.getModel("force"), l = s.get("initLayout");
        t.preservedPoints ? i.each(function(_) {
          var S = i.getId(_);
          i.setItemLayout(_, a[S] || [NaN, NaN]);
        }) : !l || l === "none" ? T1(t) : l === "circular" && vh(t, "value");
        var u = i.getDataExtent("value"), c = o.getDataExtent("value"), v = s.get("repulsion"), f = s.get("edgeLength"), h = B(v) ? v : [v, v], p = B(f) ? f : [f, f];
        p = [p[1], p[0]];
        var d = i.mapArray("value", function(_, S) {
          var x = i.getItemLayout(S), b = xe(_, u, h);
          return isNaN(b) && (b = (h[0] + h[1]) / 2), {
            w: b,
            rep: b,
            fixed: i.getItemModel(S).get("fixed"),
            p: !x || isNaN(x[0]) || isNaN(x[1]) ? null : x
          };
        }), g = o.mapArray("value", function(_, S) {
          var x = n.getEdgeByIndex(S), b = xe(_, c, p);
          isNaN(b) && (b = (p[0] + p[1]) / 2);
          var D = x.getModel(), A = na(x.getModel().get(["lineStyle", "curveness"]), -uh(x, t, S, !0), 0);
          return {
            n1: d[x.node1.dataIndex],
            n2: d[x.node2.dataIndex],
            d: b,
            curveness: A,
            ignoreForceLayout: D.get("ignoreForceLayout")
          };
        }), y = e.getBoundingRect(), m = _N(d, g, {
          rect: y,
          gravity: s.get("gravity"),
          friction: s.get("friction")
        });
        m.beforeStep(function(_, S) {
          for (var x = 0, b = _.length; x < b; x++)
            _[x].fixed && dt(_[x].p, n.getNodeByIndex(x).getLayout());
        }), m.afterStep(function(_, S, x) {
          for (var b = 0, D = _.length; b < D; b++)
            _[b].fixed || n.getNodeByIndex(b).setLayout(_[b].p), a[i.getId(b)] = _[b].p;
          for (var b = 0, D = S.length; b < D; b++) {
            var A = S[b], T = n.getEdgeByIndex(b), C = A.n1.p, M = A.n2.p, I = T.getLayout();
            I = I ? I.slice() : [], I[0] = I[0] || [], I[1] = I[1] || [], dt(I[0], C), dt(I[1], M), +A.curveness && (I[2] = [(C[0] + M[0]) / 2 - (C[1] - M[1]) * A.curveness, (C[1] + M[1]) / 2 - (M[0] - C[0]) * A.curveness]), T.setLayout(I);
          }
        }), t.forceLayout = m, t.preservedPoints = a, m.step();
      } else
        t.forceLayout = null;
  });
}
function xN(r, t, e) {
  var a = z(r.getBoxLayoutParams(), {
    aspect: e
  });
  return qe(a, {
    width: t.getWidth(),
    height: t.getHeight()
  });
}
function bN(r, t) {
  var e = [];
  return r.eachSeriesByType("graph", function(a) {
    var n = a.get("coordinateSystem");
    if (!n || n === "view") {
      var i = a.getData(), o = i.mapArray(function(g) {
        var y = i.getItemModel(g);
        return [+y.get("x"), +y.get("y")];
      }), s = [], l = [];
      U0(o, s, l), l[0] - s[0] === 0 && (l[0] += 1, s[0] -= 1), l[1] - s[1] === 0 && (l[1] += 1, s[1] -= 1);
      var u = (l[0] - s[0]) / (l[1] - s[1]), c = xN(a, t, u);
      isNaN(u) && (s = [c.x, c.y], l = [c.x + c.width, c.y + c.height]);
      var v = l[0] - s[0], f = l[1] - s[1], h = c.width, p = c.height, d = a.coordinateSystem = new Co();
      d.zoomLimit = a.get("scaleLimit"), d.setBoundingRect(s[0], s[1], v, f), d.setViewRect(c.x, c.y, h, p), d.setCenter(a.get("center"), t), d.setZoom(a.get("zoom")), e.push(d);
    }
  }), e;
}
var Kg = it.prototype, Qu = yl.prototype, M1 = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
    }
    return r;
  }()
);
(function(r) {
  R(t, r);
  function t() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return t;
})(M1);
function ec(r) {
  return isNaN(+r.cpx1) || isNaN(+r.cpy1);
}
var wN = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "ec-line", a;
    }
    return t.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, t.prototype.getDefaultShape = function() {
      return new M1();
    }, t.prototype.buildPath = function(e, a) {
      ec(a) ? Kg.buildPath.call(this, e, a) : Qu.buildPath.call(this, e, a);
    }, t.prototype.pointAt = function(e) {
      return ec(this.shape) ? Kg.pointAt.call(this, e) : Qu.pointAt.call(this, e);
    }, t.prototype.tangentAt = function(e) {
      var a = this.shape, n = ec(a) ? [a.x2 - a.x1, a.y2 - a.y1] : Qu.tangentAt.call(this, e);
      return vo(n, n);
    }, t;
  }(Ee)
), tc = ["fromSymbol", "toSymbol"];
function qg(r) {
  return "_" + r + "Type";
}
function jg(r, t, e) {
  var a = t.getItemVisual(e, r);
  if (!a || a === "none")
    return a;
  var n = t.getItemVisual(e, r + "Size"), i = t.getItemVisual(e, r + "Rotate"), o = t.getItemVisual(e, r + "Offset"), s = t.getItemVisual(e, r + "KeepAspect"), l = Jn(n), u = $a(o || 0, l);
  return a + l + u + (i || "") + (s || "");
}
function Jg(r, t, e) {
  var a = t.getItemVisual(e, r);
  if (!(!a || a === "none")) {
    var n = t.getItemVisual(e, r + "Size"), i = t.getItemVisual(e, r + "Rotate"), o = t.getItemVisual(e, r + "Offset"), s = t.getItemVisual(e, r + "KeepAspect"), l = Jn(n), u = $a(o || 0, l), c = Ze(a, -l[0] / 2 + u[0], -l[1] / 2 + u[1], l[0], l[1], null, s);
    return c.__specifiedRotation = i == null || isNaN(i) ? void 0 : +i * Math.PI / 180 || 0, c.name = r, c;
  }
}
function DN(r) {
  var t = new wN({
    name: "line",
    subPixelOptimize: !0
  });
  return Pv(t.shape, r), t;
}
function Pv(r, t) {
  r.x1 = t[0][0], r.y1 = t[0][1], r.x2 = t[1][0], r.y2 = t[1][1], r.percent = 1;
  var e = t[2];
  e ? (r.cpx1 = e[0], r.cpy1 = e[1]) : (r.cpx1 = NaN, r.cpy1 = NaN);
}
var fh = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this) || this;
      return i._createLine(e, a, n), i;
    }
    return t.prototype._createLine = function(e, a, n) {
      var i = e.hostModel, o = e.getItemLayout(a), s = DN(o);
      s.shape.percent = 0, Pe(s, {
        shape: {
          percent: 1
        }
      }, i, a), this.add(s), w(tc, function(l) {
        var u = Jg(l, e, a);
        this.add(u), this[qg(l)] = jg(l, e, a);
      }, this), this._updateCommonStl(e, a, n);
    }, t.prototype.updateData = function(e, a, n) {
      var i = e.hostModel, o = this.childOfName("line"), s = e.getItemLayout(a), l = {
        shape: {}
      };
      Pv(l.shape, s), pe(o, l, i, a), w(tc, function(u) {
        var c = jg(u, e, a), v = qg(u);
        if (this[v] !== c) {
          this.remove(this.childOfName(u));
          var f = Jg(u, e, a);
          this.add(f);
        }
        this[v] = c;
      }, this), this._updateCommonStl(e, a, n);
    }, t.prototype.getLinePath = function() {
      return this.childAt(0);
    }, t.prototype._updateCommonStl = function(e, a, n) {
      var i = e.hostModel, o = this.childOfName("line"), s = n && n.emphasisLineStyle, l = n && n.blurLineStyle, u = n && n.selectLineStyle, c = n && n.labelStatesModels, v = n && n.emphasisDisabled, f = n && n.focus, h = n && n.blurScope;
      if (!n || e.hasItemOption) {
        var p = e.getItemModel(a), d = p.getModel("emphasis");
        s = d.getModel("lineStyle").getLineStyle(), l = p.getModel(["blur", "lineStyle"]).getLineStyle(), u = p.getModel(["select", "lineStyle"]).getLineStyle(), v = d.get("disabled"), f = d.get("focus"), h = d.get("blurScope"), c = tt(p);
      }
      var g = e.getItemVisual(a, "style"), y = g.stroke;
      o.useStyle(g), o.style.fill = null, o.style.strokeNoScale = !0, o.ensureState("emphasis").style = s, o.ensureState("blur").style = l, o.ensureState("select").style = u, w(tc, function(b) {
        var D = this.childOfName(b);
        if (D) {
          D.setColor(y), D.style.opacity = g.opacity;
          for (var A = 0; A < xt.length; A++) {
            var T = xt[A], C = o.getState(T);
            if (C) {
              var M = C.style || {}, I = D.ensureState(T), L = I.style || (I.style = {});
              M.stroke != null && (L[D.__isEmptyBrush ? "stroke" : "fill"] = M.stroke), M.opacity != null && (L.opacity = M.opacity);
            }
          }
          D.markRedraw();
        }
      }, this);
      var m = i.getRawValue(a);
      lt(this, c, {
        labelDataIndex: a,
        labelFetcher: {
          getFormattedLabel: function(b, D) {
            return i.getFormattedLabel(b, D, e.dataType);
          }
        },
        inheritColor: y || "#000",
        defaultOpacity: g.opacity,
        defaultText: (m == null ? e.getName(a) : isFinite(m) ? ze(m) : m) + ""
      });
      var _ = this.getTextContent();
      if (_) {
        var S = c.normal;
        _.__align = _.style.align, _.__verticalAlign = _.style.verticalAlign, _.__position = S.get("position") || "middle";
        var x = S.get("distance");
        B(x) || (x = [x, x]), _.__labelDistance = x;
      }
      this.setTextConfig({
        position: null,
        local: !0,
        inside: !1
        // Can't be inside for stroke element.
      }), Be(this, f, h, v);
    }, t.prototype.highlight = function() {
      Ar(this);
    }, t.prototype.downplay = function() {
      Tr(this);
    }, t.prototype.updateLayout = function(e, a) {
      this.setLinePoints(e.getItemLayout(a));
    }, t.prototype.setLinePoints = function(e) {
      var a = this.childOfName("line");
      Pv(a.shape, e), a.dirty();
    }, t.prototype.beforeUpdate = function() {
      var e = this, a = e.childOfName("fromSymbol"), n = e.childOfName("toSymbol"), i = e.getTextContent();
      if (!a && !n && (!i || i.ignore))
        return;
      for (var o = 1, s = this.parent; s; )
        s.scaleX && (o /= s.scaleX), s = s.parent;
      var l = e.childOfName("line");
      if (!this.__dirty && !l.__dirty)
        return;
      var u = l.shape.percent, c = l.pointAt(0), v = l.pointAt(u), f = yn([], v, c);
      vo(f, f);
      function h(C, M) {
        var I = C.__specifiedRotation;
        if (I == null) {
          var L = l.tangentAt(M);
          C.attr("rotation", (M === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(L[1], L[0]));
        } else
          C.attr("rotation", I);
      }
      if (a && (a.setPosition(c), h(a, 0), a.scaleX = a.scaleY = o * u, a.markRedraw()), n && (n.setPosition(v), h(n, 1), n.scaleX = n.scaleY = o * u, n.markRedraw()), i && !i.ignore) {
        i.x = i.y = 0, i.originX = i.originY = 0;
        var p = void 0, d = void 0, g = i.__labelDistance, y = g[0] * o, m = g[1] * o, _ = u / 2, S = l.tangentAt(_), x = [S[1], -S[0]], b = l.pointAt(_);
        x[1] > 0 && (x[0] = -x[0], x[1] = -x[1]);
        var D = S[0] < 0 ? -1 : 1;
        if (i.__position !== "start" && i.__position !== "end") {
          var A = -Math.atan2(S[1], S[0]);
          v[0] < c[0] && (A = Math.PI + A), i.rotation = A;
        }
        var T = void 0;
        switch (i.__position) {
          case "insideStartTop":
          case "insideMiddleTop":
          case "insideEndTop":
          case "middle":
            T = -m, d = "bottom";
            break;
          case "insideStartBottom":
          case "insideMiddleBottom":
          case "insideEndBottom":
            T = m, d = "top";
            break;
          default:
            T = 0, d = "middle";
        }
        switch (i.__position) {
          case "end":
            i.x = f[0] * y + v[0], i.y = f[1] * m + v[1], p = f[0] > 0.8 ? "left" : f[0] < -0.8 ? "right" : "center", d = f[1] > 0.8 ? "top" : f[1] < -0.8 ? "bottom" : "middle";
            break;
          case "start":
            i.x = -f[0] * y + c[0], i.y = -f[1] * m + c[1], p = f[0] > 0.8 ? "right" : f[0] < -0.8 ? "left" : "center", d = f[1] > 0.8 ? "bottom" : f[1] < -0.8 ? "top" : "middle";
            break;
          case "insideStartTop":
          case "insideStart":
          case "insideStartBottom":
            i.x = y * D + c[0], i.y = c[1] + T, p = S[0] < 0 ? "right" : "left", i.originX = -y * D, i.originY = -T;
            break;
          case "insideMiddleTop":
          case "insideMiddle":
          case "insideMiddleBottom":
          case "middle":
            i.x = b[0], i.y = b[1] + T, p = "center", i.originY = -T;
            break;
          case "insideEndTop":
          case "insideEnd":
          case "insideEndBottom":
            i.x = -y * D + v[0], i.y = v[1] + T, p = S[0] >= 0 ? "right" : "left", i.originX = y * D, i.originY = -T;
            break;
        }
        i.scaleX = i.scaleY = o, i.setStyle({
          // Use the user specified text align and baseline first
          verticalAlign: i.__verticalAlign || d,
          align: i.__align || p
        });
      }
    }, t;
  }(re)
), hh = (
  /** @class */
  function() {
    function r(t) {
      this.group = new re(), this._LineCtor = t || fh;
    }
    return r.prototype.updateData = function(t) {
      var e = this;
      this._progressiveEls = null;
      var a = this, n = a.group, i = a._lineData;
      a._lineData = t, i || n.removeAll();
      var o = Qg(t);
      t.diff(i).add(function(s) {
        e._doAdd(t, s, o);
      }).update(function(s, l) {
        e._doUpdate(i, t, l, s, o);
      }).remove(function(s) {
        n.remove(i.getItemGraphicEl(s));
      }).execute();
    }, r.prototype.updateLayout = function() {
      var t = this._lineData;
      t && t.eachItemGraphicEl(function(e, a) {
        e.updateLayout(t, a);
      }, this);
    }, r.prototype.incrementalPrepareUpdate = function(t) {
      this._seriesScope = Qg(t), this._lineData = null, this.group.removeAll();
    }, r.prototype.incrementalUpdate = function(t, e) {
      this._progressiveEls = [];
      function a(s) {
        !s.isGroup && !AN(s) && (s.incremental = !0, s.ensureState("emphasis").hoverLayer = !0);
      }
      for (var n = t.start; n < t.end; n++) {
        var i = e.getItemLayout(n);
        if (rc(i)) {
          var o = new this._LineCtor(e, n, this._seriesScope);
          o.traverse(a), this.group.add(o), e.setItemGraphicEl(n, o), this._progressiveEls.push(o);
        }
      }
    }, r.prototype.remove = function() {
      this.group.removeAll();
    }, r.prototype.eachRendered = function(t) {
      ia(this._progressiveEls || this.group, t);
    }, r.prototype._doAdd = function(t, e, a) {
      var n = t.getItemLayout(e);
      if (rc(n)) {
        var i = new this._LineCtor(t, e, a);
        t.setItemGraphicEl(e, i), this.group.add(i);
      }
    }, r.prototype._doUpdate = function(t, e, a, n, i) {
      var o = t.getItemGraphicEl(a);
      if (!rc(e.getItemLayout(n))) {
        this.group.remove(o);
        return;
      }
      o ? o.updateData(e, n, i) : o = new this._LineCtor(e, n, i), e.setItemGraphicEl(n, o), this.group.add(o);
    }, r;
  }()
);
function AN(r) {
  return r.animators && r.animators.length > 0;
}
function Qg(r) {
  var t = r.hostModel, e = t.getModel("emphasis");
  return {
    lineStyle: t.getModel("lineStyle").getLineStyle(),
    emphasisLineStyle: e.getModel(["lineStyle"]).getLineStyle(),
    blurLineStyle: t.getModel(["blur", "lineStyle"]).getLineStyle(),
    selectLineStyle: t.getModel(["select", "lineStyle"]).getLineStyle(),
    emphasisDisabled: e.get("disabled"),
    blurScope: e.get("blurScope"),
    focus: e.get("focus"),
    labelStatesModels: tt(t)
  };
}
function ey(r) {
  return isNaN(r[0]) || isNaN(r[1]);
}
function rc(r) {
  return r && !ey(r[0]) && !ey(r[1]);
}
var ac = [], nc = [], ic = [], on = Y0, oc = Ww, ty = Math.abs;
function ry(r, t, e) {
  for (var a = r[0], n = r[1], i = r[2], o = 1 / 0, s, l = e * e, u = 0.1, c = 0.1; c <= 0.9; c += 0.1) {
    ac[0] = on(a[0], n[0], i[0], c), ac[1] = on(a[1], n[1], i[1], c);
    var v = ty(oc(ac, t) - l);
    v < o && (o = v, s = c);
  }
  for (var f = 0; f < 32; f++) {
    var h = s + u;
    nc[0] = on(a[0], n[0], i[0], s), nc[1] = on(a[1], n[1], i[1], s), ic[0] = on(a[0], n[0], i[0], h), ic[1] = on(a[1], n[1], i[1], h);
    var v = oc(nc, t) - l;
    if (ty(v) < 0.01)
      break;
    var p = oc(ic, t) - l;
    u /= 2, v < 0 ? p >= 0 ? s = s + u : s = s - u : p >= 0 ? s = s - u : s = s + u;
  }
  return s;
}
function sc(r, t) {
  var e = [], a = Hw, n = [[], [], []], i = [[], []], o = [];
  t /= 2, r.eachEdge(function(s, l) {
    var u = s.getLayout(), c = s.getVisual("fromSymbol"), v = s.getVisual("toSymbol");
    u.__original || (u.__original = [$r(u[0]), $r(u[1])], u[2] && u.__original.push($r(u[2])));
    var f = u.__original;
    if (u[2] != null) {
      if (dt(n[0], f[0]), dt(n[1], f[2]), dt(n[2], f[1]), c && c !== "none") {
        var h = Li(s.node1), p = ry(n, f[0], h * t);
        a(n[0][0], n[1][0], n[2][0], p, e), n[0][0] = e[3], n[1][0] = e[4], a(n[0][1], n[1][1], n[2][1], p, e), n[0][1] = e[3], n[1][1] = e[4];
      }
      if (v && v !== "none") {
        var h = Li(s.node2), p = ry(n, f[1], h * t);
        a(n[0][0], n[1][0], n[2][0], p, e), n[1][0] = e[1], n[2][0] = e[2], a(n[0][1], n[1][1], n[2][1], p, e), n[1][1] = e[1], n[2][1] = e[2];
      }
      dt(u[0], n[0]), dt(u[1], n[2]), dt(u[2], n[1]);
    } else {
      if (dt(i[0], f[0]), dt(i[1], f[1]), yn(o, i[1], i[0]), vo(o, o), c && c !== "none") {
        var h = Li(s.node1);
        Uc(i[0], i[0], o, h * t);
      }
      if (v && v !== "none") {
        var h = Li(s.node2);
        Uc(i[1], i[1], o, -h * t);
      }
      dt(u[0], i[0]), dt(u[1], i[1]);
    }
  });
}
function ay(r) {
  return r.type === "view";
}
var TN = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e, a) {
      var n = new xo(), i = new hh(), o = this.group;
      this._controller = new To(a.getZr()), this._controllerHost = {
        target: o
      }, o.add(n.group), o.add(i.group), this._symbolDraw = n, this._lineDraw = i, this._firstRender = !0;
    }, t.prototype.render = function(e, a, n) {
      var i = this, o = e.coordinateSystem;
      this._model = e;
      var s = this._symbolDraw, l = this._lineDraw, u = this.group;
      if (ay(o)) {
        var c = {
          x: o.x,
          y: o.y,
          scaleX: o.scaleX,
          scaleY: o.scaleY
        };
        this._firstRender ? u.attr(c) : pe(u, c, e);
      }
      sc(e.getGraph(), Ii(e));
      var v = e.getData();
      s.updateData(v);
      var f = e.getEdgeData();
      l.updateData(f), this._updateNodeAndLinkScale(), this._updateController(e, a, n), clearTimeout(this._layoutTimeout);
      var h = e.forceLayout, p = e.get(["force", "layoutAnimation"]);
      h && this._startForceLayoutIteration(h, p);
      var d = e.get("layout");
      v.graph.eachNode(function(_) {
        var S = _.dataIndex, x = _.getGraphicEl(), b = _.getModel();
        if (x) {
          x.off("drag").off("dragend");
          var D = b.get("draggable");
          D && x.on("drag", function(T) {
            switch (d) {
              case "force":
                h.warmUp(), !i._layouting && i._startForceLayoutIteration(h, p), h.setFixed(S), v.setItemLayout(S, [x.x, x.y]);
                break;
              case "circular":
                v.setItemLayout(S, [x.x, x.y]), _.setLayout({
                  fixed: !0
                }, !0), vh(e, "symbolSize", _, [T.offsetX, T.offsetY]), i.updateLayout(e);
                break;
              case "none":
              default:
                v.setItemLayout(S, [x.x, x.y]), ch(e.getGraph(), e), i.updateLayout(e);
                break;
            }
          }).on("dragend", function() {
            h && h.setUnfixed(S);
          }), x.setDraggable(D, !!b.get("cursor"));
          var A = b.get(["emphasis", "focus"]);
          A === "adjacency" && (j(x).focus = _.getAdjacentDataIndices());
        }
      }), v.graph.eachEdge(function(_) {
        var S = _.getGraphicEl(), x = _.getModel().get(["emphasis", "focus"]);
        S && x === "adjacency" && (j(S).focus = {
          edge: [_.dataIndex],
          node: [_.node1.dataIndex, _.node2.dataIndex]
        });
      });
      var g = e.get("layout") === "circular" && e.get(["circular", "rotateLabel"]), y = v.getLayout("cx"), m = v.getLayout("cy");
      v.graph.eachNode(function(_) {
        C1(_, g, y, m);
      }), this._firstRender = !1;
    }, t.prototype.dispose = function() {
      this.remove(), this._controller && this._controller.dispose(), this._controllerHost = null;
    }, t.prototype._startForceLayoutIteration = function(e, a) {
      var n = this;
      (function i() {
        e.step(function(o) {
          n.updateLayout(n._model), (n._layouting = !o) && (a ? n._layoutTimeout = setTimeout(i, 16) : i());
        });
      })();
    }, t.prototype._updateController = function(e, a, n) {
      var i = this, o = this._controller, s = this._controllerHost, l = this.group;
      if (o.setPointerChecker(function(u, c, v) {
        var f = l.getBoundingRect();
        return f.applyTransform(l.transform), f.contain(c, v) && !Ul(u, n, e);
      }), !ay(e.coordinateSystem)) {
        o.disable();
        return;
      }
      o.enable(e.get("roam")), s.zoomLimit = e.get("scaleLimit"), s.zoom = e.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
        th(s, u.dx, u.dy), n.dispatchAction({
          seriesId: e.id,
          type: "graphRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        rh(s, u.scale, u.originX, u.originY), n.dispatchAction({
          seriesId: e.id,
          type: "graphRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), i._updateNodeAndLinkScale(), sc(e.getGraph(), Ii(e)), i._lineDraw.updateLayout(), n.updateLabelLayout();
      });
    }, t.prototype._updateNodeAndLinkScale = function() {
      var e = this._model, a = e.getData(), n = Ii(e);
      a.eachItemGraphicEl(function(i, o) {
        i && i.setSymbolScale(n);
      });
    }, t.prototype.updateLayout = function(e) {
      sc(e.getGraph(), Ii(e)), this._symbolDraw.updateLayout(), this._lineDraw.updateLayout();
    }, t.prototype.remove = function() {
      clearTimeout(this._layoutTimeout), this._layouting = !1, this._layoutTimeout = null, this._symbolDraw && this._symbolDraw.remove(), this._lineDraw && this._lineDraw.remove();
    }, t.type = "graph", t;
  }(De)
), CN = { env: {} };
function sn(r) {
  return "_EC_" + r;
}
var MN = (
  /** @class */
  function() {
    function r(t) {
      this.type = "graph", this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}, this._directed = t || !1;
    }
    return r.prototype.isDirected = function() {
      return this._directed;
    }, r.prototype.addNode = function(t, e) {
      t = t == null ? "" + e : "" + t;
      var a = this._nodesMap;
      if (a[sn(t)]) {
        CN.env.NODE_ENV !== "production" && console.error("Graph nodes have duplicate name or id");
        return;
      }
      var n = new ya(t, e);
      return n.hostGraph = this, this.nodes.push(n), a[sn(t)] = n, n;
    }, r.prototype.getNodeByIndex = function(t) {
      var e = this.data.getRawIndex(t);
      return this.nodes[e];
    }, r.prototype.getNodeById = function(t) {
      return this._nodesMap[sn(t)];
    }, r.prototype.addEdge = function(t, e, a) {
      var n = this._nodesMap, i = this._edgesMap;
      if (_e(t) && (t = this.nodes[t]), _e(e) && (e = this.nodes[e]), t instanceof ya || (t = n[sn(t)]), e instanceof ya || (e = n[sn(e)]), !(!t || !e)) {
        var o = t.id + "-" + e.id, s = new I1(t, e, a);
        return s.hostGraph = this, this._directed && (t.outEdges.push(s), e.inEdges.push(s)), t.edges.push(s), t !== e && e.edges.push(s), this.edges.push(s), i[o] = s, s;
      }
    }, r.prototype.getEdgeByIndex = function(t) {
      var e = this.edgeData.getRawIndex(t);
      return this.edges[e];
    }, r.prototype.getEdge = function(t, e) {
      t instanceof ya && (t = t.id), e instanceof ya && (e = e.id);
      var a = this._edgesMap;
      return this._directed ? a[t + "-" + e] : a[t + "-" + e] || a[e + "-" + t];
    }, r.prototype.eachNode = function(t, e) {
      for (var a = this.nodes, n = a.length, i = 0; i < n; i++)
        a[i].dataIndex >= 0 && t.call(e, a[i], i);
    }, r.prototype.eachEdge = function(t, e) {
      for (var a = this.edges, n = a.length, i = 0; i < n; i++)
        a[i].dataIndex >= 0 && a[i].node1.dataIndex >= 0 && a[i].node2.dataIndex >= 0 && t.call(e, a[i], i);
    }, r.prototype.breadthFirstTraverse = function(t, e, a, n) {
      if (e instanceof ya || (e = this._nodesMap[sn(e)]), !!e) {
        for (var i = a === "out" ? "outEdges" : a === "in" ? "inEdges" : "edges", o = 0; o < this.nodes.length; o++)
          this.nodes[o].__visited = !1;
        if (!t.call(n, e, null))
          for (var s = [e]; s.length; )
            for (var l = s.shift(), u = l[i], o = 0; o < u.length; o++) {
              var c = u[o], v = c.node1 === l ? c.node2 : c.node1;
              if (!v.__visited) {
                if (t.call(n, v, l))
                  return;
                s.push(v), v.__visited = !0;
              }
            }
      }
    }, r.prototype.update = function() {
      for (var t = this.data, e = this.edgeData, a = this.nodes, n = this.edges, i = 0, o = a.length; i < o; i++)
        a[i].dataIndex = -1;
      for (var i = 0, o = t.count(); i < o; i++)
        a[t.getRawIndex(i)].dataIndex = i;
      e.filterSelf(function(s) {
        var l = n[e.getRawIndex(s)];
        return l.node1.dataIndex >= 0 && l.node2.dataIndex >= 0;
      });
      for (var i = 0, o = n.length; i < o; i++)
        n[i].dataIndex = -1;
      for (var i = 0, o = e.count(); i < o; i++)
        n[e.getRawIndex(i)].dataIndex = i;
    }, r.prototype.clone = function() {
      for (var t = new r(this._directed), e = this.nodes, a = this.edges, n = 0; n < e.length; n++)
        t.addNode(e[n].id, e[n].dataIndex);
      for (var n = 0; n < a.length; n++) {
        var i = a[n];
        t.addEdge(i.node1.id, i.node2.id, i.dataIndex);
      }
      return t;
    }, r;
  }()
), ya = (
  /** @class */
  function() {
    function r(t, e) {
      this.inEdges = [], this.outEdges = [], this.edges = [], this.dataIndex = -1, this.id = t ?? "", this.dataIndex = e ?? -1;
    }
    return r.prototype.degree = function() {
      return this.edges.length;
    }, r.prototype.inDegree = function() {
      return this.inEdges.length;
    }, r.prototype.outDegree = function() {
      return this.outEdges.length;
    }, r.prototype.getModel = function(t) {
      if (!(this.dataIndex < 0)) {
        var e = this.hostGraph, a = e.data.getItemModel(this.dataIndex);
        return a.getModel(t);
      }
    }, r.prototype.getAdjacentDataIndices = function() {
      for (var t = {
        edge: [],
        node: []
      }, e = 0; e < this.edges.length; e++) {
        var a = this.edges[e];
        a.dataIndex < 0 || (t.edge.push(a.dataIndex), t.node.push(a.node1.dataIndex, a.node2.dataIndex));
      }
      return t;
    }, r.prototype.getTrajectoryDataIndices = function() {
      for (var t = Z(), e = Z(), a = 0; a < this.edges.length; a++) {
        var n = this.edges[a];
        if (!(n.dataIndex < 0)) {
          t.set(n.dataIndex, !0);
          for (var i = [n.node1], o = [n.node2], s = 0; s < i.length; ) {
            var l = i[s];
            s++, e.set(l.dataIndex, !0);
            for (var u = 0; u < l.inEdges.length; u++)
              t.set(l.inEdges[u].dataIndex, !0), i.push(l.inEdges[u].node1);
          }
          for (s = 0; s < o.length; ) {
            var c = o[s];
            s++, e.set(c.dataIndex, !0);
            for (var u = 0; u < c.outEdges.length; u++)
              t.set(c.outEdges[u].dataIndex, !0), o.push(c.outEdges[u].node2);
          }
        }
      }
      return {
        edge: t.keys(),
        node: e.keys()
      };
    }, r;
  }()
), I1 = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.dataIndex = -1, this.node1 = t, this.node2 = e, this.dataIndex = a ?? -1;
    }
    return r.prototype.getModel = function(t) {
      if (!(this.dataIndex < 0)) {
        var e = this.hostGraph, a = e.edgeData.getItemModel(this.dataIndex);
        return a.getModel(t);
      }
    }, r.prototype.getAdjacentDataIndices = function() {
      return {
        edge: [this.dataIndex],
        node: [this.node1.dataIndex, this.node2.dataIndex]
      };
    }, r.prototype.getTrajectoryDataIndices = function() {
      var t = Z(), e = Z();
      t.set(this.dataIndex, !0);
      for (var a = [this.node1], n = [this.node2], i = 0; i < a.length; ) {
        var o = a[i];
        i++, e.set(o.dataIndex, !0);
        for (var s = 0; s < o.inEdges.length; s++)
          t.set(o.inEdges[s].dataIndex, !0), a.push(o.inEdges[s].node1);
      }
      for (i = 0; i < n.length; ) {
        var l = n[i];
        i++, e.set(l.dataIndex, !0);
        for (var s = 0; s < l.outEdges.length; s++)
          t.set(l.outEdges[s].dataIndex, !0), n.push(l.outEdges[s].node2);
      }
      return {
        edge: t.keys(),
        node: e.keys()
      };
    }, r;
  }()
);
function L1(r, t) {
  return {
    /**
     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.
     */
    getValue: function(e) {
      var a = this[r][t];
      return a.getStore().get(a.getDimensionIndex(e || "value"), this.dataIndex);
    },
    // TODO: TYPE stricter type.
    setVisual: function(e, a) {
      this.dataIndex >= 0 && this[r][t].setItemVisual(this.dataIndex, e, a);
    },
    getVisual: function(e) {
      return this[r][t].getItemVisual(this.dataIndex, e);
    },
    setLayout: function(e, a) {
      this.dataIndex >= 0 && this[r][t].setItemLayout(this.dataIndex, e, a);
    },
    getLayout: function() {
      return this[r][t].getItemLayout(this.dataIndex);
    },
    getGraphicEl: function() {
      return this[r][t].getItemGraphicEl(this.dataIndex);
    },
    getRawIndex: function() {
      return this[r][t].getRawIndex(this.dataIndex);
    }
  };
}
at(ya, L1("hostGraph", "data"));
at(I1, L1("hostGraph", "edgeData"));
function E1(r, t, e, a, n) {
  for (var i = new MN(a), o = 0; o < r.length; o++)
    i.addNode($e(
      // Id, name, dataIndex
      r[o].id,
      r[o].name,
      o
    ), o);
  for (var s = [], l = [], u = 0, o = 0; o < t.length; o++) {
    var c = t[o], v = c.source, f = c.target;
    i.addEdge(v, f, u) && (l.push(c), s.push($e(Ke(c.id, null), v + " > " + f)), u++);
  }
  var h = e.get("coordinateSystem"), p;
  if (h === "cartesian2d" || h === "polar")
    p = Pr(r, e);
  else {
    var d = Kn.get(h), g = d ? d.dimensions || [] : [];
    fe(g, "value") < 0 && g.concat(["value"]);
    var y = mo(r, {
      coordDimensions: g,
      encodeDefine: e.getEncode()
    }).dimensions;
    p = new yt(y, e), p.initData(r);
  }
  var m = new yt(["value"], e);
  return m.initData(l, s), n && n(p, m), f1({
    mainData: p,
    struct: i,
    structAttr: "graph",
    datas: {
      node: p,
      edge: m
    },
    datasAttr: {
      node: "data",
      edge: "edgeData"
    }
  }), i.update(), i;
}
var IN = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.hasSymbolVisual = !0, e;
    }
    return t.prototype.init = function(e) {
      r.prototype.init.apply(this, arguments);
      var a = this;
      function n() {
        return a._categoriesData;
      }
      this.legendVisualProvider = new Ao(n, n), this.fillDataTextStyle(e.edges || e.links), this._updateCategoriesData();
    }, t.prototype.mergeOption = function(e) {
      r.prototype.mergeOption.apply(this, arguments), this.fillDataTextStyle(e.edges || e.links), this._updateCategoriesData();
    }, t.prototype.mergeDefaultAndTheme = function(e) {
      r.prototype.mergeDefaultAndTheme.apply(this, arguments), Oa(e, "edgeLabel", ["show"]);
    }, t.prototype.getInitialData = function(e, a) {
      var n = e.edges || e.links || [], i = e.data || e.nodes || [], o = this;
      if (i && n) {
        pN(this);
        var s = E1(i, n, this, !0, l);
        return w(s.edges, function(u) {
          dN(u.node1, u.node2, this, u.dataIndex);
        }, this), s.data;
      }
      function l(u, c) {
        u.wrapMethod("getItemModel", function(p) {
          var d = o._categoriesModels, g = p.getShallow("category"), y = d[g];
          return y && (y.parentModel = p.parentModel, p.parentModel = y), p;
        });
        var v = me.prototype.getModel;
        function f(p, d) {
          var g = v.call(this, p, d);
          return g.resolveParentPath = h, g;
        }
        c.wrapMethod("getItemModel", function(p) {
          return p.resolveParentPath = h, p.getModel = f, p;
        });
        function h(p) {
          if (p && (p[0] === "label" || p[1] === "label")) {
            var d = p.slice();
            return p[0] === "label" ? d[0] = "edgeLabel" : p[1] === "label" && (d[1] = "edgeLabel"), d;
          }
          return p;
        }
      }
    }, t.prototype.getGraph = function() {
      return this.getData().graph;
    }, t.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, t.prototype.getCategoriesData = function() {
      return this._categoriesData;
    }, t.prototype.formatTooltip = function(e, a, n) {
      if (n === "edge") {
        var i = this.getData(), o = this.getDataParams(e, n), s = i.graph.getEdgeByIndex(e), l = i.getName(s.node1.dataIndex), u = i.getName(s.node2.dataIndex), c = [];
        return l != null && c.push(l), u != null && c.push(u), rt("nameValue", {
          name: c.join(" > "),
          value: o.value,
          noValue: o.value == null
        });
      }
      var v = SS({
        series: this,
        dataIndex: e,
        multipleSeries: a
      });
      return v;
    }, t.prototype._updateCategoriesData = function() {
      var e = G(this.option.categories || [], function(n) {
        return n.value != null ? n : z({
          value: 0
        }, n);
      }), a = new yt(["value"], this);
      a.initData(e), this._categoriesData = a, this._categoriesModels = a.mapArray(function(n) {
        return a.getItemModel(n);
      });
    }, t.prototype.setZoom = function(e) {
      this.option.zoom = e;
    }, t.prototype.setCenter = function(e) {
      this.option.center = e;
    }, t.prototype.isAnimationEnabled = function() {
      return r.prototype.isAnimationEnabled.call(this) && !(this.get("layout") === "force" && this.get(["force", "layoutAnimation"]));
    }, t.type = "series.graph", t.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], t.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // Default option for all coordinate systems
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // polarIndex: 0,
      // geoIndex: 0,
      legendHoverLink: !0,
      layout: null,
      // Configuration of circular layout
      circular: {
        rotateLabel: !1
      },
      // Configuration of force directed layout
      force: {
        initLayout: null,
        // Node repulsion. Can be an array to represent range.
        repulsion: [0, 50],
        gravity: 0.1,
        // Initial friction
        friction: 0.6,
        // Edge length. Can be an array to represent range.
        edgeLength: 30,
        layoutAnimation: !0
      },
      left: "center",
      top: "center",
      // right: null,
      // bottom: null,
      // width: '80%',
      // height: '80%',
      symbol: "circle",
      symbolSize: 10,
      edgeSymbol: ["none", "none"],
      edgeSymbolSize: 10,
      edgeLabel: {
        position: "middle",
        distance: 5
      },
      draggable: !1,
      roam: !1,
      // Default on center of graph
      center: null,
      zoom: 1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.6,
      // cursor: null,
      // categories: [],
      // data: []
      // Or
      // nodes: []
      //
      // links: []
      // Or
      // edges: []
      label: {
        show: !1,
        formatter: "{b}"
      },
      itemStyle: {},
      lineStyle: {
        color: "#aaa",
        width: 1,
        opacity: 0.5
      },
      emphasis: {
        scale: !0,
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, t;
  }(Le)
), LN = {
  type: "graphRoam",
  event: "graphRoam",
  update: "none"
};
function EN(r) {
  r.registerChartView(TN), r.registerSeriesModel(IN), r.registerProcessor(uN), r.registerVisual(cN), r.registerVisual(vN), r.registerLayout(gN), r.registerLayout(r.PRIORITY.VISUAL.POST_CHART_LAYOUT, mN), r.registerLayout(SN), r.registerCoordinateSystem("graphView", {
    dimensions: Co.dimensions,
    create: bN
  }), r.registerAction({
    type: "focusNodeAdjacency",
    event: "focusNodeAdjacency",
    update: "series:focusNodeAdjacency"
  }, _t), r.registerAction({
    type: "unfocusNodeAdjacency",
    event: "unfocusNodeAdjacency",
    update: "series:unfocusNodeAdjacency"
  }, _t), r.registerAction(LN, function(t, e, a) {
    e.eachComponent({
      mainType: "series",
      query: t
    }, function(n) {
      var i = n.coordinateSystem, o = nh(i, t, void 0, a);
      n.setCenter && n.setCenter(o.center), n.setZoom && n.setZoom(o.zoom);
    });
  });
}
var PN = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
      this.angle = 0, this.width = 10, this.r = 10, this.x = 0, this.y = 0;
    }
    return r;
  }()
), NN = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "pointer", a;
    }
    return t.prototype.getDefaultShape = function() {
      return new PN();
    }, t.prototype.buildPath = function(e, a) {
      var n = Math.cos, i = Math.sin, o = a.r, s = a.width, l = a.angle, u = a.x - n(l) * s * (s >= o / 3 ? 1 : 2), c = a.y - i(l) * s * (s >= o / 3 ? 1 : 2);
      l = a.angle - Math.PI / 2, e.moveTo(u, c), e.lineTo(a.x + n(l) * s, a.y + i(l) * s), e.lineTo(a.x + n(a.angle) * o, a.y + i(a.angle) * o), e.lineTo(a.x - n(l) * s, a.y - i(l) * s), e.lineTo(u, c);
    }, t;
  }(Ee)
);
function RN(r, t) {
  var e = r.get("center"), a = t.getWidth(), n = t.getHeight(), i = Math.min(a, n), o = H(e[0], t.getWidth()), s = H(e[1], t.getHeight()), l = H(r.get("radius"), i / 2);
  return {
    cx: o,
    cy: s,
    r: l
  };
}
function as(r, t) {
  var e = r == null ? "" : r + "";
  return t && (Y(t) ? e = t.replace("{value}", e) : X(t) && (e = t(r))), e;
}
var kN = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      this.group.removeAll();
      var i = e.get(["axisLine", "lineStyle", "color"]), o = RN(e, n);
      this._renderMain(e, a, n, i, o), this._data = e.getData();
    }, t.prototype.dispose = function() {
    }, t.prototype._renderMain = function(e, a, n, i, o) {
      var s = this.group, l = e.get("clockwise"), u = -e.get("startAngle") / 180 * Math.PI, c = -e.get("endAngle") / 180 * Math.PI, v = e.getModel("axisLine"), f = v.get("roundCap"), h = f ? tl : Ht, p = v.get("show"), d = v.getModel("lineStyle"), g = d.get("width"), y = [u, c];
      W0(y, !l), u = y[0], c = y[1];
      for (var m = c - u, _ = u, S = [], x = 0; p && x < i.length; x++) {
        var b = Math.min(Math.max(i[x][0], 0), 1);
        c = u + m * b;
        var D = new h({
          shape: {
            startAngle: _,
            endAngle: c,
            cx: o.cx,
            cy: o.cy,
            clockwise: l,
            r0: o.r - g,
            r: o.r
          },
          silent: !0
        });
        D.setStyle({
          fill: i[x][1]
        }), D.setStyle(d.getLineStyle(
          // Because we use sector to simulate arc
          // so the properties for stroking are useless
          ["color", "width"]
        )), S.push(D), _ = c;
      }
      S.reverse(), w(S, function(T) {
        return s.add(T);
      });
      var A = function(T) {
        if (T <= 0)
          return i[0][1];
        var C;
        for (C = 0; C < i.length; C++)
          if (i[C][0] >= T && (C === 0 ? 0 : i[C - 1][0]) < T)
            return i[C][1];
        return i[C - 1][1];
      };
      this._renderTicks(e, a, n, A, o, u, c, l, g), this._renderTitleAndDetail(e, a, n, A, o), this._renderAnchor(e, o), this._renderPointer(e, a, n, A, o, u, c, l, g);
    }, t.prototype._renderTicks = function(e, a, n, i, o, s, l, u, c) {
      for (var v = this.group, f = o.cx, h = o.cy, p = o.r, d = +e.get("min"), g = +e.get("max"), y = e.getModel("splitLine"), m = e.getModel("axisTick"), _ = e.getModel("axisLabel"), S = e.get("splitNumber"), x = m.get("splitNumber"), b = H(y.get("length"), p), D = H(m.get("length"), p), A = s, T = (l - s) / S, C = T / x, M = y.getModel("lineStyle").getLineStyle(), I = m.getModel("lineStyle").getLineStyle(), L = y.get("distance"), P, E, N = 0; N <= S; N++) {
        if (P = Math.cos(A), E = Math.sin(A), y.get("show")) {
          var O = L ? L + c : c, k = new it({
            shape: {
              x1: P * (p - O) + f,
              y1: E * (p - O) + h,
              x2: P * (p - b - O) + f,
              y2: E * (p - b - O) + h
            },
            style: M,
            silent: !0
          });
          M.stroke === "auto" && k.setStyle({
            stroke: i(N / S)
          }), v.add(k);
        }
        if (_.get("show")) {
          var O = _.get("distance") + L, V = as(ze(N / S * (g - d) + d), _.get("formatter")), F = i(N / S), W = P * (p - b - O) + f, q = E * (p - b - O) + h, ae = _.get("rotate"), ie = 0;
          ae === "radial" ? (ie = -A + 2 * Math.PI, ie > Math.PI / 2 && (ie += Math.PI)) : ae === "tangential" ? ie = -A - Math.PI / 2 : _e(ae) && (ie = ae * Math.PI / 180), ie === 0 ? v.add(new ve({
            style: Ie(_, {
              text: V,
              x: W,
              y: q,
              verticalAlign: E < -0.8 ? "top" : E > 0.8 ? "bottom" : "middle",
              align: P < -0.4 ? "left" : P > 0.4 ? "right" : "center"
            }, {
              inheritColor: F
            }),
            silent: !0
          })) : v.add(new ve({
            style: Ie(_, {
              text: V,
              x: W,
              y: q,
              verticalAlign: "middle",
              align: "center"
            }, {
              inheritColor: F
            }),
            silent: !0,
            originX: W,
            originY: q,
            rotation: ie
          }));
        }
        if (m.get("show") && N !== S) {
          var O = m.get("distance");
          O = O ? O + c : c;
          for (var ge = 0; ge <= x; ge++) {
            P = Math.cos(A), E = Math.sin(A);
            var Se = new it({
              shape: {
                x1: P * (p - O) + f,
                y1: E * (p - O) + h,
                x2: P * (p - D - O) + f,
                y2: E * (p - D - O) + h
              },
              silent: !0,
              style: I
            });
            I.stroke === "auto" && Se.setStyle({
              stroke: i((N + ge / x) / S)
            }), v.add(Se), A += C;
          }
          A -= C;
        } else
          A += T;
      }
    }, t.prototype._renderPointer = function(e, a, n, i, o, s, l, u, c) {
      var v = this.group, f = this._data, h = this._progressEls, p = [], d = e.get(["pointer", "show"]), g = e.getModel("progress"), y = g.get("show"), m = e.getData(), _ = m.mapDimension("value"), S = +e.get("min"), x = +e.get("max"), b = [S, x], D = [s, l];
      function A(C, M) {
        var I = m.getItemModel(C), L = I.getModel("pointer"), P = H(L.get("width"), o.r), E = H(L.get("length"), o.r), N = e.get(["pointer", "icon"]), O = L.get("offsetCenter"), k = H(O[0], o.r), V = H(O[1], o.r), F = L.get("keepAspect"), W;
        return N ? W = Ze(N, k - P / 2, V - E, P, E, null, F) : W = new NN({
          shape: {
            angle: -Math.PI / 2,
            width: P,
            r: E,
            x: k,
            y: V
          }
        }), W.rotation = -(M + Math.PI / 2), W.x = o.cx, W.y = o.cy, W;
      }
      function T(C, M) {
        var I = g.get("roundCap"), L = I ? tl : Ht, P = g.get("overlap"), E = P ? g.get("width") : c / m.count(), N = P ? o.r - E : o.r - (C + 1) * E, O = P ? o.r : o.r - C * E, k = new L({
          shape: {
            startAngle: s,
            endAngle: M,
            cx: o.cx,
            cy: o.cy,
            clockwise: u,
            r0: N,
            r: O
          }
        });
        return P && (k.z2 = x - m.get(_, C) % x), k;
      }
      (y || d) && (m.diff(f).add(function(C) {
        var M = m.get(_, C);
        if (d) {
          var I = A(C, s);
          Pe(I, {
            rotation: -((isNaN(+M) ? D[0] : xe(M, b, D, !0)) + Math.PI / 2)
          }, e), v.add(I), m.setItemGraphicEl(C, I);
        }
        if (y) {
          var L = T(C, s), P = g.get("clip");
          Pe(L, {
            shape: {
              endAngle: xe(M, b, D, P)
            }
          }, e), v.add(L), Xc(e.seriesIndex, m.dataType, C, L), p[C] = L;
        }
      }).update(function(C, M) {
        var I = m.get(_, C);
        if (d) {
          var L = f.getItemGraphicEl(M), P = L ? L.rotation : s, E = A(C, P);
          E.rotation = P, pe(E, {
            rotation: -((isNaN(+I) ? D[0] : xe(I, b, D, !0)) + Math.PI / 2)
          }, e), v.add(E), m.setItemGraphicEl(C, E);
        }
        if (y) {
          var N = h[M], O = N ? N.shape.endAngle : s, k = T(C, O), V = g.get("clip");
          pe(k, {
            shape: {
              endAngle: xe(I, b, D, V)
            }
          }, e), v.add(k), Xc(e.seriesIndex, m.dataType, C, k), p[C] = k;
        }
      }).execute(), m.each(function(C) {
        var M = m.getItemModel(C), I = M.getModel("emphasis"), L = I.get("focus"), P = I.get("blurScope"), E = I.get("disabled");
        if (d) {
          var N = m.getItemGraphicEl(C), O = m.getItemVisual(C, "style"), k = O.fill;
          if (N instanceof Ut) {
            var V = N.style;
            N.useStyle(z({
              image: V.image,
              x: V.x,
              y: V.y,
              width: V.width,
              height: V.height
            }, O));
          } else
            N.useStyle(O), N.type !== "pointer" && N.setColor(k);
          N.setStyle(M.getModel(["pointer", "itemStyle"]).getItemStyle()), N.style.fill === "auto" && N.setStyle("fill", i(xe(m.get(_, C), b, [0, 1], !0))), N.z2EmphasisLift = 0, st(N, M), Be(N, L, P, E);
        }
        if (y) {
          var F = p[C];
          F.useStyle(m.getItemVisual(C, "style")), F.setStyle(M.getModel(["progress", "itemStyle"]).getItemStyle()), F.z2EmphasisLift = 0, st(F, M), Be(F, L, P, E);
        }
      }), this._progressEls = p);
    }, t.prototype._renderAnchor = function(e, a) {
      var n = e.getModel("anchor"), i = n.get("show");
      if (i) {
        var o = n.get("size"), s = n.get("icon"), l = n.get("offsetCenter"), u = n.get("keepAspect"), c = Ze(s, a.cx - o / 2 + H(l[0], a.r), a.cy - o / 2 + H(l[1], a.r), o, o, null, u);
        c.z2 = n.get("showAbove") ? 1 : 0, c.setStyle(n.getModel("itemStyle").getItemStyle()), this.group.add(c);
      }
    }, t.prototype._renderTitleAndDetail = function(e, a, n, i, o) {
      var s = this, l = e.getData(), u = l.mapDimension("value"), c = +e.get("min"), v = +e.get("max"), f = new re(), h = [], p = [], d = e.isAnimationEnabled(), g = e.get(["pointer", "showAbove"]);
      l.diff(this._data).add(function(y) {
        h[y] = new ve({
          silent: !0
        }), p[y] = new ve({
          silent: !0
        });
      }).update(function(y, m) {
        h[y] = s._titleEls[m], p[y] = s._detailEls[m];
      }).execute(), l.each(function(y) {
        var m = l.getItemModel(y), _ = l.get(u, y), S = new re(), x = i(xe(_, [c, v], [0, 1], !0)), b = m.getModel("title");
        if (b.get("show")) {
          var D = b.get("offsetCenter"), A = o.cx + H(D[0], o.r), T = o.cy + H(D[1], o.r), C = h[y];
          C.attr({
            z2: g ? 0 : 2,
            style: Ie(b, {
              x: A,
              y: T,
              text: l.getName(y),
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: x
            })
          }), S.add(C);
        }
        var M = m.getModel("detail");
        if (M.get("show")) {
          var I = M.get("offsetCenter"), L = o.cx + H(I[0], o.r), P = o.cy + H(I[1], o.r), E = H(M.get("width"), o.r), N = H(M.get("height"), o.r), O = e.get(["progress", "show"]) ? l.getItemVisual(y, "style").fill : x, C = p[y], k = M.get("formatter");
          C.attr({
            z2: g ? 0 : 2,
            style: Ie(M, {
              x: L,
              y: P,
              text: as(_, k),
              width: isNaN(E) ? null : E,
              height: isNaN(N) ? null : N,
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: O
            })
          }), D_(C, {
            normal: M
          }, _, function(F) {
            return as(F, k);
          }), d && A_(C, y, l, e, {
            getFormattedLabel: function(F, W, q, ae, ie, ge) {
              return as(ge ? ge.interpolatedValue : _, k);
            }
          }), S.add(C);
        }
        f.add(S);
      }), this.group.add(f), this._titleEls = h, this._detailEls = p;
    }, t.type = "gauge", t;
  }(De)
), ON = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.visualStyleAccessPath = "itemStyle", e;
    }
    return t.prototype.getInitialData = function(e, a) {
      return ei(this, ["value"]);
    }, t.type = "series.gauge", t.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      legendHoverLink: !0,
      radius: "75%",
      startAngle: 225,
      endAngle: -45,
      clockwise: !0,
      // 最小值
      min: 0,
      // 最大值
      max: 100,
      // 分割段数，默认为10
      splitNumber: 10,
      // 坐标轴线
      axisLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        roundCap: !1,
        lineStyle: {
          color: [[1, "#E6EBF8"]],
          width: 10
        }
      },
      // 坐标轴线
      progress: {
        // 默认显示，属性show控制显示与否
        show: !1,
        overlap: !0,
        width: 10,
        roundCap: !1,
        clip: !0
      },
      // 分隔线
      splitLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        // 属性length控制线长
        length: 10,
        distance: 10,
        // 属性lineStyle（详见lineStyle）控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 3,
          type: "solid"
        }
      },
      // 坐标轴小标记
      axisTick: {
        // 属性show控制显示与否，默认不显示
        show: !0,
        // 每份split细分多少段
        splitNumber: 5,
        // 属性length控制线长
        length: 6,
        distance: 10,
        // 属性lineStyle控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 1,
          type: "solid"
        }
      },
      axisLabel: {
        show: !0,
        distance: 15,
        // formatter: null,
        color: "#464646",
        fontSize: 12,
        rotate: 0
      },
      pointer: {
        icon: null,
        offsetCenter: [0, 0],
        show: !0,
        showAbove: !0,
        length: "60%",
        width: 6,
        keepAspect: !1
      },
      anchor: {
        show: !1,
        showAbove: !1,
        size: 6,
        icon: "circle",
        offsetCenter: [0, 0],
        keepAspect: !1,
        itemStyle: {
          color: "#fff",
          borderWidth: 0,
          borderColor: "#5470c6"
        }
      },
      title: {
        show: !0,
        // x, y，单位px
        offsetCenter: [0, "20%"],
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 16,
        valueAnimation: !1
      },
      detail: {
        show: !0,
        backgroundColor: "rgba(0,0,0,0)",
        borderWidth: 0,
        borderColor: "#ccc",
        width: 100,
        height: null,
        padding: [5, 10],
        // x, y，单位px
        offsetCenter: [0, "40%"],
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 30,
        fontWeight: "bold",
        lineHeight: 30,
        valueAnimation: !1
      }
    }, t;
  }(Le)
);
function VN(r) {
  r.registerChartView(kN), r.registerSeriesModel(ON);
}
var BN = ["itemStyle", "opacity"], zN = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a) {
      var n = r.call(this) || this, i = n, o = new Ct(), s = new ve();
      return i.setTextContent(s), n.setTextGuideLine(o), n.updateData(e, a, !0), n;
    }
    return t.prototype.updateData = function(e, a, n) {
      var i = this, o = e.hostModel, s = e.getItemModel(a), l = e.getItemLayout(a), u = s.getModel("emphasis"), c = s.get(BN);
      c = c ?? 1, n || er(i), i.useStyle(e.getItemVisual(a, "style")), i.style.lineJoin = "round", n ? (i.setShape({
        points: l.points
      }), i.style.opacity = 0, Pe(i, {
        style: {
          opacity: c
        }
      }, o, a)) : pe(i, {
        style: {
          opacity: c
        },
        shape: {
          points: l.points
        }
      }, o, a), st(i, s), this._updateLabel(e, a), Be(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, t.prototype._updateLabel = function(e, a) {
      var n = this, i = this.getTextGuideLine(), o = n.getTextContent(), s = e.hostModel, l = e.getItemModel(a), u = e.getItemLayout(a), c = u.label, v = e.getItemVisual(a, "style"), f = v.fill;
      lt(
        // position will not be used in setLabelStyle
        o,
        tt(l),
        {
          labelFetcher: e.hostModel,
          labelDataIndex: a,
          defaultOpacity: v.opacity,
          defaultText: e.getName(a)
        },
        {
          normal: {
            align: c.textAlign,
            verticalAlign: c.verticalAlign
          }
        }
      ), n.setTextConfig({
        local: !0,
        inside: !!c.inside,
        insideStroke: f,
        // insideFill: 'auto',
        outsideFill: f
      });
      var h = c.linePoints;
      i.setShape({
        points: h
      }), n.textGuideLineConfig = {
        anchor: h ? new Ue(h[0][0], h[0][1]) : null
      }, pe(o, {
        style: {
          x: c.x,
          y: c.y
        }
      }, s, a), o.attr({
        rotation: c.rotation,
        originX: c.x,
        originY: c.y,
        z2: 10
      }), qf(n, jf(l), {
        // Default use item visual color
        stroke: f
      });
    }, t;
  }(Wt)
), GN = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.ignoreLabelLineUpdate = !0, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = e.getData(), o = this._data, s = this.group;
      i.diff(o).add(function(l) {
        var u = new zN(i, l);
        i.setItemGraphicEl(l, u), s.add(u);
      }).update(function(l, u) {
        var c = o.getItemGraphicEl(u);
        c.updateData(i, l), s.add(c), i.setItemGraphicEl(l, c);
      }).remove(function(l) {
        var u = o.getItemGraphicEl(l);
        $i(u, e, l);
      }).execute(), this._data = i;
    }, t.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, t.prototype.dispose = function() {
    }, t.type = "funnel", t;
  }(De)
), FN = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new Ao(U(this.getData, this), U(this.getRawData, this)), this._defaultLabelLine(e);
    }, t.prototype.getInitialData = function(e, a) {
      return ei(this, {
        coordDimensions: ["value"],
        encodeDefaulter: te(Mf, this)
      });
    }, t.prototype._defaultLabelLine = function(e) {
      Oa(e, "labelLine", ["show"]);
      var a = e.labelLine, n = e.emphasis.labelLine;
      a.show = a.show && e.label.show, n.show = n.show && e.emphasis.label.show;
    }, t.prototype.getDataParams = function(e) {
      var a = this.getData(), n = r.prototype.getDataParams.call(this, e), i = a.mapDimension("value"), o = a.getSum(i);
      return n.percent = o ? +(a.get(i, e) / o * 100).toFixed(2) : 0, n.$vars.push("percent"), n;
    }, t.type = "series.funnel", t.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      // 默认取数据最小最大值
      // min: 0,
      // max: 100,
      minSize: "0%",
      maxSize: "100%",
      sort: "descending",
      orient: "vertical",
      gap: 0,
      funnelAlign: "center",
      label: {
        show: !0,
        position: "outer"
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      labelLine: {
        show: !0,
        length: 20,
        lineStyle: {
          // color: 各异,
          width: 1
        }
      },
      itemStyle: {
        // color: 各异,
        borderColor: "#fff",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, t;
  }(Le)
), HN = { env: {} };
function WN(r, t) {
  return qe(r.getBoxLayoutParams(), {
    width: t.getWidth(),
    height: t.getHeight()
  });
}
function UN(r, t) {
  for (var e = r.mapDimension("value"), a = r.mapArray(e, function(l) {
    return l;
  }), n = [], i = t === "ascending", o = 0, s = r.count(); o < s; o++)
    n[o] = o;
  return X(t) ? n.sort(t) : t !== "none" && n.sort(function(l, u) {
    return i ? a[l] - a[u] : a[u] - a[l];
  }), n;
}
function $N(r) {
  var t = r.hostModel, e = t.get("orient");
  r.each(function(a) {
    var n = r.getItemModel(a), i = n.getModel("label"), o = i.get("position"), s = n.getModel("labelLine"), l = r.getItemLayout(a), u = l.points, c = o === "inner" || o === "inside" || o === "center" || o === "insideLeft" || o === "insideRight", v, f, h, p;
    if (c)
      o === "insideLeft" ? (f = (u[0][0] + u[3][0]) / 2 + 5, h = (u[0][1] + u[3][1]) / 2, v = "left") : o === "insideRight" ? (f = (u[1][0] + u[2][0]) / 2 - 5, h = (u[1][1] + u[2][1]) / 2, v = "right") : (f = (u[0][0] + u[1][0] + u[2][0] + u[3][0]) / 4, h = (u[0][1] + u[1][1] + u[2][1] + u[3][1]) / 4, v = "center"), p = [[f, h], [f, h]];
    else {
      var d = void 0, g = void 0, y = void 0, m = void 0, _ = s.get("length");
      HN.env.NODE_ENV !== "production" && (e === "vertical" && ["top", "bottom"].indexOf(o) > -1 && (o = "left", console.warn("Position error: Funnel chart on vertical orient dose not support top and bottom.")), e === "horizontal" && ["left", "right"].indexOf(o) > -1 && (o = "bottom", console.warn("Position error: Funnel chart on horizontal orient dose not support left and right."))), o === "left" ? (d = (u[3][0] + u[0][0]) / 2, g = (u[3][1] + u[0][1]) / 2, y = d - _, f = y - 5, v = "right") : o === "right" ? (d = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, y = d + _, f = y + 5, v = "left") : o === "top" ? (d = (u[3][0] + u[0][0]) / 2, g = (u[3][1] + u[0][1]) / 2, m = g - _, h = m - 5, v = "center") : o === "bottom" ? (d = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, m = g + _, h = m + 5, v = "center") : o === "rightTop" ? (d = e === "horizontal" ? u[3][0] : u[1][0], g = e === "horizontal" ? u[3][1] : u[1][1], e === "horizontal" ? (m = g - _, h = m - 5, v = "center") : (y = d + _, f = y + 5, v = "top")) : o === "rightBottom" ? (d = u[2][0], g = u[2][1], e === "horizontal" ? (m = g + _, h = m + 5, v = "center") : (y = d + _, f = y + 5, v = "bottom")) : o === "leftTop" ? (d = u[0][0], g = e === "horizontal" ? u[0][1] : u[1][1], e === "horizontal" ? (m = g - _, h = m - 5, v = "center") : (y = d - _, f = y - 5, v = "right")) : o === "leftBottom" ? (d = e === "horizontal" ? u[1][0] : u[3][0], g = e === "horizontal" ? u[1][1] : u[2][1], e === "horizontal" ? (m = g + _, h = m + 5, v = "center") : (y = d - _, f = y - 5, v = "right")) : (d = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, e === "horizontal" ? (m = g + _, h = m + 5, v = "center") : (y = d + _, f = y + 5, v = "left")), e === "horizontal" ? (y = d, f = y) : (m = g, h = m), p = [[d, g], [y, m]];
    }
    l.label = {
      linePoints: p,
      x: f,
      y: h,
      verticalAlign: "middle",
      textAlign: v,
      inside: c
    };
  });
}
function YN(r, t) {
  r.eachSeriesByType("funnel", function(e) {
    var a = e.getData(), n = a.mapDimension("value"), i = e.get("sort"), o = WN(e, t), s = e.get("orient"), l = o.width, u = o.height, c = UN(a, i), v = o.x, f = o.y, h = s === "horizontal" ? [H(e.get("minSize"), u), H(e.get("maxSize"), u)] : [H(e.get("minSize"), l), H(e.get("maxSize"), l)], p = a.getDataExtent(n), d = e.get("min"), g = e.get("max");
    d == null && (d = Math.min(p[0], 0)), g == null && (g = p[1]);
    var y = e.get("funnelAlign"), m = e.get("gap"), _ = s === "horizontal" ? l : u, S = (_ - m * (a.count() - 1)) / a.count(), x = function(P, E) {
      if (s === "horizontal") {
        var N = a.get(n, P) || 0, O = xe(N, [d, g], h, !0), k = void 0;
        switch (y) {
          case "top":
            k = f;
            break;
          case "center":
            k = f + (u - O) / 2;
            break;
          case "bottom":
            k = f + (u - O);
            break;
        }
        return [[E, k], [E, k + O]];
      }
      var V = a.get(n, P) || 0, F = xe(V, [d, g], h, !0), W;
      switch (y) {
        case "left":
          W = v;
          break;
        case "center":
          W = v + (l - F) / 2;
          break;
        case "right":
          W = v + l - F;
          break;
      }
      return [[W, E], [W + F, E]];
    };
    i === "ascending" && (S = -S, m = -m, s === "horizontal" ? v += l : f += u, c = c.reverse());
    for (var b = 0; b < c.length; b++) {
      var D = c[b], A = c[b + 1], T = a.getItemModel(D);
      if (s === "horizontal") {
        var C = T.get(["itemStyle", "width"]);
        C == null ? C = S : (C = H(C, l), i === "ascending" && (C = -C));
        var M = x(D, v), I = x(A, v + C);
        v += C + m, a.setItemLayout(D, {
          points: M.concat(I.slice().reverse())
        });
      } else {
        var L = T.get(["itemStyle", "height"]);
        L == null ? L = S : (L = H(L, u), i === "ascending" && (L = -L));
        var M = x(D, f), I = x(A, f + L);
        f += L + m, a.setItemLayout(D, {
          points: M.concat(I.slice().reverse())
        });
      }
    }
    $N(a);
  });
}
function ZN(r) {
  r.registerChartView(GN), r.registerSeriesModel(FN), r.registerLayout(YN), r.registerProcessor(Do("funnel"));
}
var XN = 0.3, KN = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._dataGroup = new re(), e._initialized = !1, e;
    }
    return t.prototype.init = function() {
      this.group.add(this._dataGroup);
    }, t.prototype.render = function(e, a, n, i) {
      this._progressiveEls = null;
      var o = this._dataGroup, s = e.getData(), l = this._data, u = e.coordinateSystem, c = u.dimensions, v = iy(e);
      s.diff(l).add(f).update(h).remove(p).execute();
      function f(g) {
        var y = ny(s, o, g, c, u);
        lc(y, s, g, v);
      }
      function h(g, y) {
        var m = l.getItemGraphicEl(y), _ = P1(s, g, c, u);
        s.setItemGraphicEl(g, m), pe(m, {
          shape: {
            points: _
          }
        }, e, g), er(m), lc(m, s, g, v);
      }
      function p(g) {
        var y = l.getItemGraphicEl(g);
        o.remove(y);
      }
      if (!this._initialized) {
        this._initialized = !0;
        var d = qN(u, e, function() {
          setTimeout(function() {
            o.removeClipPath();
          });
        });
        o.setClipPath(d);
      }
      this._data = s;
    }, t.prototype.incrementalPrepareRender = function(e, a, n) {
      this._initialized = !0, this._data = null, this._dataGroup.removeAll();
    }, t.prototype.incrementalRender = function(e, a, n) {
      for (var i = a.getData(), o = a.coordinateSystem, s = o.dimensions, l = iy(a), u = this._progressiveEls = [], c = e.start; c < e.end; c++) {
        var v = ny(i, this._dataGroup, c, s, o);
        v.incremental = !0, lc(v, i, c, l), u.push(v);
      }
    }, t.prototype.remove = function() {
      this._dataGroup && this._dataGroup.removeAll(), this._data = null;
    }, t.type = "parallel", t;
  }(De)
);
function qN(r, t, e) {
  var a = r.model, n = r.getRect(), i = new de({
    shape: {
      x: n.x,
      y: n.y,
      width: n.width,
      height: n.height
    }
  }), o = a.get("layout") === "horizontal" ? "width" : "height";
  return i.setShape(o, 0), Pe(i, {
    shape: {
      width: n.width,
      height: n.height
    }
  }, t, e), i;
}
function P1(r, t, e, a) {
  for (var n = [], i = 0; i < e.length; i++) {
    var o = e[i], s = r.get(r.mapDimension(o), t);
    jN(s, a.getAxis(o).type) || n.push(a.dataToPoint(s, o));
  }
  return n;
}
function ny(r, t, e, a, n) {
  var i = P1(r, e, a, n), o = new Ct({
    shape: {
      points: i
    },
    // silent: true,
    z2: 10
  });
  return t.add(o), r.setItemGraphicEl(e, o), o;
}
function iy(r) {
  var t = r.get("smooth", !0);
  return t === !0 && (t = XN), t = Dr(t), Dn(t) && (t = 0), {
    smooth: t
  };
}
function lc(r, t, e, a) {
  r.useStyle(t.getItemVisual(e, "style")), r.style.fill = null, r.setShape("smooth", a.smooth);
  var n = t.getItemModel(e), i = n.getModel("emphasis");
  st(r, n, "lineStyle"), Be(r, i.get("focus"), i.get("blurScope"), i.get("disabled"));
}
function jN(r, t) {
  return t === "category" ? r == null : r == null || isNaN(r);
}
var JN = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.visualStyleAccessPath = "lineStyle", e.visualDrawType = "stroke", e;
    }
    return t.prototype.getInitialData = function(e, a) {
      return Pr(null, this, {
        useEncodeDefaulter: U(QN, null, this)
      });
    }, t.prototype.getRawIndicesByActiveState = function(e) {
      var a = this.coordinateSystem, n = this.getData(), i = [];
      return a.eachActiveState(n, function(o, s) {
        e === o && i.push(n.getRawIndex(s));
      }), i;
    }, t.type = "series.parallel", t.dependencies = ["parallel"], t.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "parallel",
      parallelIndex: 0,
      label: {
        show: !1
      },
      inactiveOpacity: 0.05,
      activeOpacity: 1,
      lineStyle: {
        width: 1,
        opacity: 0.45,
        type: "solid"
      },
      emphasis: {
        label: {
          show: !1
        }
      },
      progressive: 500,
      smooth: !1,
      animationEasing: "linear"
    }, t;
  }(Le)
);
function QN(r) {
  var t = r.ecModel.getComponent("parallel", r.get("parallelIndex"));
  if (t) {
    var e = {};
    return w(t.dimensions, function(a) {
      var n = e2(a);
      e[a] = n;
    }), e;
  }
}
function e2(r) {
  return +r.replace("dim", "");
}
var t2 = ["lineStyle", "opacity"], r2 = {
  seriesType: "parallel",
  reset: function(r, t) {
    var e = r.coordinateSystem, a = {
      normal: r.get(["lineStyle", "opacity"]),
      active: r.get("activeOpacity"),
      inactive: r.get("inactiveOpacity")
    };
    return {
      progress: function(n, i) {
        e.eachActiveState(i, function(o, s) {
          var l = a[o];
          if (o === "normal" && i.hasItemOption) {
            var u = i.getItemModel(s).get(t2, !0);
            u != null && (l = u);
          }
          var c = i.ensureUniqueItemVisual(s, "style");
          c.opacity = l;
        }, n.start, n.end);
      }
    };
  }
};
function a2(r) {
  n2(r), i2(r);
}
function n2(r) {
  if (!r.parallel) {
    var t = !1;
    w(r.series, function(e) {
      e && e.type === "parallel" && (t = !0);
    }), t && (r.parallel = [{}]);
  }
}
function i2(r) {
  var t = we(r.parallelAxis);
  w(t, function(e) {
    if (J(e)) {
      var a = e.parallelIndex || 0, n = we(r.parallel)[a];
      n && n.parallelAxisDefault && le(e, n.parallelAxisDefault, !1);
    }
  });
}
var o2 = 5, s2 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      this._model = e, this._api = n, this._handlers || (this._handlers = {}, w(l2, function(i, o) {
        n.getZr().on(o, this._handlers[o] = U(i, this));
      }, this)), jn(this, "_throttledDispatchExpand", e.get("axisExpandRate"), "fixRate");
    }, t.prototype.dispose = function(e, a) {
      Ki(this, "_throttledDispatchExpand"), w(this._handlers, function(n, i) {
        a.getZr().off(i, n);
      }), this._handlers = null;
    }, t.prototype._throttledDispatchExpand = function(e) {
      this._dispatchExpand(e);
    }, t.prototype._dispatchExpand = function(e) {
      e && this._api.dispatchAction(z({
        type: "parallelAxisExpand"
      }, e));
    }, t.type = "parallel", t;
  }(Re)
), l2 = {
  mousedown: function(r) {
    uc(this, "click") && (this._mouseDownPoint = [r.offsetX, r.offsetY]);
  },
  mouseup: function(r) {
    var t = this._mouseDownPoint;
    if (uc(this, "click") && t) {
      var e = [r.offsetX, r.offsetY], a = Math.pow(t[0] - e[0], 2) + Math.pow(t[1] - e[1], 2);
      if (a > o2)
        return;
      var n = this._model.coordinateSystem.getSlidedAxisExpandWindow([r.offsetX, r.offsetY]);
      n.behavior !== "none" && this._dispatchExpand({
        axisExpandWindow: n.axisExpandWindow
      });
    }
    this._mouseDownPoint = null;
  },
  mousemove: function(r) {
    if (!(this._mouseDownPoint || !uc(this, "mousemove"))) {
      var t = this._model, e = t.coordinateSystem.getSlidedAxisExpandWindow([r.offsetX, r.offsetY]), a = e.behavior;
      a === "jump" && this._throttledDispatchExpand.debounceNextCall(t.get("axisExpandDebounce")), this._throttledDispatchExpand(a === "none" ? null : {
        axisExpandWindow: e.axisExpandWindow,
        // Jumping uses animation, and sliding suppresses animation.
        animation: a === "jump" ? null : {
          duration: 0
          // Disable animation.
        }
      });
    }
  }
};
function uc(r, t) {
  var e = r._model;
  return e.get("axisExpandable") && e.get("axisExpandTriggerOn") === t;
}
var u2 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function() {
      r.prototype.init.apply(this, arguments), this.mergeOption({});
    }, t.prototype.mergeOption = function(e) {
      var a = this.option;
      e && le(a, e, !0), this._initDimensions();
    }, t.prototype.contains = function(e, a) {
      var n = e.get("parallelIndex");
      return n != null && a.getComponent("parallel", n) === this;
    }, t.prototype.setAxisExpand = function(e) {
      w(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth", "axisExpandWindow"], function(a) {
        e.hasOwnProperty(a) && (this.option[a] = e[a]);
      }, this);
    }, t.prototype._initDimensions = function() {
      var e = this.dimensions = [], a = this.parallelAxisIndex = [], n = Ae(this.ecModel.queryComponents({
        mainType: "parallelAxis"
      }), function(i) {
        return (i.get("parallelIndex") || 0) === this.componentIndex;
      }, this);
      w(n, function(i) {
        e.push("dim" + i.get("dim")), a.push(i.componentIndex);
      });
    }, t.type = "parallel", t.dependencies = ["parallelAxis"], t.layoutMode = "box", t.defaultOption = {
      // zlevel: 0,
      z: 0,
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      layout: "horizontal",
      // FIXME
      // naming?
      axisExpandable: !1,
      axisExpandCenter: null,
      axisExpandCount: 0,
      axisExpandWidth: 50,
      axisExpandRate: 17,
      axisExpandDebounce: 50,
      // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.
      // Do not doc to user until necessary.
      axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],
      axisExpandTriggerOn: "click",
      parallelAxisDefault: null
    }, t;
  }(se)
), c2 = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n, i, o) {
      var s = r.call(this, e, a, n) || this;
      return s.type = i || "value", s.axisIndex = o, s;
    }
    return t.prototype.isHorizontal = function() {
      return this.coordinateSystem.getModel().get("layout") !== "horizontal";
    }, t;
  }(rr)
);
function Ka(r, t, e, a, n, i) {
  r = r || 0;
  var o = e[1] - e[0];
  if (n != null && (n = ln(n, [0, o])), i != null && (i = Math.max(i, n ?? 0)), a === "all") {
    var s = Math.abs(t[1] - t[0]);
    s = ln(s, [0, o]), n = i = ln(s, [n, i]), a = 0;
  }
  t[0] = ln(t[0], e), t[1] = ln(t[1], e);
  var l = cc(t, a);
  t[a] += r;
  var u = n || 0, c = e.slice();
  l.sign < 0 ? c[0] += u : c[1] -= u, t[a] = ln(t[a], c);
  var v;
  return v = cc(t, a), n != null && (v.sign !== l.sign || v.span < n) && (t[1 - a] = t[a] + l.sign * n), v = cc(t, a), i != null && v.span > i && (t[1 - a] = t[a] + v.sign * i), t;
}
function cc(r, t) {
  var e = r[t] - r[1 - t];
  return {
    span: Math.abs(e),
    sign: e > 0 ? -1 : e < 0 ? 1 : t ? -1 : 1
  };
}
function ln(r, t) {
  return Math.min(t[1] != null ? t[1] : 1 / 0, Math.max(t[0] != null ? t[0] : -1 / 0, r));
}
var vc = w, N1 = Math.min, R1 = Math.max, oy = Math.floor, v2 = Math.ceil, sy = ze, f2 = Math.PI, h2 = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.type = "parallel", this._axesMap = Z(), this._axesLayout = {}, this.dimensions = t.dimensions, this._model = t, this._init(t, e, a);
    }
    return r.prototype._init = function(t, e, a) {
      var n = t.dimensions, i = t.parallelAxisIndex;
      vc(n, function(o, s) {
        var l = i[s], u = e.getComponent("parallelAxis", l), c = this._axesMap.set(o, new c2(o, Wl(u), [0, 0], u.get("type"), l)), v = c.type === "category";
        c.onBand = v && u.get("boundaryGap"), c.inverse = u.get("inverse"), u.axis = c, c.model = u, c.coordinateSystem = u.coordinateSystem = this;
      }, this);
    }, r.prototype.update = function(t, e) {
      this._updateAxesFromSeries(this._model, t);
    }, r.prototype.containPoint = function(t) {
      var e = this._makeLayoutInfo(), a = e.axisBase, n = e.layoutBase, i = e.pixelDimIndex, o = t[1 - i], s = t[i];
      return o >= a && o <= a + e.axisLength && s >= n && s <= n + e.layoutLength;
    }, r.prototype.getModel = function() {
      return this._model;
    }, r.prototype._updateAxesFromSeries = function(t, e) {
      e.eachSeries(function(a) {
        if (t.contains(a, e)) {
          var n = a.getData();
          vc(this.dimensions, function(i) {
            var o = this._axesMap.get(i);
            o.scale.unionExtentFromData(n, n.mapDimension(i)), Ln(o.scale, o.model);
          }, this);
        }
      }, this);
    }, r.prototype.resize = function(t, e) {
      this._rect = qe(t.getBoxLayoutParams(), {
        width: e.getWidth(),
        height: e.getHeight()
      }), this._layoutAxes();
    }, r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype._makeLayoutInfo = function() {
      var t = this._model, e = this._rect, a = ["x", "y"], n = ["width", "height"], i = t.get("layout"), o = i === "horizontal" ? 0 : 1, s = e[n[o]], l = [0, s], u = this.dimensions.length, c = ns(t.get("axisExpandWidth"), l), v = ns(t.get("axisExpandCount") || 0, [0, u]), f = t.get("axisExpandable") && u > 3 && u > v && v > 1 && c > 0 && s > 0, h = t.get("axisExpandWindow"), p;
      if (h)
        p = ns(h[1] - h[0], l), h[1] = h[0] + p;
      else {
        p = ns(c * (v - 1), l);
        var d = t.get("axisExpandCenter") || oy(u / 2);
        h = [c * d - p / 2], h[1] = h[0] + p;
      }
      var g = (s - p) / (u - v);
      g < 3 && (g = 0);
      var y = [oy(sy(h[0] / c, 1)) + 1, v2(sy(h[1] / c, 1)) - 1], m = g / c * h[0];
      return {
        layout: i,
        pixelDimIndex: o,
        layoutBase: e[a[o]],
        layoutLength: s,
        axisBase: e[a[1 - o]],
        axisLength: e[n[1 - o]],
        axisExpandable: f,
        axisExpandWidth: c,
        axisCollapseWidth: g,
        axisExpandWindow: h,
        axisCount: u,
        winInnerIndices: y,
        axisExpandWindow0Pos: m
      };
    }, r.prototype._layoutAxes = function() {
      var t = this._rect, e = this._axesMap, a = this.dimensions, n = this._makeLayoutInfo(), i = n.layout;
      e.each(function(o) {
        var s = [0, n.axisLength], l = o.inverse ? 1 : 0;
        o.setExtent(s[l], s[1 - l]);
      }), vc(a, function(o, s) {
        var l = (n.axisExpandable ? d2 : p2)(s, n), u = {
          horizontal: {
            x: l.position,
            y: n.axisLength
          },
          vertical: {
            x: 0,
            y: l.position
          }
        }, c = {
          horizontal: f2 / 2,
          vertical: 0
        }, v = [u[i].x + t.x, u[i].y + t.y], f = c[i], h = zn();
        co(h, h, f), ka(h, h, v), this._axesLayout[o] = {
          position: v,
          rotation: f,
          transform: h,
          axisNameAvailableWidth: l.axisNameAvailableWidth,
          axisLabelShow: l.axisLabelShow,
          nameTruncateMaxWidth: l.nameTruncateMaxWidth,
          tickDirection: 1,
          labelDirection: 1
        };
      }, this);
    }, r.prototype.getAxis = function(t) {
      return this._axesMap.get(t);
    }, r.prototype.dataToPoint = function(t, e) {
      return this.axisCoordToPoint(this._axesMap.get(e).dataToCoord(t), e);
    }, r.prototype.eachActiveState = function(t, e, a, n) {
      a == null && (a = 0), n == null && (n = t.count());
      var i = this._axesMap, o = this.dimensions, s = [], l = [];
      w(o, function(g) {
        s.push(t.mapDimension(g)), l.push(i.get(g).model);
      });
      for (var u = this.hasAxisBrushed(), c = a; c < n; c++) {
        var v = void 0;
        if (!u)
          v = "normal";
        else {
          v = "active";
          for (var f = t.getValues(s, c), h = 0, p = o.length; h < p; h++) {
            var d = l[h].getActiveState(f[h]);
            if (d === "inactive") {
              v = "inactive";
              break;
            }
          }
        }
        e(v, c);
      }
    }, r.prototype.hasAxisBrushed = function() {
      for (var t = this.dimensions, e = this._axesMap, a = !1, n = 0, i = t.length; n < i; n++)
        e.get(t[n]).model.getActiveState() !== "normal" && (a = !0);
      return a;
    }, r.prototype.axisCoordToPoint = function(t, e) {
      var a = this._axesLayout[e];
      return Jt([t, 0], a.transform);
    }, r.prototype.getAxisLayout = function(t) {
      return Q(this._axesLayout[t]);
    }, r.prototype.getSlidedAxisExpandWindow = function(t) {
      var e = this._makeLayoutInfo(), a = e.pixelDimIndex, n = e.axisExpandWindow.slice(), i = n[1] - n[0], o = [0, e.axisExpandWidth * (e.axisCount - 1)];
      if (!this.containPoint(t))
        return {
          behavior: "none",
          axisExpandWindow: n
        };
      var s = t[a] - e.layoutBase - e.axisExpandWindow0Pos, l, u = "slide", c = e.axisCollapseWidth, v = this._model.get("axisExpandSlideTriggerArea"), f = v[0] != null;
      if (c)
        f && c && s < i * v[0] ? (u = "jump", l = s - i * v[2]) : f && c && s > i * (1 - v[0]) ? (u = "jump", l = s - i * (1 - v[2])) : (l = s - i * v[1]) >= 0 && (l = s - i * (1 - v[1])) <= 0 && (l = 0), l *= e.axisExpandWidth / c, l ? Ka(l, n, o, "all") : u = "none";
      else {
        var h = n[1] - n[0], p = o[1] * s / h;
        n = [R1(0, p - h / 2)], n[1] = N1(o[1], n[0] + h), n[0] = n[1] - h;
      }
      return {
        axisExpandWindow: n,
        behavior: u
      };
    }, r;
  }()
);
function ns(r, t) {
  return N1(R1(r, t[0]), t[1]);
}
function p2(r, t) {
  var e = t.layoutLength / (t.axisCount - 1);
  return {
    position: e * r,
    axisNameAvailableWidth: e,
    axisLabelShow: !0
  };
}
function d2(r, t) {
  var e = t.layoutLength, a = t.axisExpandWidth, n = t.axisCount, i = t.axisCollapseWidth, o = t.winInnerIndices, s, l = i, u = !1, c;
  return r < o[0] ? (s = r * i, c = i) : r <= o[1] ? (s = t.axisExpandWindow0Pos + r * a - t.axisExpandWindow[0], l = a, u = !0) : (s = e - (n - 1 - r) * i, c = i), {
    position: s,
    axisNameAvailableWidth: l,
    axisLabelShow: u,
    nameTruncateMaxWidth: c
  };
}
function g2(r, t) {
  var e = [];
  return r.eachComponent("parallel", function(a, n) {
    var i = new h2(a, r, t);
    i.name = "parallel_" + n, i.resize(a, t), a.coordinateSystem = i, i.model = a, e.push(i);
  }), r.eachSeries(function(a) {
    if (a.get("coordinateSystem") === "parallel") {
      var n = a.getReferringComponents("parallel", Ye).models[0];
      a.coordinateSystem = n.coordinateSystem;
    }
  }), e;
}
var y2 = {
  create: g2
}, Nv = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.activeIntervals = [], e;
    }
    return t.prototype.getAreaSelectStyle = function() {
      return Ba([
        ["fill", "color"],
        ["lineWidth", "borderWidth"],
        ["stroke", "borderColor"],
        ["width", "width"],
        ["opacity", "opacity"]
        // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
        // So do not transfer decal directly.
      ])(this.getModel("areaSelectStyle"));
    }, t.prototype.setActiveIntervals = function(e) {
      var a = this.activeIntervals = Q(e);
      if (a)
        for (var n = a.length - 1; n >= 0; n--)
          zt(a[n]);
    }, t.prototype.getActiveState = function(e) {
      var a = this.activeIntervals;
      if (!a.length)
        return "normal";
      if (e == null || isNaN(+e))
        return "inactive";
      if (a.length === 1) {
        var n = a[0];
        if (n[0] <= e && e <= n[1])
          return "active";
      } else
        for (var i = 0, o = a.length; i < o; i++)
          if (a[i][0] <= e && e <= a[i][1])
            return "active";
      return "inactive";
    }, t;
  }(se)
);
at(Nv, _o);
var ma = { env: {} }, Fa = !0, no = Math.min, Nn = Math.max, m2 = Math.pow, _2 = 1e4, S2 = 6, x2 = 6, ly = "globalPan", b2 = {
  w: [0, 0],
  e: [0, 1],
  n: [1, 0],
  s: [1, 1]
}, w2 = {
  w: "ew",
  e: "ew",
  n: "ns",
  s: "ns",
  ne: "nesw",
  sw: "nesw",
  nw: "nwse",
  se: "nwse"
}, uy = {
  brushStyle: {
    lineWidth: 2,
    stroke: "rgba(210,219,238,0.3)",
    fill: "#D2DBEE"
  },
  transformable: !0,
  brushMode: "single",
  removeOnClick: !1
}, D2 = 0, ph = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this) || this;
      return a._track = [], a._covers = [], a._handlers = {}, ma.env.NODE_ENV !== "production" && K(e), a._zr = e, a.group = new re(), a._uid = "brushController_" + D2++, w(E2, function(n, i) {
        this._handlers[i] = U(n, this);
      }, a), a;
    }
    return t.prototype.enableBrush = function(e) {
      return ma.env.NODE_ENV !== "production" && K(this._mounted), this._brushType && this._doDisableBrush(), e.brushType && this._doEnableBrush(e), this;
    }, t.prototype._doEnableBrush = function(e) {
      var a = this._zr;
      this._enableGlobalPan || mE(a, ly, this._uid), w(this._handlers, function(n, i) {
        a.on(i, n);
      }), this._brushType = e.brushType, this._brushOption = le(Q(uy), e, !0);
    }, t.prototype._doDisableBrush = function() {
      var e = this._zr;
      _E(e, ly, this._uid), w(this._handlers, function(a, n) {
        e.off(n, a);
      }), this._brushType = this._brushOption = null;
    }, t.prototype.setPanels = function(e) {
      if (e && e.length) {
        var a = this._panels = {};
        w(e, function(n) {
          a[n.panelId] = Q(n);
        });
      } else
        this._panels = null;
      return this;
    }, t.prototype.mount = function(e) {
      e = e || {}, ma.env.NODE_ENV !== "production" && (this._mounted = !0), this._enableGlobalPan = e.enableGlobalPan;
      var a = this.group;
      return this._zr.add(a), a.attr({
        x: e.x || 0,
        y: e.y || 0,
        rotation: e.rotation || 0,
        scaleX: e.scaleX || 1,
        scaleY: e.scaleY || 1
      }), this._transform = a.getLocalTransform(), this;
    }, t.prototype.updateCovers = function(e) {
      ma.env.NODE_ENV !== "production" && K(this._mounted), e = G(e, function(f) {
        return le(Q(uy), f, !0);
      });
      var a = "\0-brush-index-", n = this._covers, i = this._covers = [], o = this, s = this._creatingCover;
      return new Cr(n, e, u, l).add(c).update(c).remove(v).execute(), this;
      function l(f, h) {
        return (f.id != null ? f.id : a + h) + "-" + f.brushType;
      }
      function u(f, h) {
        return l(f.__brushOption, h);
      }
      function c(f, h) {
        var p = e[f];
        if (h != null && n[h] === s)
          i[f] = n[h];
        else {
          var d = i[f] = h != null ? (n[h].__brushOption = p, n[h]) : O1(o, k1(o, p));
          dh(o, d);
        }
      }
      function v(f) {
        n[f] !== s && o.group.remove(n[f]);
      }
    }, t.prototype.unmount = function() {
      if (!(ma.env.NODE_ENV !== "production" && !this._mounted))
        return this.enableBrush(!1), Rv(this), this._zr.remove(this.group), ma.env.NODE_ENV !== "production" && (this._mounted = !1), this;
    }, t.prototype.dispose = function() {
      this.unmount(), this.off();
    }, t;
  }(Bn)
);
function k1(r, t) {
  var e = Zl[t.brushType].createCover(r, t);
  return e.__brushOption = t, B1(e, t), r.group.add(e), e;
}
function O1(r, t) {
  var e = gh(t);
  return e.endCreating && (e.endCreating(r, t), B1(t, t.__brushOption)), t;
}
function V1(r, t) {
  var e = t.__brushOption;
  gh(t).updateCoverShape(r, t, e.range, e);
}
function B1(r, t) {
  var e = t.z;
  e == null && (e = _2), r.traverse(function(a) {
    a.z = e, a.z2 = e;
  });
}
function dh(r, t) {
  gh(t).updateCommon(r, t), V1(r, t);
}
function gh(r) {
  return Zl[r.__brushOption.brushType];
}
function yh(r, t, e) {
  var a = r._panels;
  if (!a)
    return Fa;
  var n, i = r._transform;
  return w(a, function(o) {
    o.isTargetByCursor(t, e, i) && (n = o);
  }), n;
}
function z1(r, t) {
  var e = r._panels;
  if (!e)
    return Fa;
  var a = t.__brushOption.panelId;
  return a != null ? e[a] : Fa;
}
function Rv(r) {
  var t = r._covers, e = t.length;
  return w(t, function(a) {
    r.group.remove(a);
  }, r), t.length = 0, !!e;
}
function Ha(r, t) {
  var e = G(r._covers, function(a) {
    var n = a.__brushOption, i = Q(n.range);
    return {
      brushType: n.brushType,
      panelId: n.panelId,
      range: i
    };
  });
  r.trigger("brush", {
    areas: e,
    isEnd: !!t.isEnd,
    removeOnClick: !!t.removeOnClick
  });
}
function A2(r) {
  var t = r._track;
  if (!t.length)
    return !1;
  var e = t[t.length - 1], a = t[0], n = e[0] - a[0], i = e[1] - a[1], o = m2(n * n + i * i, 0.5);
  return o > S2;
}
function G1(r) {
  var t = r.length - 1;
  return t < 0 && (t = 0), [r[0], r[t]];
}
function F1(r, t, e, a) {
  var n = new re();
  return n.add(new de({
    name: "main",
    style: mh(e),
    silent: !0,
    draggable: !0,
    cursor: "move",
    drift: te(cy, r, t, n, ["n", "s", "w", "e"]),
    ondragend: te(Ha, t, {
      isEnd: !0
    })
  })), w(a, function(i) {
    n.add(new de({
      name: i.join(""),
      style: {
        opacity: 0
      },
      draggable: !0,
      silent: !0,
      invisible: !0,
      drift: te(cy, r, t, n, i),
      ondragend: te(Ha, t, {
        isEnd: !0
      })
    }));
  }), n;
}
function H1(r, t, e, a) {
  var n = a.brushStyle.lineWidth || 0, i = Nn(n, x2), o = e[0][0], s = e[1][0], l = o - n / 2, u = s - n / 2, c = e[0][1], v = e[1][1], f = c - i + n / 2, h = v - i + n / 2, p = c - o, d = v - s, g = p + n, y = d + n;
  yr(r, t, "main", o, s, p, d), a.transformable && (yr(r, t, "w", l, u, i, y), yr(r, t, "e", f, u, i, y), yr(r, t, "n", l, u, g, i), yr(r, t, "s", l, h, g, i), yr(r, t, "nw", l, u, i, i), yr(r, t, "ne", f, u, i, i), yr(r, t, "sw", l, h, i, i), yr(r, t, "se", f, h, i, i));
}
function kv(r, t) {
  var e = t.__brushOption, a = e.transformable, n = t.childAt(0);
  n.useStyle(mh(e)), n.attr({
    silent: !a,
    cursor: a ? "move" : "default"
  }), w([["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]], function(i) {
    var o = t.childOfName(i.join("")), s = i.length === 1 ? Ov(r, i[0]) : C2(r, i);
    o && o.attr({
      silent: !a,
      invisible: !a,
      cursor: a ? w2[s] + "-resize" : null
    });
  });
}
function yr(r, t, e, a, n, i, o) {
  var s = t.childOfName(e);
  s && s.setShape(I2(_h(r, t, [[a, n], [a + i, n + o]])));
}
function mh(r) {
  return ee({
    strokeNoScale: !0
  }, r.brushStyle);
}
function W1(r, t, e, a) {
  var n = [no(r, e), no(t, a)], i = [Nn(r, e), Nn(t, a)];
  return [
    [n[0], i[0]],
    [n[1], i[1]]
    // y range
  ];
}
function T2(r) {
  return La(r.group);
}
function Ov(r, t) {
  var e = {
    w: "left",
    e: "right",
    n: "top",
    s: "bottom"
  }, a = {
    left: "w",
    right: "e",
    top: "n",
    bottom: "s"
  }, n = Cl(e[t], T2(r));
  return a[n];
}
function C2(r, t) {
  var e = [Ov(r, t[0]), Ov(r, t[1])];
  return (e[0] === "e" || e[0] === "w") && e.reverse(), e.join("");
}
function cy(r, t, e, a, n, i) {
  var o = e.__brushOption, s = r.toRectRange(o.range), l = U1(t, n, i);
  w(a, function(u) {
    var c = b2[u];
    s[c[0]][c[1]] += l[c[0]];
  }), o.range = r.fromRectRange(W1(s[0][0], s[1][0], s[0][1], s[1][1])), dh(t, e), Ha(t, {
    isEnd: !1
  });
}
function M2(r, t, e, a) {
  var n = t.__brushOption.range, i = U1(r, e, a);
  w(n, function(o) {
    o[0] += i[0], o[1] += i[1];
  }), dh(r, t), Ha(r, {
    isEnd: !1
  });
}
function U1(r, t, e) {
  var a = r.group, n = a.transformCoordToLocal(t, e), i = a.transformCoordToLocal(0, 0);
  return [n[0] - i[0], n[1] - i[1]];
}
function _h(r, t, e) {
  var a = z1(r, t);
  return a && a !== Fa ? a.clipPath(e, r._transform) : Q(e);
}
function I2(r) {
  var t = no(r[0][0], r[1][0]), e = no(r[0][1], r[1][1]), a = Nn(r[0][0], r[1][0]), n = Nn(r[0][1], r[1][1]);
  return {
    x: t,
    y: e,
    width: a - t,
    height: n - e
  };
}
function L2(r, t, e) {
  if (
    // Check active
    !(!r._brushType || P2(r, t.offsetX, t.offsetY))
  ) {
    var a = r._zr, n = r._covers, i = yh(r, t, e);
    if (!r._dragging)
      for (var o = 0; o < n.length; o++) {
        var s = n[o].__brushOption;
        if (i && (i === Fa || s.panelId === i.panelId) && Zl[s.brushType].contain(n[o], e[0], e[1]))
          return;
      }
    i && a.setCursorStyle("crosshair");
  }
}
function Vv(r) {
  var t = r.event;
  t.preventDefault && t.preventDefault();
}
function Bv(r, t, e) {
  return r.childOfName("main").contain(t, e);
}
function $1(r, t, e, a) {
  var n = r._creatingCover, i = r._creatingPanel, o = r._brushOption, s;
  if (r._track.push(e.slice()), A2(r) || n) {
    if (i && !n) {
      o.brushMode === "single" && Rv(r);
      var l = Q(o);
      l.brushType = vy(l.brushType, i), l.panelId = i === Fa ? null : i.panelId, n = r._creatingCover = k1(r, l), r._covers.push(n);
    }
    if (n) {
      var u = Zl[vy(r._brushType, i)], c = n.__brushOption;
      c.range = u.getCreatingRange(_h(r, n, r._track)), a && (O1(r, n), u.updateCommon(r, n)), V1(r, n), s = {
        isEnd: a
      };
    }
  } else a && o.brushMode === "single" && o.removeOnClick && yh(r, t, e) && Rv(r) && (s = {
    isEnd: a,
    removeOnClick: !0
  });
  return s;
}
function vy(r, t) {
  return r === "auto" ? (ma.env.NODE_ENV !== "production" && K(t && t.defaultBrushType, 'MUST have defaultBrushType when brushType is "atuo"'), t.defaultBrushType) : r;
}
var E2 = {
  mousedown: function(r) {
    if (this._dragging)
      fy(this, r);
    else if (!r.target || !r.target.draggable) {
      Vv(r);
      var t = this.group.transformCoordToLocal(r.offsetX, r.offsetY);
      this._creatingCover = null;
      var e = this._creatingPanel = yh(this, r, t);
      e && (this._dragging = !0, this._track = [t.slice()]);
    }
  },
  mousemove: function(r) {
    var t = r.offsetX, e = r.offsetY, a = this.group.transformCoordToLocal(t, e);
    if (L2(this, r, a), this._dragging) {
      Vv(r);
      var n = $1(this, r, a, !1);
      n && Ha(this, n);
    }
  },
  mouseup: function(r) {
    fy(this, r);
  }
};
function fy(r, t) {
  if (r._dragging) {
    Vv(t);
    var e = t.offsetX, a = t.offsetY, n = r.group.transformCoordToLocal(e, a), i = $1(r, t, n, !0);
    r._dragging = !1, r._track = [], r._creatingCover = null, i && Ha(r, i);
  }
}
function P2(r, t, e) {
  var a = r._zr;
  return t < 0 || t > a.getWidth() || e < 0 || e > a.getHeight();
}
var Zl = {
  lineX: hy(0),
  lineY: hy(1),
  rect: {
    createCover: function(r, t) {
      function e(a) {
        return a;
      }
      return F1({
        toRectRange: e,
        fromRectRange: e
      }, r, t, [["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]]);
    },
    getCreatingRange: function(r) {
      var t = G1(r);
      return W1(t[1][0], t[1][1], t[0][0], t[0][1]);
    },
    updateCoverShape: function(r, t, e, a) {
      H1(r, t, e, a);
    },
    updateCommon: kv,
    contain: Bv
  },
  polygon: {
    createCover: function(r, t) {
      var e = new re();
      return e.add(new Ct({
        name: "main",
        style: mh(t),
        silent: !0
      })), e;
    },
    getCreatingRange: function(r) {
      return r;
    },
    endCreating: function(r, t) {
      t.remove(t.childAt(0)), t.add(new Wt({
        name: "main",
        draggable: !0,
        drift: te(M2, r, t),
        ondragend: te(Ha, r, {
          isEnd: !0
        })
      }));
    },
    updateCoverShape: function(r, t, e, a) {
      t.childAt(0).setShape({
        points: _h(r, t, e)
      });
    },
    updateCommon: kv,
    contain: Bv
  }
};
function hy(r) {
  return {
    createCover: function(t, e) {
      return F1({
        toRectRange: function(a) {
          var n = [a, [0, 100]];
          return r && n.reverse(), n;
        },
        fromRectRange: function(a) {
          return a[r];
        }
      }, t, e, [[["w"], ["e"]], [["n"], ["s"]]][r]);
    },
    getCreatingRange: function(t) {
      var e = G1(t), a = no(e[0][r], e[1][r]), n = Nn(e[0][r], e[1][r]);
      return [a, n];
    },
    updateCoverShape: function(t, e, a, n) {
      var i, o = z1(t, e);
      if (o !== Fa && o.getLinearBrushOtherExtent)
        i = o.getLinearBrushOtherExtent(r);
      else {
        var s = t._zr;
        i = [0, [s.getWidth(), s.getHeight()][1 - r]];
      }
      var l = [a, i];
      r && l.reverse(), H1(t, e, l, n);
    },
    updateCommon: kv,
    contain: Bv
  };
}
function Y1(r) {
  return r = Sh(r), function(t) {
    return x_(t, r);
  };
}
function Z1(r, t) {
  return r = Sh(r), function(e) {
    var a = t ?? e, n = a ? r.width : r.height, i = a ? r.x : r.y;
    return [i, i + (n || 0)];
  };
}
function X1(r, t, e) {
  var a = Sh(r);
  return function(n, i) {
    return a.contain(i[0], i[1]) && !Ul(n, t, e);
  };
}
function Sh(r) {
  return Te.create(r);
}
var N2 = ["axisLine", "axisTickLabel", "axisName"], R2 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e, a) {
      r.prototype.init.apply(this, arguments), (this._brushController = new ph(a.getZr())).on("brush", U(this._onBrush, this));
    }, t.prototype.render = function(e, a, n, i) {
      if (!k2(e, a, i)) {
        this.axisModel = e, this.api = n, this.group.removeAll();
        var o = this._axisGroup;
        if (this._axisGroup = new re(), this.group.add(this._axisGroup), !!e.get("show")) {
          var s = V2(e, a), l = s.coordinateSystem, u = e.getAreaSelectStyle(), c = u.width, v = e.axis.dim, f = l.getAxisLayout(v), h = z({
            strokeContainThreshold: c
          }, f), p = new mt(e, h);
          w(N2, p.add, p), this._axisGroup.add(p.getGroup()), this._refreshBrushController(h, u, e, s, c, n), po(o, this._axisGroup, e);
        }
      }
    }, t.prototype._refreshBrushController = function(e, a, n, i, o, s) {
      var l = n.axis.getExtent(), u = l[1] - l[0], c = Math.min(30, Math.abs(u) * 0.1), v = Te.create({
        x: l[0],
        y: -o / 2,
        width: u,
        height: o
      });
      v.x -= c, v.width += 2 * c, this._brushController.mount({
        enableGlobalPan: !0,
        rotation: e.rotation,
        x: e.position[0],
        y: e.position[1]
      }).setPanels([{
        panelId: "pl",
        clipPath: Y1(v),
        isTargetByCursor: X1(v, s, i),
        getLinearBrushOtherExtent: Z1(v, 0)
      }]).enableBrush({
        brushType: "lineX",
        brushStyle: a,
        removeOnClick: !0
      }).updateCovers(O2(n));
    }, t.prototype._onBrush = function(e) {
      var a = e.areas, n = this.axisModel, i = n.axis, o = G(a, function(s) {
        return [i.coordToData(s.range[0], !0), i.coordToData(s.range[1], !0)];
      });
      (!n.option.realtime === e.isEnd || e.removeOnClick) && this.api.dispatchAction({
        type: "axisAreaSelect",
        parallelAxisId: n.id,
        intervals: o
      });
    }, t.prototype.dispose = function() {
      this._brushController.dispose();
    }, t.type = "parallelAxis", t;
  }(Re)
);
function k2(r, t, e) {
  return e && e.type === "axisAreaSelect" && t.findComponents({
    mainType: "parallelAxis",
    query: e
  })[0] === r;
}
function O2(r) {
  var t = r.axis;
  return G(r.activeIntervals, function(e) {
    return {
      brushType: "lineX",
      panelId: "pl",
      range: [t.dataToCoord(e[0], !0), t.dataToCoord(e[1], !0)]
    };
  });
}
function V2(r, t) {
  return t.getComponent("parallel", r.get("parallelIndex"));
}
var B2 = {
  type: "axisAreaSelect",
  event: "axisAreaSelected"
  // update: 'updateVisual'
};
function z2(r) {
  r.registerAction(B2, function(t, e) {
    e.eachComponent({
      mainType: "parallelAxis",
      query: t
    }, function(a) {
      a.axis.model.setActiveIntervals(t.intervals);
    });
  }), r.registerAction("parallelAxisExpand", function(t, e) {
    e.eachComponent({
      mainType: "parallel",
      query: t
    }, function(a) {
      a.setAxisExpand(t);
    });
  });
}
var G2 = {
  type: "value",
  areaSelectStyle: {
    width: 20,
    borderWidth: 1,
    borderColor: "rgba(160,197,232)",
    color: "rgba(160,197,232)",
    opacity: 0.3
  },
  realtime: !0,
  z: 10
};
function K1(r) {
  r.registerComponentView(s2), r.registerComponentModel(u2), r.registerCoordinateSystem("parallel", y2), r.registerPreprocessor(a2), r.registerComponentModel(Nv), r.registerComponentView(R2), Pn(r, "parallel", Nv, G2), z2(r);
}
function F2(r) {
  oe(K1), r.registerChartView(KN), r.registerSeriesModel(JN), r.registerVisual(r.PRIORITY.VISUAL.BRUSH, r2);
}
var H2 = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.cpx2 = 0, this.cpy2 = 0, this.extent = 0;
    }
    return r;
  }()
), W2 = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      return r.call(this, e) || this;
    }
    return t.prototype.getDefaultShape = function() {
      return new H2();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.extent;
      e.moveTo(a.x1, a.y1), e.bezierCurveTo(a.cpx1, a.cpy1, a.cpx2, a.cpy2, a.x2, a.y2), a.orient === "vertical" ? (e.lineTo(a.x2 + n, a.y2), e.bezierCurveTo(a.cpx2 + n, a.cpy2, a.cpx1 + n, a.cpy1, a.x1 + n, a.y1)) : (e.lineTo(a.x2, a.y2 + n), e.bezierCurveTo(a.cpx2, a.cpy2 + n, a.cpx1, a.cpy1 + n, a.x1, a.y1 + n)), e.closePath();
    }, t.prototype.highlight = function() {
      Ar(this);
    }, t.prototype.downplay = function() {
      Tr(this);
    }, t;
  }(Ee)
), U2 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._focusAdjacencyDisabled = !1, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = this, o = e.getGraph(), s = this.group, l = e.layoutInfo, u = l.width, c = l.height, v = e.getData(), f = e.getData("edge"), h = e.get("orient");
      this._model = e, s.removeAll(), s.x = l.x, s.y = l.y, o.eachEdge(function(p) {
        var d = new W2(), g = j(d);
        g.dataIndex = p.dataIndex, g.seriesIndex = e.seriesIndex, g.dataType = "edge";
        var y = p.getModel(), m = y.getModel("lineStyle"), _ = m.get("curveness"), S = p.node1.getLayout(), x = p.node1.getModel(), b = x.get("localX"), D = x.get("localY"), A = p.node2.getLayout(), T = p.node2.getModel(), C = T.get("localX"), M = T.get("localY"), I = p.getLayout(), L, P, E, N, O, k, V, F;
        d.shape.extent = Math.max(1, I.dy), d.shape.orient = h, h === "vertical" ? (L = (b != null ? b * u : S.x) + I.sy, P = (D != null ? D * c : S.y) + S.dy, E = (C != null ? C * u : A.x) + I.ty, N = M != null ? M * c : A.y, O = L, k = P * (1 - _) + N * _, V = E, F = P * _ + N * (1 - _)) : (L = (b != null ? b * u : S.x) + S.dx, P = (D != null ? D * c : S.y) + I.sy, E = C != null ? C * u : A.x, N = (M != null ? M * c : A.y) + I.ty, O = L * (1 - _) + E * _, k = P, V = L * _ + E * (1 - _), F = N), d.setShape({
          x1: L,
          y1: P,
          x2: E,
          y2: N,
          cpx1: O,
          cpy1: k,
          cpx2: V,
          cpy2: F
        }), d.useStyle(m.getItemStyle()), py(d.style, h, p);
        var W = "" + y.get("value"), q = tt(y, "edgeLabel");
        lt(d, q, {
          labelFetcher: {
            getFormattedLabel: function(ge, Se, he, ne, Ce, be) {
              return e.getFormattedLabel(
                ge,
                Se,
                "edge",
                ne,
                // ensure edgeLabel formatter is provided
                // to prevent the inheritance from `label.formatter` of the series
                na(Ce, q.normal && q.normal.get("formatter"), W),
                be
              );
            }
          },
          labelDataIndex: p.dataIndex,
          defaultText: W
        }), d.setTextConfig({
          position: "inside"
        });
        var ae = y.getModel("emphasis");
        st(d, y, "lineStyle", function(ge) {
          var Se = ge.getItemStyle();
          return py(Se, h, p), Se;
        }), s.add(d), f.setItemGraphicEl(p.dataIndex, d);
        var ie = ae.get("focus");
        Be(d, ie === "adjacency" ? p.getAdjacentDataIndices() : ie === "trajectory" ? p.getTrajectoryDataIndices() : ie, ae.get("blurScope"), ae.get("disabled"));
      }), o.eachNode(function(p) {
        var d = p.getLayout(), g = p.getModel(), y = g.get("localX"), m = g.get("localY"), _ = g.getModel("emphasis"), S = g.get(["itemStyle", "borderRadius"]) || 0, x = new de({
          shape: {
            x: y != null ? y * u : d.x,
            y: m != null ? m * c : d.y,
            width: d.dx,
            height: d.dy,
            r: S
          },
          style: g.getModel("itemStyle").getItemStyle(),
          z2: 10
        });
        lt(x, tt(g), {
          labelFetcher: {
            getFormattedLabel: function(D, A) {
              return e.getFormattedLabel(D, A, "node");
            }
          },
          labelDataIndex: p.dataIndex,
          defaultText: p.id
        }), x.disableLabelAnimation = !0, x.setStyle("fill", p.getVisual("color")), x.setStyle("decal", p.getVisual("style").decal), st(x, g), s.add(x), v.setItemGraphicEl(p.dataIndex, x), j(x).dataType = "node";
        var b = _.get("focus");
        Be(x, b === "adjacency" ? p.getAdjacentDataIndices() : b === "trajectory" ? p.getTrajectoryDataIndices() : b, _.get("blurScope"), _.get("disabled"));
      }), v.eachItemGraphicEl(function(p, d) {
        var g = v.getItemModel(d);
        g.get("draggable") && (p.drift = function(y, m) {
          i._focusAdjacencyDisabled = !0, this.shape.x += y, this.shape.y += m, this.dirty(), n.dispatchAction({
            type: "dragNode",
            seriesId: e.id,
            dataIndex: v.getRawIndex(d),
            localX: this.shape.x / u,
            localY: this.shape.y / c
          });
        }, p.ondragend = function() {
          i._focusAdjacencyDisabled = !1;
        }, p.draggable = !0, p.cursor = "move");
      }), !this._data && e.isAnimationEnabled() && s.setClipPath($2(s.getBoundingRect(), e, function() {
        s.removeClipPath();
      })), this._data = e.getData();
    }, t.prototype.dispose = function() {
    }, t.type = "sankey", t;
  }(De)
);
function py(r, t, e) {
  switch (r.fill) {
    case "source":
      r.fill = e.node1.getVisual("color"), r.decal = e.node1.getVisual("style").decal;
      break;
    case "target":
      r.fill = e.node2.getVisual("color"), r.decal = e.node2.getVisual("style").decal;
      break;
    case "gradient":
      var a = e.node1.getVisual("color"), n = e.node2.getVisual("color");
      Y(a) && Y(n) && (r.fill = new ml(0, 0, +(t === "horizontal"), +(t === "vertical"), [{
        color: a,
        offset: 0
      }, {
        color: n,
        offset: 1
      }]));
  }
}
function $2(r, t, e) {
  var a = new de({
    shape: {
      x: r.x - 10,
      y: r.y - 10,
      width: 0,
      height: r.height + 20
    }
  });
  return Pe(a, {
    shape: {
      width: r.width + 20
    }
  }, t, e), a;
}
var Y2 = { env: {} }, Z2 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.getInitialData = function(e, a) {
      var n = e.edges || e.links, i = e.data || e.nodes, o = e.levels;
      this.levelModels = [];
      for (var s = this.levelModels, l = 0; l < o.length; l++)
        if (o[l].depth != null && o[l].depth >= 0)
          s[o[l].depth] = new me(o[l], this, a);
        else if (Y2.env.NODE_ENV !== "production")
          throw new Error("levels[i].depth is mandatory and should be natural number");
      if (i && n) {
        var u = E1(i, n, this, !0, c);
        return u.data;
      }
      function c(v, f) {
        v.wrapMethod("getItemModel", function(h, p) {
          var d = h.parentModel, g = d.getData().getItemLayout(p);
          if (g) {
            var y = g.depth, m = d.levelModels[y];
            m && (h.parentModel = m);
          }
          return h;
        }), f.wrapMethod("getItemModel", function(h, p) {
          var d = h.parentModel, g = d.getGraph().getEdgeByIndex(p), y = g.node1.getLayout();
          if (y) {
            var m = y.depth, _ = d.levelModels[m];
            _ && (h.parentModel = _);
          }
          return h;
        });
      }
    }, t.prototype.setNodePosition = function(e, a) {
      var n = this.option.data || this.option.nodes, i = n[e];
      i.localX = a[0], i.localY = a[1];
    }, t.prototype.getGraph = function() {
      return this.getData().graph;
    }, t.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, t.prototype.formatTooltip = function(e, a, n) {
      function i(h) {
        return isNaN(h) || h == null;
      }
      if (n === "edge") {
        var o = this.getDataParams(e, n), s = o.data, l = o.value, u = s.source + " -- " + s.target;
        return rt("nameValue", {
          name: u,
          value: l,
          noValue: i(l)
        });
      } else {
        var c = this.getGraph().getNodeByIndex(e), v = c.getLayout().value, f = this.getDataParams(e, n).data.name;
        return rt("nameValue", {
          name: f != null ? f + "" : null,
          value: v,
          noValue: i(v)
        });
      }
    }, t.prototype.optionUpdated = function() {
    }, t.prototype.getDataParams = function(e, a) {
      var n = r.prototype.getDataParams.call(this, e, a);
      if (n.value == null && a === "node") {
        var i = this.getGraph().getNodeByIndex(e), o = i.getLayout().value;
        n.value = o;
      }
      return n;
    }, t.type = "series.sankey", t.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      left: "5%",
      top: "5%",
      right: "20%",
      bottom: "5%",
      orient: "horizontal",
      nodeWidth: 20,
      nodeGap: 8,
      draggable: !0,
      layoutIterations: 32,
      label: {
        show: !0,
        position: "right",
        fontSize: 12
      },
      edgeLabel: {
        show: !1,
        fontSize: 12
      },
      levels: [],
      nodeAlign: "justify",
      lineStyle: {
        color: "#314656",
        opacity: 0.2,
        curveness: 0.5
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          opacity: 0.5
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      animationEasing: "linear",
      animationDuration: 1e3
    }, t;
  }(Le)
);
function X2(r, t) {
  r.eachSeriesByType("sankey", function(e) {
    var a = e.get("nodeWidth"), n = e.get("nodeGap"), i = K2(e, t);
    e.layoutInfo = i;
    var o = i.width, s = i.height, l = e.getGraph(), u = l.nodes, c = l.edges;
    j2(u);
    var v = Ae(u, function(d) {
      return d.getLayout().value === 0;
    }), f = v.length !== 0 ? 0 : e.get("layoutIterations"), h = e.get("orient"), p = e.get("nodeAlign");
    q2(u, c, a, n, o, s, f, h, p);
  });
}
function K2(r, t) {
  return qe(r.getBoxLayoutParams(), {
    width: t.getWidth(),
    height: t.getHeight()
  });
}
function q2(r, t, e, a, n, i, o, s, l) {
  J2(r, t, e, n, i, s, l), rR(r, t, i, n, a, o, s), vR(r, s);
}
function j2(r) {
  w(r, function(t) {
    var e = Kr(t.outEdges, il), a = Kr(t.inEdges, il), n = t.getValue() || 0, i = Math.max(e, a, n);
    t.setLayout({
      value: i
    }, !0);
  });
}
function J2(r, t, e, a, n, i, o) {
  for (var s = [], l = [], u = [], c = [], v = 0, f = 0; f < t.length; f++)
    s[f] = 1;
  for (var f = 0; f < r.length; f++)
    l[f] = r[f].inEdges.length, l[f] === 0 && u.push(r[f]);
  for (var h = -1; u.length; ) {
    for (var p = 0; p < u.length; p++) {
      var d = u[p], g = d.hostGraph.data.getRawDataItem(d.dataIndex), y = g.depth != null && g.depth >= 0;
      y && g.depth > h && (h = g.depth), d.setLayout({
        depth: y ? g.depth : v
      }, !0), i === "vertical" ? d.setLayout({
        dy: e
      }, !0) : d.setLayout({
        dx: e
      }, !0);
      for (var m = 0; m < d.outEdges.length; m++) {
        var _ = d.outEdges[m], S = t.indexOf(_);
        s[S] = 0;
        var x = _.node2, b = r.indexOf(x);
        --l[b] === 0 && c.indexOf(x) < 0 && c.push(x);
      }
    }
    ++v, u = c, c = [];
  }
  for (var f = 0; f < s.length; f++)
    if (s[f] === 1)
      throw new Error("Sankey is a DAG, the original data has cycle!");
  var D = h > v - 1 ? h : v - 1;
  o && o !== "left" && Q2(r, o, i, D);
  var A = i === "vertical" ? (n - e) / D : (a - e) / D;
  tR(r, A, i);
}
function q1(r) {
  var t = r.hostGraph.data.getRawDataItem(r.dataIndex);
  return t.depth != null && t.depth >= 0;
}
function Q2(r, t, e, a) {
  if (t === "right") {
    for (var n = [], i = r, o = 0; i.length; ) {
      for (var s = 0; s < i.length; s++) {
        var l = i[s];
        l.setLayout({
          skNodeHeight: o
        }, !0);
        for (var u = 0; u < l.inEdges.length; u++) {
          var c = l.inEdges[u];
          n.indexOf(c.node1) < 0 && n.push(c.node1);
        }
      }
      i = n, n = [], ++o;
    }
    w(r, function(v) {
      q1(v) || v.setLayout({
        depth: Math.max(0, a - v.getLayout().skNodeHeight)
      }, !0);
    });
  } else t === "justify" && eR(r, a);
}
function eR(r, t) {
  w(r, function(e) {
    !q1(e) && !e.outEdges.length && e.setLayout({
      depth: t
    }, !0);
  });
}
function tR(r, t, e) {
  w(r, function(a) {
    var n = a.getLayout().depth * t;
    e === "vertical" ? a.setLayout({
      y: n
    }, !0) : a.setLayout({
      x: n
    }, !0);
  });
}
function rR(r, t, e, a, n, i, o) {
  var s = aR(r, o);
  nR(s, t, e, a, n, o), fc(s, n, e, a, o);
  for (var l = 1; i > 0; i--)
    l *= 0.99, iR(s, l, o), fc(s, n, e, a, o), cR(s, l, o), fc(s, n, e, a, o);
}
function aR(r, t) {
  var e = [], a = t === "vertical" ? "y" : "x", n = Zc(r, function(i) {
    return i.getLayout()[a];
  });
  return n.keys.sort(function(i, o) {
    return i - o;
  }), w(n.keys, function(i) {
    e.push(n.buckets.get(i));
  }), e;
}
function nR(r, t, e, a, n, i) {
  var o = 1 / 0;
  w(r, function(s) {
    var l = s.length, u = 0;
    w(s, function(v) {
      u += v.getLayout().value;
    });
    var c = i === "vertical" ? (a - (l - 1) * n) / u : (e - (l - 1) * n) / u;
    c < o && (o = c);
  }), w(r, function(s) {
    w(s, function(l, u) {
      var c = l.getLayout().value * o;
      i === "vertical" ? (l.setLayout({
        x: u
      }, !0), l.setLayout({
        dx: c
      }, !0)) : (l.setLayout({
        y: u
      }, !0), l.setLayout({
        dy: c
      }, !0));
    });
  }), w(t, function(s) {
    var l = +s.getValue() * o;
    s.setLayout({
      dy: l
    }, !0);
  });
}
function fc(r, t, e, a, n) {
  var i = n === "vertical" ? "x" : "y";
  w(r, function(o) {
    o.sort(function(d, g) {
      return d.getLayout()[i] - g.getLayout()[i];
    });
    for (var s, l, u, c = 0, v = o.length, f = n === "vertical" ? "dx" : "dy", h = 0; h < v; h++)
      l = o[h], u = c - l.getLayout()[i], u > 0 && (s = l.getLayout()[i] + u, n === "vertical" ? l.setLayout({
        x: s
      }, !0) : l.setLayout({
        y: s
      }, !0)), c = l.getLayout()[i] + l.getLayout()[f] + t;
    var p = n === "vertical" ? a : e;
    if (u = c - t - p, u > 0) {
      s = l.getLayout()[i] - u, n === "vertical" ? l.setLayout({
        x: s
      }, !0) : l.setLayout({
        y: s
      }, !0), c = s;
      for (var h = v - 2; h >= 0; --h)
        l = o[h], u = l.getLayout()[i] + l.getLayout()[f] + t - c, u > 0 && (s = l.getLayout()[i] - u, n === "vertical" ? l.setLayout({
          x: s
        }, !0) : l.setLayout({
          y: s
        }, !0)), c = l.getLayout()[i];
    }
  });
}
function iR(r, t, e) {
  w(r.slice().reverse(), function(a) {
    w(a, function(n) {
      if (n.outEdges.length) {
        var i = Kr(n.outEdges, oR, e) / Kr(n.outEdges, il);
        if (isNaN(i)) {
          var o = n.outEdges.length;
          i = o ? Kr(n.outEdges, sR, e) / o : 0;
        }
        if (e === "vertical") {
          var s = n.getLayout().x + (i - ra(n, e)) * t;
          n.setLayout({
            x: s
          }, !0);
        } else {
          var l = n.getLayout().y + (i - ra(n, e)) * t;
          n.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function oR(r, t) {
  return ra(r.node2, t) * r.getValue();
}
function sR(r, t) {
  return ra(r.node2, t);
}
function lR(r, t) {
  return ra(r.node1, t) * r.getValue();
}
function uR(r, t) {
  return ra(r.node1, t);
}
function ra(r, t) {
  return t === "vertical" ? r.getLayout().x + r.getLayout().dx / 2 : r.getLayout().y + r.getLayout().dy / 2;
}
function il(r) {
  return r.getValue();
}
function Kr(r, t, e) {
  for (var a = 0, n = r.length, i = -1; ++i < n; ) {
    var o = +t(r[i], e);
    isNaN(o) || (a += o);
  }
  return a;
}
function cR(r, t, e) {
  w(r, function(a) {
    w(a, function(n) {
      if (n.inEdges.length) {
        var i = Kr(n.inEdges, lR, e) / Kr(n.inEdges, il);
        if (isNaN(i)) {
          var o = n.inEdges.length;
          i = o ? Kr(n.inEdges, uR, e) / o : 0;
        }
        if (e === "vertical") {
          var s = n.getLayout().x + (i - ra(n, e)) * t;
          n.setLayout({
            x: s
          }, !0);
        } else {
          var l = n.getLayout().y + (i - ra(n, e)) * t;
          n.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function vR(r, t) {
  var e = t === "vertical" ? "x" : "y";
  w(r, function(a) {
    a.outEdges.sort(function(n, i) {
      return n.node2.getLayout()[e] - i.node2.getLayout()[e];
    }), a.inEdges.sort(function(n, i) {
      return n.node1.getLayout()[e] - i.node1.getLayout()[e];
    });
  }), w(r, function(a) {
    var n = 0, i = 0;
    w(a.outEdges, function(o) {
      o.setLayout({
        sy: n
      }, !0), n += o.getLayout().dy;
    }), w(a.inEdges, function(o) {
      o.setLayout({
        ty: i
      }, !0), i += o.getLayout().dy;
    });
  });
}
function fR(r) {
  r.eachSeriesByType("sankey", function(t) {
    var e = t.getGraph(), a = e.nodes, n = e.edges;
    if (a.length) {
      var i = 1 / 0, o = -1 / 0;
      w(a, function(s) {
        var l = s.getLayout().value;
        l < i && (i = l), l > o && (o = l);
      }), w(a, function(s) {
        var l = new et({
          type: "color",
          mappingMethod: "linear",
          dataExtent: [i, o],
          visual: t.get("color")
        }), u = l.mapValueToVisual(s.getLayout().value), c = s.getModel().get(["itemStyle", "color"]);
        c != null ? (s.setVisual("color", c), s.setVisual("style", {
          fill: c
        })) : (s.setVisual("color", u), s.setVisual("style", {
          fill: u
        }));
      });
    }
    n.length && w(n, function(s) {
      var l = s.getModel().get("lineStyle");
      s.setVisual("style", l);
    });
  });
}
function hR(r) {
  r.registerChartView(U2), r.registerSeriesModel(Z2), r.registerLayout(X2), r.registerVisual(fR), r.registerAction({
    type: "dragNode",
    event: "dragnode",
    // here can only use 'update' now, other value is not support in echarts.
    update: "update"
  }, function(t, e) {
    e.eachComponent({
      mainType: "series",
      subType: "sankey",
      query: t
    }, function(a) {
      a.setNodePosition(t.dataIndex, [t.localX, t.localY]);
    });
  });
}
var j1 = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getInitialData = function(t, e) {
      var a, n = e.getComponent("xAxis", this.get("xAxisIndex")), i = e.getComponent("yAxis", this.get("yAxisIndex")), o = n.get("type"), s = i.get("type"), l;
      o === "category" ? (t.layout = "horizontal", a = n.getOrdinalMeta(), l = !0) : s === "category" ? (t.layout = "vertical", a = i.getOrdinalMeta(), l = !0) : t.layout = t.layout || "horizontal";
      var u = ["x", "y"], c = t.layout === "horizontal" ? 0 : 1, v = this._baseAxisDim = u[c], f = u[1 - c], h = [n, i], p = h[c].get("type"), d = h[1 - c].get("type"), g = t.data;
      if (g && l) {
        var y = [];
        w(g, function(S, x) {
          var b;
          B(S) ? (b = S.slice(), S.unshift(x)) : B(S.value) ? (b = z({}, S), b.value = b.value.slice(), S.value.unshift(x)) : b = S, y.push(b);
        }), t.data = y;
      }
      var m = this.defaultValueDimensions, _ = [{
        name: v,
        type: js(p),
        ordinalMeta: a,
        otherDims: {
          tooltip: !1,
          itemName: 0
        },
        dimsDef: ["base"]
      }, {
        name: f,
        type: js(d),
        dimsDef: m.slice()
      }];
      return ei(this, {
        coordDimensions: _,
        dimensionsCount: m.length + 1,
        encodeDefaulter: te(Y_, _, this)
      });
    }, r.prototype.getBaseAxis = function() {
      var t = this._baseAxisDim;
      return this.ecModel.getComponent(t + "Axis", this.get(t + "AxisIndex")).axis;
    }, r;
  }()
), J1 = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.defaultValueDimensions = [{
        name: "min",
        defaultTooltip: !0
      }, {
        name: "Q1",
        defaultTooltip: !0
      }, {
        name: "median",
        defaultTooltip: !0
      }, {
        name: "Q3",
        defaultTooltip: !0
      }, {
        name: "max",
        defaultTooltip: !0
      }], e.visualDrawType = "stroke", e;
    }
    return t.type = "series.boxplot", t.dependencies = ["xAxis", "yAxis", "grid"], t.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      layout: null,
      boxWidth: [7, 50],
      itemStyle: {
        color: "#fff",
        borderWidth: 1
      },
      emphasis: {
        scale: !0,
        itemStyle: {
          borderWidth: 2,
          shadowBlur: 5,
          shadowOffsetX: 1,
          shadowOffsetY: 1,
          shadowColor: "rgba(0,0,0,0.2)"
        }
      },
      animationDuration: 800
    }, t;
  }(Le)
);
at(J1, j1, !0);
var pR = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = e.getData(), o = this.group, s = this._data;
      this._data || o.removeAll();
      var l = e.get("layout") === "horizontal" ? 1 : 0;
      i.diff(s).add(function(u) {
        if (i.hasValue(u)) {
          var c = i.getItemLayout(u), v = dy(c, i, u, l, !0);
          i.setItemGraphicEl(u, v), o.add(v);
        }
      }).update(function(u, c) {
        var v = s.getItemGraphicEl(c);
        if (!i.hasValue(u)) {
          o.remove(v);
          return;
        }
        var f = i.getItemLayout(u);
        v ? (er(v), Q1(f, v, i, u)) : v = dy(f, i, u, l), o.add(v), i.setItemGraphicEl(u, v);
      }).remove(function(u) {
        var c = s.getItemGraphicEl(u);
        c && o.remove(c);
      }).execute(), this._data = i;
    }, t.prototype.remove = function(e) {
      var a = this.group, n = this._data;
      this._data = null, n && n.eachItemGraphicEl(function(i) {
        i && a.remove(i);
      });
    }, t.type = "boxplot", t;
  }(De)
), dR = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
    }
    return r;
  }()
), gR = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "boxplotBoxPath", a;
    }
    return t.prototype.getDefaultShape = function() {
      return new dR();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.points, i = 0;
      for (e.moveTo(n[i][0], n[i][1]), i++; i < 4; i++)
        e.lineTo(n[i][0], n[i][1]);
      for (e.closePath(); i < n.length; i++)
        e.moveTo(n[i][0], n[i][1]), i++, e.lineTo(n[i][0], n[i][1]);
    }, t;
  }(Ee)
);
function dy(r, t, e, a, n) {
  var i = r.ends, o = new gR({
    shape: {
      points: n ? yR(i, a, r) : i
    }
  });
  return Q1(r, o, t, e, n), o;
}
function Q1(r, t, e, a, n) {
  var i = e.hostModel, o = Ua[n ? "initProps" : "updateProps"];
  o(t, {
    shape: {
      points: r.ends
    }
  }, i, a), t.useStyle(e.getItemVisual(a, "style")), t.style.strokeNoScale = !0, t.z2 = 100;
  var s = e.getItemModel(a), l = s.getModel("emphasis");
  st(t, s), Be(t, l.get("focus"), l.get("blurScope"), l.get("disabled"));
}
function yR(r, t, e) {
  return G(r, function(a) {
    return a = a.slice(), a[t] = e.initBaseline, a;
  });
}
var Fi = w;
function mR(r) {
  var t = _R(r);
  Fi(t, function(e) {
    var a = e.seriesModels;
    a.length && (SR(e), Fi(a, function(n, i) {
      xR(n, e.boxOffsetList[i], e.boxWidthList[i]);
    }));
  });
}
function _R(r) {
  var t = [], e = [];
  return r.eachSeriesByType("boxplot", function(a) {
    var n = a.getBaseAxis(), i = fe(e, n);
    i < 0 && (i = e.length, e[i] = n, t[i] = {
      axis: n,
      seriesModels: []
    }), t[i].seriesModels.push(a);
  }), t;
}
function SR(r) {
  var t = r.axis, e = r.seriesModels, a = e.length, n = r.boxWidthList = [], i = r.boxOffsetList = [], o = [], s;
  if (t.type === "category")
    s = t.getBandWidth();
  else {
    var l = 0;
    Fi(e, function(p) {
      l = Math.max(l, p.getData().count());
    });
    var u = t.getExtent();
    s = Math.abs(u[1] - u[0]) / l;
  }
  Fi(e, function(p) {
    var d = p.get("boxWidth");
    B(d) || (d = [d, d]), o.push([H(d[0], s) || 0, H(d[1], s) || 0]);
  });
  var c = s * 0.8 - 2, v = c / a * 0.3, f = (c - v * (a - 1)) / a, h = f / 2 - c / 2;
  Fi(e, function(p, d) {
    i.push(h), h += v + f, n.push(Math.min(Math.max(f, o[d][0]), o[d][1]));
  });
}
function xR(r, t, e) {
  var a = r.coordinateSystem, n = r.getData(), i = e / 2, o = r.get("layout") === "horizontal" ? 0 : 1, s = 1 - o, l = ["x", "y"], u = n.mapDimension(l[o]), c = n.mapDimensionsAll(l[s]);
  if (u == null || c.length < 5)
    return;
  for (var v = 0; v < n.count(); v++) {
    var f = n.get(u, v), h = _(f, c[2], v), p = _(f, c[0], v), d = _(f, c[1], v), g = _(f, c[3], v), y = _(f, c[4], v), m = [];
    S(m, d, !1), S(m, g, !0), m.push(p, d, y, g), x(m, p), x(m, y), x(m, h), n.setItemLayout(v, {
      initBaseline: h[s],
      ends: m
    });
  }
  function _(b, D, A) {
    var T = n.get(D, A), C = [];
    C[o] = b, C[s] = T;
    var M;
    return isNaN(b) || isNaN(T) ? M = [NaN, NaN] : (M = a.dataToPoint(C), M[o] += t), M;
  }
  function S(b, D, A) {
    var T = D.slice(), C = D.slice();
    T[o] += i, C[o] -= i, A ? b.push(T, C) : b.push(C, T);
  }
  function x(b, D) {
    var A = D.slice(), T = D.slice();
    A[o] -= i, T[o] += i, b.push(A, T);
  }
}
function bR(r, t) {
  t = t || {};
  for (var e = [], a = [], n = t.boundIQR, i = n === "none" || n === 0, o = 0; o < r.length; o++) {
    var s = zt(r[o].slice()), l = eu(s, 0.25), u = eu(s, 0.5), c = eu(s, 0.75), v = s[0], f = s[s.length - 1], h = (n ?? 1.5) * (c - l), p = i ? v : Math.max(v, l - h), d = i ? f : Math.min(f, c + h), g = t.itemNameFormatter, y = X(g) ? g({
      value: o
    }) : Y(g) ? g.replace("{value}", o + "") : o + "";
    e.push([y, p, l, u, c, d]);
    for (var m = 0; m < s.length; m++) {
      var _ = s[m];
      if (_ < p || _ > d) {
        var S = [y, _];
        a.push(S);
      }
    }
  }
  return {
    boxData: e,
    outliers: a
  };
}
var wR = { env: {} }, DR = {
  type: "echarts:boxplot",
  transform: function(t) {
    var e = t.upstream;
    if (e.sourceFormat !== ft) {
      var a = "";
      wR.env.NODE_ENV !== "production" && (a = St("source data is not applicable for this boxplot transform. Expect number[][].")), ye(a);
    }
    var n = bR(e.getRawData(), t.config);
    return [{
      dimensions: ["ItemName", "Low", "Q1", "Q2", "Q3", "High"],
      data: n.boxData
    }, {
      data: n.outliers
    }];
  }
};
function AR(r) {
  r.registerSeriesModel(J1), r.registerChartView(pR), r.registerLayout(mR), r.registerTransform(DR);
}
var TR = ["color", "borderColor"], CR = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      this.group.removeClipPath(), this._progressiveEls = null, this._updateDrawMode(e), this._isLargeDraw ? this._renderLarge(e) : this._renderNormal(e);
    }, t.prototype.incrementalPrepareRender = function(e, a, n) {
      this._clear(), this._updateDrawMode(e);
    }, t.prototype.incrementalRender = function(e, a, n, i) {
      this._progressiveEls = [], this._isLargeDraw ? this._incrementalRenderLarge(e, a) : this._incrementalRenderNormal(e, a);
    }, t.prototype.eachRendered = function(e) {
      ia(this._progressiveEls || this.group, e);
    }, t.prototype._updateDrawMode = function(e) {
      var a = e.pipelineContext.large;
      (this._isLargeDraw == null || a !== this._isLargeDraw) && (this._isLargeDraw = a, this._clear());
    }, t.prototype._renderNormal = function(e) {
      var a = e.getData(), n = this._data, i = this.group, o = a.getLayout("isSimpleBox"), s = e.get("clip", !0), l = e.coordinateSystem, u = l.getArea && l.getArea();
      this._data || i.removeAll(), a.diff(n).add(function(c) {
        if (a.hasValue(c)) {
          var v = a.getItemLayout(c);
          if (s && gy(u, v))
            return;
          var f = hc(v, c, !0);
          Pe(f, {
            shape: {
              points: v.ends
            }
          }, e, c), pc(f, a, c, o), i.add(f), a.setItemGraphicEl(c, f);
        }
      }).update(function(c, v) {
        var f = n.getItemGraphicEl(v);
        if (!a.hasValue(c)) {
          i.remove(f);
          return;
        }
        var h = a.getItemLayout(c);
        if (s && gy(u, h)) {
          i.remove(f);
          return;
        }
        f ? (pe(f, {
          shape: {
            points: h.ends
          }
        }, e, c), er(f)) : f = hc(h), pc(f, a, c, o), i.add(f), a.setItemGraphicEl(c, f);
      }).remove(function(c) {
        var v = n.getItemGraphicEl(c);
        v && i.remove(v);
      }).execute(), this._data = a;
    }, t.prototype._renderLarge = function(e) {
      this._clear(), yy(e, this.group);
      var a = e.get("clip", !0) ? bo(e.coordinateSystem, !1, e) : null;
      a ? this.group.setClipPath(a) : this.group.removeClipPath();
    }, t.prototype._incrementalRenderNormal = function(e, a) {
      for (var n = a.getData(), i = n.getLayout("isSimpleBox"), o; (o = e.next()) != null; ) {
        var s = n.getItemLayout(o), l = hc(s);
        pc(l, n, o, i), l.incremental = !0, this.group.add(l), this._progressiveEls.push(l);
      }
    }, t.prototype._incrementalRenderLarge = function(e, a) {
      yy(a, this.group, this._progressiveEls, !0);
    }, t.prototype.remove = function(e) {
      this._clear();
    }, t.prototype._clear = function() {
      this.group.removeAll(), this._data = null;
    }, t.type = "candlestick", t;
  }(De)
), MR = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
    }
    return r;
  }()
), IR = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "normalCandlestickBox", a;
    }
    return t.prototype.getDefaultShape = function() {
      return new MR();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.points;
      this.__simpleBox ? (e.moveTo(n[4][0], n[4][1]), e.lineTo(n[6][0], n[6][1])) : (e.moveTo(n[0][0], n[0][1]), e.lineTo(n[1][0], n[1][1]), e.lineTo(n[2][0], n[2][1]), e.lineTo(n[3][0], n[3][1]), e.closePath(), e.moveTo(n[4][0], n[4][1]), e.lineTo(n[5][0], n[5][1]), e.moveTo(n[6][0], n[6][1]), e.lineTo(n[7][0], n[7][1]));
    }, t;
  }(Ee)
);
function hc(r, t, e) {
  var a = r.ends;
  return new IR({
    shape: {
      points: e ? LR(a, r) : a
    },
    z2: 100
  });
}
function gy(r, t) {
  for (var e = !0, a = 0; a < t.ends.length; a++)
    if (r.contain(t.ends[a][0], t.ends[a][1])) {
      e = !1;
      break;
    }
  return e;
}
function pc(r, t, e, a) {
  var n = t.getItemModel(e);
  r.useStyle(t.getItemVisual(e, "style")), r.style.strokeNoScale = !0, r.__simpleBox = a, st(r, n);
}
function LR(r, t) {
  return G(r, function(e) {
    return e = e.slice(), e[1] = t.initBaseline, e;
  });
}
var ER = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
    }
    return r;
  }()
), dc = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a.type = "largeCandlestickBox", a;
    }
    return t.prototype.getDefaultShape = function() {
      return new ER();
    }, t.prototype.buildPath = function(e, a) {
      for (var n = a.points, i = 0; i < n.length; )
        if (this.__sign === n[i++]) {
          var o = n[i++];
          e.moveTo(o, n[i++]), e.lineTo(o, n[i++]);
        } else
          i += 3;
    }, t;
  }(Ee)
);
function yy(r, t, e, a) {
  var n = r.getData(), i = n.getLayout("largePoints"), o = new dc({
    shape: {
      points: i
    },
    __sign: 1,
    ignoreCoarsePointer: !0
  });
  t.add(o);
  var s = new dc({
    shape: {
      points: i
    },
    __sign: -1,
    ignoreCoarsePointer: !0
  });
  t.add(s);
  var l = new dc({
    shape: {
      points: i
    },
    __sign: 0,
    ignoreCoarsePointer: !0
  });
  t.add(l), gc(1, o, r), gc(-1, s, r), gc(0, l, r), a && (o.incremental = !0, s.incremental = !0), e && e.push(o, s);
}
function gc(r, t, e, a) {
  var n = e.get(["itemStyle", r > 0 ? "borderColor" : "borderColor0"]) || e.get(["itemStyle", r > 0 ? "color" : "color0"]);
  r === 0 && (n = e.get(["itemStyle", "borderColorDoji"]));
  var i = e.getModel("itemStyle").getItemStyle(TR);
  t.useStyle(i), t.style.fill = null, t.style.stroke = n;
}
var eb = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.defaultValueDimensions = [{
        name: "open",
        defaultTooltip: !0
      }, {
        name: "close",
        defaultTooltip: !0
      }, {
        name: "lowest",
        defaultTooltip: !0
      }, {
        name: "highest",
        defaultTooltip: !0
      }], e;
    }
    return t.prototype.getShadowDim = function() {
      return "open";
    }, t.prototype.brushSelector = function(e, a, n) {
      var i = a.getItemLayout(e);
      return i && n.rect(i.brushRect);
    }, t.type = "series.candlestick", t.dependencies = ["xAxis", "yAxis", "grid"], t.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      layout: null,
      clip: !0,
      itemStyle: {
        color: "#eb5454",
        color0: "#47b262",
        borderColor: "#eb5454",
        borderColor0: "#47b262",
        borderColorDoji: null,
        // borderColor: '#d24040',
        // borderColor0: '#398f4f',
        borderWidth: 1
      },
      emphasis: {
        scale: !0,
        itemStyle: {
          borderWidth: 2
        }
      },
      barMaxWidth: null,
      barMinWidth: null,
      barWidth: null,
      large: !0,
      largeThreshold: 600,
      progressive: 3e3,
      progressiveThreshold: 1e4,
      progressiveChunkMode: "mod",
      animationEasing: "linear",
      animationDuration: 300
    }, t;
  }(Le)
);
at(eb, j1, !0);
function PR(r) {
  !r || !B(r.series) || w(r.series, function(t) {
    J(t) && t.type === "k" && (t.type = "candlestick");
  });
}
var NR = ["itemStyle", "borderColor"], RR = ["itemStyle", "borderColor0"], kR = ["itemStyle", "borderColorDoji"], OR = ["itemStyle", "color"], VR = ["itemStyle", "color0"], BR = {
  seriesType: "candlestick",
  plan: qn(),
  // For legend.
  performRawSeries: !0,
  reset: function(r, t) {
    function e(i, o) {
      return o.get(i > 0 ? OR : VR);
    }
    function a(i, o) {
      return o.get(i === 0 ? kR : i > 0 ? NR : RR);
    }
    if (!t.isSeriesFiltered(r)) {
      var n = r.pipelineContext.large;
      return !n && {
        progress: function(i, o) {
          for (var s; (s = i.next()) != null; ) {
            var l = o.getItemModel(s), u = o.getItemLayout(s).sign, c = l.getItemStyle();
            c.fill = e(u, l), c.stroke = a(u, l) || c.fill;
            var v = o.ensureUniqueItemVisual(s, "style");
            z(v, c);
          }
        }
      };
    }
  }
}, zR = {
  seriesType: "candlestick",
  plan: qn(),
  reset: function(r) {
    var t = r.coordinateSystem, e = r.getData(), a = GR(r, e), n = 0, i = 1, o = ["x", "y"], s = e.getDimensionIndex(e.mapDimension(o[n])), l = G(e.mapDimensionsAll(o[i]), e.getDimensionIndex, e), u = l[0], c = l[1], v = l[2], f = l[3];
    if (e.setLayout({
      candleWidth: a,
      // The value is experimented visually.
      isSimpleBox: a <= 1.3
    }), s < 0 || l.length < 4)
      return;
    return {
      progress: r.pipelineContext.large ? p : h
    };
    function h(d, g) {
      for (var y, m = g.getStore(); (y = d.next()) != null; ) {
        var _ = m.get(s, y), S = m.get(u, y), x = m.get(c, y), b = m.get(v, y), D = m.get(f, y), A = Math.min(S, x), T = Math.max(S, x), C = O(A, _), M = O(T, _), I = O(b, _), L = O(D, _), P = [];
        k(P, M, 0), k(P, C, 1), P.push(F(L), F(M), F(I), F(C));
        var E = g.getItemModel(y), N = !!E.get(["itemStyle", "borderColorDoji"]);
        g.setItemLayout(y, {
          sign: my(m, y, S, x, c, N),
          initBaseline: S > x ? M[i] : C[i],
          ends: P,
          brushRect: V(b, D, _)
        });
      }
      function O(W, q) {
        var ae = [];
        return ae[n] = q, ae[i] = W, isNaN(q) || isNaN(W) ? [NaN, NaN] : t.dataToPoint(ae);
      }
      function k(W, q, ae) {
        var ie = q.slice(), ge = q.slice();
        ie[n] = ms(ie[n] + a / 2, 1, !1), ge[n] = ms(ge[n] - a / 2, 1, !0), ae ? W.push(ie, ge) : W.push(ge, ie);
      }
      function V(W, q, ae) {
        var ie = O(W, ae), ge = O(q, ae);
        return ie[n] -= a / 2, ge[n] -= a / 2, {
          x: ie[0],
          y: ie[1],
          width: a,
          height: ge[1] - ie[1]
        };
      }
      function F(W) {
        return W[n] = ms(W[n], 1), W;
      }
    }
    function p(d, g) {
      for (var y = lr(d.count * 4), m = 0, _, S = [], x = [], b, D = g.getStore(), A = !!r.get(["itemStyle", "borderColorDoji"]); (b = d.next()) != null; ) {
        var T = D.get(s, b), C = D.get(u, b), M = D.get(c, b), I = D.get(v, b), L = D.get(f, b);
        if (isNaN(T) || isNaN(I) || isNaN(L)) {
          y[m++] = NaN, m += 3;
          continue;
        }
        y[m++] = my(D, b, C, M, c, A), S[n] = T, S[i] = I, _ = t.dataToPoint(S, null, x), y[m++] = _ ? _[0] : NaN, y[m++] = _ ? _[1] : NaN, S[i] = L, _ = t.dataToPoint(S, null, x), y[m++] = _ ? _[1] : NaN;
      }
      g.setLayout("largePoints", y);
    }
  }
};
function my(r, t, e, a, n, i) {
  var o;
  return e > a ? o = -1 : e < a ? o = 1 : o = i ? 0 : t > 0 ? r.get(n, t - 1) <= a ? 1 : -1 : 1, o;
}
function GR(r, t) {
  var e = r.getBaseAxis(), a, n = e.type === "category" ? e.getBandWidth() : (a = e.getExtent(), Math.abs(a[1] - a[0]) / t.count()), i = H(ce(r.get("barMaxWidth"), n), n), o = H(ce(r.get("barMinWidth"), 1), n), s = r.get("barWidth");
  return s != null ? H(s, n) : Math.max(Math.min(n / 2, i), o);
}
function FR(r) {
  r.registerChartView(CR), r.registerSeriesModel(eb), r.registerPreprocessor(PR), r.registerVisual(BR), r.registerLayout(zR);
}
function _y(r, t) {
  var e = t.rippleEffectColor || t.color;
  r.eachChild(function(a) {
    a.attr({
      z: t.z,
      zlevel: t.zlevel,
      style: {
        stroke: t.brushType === "stroke" ? e : null,
        fill: t.brushType === "fill" ? e : null
      }
    });
  });
}
var HR = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a) {
      var n = r.call(this) || this, i = new So(e, a), o = new re();
      return n.add(i), n.add(o), n.updateData(e, a), n;
    }
    return t.prototype.stopEffectAnimation = function() {
      this.childAt(1).removeAll();
    }, t.prototype.startEffectAnimation = function(e) {
      for (var a = e.symbolType, n = e.color, i = e.rippleNumber, o = this.childAt(1), s = 0; s < i; s++) {
        var l = Ze(a, -1, -1, 2, 2, n);
        l.attr({
          style: {
            strokeNoScale: !0
          },
          z2: 99,
          silent: !0,
          scaleX: 0.5,
          scaleY: 0.5
        });
        var u = -s / i * e.period + e.effectOffset;
        l.animate("", !0).when(e.period, {
          scaleX: e.rippleScale / 2,
          scaleY: e.rippleScale / 2
        }).delay(u).start(), l.animateStyle(!0).when(e.period, {
          opacity: 0
        }).delay(u).start(), o.add(l);
      }
      _y(o, e);
    }, t.prototype.updateEffectAnimation = function(e) {
      for (var a = this._effectCfg, n = this.childAt(1), i = ["symbolType", "period", "rippleScale", "rippleNumber"], o = 0; o < i.length; o++) {
        var s = i[o];
        if (a[s] !== e[s]) {
          this.stopEffectAnimation(), this.startEffectAnimation(e);
          return;
        }
      }
      _y(n, e);
    }, t.prototype.highlight = function() {
      Ar(this);
    }, t.prototype.downplay = function() {
      Tr(this);
    }, t.prototype.getSymbolType = function() {
      var e = this.childAt(0);
      return e && e.getSymbolType();
    }, t.prototype.updateData = function(e, a) {
      var n = this, i = e.hostModel;
      this.childAt(0).updateData(e, a);
      var o = this.childAt(1), s = e.getItemModel(a), l = e.getItemVisual(a, "symbol"), u = Jn(e.getItemVisual(a, "symbolSize")), c = e.getItemVisual(a, "style"), v = c && c.fill, f = s.getModel("emphasis");
      o.setScale(u), o.traverse(function(g) {
        g.setStyle("fill", v);
      });
      var h = $a(e.getItemVisual(a, "symbolOffset"), u);
      h && (o.x = h[0], o.y = h[1]);
      var p = e.getItemVisual(a, "symbolRotate");
      o.rotation = (p || 0) * Math.PI / 180 || 0;
      var d = {};
      d.showEffectOn = i.get("showEffectOn"), d.rippleScale = s.get(["rippleEffect", "scale"]), d.brushType = s.get(["rippleEffect", "brushType"]), d.period = s.get(["rippleEffect", "period"]) * 1e3, d.effectOffset = a / e.count(), d.z = i.getShallow("z") || 0, d.zlevel = i.getShallow("zlevel") || 0, d.symbolType = l, d.color = v, d.rippleEffectColor = s.get(["rippleEffect", "color"]), d.rippleNumber = s.get(["rippleEffect", "number"]), d.showEffectOn === "render" ? (this._effectCfg ? this.updateEffectAnimation(d) : this.startEffectAnimation(d), this._effectCfg = d) : (this._effectCfg = null, this.stopEffectAnimation(), this.onHoverStateChange = function(g) {
        g === "emphasis" ? d.showEffectOn !== "render" && n.startEffectAnimation(d) : g === "normal" && d.showEffectOn !== "render" && n.stopEffectAnimation();
      }), this._effectCfg = d, Be(this, f.get("focus"), f.get("blurScope"), f.get("disabled"));
    }, t.prototype.fadeOut = function(e) {
      e && e();
    }, t;
  }(re)
), WR = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function() {
      this._symbolDraw = new xo(HR);
    }, t.prototype.render = function(e, a, n) {
      var i = e.getData(), o = this._symbolDraw;
      o.updateData(i, {
        clipShape: this._getClipShape(e)
      }), this.group.add(o.group);
    }, t.prototype._getClipShape = function(e) {
      var a = e.coordinateSystem, n = a && a.getArea && a.getArea();
      return e.get("clip", !0) ? n : null;
    }, t.prototype.updateTransform = function(e, a, n) {
      var i = e.getData();
      this.group.dirty();
      var o = wo("").reset(e, a, n);
      o.progress && o.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._symbolDraw.updateLayout();
    }, t.prototype._updateGroupTransform = function(e) {
      var a = e.coordinateSystem;
      a && a.getRoamTransform && (this.group.transform = Uw(a.getRoamTransform()), this.group.decomposeTransform());
    }, t.prototype.remove = function(e, a) {
      this._symbolDraw && this._symbolDraw.remove(!0);
    }, t.type = "effectScatter", t;
  }(De)
), UR = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.hasSymbolVisual = !0, e;
    }
    return t.prototype.getInitialData = function(e, a) {
      return Pr(null, this, {
        useEncodeDefaulter: !0
      });
    }, t.prototype.brushSelector = function(e, a, n) {
      return n.point(a.getItemLayout(e));
    }, t.type = "series.effectScatter", t.dependencies = ["grid", "polar"], t.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      effectType: "ripple",
      progressive: 0,
      // When to show the effect, option: 'render'|'emphasis'
      showEffectOn: "render",
      clip: !0,
      // Ripple effect config
      rippleEffect: {
        period: 4,
        // Scale of ripple
        scale: 2.5,
        // Brush type can be fill or stroke
        brushType: "fill",
        // Ripple number
        number: 3
      },
      universalTransition: {
        divideShape: "clone"
      },
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
      // symbol: null,        // 图形类型
      symbolSize: 10
      // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2
      // symbolRotate: null,  // 图形旋转控制
      // itemStyle: {
      //     opacity: 1
      // }
    }, t;
  }(Le)
);
function $R(r) {
  r.registerChartView(WR), r.registerSeriesModel(UR), r.registerLayout(wo("effectScatter"));
}
var tb = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this) || this;
      return i.add(i.createLine(e, a, n)), i._updateEffectSymbol(e, a), i;
    }
    return t.prototype.createLine = function(e, a, n) {
      return new fh(e, a, n);
    }, t.prototype._updateEffectSymbol = function(e, a) {
      var n = e.getItemModel(a), i = n.getModel("effect"), o = i.get("symbolSize"), s = i.get("symbol");
      B(o) || (o = [o, o]);
      var l = e.getItemVisual(a, "style"), u = i.get("color") || l && l.stroke, c = this.childAt(1);
      this._symbolType !== s && (this.remove(c), c = Ze(s, -0.5, -0.5, 1, 1, u), c.z2 = 100, c.culling = !0, this.add(c)), c && (c.setStyle("shadowColor", u), c.setStyle(i.getItemStyle(["color"])), c.scaleX = o[0], c.scaleY = o[1], c.setColor(u), this._symbolType = s, this._symbolScale = o, this._updateEffectAnimation(e, i, a));
    }, t.prototype._updateEffectAnimation = function(e, a, n) {
      var i = this.childAt(1);
      if (i) {
        var o = e.getItemLayout(n), s = a.get("period") * 1e3, l = a.get("loop"), u = a.get("roundTrip"), c = a.get("constantSpeed"), v = $e(a.get("delay"), function(h) {
          return h / e.count() * s / 3;
        });
        if (i.ignore = !0, this._updateAnimationPoints(i, o), c > 0 && (s = this._getLineLength(i) / c * 1e3), s !== this._period || l !== this._loop || u !== this._roundTrip) {
          i.stopAnimation();
          var f = void 0;
          X(v) ? f = v(n) : f = v, i.__t > 0 && (f = -s * i.__t), this._animateSymbol(i, s, f, l, u);
        }
        this._period = s, this._loop = l, this._roundTrip = u;
      }
    }, t.prototype._animateSymbol = function(e, a, n, i, o) {
      if (a > 0) {
        e.__t = 0;
        var s = this, l = e.animate("", i).when(o ? a * 2 : a, {
          __t: o ? 2 : 1
        }).delay(n).during(function() {
          s._updateSymbolPosition(e);
        });
        i || l.done(function() {
          s.remove(e);
        }), l.start();
      }
    }, t.prototype._getLineLength = function(e) {
      return wa(e.__p1, e.__cp1) + wa(e.__cp1, e.__p2);
    }, t.prototype._updateAnimationPoints = function(e, a) {
      e.__p1 = a[0], e.__p2 = a[1], e.__cp1 = a[2] || [(a[0][0] + a[1][0]) / 2, (a[0][1] + a[1][1]) / 2];
    }, t.prototype.updateData = function(e, a, n) {
      this.childAt(0).updateData(e, a, n), this._updateEffectSymbol(e, a);
    }, t.prototype._updateSymbolPosition = function(e) {
      var a = e.__p1, n = e.__p2, i = e.__cp1, o = e.__t < 1 ? e.__t : 2 - e.__t, s = [e.x, e.y], l = s.slice(), u = Y0, c = $w;
      s[0] = u(a[0], i[0], n[0], o), s[1] = u(a[1], i[1], n[1], o);
      var v = e.__t < 1 ? c(a[0], i[0], n[0], o) : c(n[0], i[0], a[0], 1 - o), f = e.__t < 1 ? c(a[1], i[1], n[1], o) : c(n[1], i[1], a[1], 1 - o);
      e.rotation = -Math.atan2(f, v) - Math.PI / 2, (this._symbolType === "line" || this._symbolType === "rect" || this._symbolType === "roundRect") && (e.__lastT !== void 0 && e.__lastT < e.__t ? (e.scaleY = wa(l, s) * 1.05, o === 1 && (s[0] = l[0] + (s[0] - l[0]) / 2, s[1] = l[1] + (s[1] - l[1]) / 2)) : e.__lastT === 1 ? e.scaleY = 2 * wa(a, s) : e.scaleY = this._symbolScale[1]), e.__lastT = e.__t, e.ignore = !1, e.x = s[0], e.y = s[1];
    }, t.prototype.updateLayout = function(e, a) {
      this.childAt(0).updateLayout(e, a);
      var n = e.getItemModel(a).getModel("effect");
      this._updateEffectAnimation(e, n, a);
    }, t;
  }(re)
), rb = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n) {
      var i = r.call(this) || this;
      return i._createPolyline(e, a, n), i;
    }
    return t.prototype._createPolyline = function(e, a, n) {
      var i = e.getItemLayout(a), o = new Ct({
        shape: {
          points: i
        }
      });
      this.add(o), this._updateCommonStl(e, a, n);
    }, t.prototype.updateData = function(e, a, n) {
      var i = e.hostModel, o = this.childAt(0), s = {
        shape: {
          points: e.getItemLayout(a)
        }
      };
      pe(o, s, i, a), this._updateCommonStl(e, a, n);
    }, t.prototype._updateCommonStl = function(e, a, n) {
      var i = this.childAt(0), o = e.getItemModel(a), s = n && n.emphasisLineStyle, l = n && n.focus, u = n && n.blurScope, c = n && n.emphasisDisabled;
      if (!n || e.hasItemOption) {
        var v = o.getModel("emphasis");
        s = v.getModel("lineStyle").getLineStyle(), c = v.get("disabled"), l = v.get("focus"), u = v.get("blurScope");
      }
      i.useStyle(e.getItemVisual(a, "style")), i.style.fill = null, i.style.strokeNoScale = !0;
      var f = i.ensureState("emphasis");
      f.style = s, Be(this, l, u, c);
    }, t.prototype.updateLayout = function(e, a) {
      var n = this.childAt(0);
      n.setShape("points", e.getItemLayout(a));
    }, t;
  }(re)
), YR = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e._lastFrame = 0, e._lastFramePercent = 0, e;
    }
    return t.prototype.createLine = function(e, a, n) {
      return new rb(e, a, n);
    }, t.prototype._updateAnimationPoints = function(e, a) {
      this._points = a;
      for (var n = [0], i = 0, o = 1; o < a.length; o++) {
        var s = a[o - 1], l = a[o];
        i += wa(s, l), n.push(i);
      }
      if (i === 0) {
        this._length = 0;
        return;
      }
      for (var o = 0; o < n.length; o++)
        n[o] /= i;
      this._offsets = n, this._length = i;
    }, t.prototype._getLineLength = function() {
      return this._length;
    }, t.prototype._updateSymbolPosition = function(e) {
      var a = e.__t < 1 ? e.__t : 2 - e.__t, n = this._points, i = this._offsets, o = n.length;
      if (i) {
        var s = this._lastFrame, l;
        if (a < this._lastFramePercent) {
          var u = Math.min(s + 1, o - 1);
          for (l = u; l >= 0 && !(i[l] <= a); l--)
            ;
          l = Math.min(l, o - 2);
        } else {
          for (l = s; l < o && !(i[l] > a); l++)
            ;
          l = Math.min(l - 1, o - 2);
        }
        var c = (a - i[l]) / (i[l + 1] - i[l]), v = n[l], f = n[l + 1];
        e.x = v[0] * (1 - c) + c * f[0], e.y = v[1] * (1 - c) + c * f[1];
        var h = e.__t < 1 ? f[0] - v[0] : v[0] - f[0], p = e.__t < 1 ? f[1] - v[1] : v[1] - f[1];
        e.rotation = -Math.atan2(p, h) - Math.PI / 2, this._lastFrame = l, this._lastFramePercent = a, e.ignore = !1;
      }
    }, t;
  }(tb)
), ZR = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
      this.polyline = !1, this.curveness = 0, this.segs = [];
    }
    return r;
  }()
), XR = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e) {
      var a = r.call(this, e) || this;
      return a._off = 0, a.hoverDataIdx = -1, a;
    }
    return t.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, t.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, t.prototype.getDefaultShape = function() {
      return new ZR();
    }, t.prototype.buildPath = function(e, a) {
      var n = a.segs, i = a.curveness, o;
      if (a.polyline)
        for (o = this._off; o < n.length; ) {
          var s = n[o++];
          if (s > 0) {
            e.moveTo(n[o++], n[o++]);
            for (var l = 1; l < s; l++)
              e.lineTo(n[o++], n[o++]);
          }
        }
      else
        for (o = this._off; o < n.length; ) {
          var u = n[o++], c = n[o++], v = n[o++], f = n[o++];
          if (e.moveTo(u, c), i > 0) {
            var h = (u + v) / 2 - (c - f) * i, p = (c + f) / 2 - (v - u) * i;
            e.quadraticCurveTo(h, p, v, f);
          } else
            e.lineTo(v, f);
        }
      this.incremental && (this._off = o, this.notClear = !0);
    }, t.prototype.findDataIndex = function(e, a) {
      var n = this.shape, i = n.segs, o = n.curveness, s = this.style.lineWidth;
      if (n.polyline)
        for (var l = 0, u = 0; u < i.length; ) {
          var c = i[u++];
          if (c > 0)
            for (var v = i[u++], f = i[u++], h = 1; h < c; h++) {
              var p = i[u++], d = i[u++];
              if (ep(v, f, p, d, s, e, a))
                return l;
            }
          l++;
        }
      else
        for (var l = 0, u = 0; u < i.length; ) {
          var v = i[u++], f = i[u++], p = i[u++], d = i[u++];
          if (o > 0) {
            var g = (v + p) / 2 - (f - d) * o, y = (f + d) / 2 - (p - v) * o;
            if (Yw(v, f, g, y, p, d, s, e, a))
              return l;
          } else if (ep(v, f, p, d, s, e, a))
            return l;
          l++;
        }
      return -1;
    }, t.prototype.contain = function(e, a) {
      var n = this.transformCoordToLocal(e, a), i = this.getBoundingRect();
      if (e = n[0], a = n[1], i.contain(e, a)) {
        var o = this.hoverDataIdx = this.findDataIndex(e, a);
        return o >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, t.prototype.getBoundingRect = function() {
      var e = this._rect;
      if (!e) {
        for (var a = this.shape, n = a.segs, i = 1 / 0, o = 1 / 0, s = -1 / 0, l = -1 / 0, u = 0; u < n.length; ) {
          var c = n[u++], v = n[u++];
          i = Math.min(c, i), s = Math.max(c, s), o = Math.min(v, o), l = Math.max(v, l);
        }
        e = this._rect = new Te(i, o, s, l);
      }
      return e;
    }, t;
  }(Ee)
), KR = (
  /** @class */
  function() {
    function r() {
      this.group = new re();
    }
    return r.prototype.updateData = function(t) {
      this._clear();
      var e = this._create();
      e.setShape({
        segs: t.getLayout("linesPoints")
      }), this._setCommon(e, t);
    }, r.prototype.incrementalPrepareUpdate = function(t) {
      this.group.removeAll(), this._clear();
    }, r.prototype.incrementalUpdate = function(t, e) {
      var a = this._newAdded[0], n = e.getLayout("linesPoints"), i = a && a.shape.segs;
      if (i && i.length < 2e4) {
        var o = i.length, s = new Float32Array(o + n.length);
        s.set(i), s.set(n, o), a.setShape({
          segs: s
        });
      } else {
        this._newAdded = [];
        var l = this._create();
        l.incremental = !0, l.setShape({
          segs: n
        }), this._setCommon(l, e), l.__startIndex = t.start;
      }
    }, r.prototype.remove = function() {
      this._clear();
    }, r.prototype.eachRendered = function(t) {
      this._newAdded[0] && t(this._newAdded[0]);
    }, r.prototype._create = function() {
      var t = new XR({
        cursor: "default",
        ignoreCoarsePointer: !0
      });
      return this._newAdded.push(t), this.group.add(t), t;
    }, r.prototype._setCommon = function(t, e, a) {
      var n = e.hostModel;
      t.setShape({
        polyline: n.get("polyline"),
        curveness: n.get(["lineStyle", "curveness"])
      }), t.useStyle(n.getModel("lineStyle").getLineStyle()), t.style.strokeNoScale = !0;
      var i = e.getVisual("style");
      i && i.stroke && t.setStyle("stroke", i.stroke), t.setStyle("fill", null);
      var o = j(t);
      o.seriesIndex = n.seriesIndex, t.on("mousemove", function(s) {
        o.dataIndex = null;
        var l = t.hoverDataIdx;
        l > 0 && (o.dataIndex = l + t.__startIndex);
      });
    }, r.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, r;
  }()
), qR = { env: {} }, ab = {
  seriesType: "lines",
  plan: qn(),
  reset: function(r) {
    var t = r.coordinateSystem;
    if (!t) {
      qR.env.NODE_ENV !== "production" && ot("The lines series must have a coordinate system.");
      return;
    }
    var e = r.get("polyline"), a = r.pipelineContext.large;
    return {
      progress: function(n, i) {
        var o = [];
        if (a) {
          var s = void 0, l = n.end - n.start;
          if (e) {
            for (var u = 0, c = n.start; c < n.end; c++)
              u += r.getLineCoordsCount(c);
            s = new Float32Array(l + u * 2);
          } else
            s = new Float32Array(l * 4);
          for (var v = 0, f = [], c = n.start; c < n.end; c++) {
            var h = r.getLineCoords(c, o);
            e && (s[v++] = h);
            for (var p = 0; p < h; p++)
              f = t.dataToPoint(o[p], !1, f), s[v++] = f[0], s[v++] = f[1];
          }
          i.setLayout("linesPoints", s);
        } else
          for (var c = n.start; c < n.end; c++) {
            var d = i.getItemModel(c), h = r.getLineCoords(c, o), g = [];
            if (e)
              for (var y = 0; y < h; y++)
                g.push(t.dataToPoint(o[y]));
            else {
              g[0] = t.dataToPoint(o[0]), g[1] = t.dataToPoint(o[1]);
              var m = d.get(["lineStyle", "curveness"]);
              +m && (g[2] = [(g[0][0] + g[1][0]) / 2 - (g[0][1] - g[1][1]) * m, (g[0][1] + g[1][1]) / 2 - (g[1][0] - g[0][0]) * m]);
            }
            i.setItemLayout(c, g);
          }
      }
    };
  }
}, Sy = { env: {} }, jR = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = e.getData(), o = this._updateLineDraw(i, e), s = e.get("zlevel"), l = e.get(["effect", "trailLength"]), u = n.getZr(), c = u.painter.getType() === "svg";
      c || u.painter.getLayer(s).clear(!0), this._lastZlevel != null && !c && u.configLayer(this._lastZlevel, {
        motionBlur: !1
      }), this._showEffect(e) && l > 0 && (c ? Sy.env.NODE_ENV !== "production" && console.warn("SVG render mode doesn't support lines with trail effect") : u.configLayer(s, {
        motionBlur: !0,
        lastFrameAlpha: Math.max(Math.min(l / 10 + 0.9, 1), 0)
      })), o.updateData(i);
      var v = e.get("clip", !0) && bo(e.coordinateSystem, !1, e);
      v ? this.group.setClipPath(v) : this.group.removeClipPath(), this._lastZlevel = s, this._finished = !0;
    }, t.prototype.incrementalPrepareRender = function(e, a, n) {
      var i = e.getData(), o = this._updateLineDraw(i, e);
      o.incrementalPrepareUpdate(i), this._clearLayer(n), this._finished = !1;
    }, t.prototype.incrementalRender = function(e, a, n) {
      this._lineDraw.incrementalUpdate(e, a.getData()), this._finished = e.end === a.getData().count();
    }, t.prototype.eachRendered = function(e) {
      this._lineDraw && this._lineDraw.eachRendered(e);
    }, t.prototype.updateTransform = function(e, a, n) {
      var i = e.getData(), o = e.pipelineContext;
      if (!this._finished || o.large || o.progressiveRender)
        return {
          update: !0
        };
      var s = ab.reset(e, a, n);
      s.progress && s.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._lineDraw.updateLayout(), this._clearLayer(n);
    }, t.prototype._updateLineDraw = function(e, a) {
      var n = this._lineDraw, i = this._showEffect(a), o = !!a.get("polyline"), s = a.pipelineContext, l = s.large;
      return Sy.env.NODE_ENV !== "production" && i && l && console.warn("Large lines not support effect"), (!n || i !== this._hasEffet || o !== this._isPolyline || l !== this._isLargeDraw) && (n && n.remove(), n = this._lineDraw = l ? new KR() : new hh(o ? i ? YR : rb : i ? tb : fh), this._hasEffet = i, this._isPolyline = o, this._isLargeDraw = l), this.group.add(n.group), n;
    }, t.prototype._showEffect = function(e) {
      return !!e.get(["effect", "show"]);
    }, t.prototype._clearLayer = function(e) {
      var a = e.getZr(), n = a.painter.getType() === "svg";
      !n && this._lastZlevel != null && a.painter.getLayer(this._lastZlevel).clear(!0);
    }, t.prototype.remove = function(e, a) {
      this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(a);
    }, t.prototype.dispose = function(e, a) {
      this.remove(e, a);
    }, t.type = "lines", t;
  }(De)
), Ds = { env: {} }, JR = typeof Uint32Array > "u" ? Array : Uint32Array, QR = typeof Float64Array > "u" ? Array : Float64Array;
function xy(r) {
  var t = r.data;
  t && t[0] && t[0][0] && t[0][0].coord && (Ds.env.NODE_ENV !== "production" && console.warn("Lines data configuration has been changed to { coords:[[1,2],[2,3]] }"), r.data = G(t, function(e) {
    var a = [e[0].coord, e[1].coord], n = {
      coords: a
    };
    return e[0].name && (n.fromName = e[0].name), e[1].name && (n.toName = e[1].name), of([n, e[0], e[1]]);
  }));
}
var ek = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.visualStyleAccessPath = "lineStyle", e.visualDrawType = "stroke", e;
    }
    return t.prototype.init = function(e) {
      e.data = e.data || [], xy(e);
      var a = this._processFlatCoordsArray(e.data);
      this._flatCoords = a.flatCoords, this._flatCoordsOffset = a.flatCoordsOffset, a.flatCoords && (e.data = new Float32Array(a.count)), r.prototype.init.apply(this, arguments);
    }, t.prototype.mergeOption = function(e) {
      if (xy(e), e.data) {
        var a = this._processFlatCoordsArray(e.data);
        this._flatCoords = a.flatCoords, this._flatCoordsOffset = a.flatCoordsOffset, a.flatCoords && (e.data = new Float32Array(a.count));
      }
      r.prototype.mergeOption.apply(this, arguments);
    }, t.prototype.appendData = function(e) {
      var a = this._processFlatCoordsArray(e.data);
      a.flatCoords && (this._flatCoords ? (this._flatCoords = Rs(this._flatCoords, a.flatCoords), this._flatCoordsOffset = Rs(this._flatCoordsOffset, a.flatCoordsOffset)) : (this._flatCoords = a.flatCoords, this._flatCoordsOffset = a.flatCoordsOffset), e.data = new Float32Array(a.count)), this.getRawData().appendData(e.data);
    }, t.prototype._getCoordsFromItemModel = function(e) {
      var a = this.getData().getItemModel(e), n = a.option instanceof Array ? a.option : a.getShallow("coords");
      if (Ds.env.NODE_ENV !== "production" && !(n instanceof Array && n.length > 0 && n[0] instanceof Array))
        throw new Error("Invalid coords " + JSON.stringify(n) + ". Lines must have 2d coords array in data item.");
      return n;
    }, t.prototype.getLineCoordsCount = function(e) {
      return this._flatCoordsOffset ? this._flatCoordsOffset[e * 2 + 1] : this._getCoordsFromItemModel(e).length;
    }, t.prototype.getLineCoords = function(e, a) {
      if (this._flatCoordsOffset) {
        for (var n = this._flatCoordsOffset[e * 2], i = this._flatCoordsOffset[e * 2 + 1], o = 0; o < i; o++)
          a[o] = a[o] || [], a[o][0] = this._flatCoords[n + o * 2], a[o][1] = this._flatCoords[n + o * 2 + 1];
        return i;
      } else {
        for (var s = this._getCoordsFromItemModel(e), o = 0; o < s.length; o++)
          a[o] = a[o] || [], a[o][0] = s[o][0], a[o][1] = s[o][1];
        return s.length;
      }
    }, t.prototype._processFlatCoordsArray = function(e) {
      var a = 0;
      if (this._flatCoords && (a = this._flatCoords.length), _e(e[0])) {
        for (var n = e.length, i = new JR(n), o = new QR(n), s = 0, l = 0, u = 0, c = 0; c < n; ) {
          u++;
          var v = e[c++];
          i[l++] = s + a, i[l++] = v;
          for (var f = 0; f < v; f++) {
            var h = e[c++], p = e[c++];
            if (o[s++] = h, o[s++] = p, c > n && Ds.env.NODE_ENV !== "production")
              throw new Error("Invalid data format.");
          }
        }
        return {
          flatCoordsOffset: new Uint32Array(i.buffer, 0, l),
          flatCoords: o,
          count: u
        };
      }
      return {
        flatCoordsOffset: null,
        flatCoords: null,
        count: e.length
      };
    }, t.prototype.getInitialData = function(e, a) {
      if (Ds.env.NODE_ENV !== "production") {
        var n = Kn.get(e.coordinateSystem);
        if (!n)
          throw new Error("Unknown coordinate system " + e.coordinateSystem);
      }
      var i = new yt(["value"], this);
      return i.hasItemOption = !1, i.initData(e.data, [], function(o, s, l, u) {
        if (o instanceof Array)
          return NaN;
        i.hasItemOption = !0;
        var c = o.value;
        if (c != null)
          return c instanceof Array ? c[u] : c;
      }), i;
    }, t.prototype.formatTooltip = function(e, a, n) {
      var i = this.getData(), o = i.getItemModel(e), s = o.get("name");
      if (s)
        return s;
      var l = o.get("fromName"), u = o.get("toName"), c = [];
      return l != null && c.push(l), u != null && c.push(u), rt("nameValue", {
        name: c.join(" > ")
      });
    }, t.prototype.preventIncremental = function() {
      return !!this.get(["effect", "show"]);
    }, t.prototype.getProgressive = function() {
      var e = this.option.progressive;
      return e ?? (this.option.large ? 1e4 : this.get("progressive"));
    }, t.prototype.getProgressiveThreshold = function() {
      var e = this.option.progressiveThreshold;
      return e ?? (this.option.large ? 2e4 : this.get("progressiveThreshold"));
    }, t.prototype.getZLevelKey = function() {
      var e = this.getModel("effect"), a = e.get("trailLength");
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : e.get("show") && a > 0 ? a + "" : "";
    }, t.type = "series.lines", t.dependencies = ["grid", "polar", "geo", "calendar"], t.defaultOption = {
      coordinateSystem: "geo",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Cartesian coordinate system
      xAxisIndex: 0,
      yAxisIndex: 0,
      symbol: ["none", "none"],
      symbolSize: [10, 10],
      // Geo coordinate system
      geoIndex: 0,
      effect: {
        show: !1,
        period: 4,
        constantSpeed: 0,
        symbol: "circle",
        symbolSize: 3,
        loop: !0,
        trailLength: 0.2
      },
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      polyline: !1,
      clip: !0,
      label: {
        show: !1,
        position: "end"
        // distance: 5,
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      lineStyle: {
        opacity: 0.5
      }
    }, t;
  }(Le)
);
function is(r) {
  return r instanceof Array || (r = [r, r]), r;
}
var tk = {
  seriesType: "lines",
  reset: function(r) {
    var t = is(r.get("symbol")), e = is(r.get("symbolSize")), a = r.getData();
    a.setVisual("fromSymbol", t && t[0]), a.setVisual("toSymbol", t && t[1]), a.setVisual("fromSymbolSize", e && e[0]), a.setVisual("toSymbolSize", e && e[1]);
    function n(i, o) {
      var s = i.getItemModel(o), l = is(s.getShallow("symbol", !0)), u = is(s.getShallow("symbolSize", !0));
      l[0] && i.setItemVisual(o, "fromSymbol", l[0]), l[1] && i.setItemVisual(o, "toSymbol", l[1]), u[0] && i.setItemVisual(o, "fromSymbolSize", u[0]), u[1] && i.setItemVisual(o, "toSymbolSize", u[1]);
    }
    return {
      dataEach: a.hasItemOption ? n : null
    };
  }
};
function rk(r) {
  r.registerChartView(jR), r.registerSeriesModel(ek), r.registerLayout(ab), r.registerVisual(tk);
}
var ak = 256, nk = (
  /** @class */
  function() {
    function r() {
      this.blurSize = 30, this.pointSize = 20, this.maxOpacity = 1, this.minOpacity = 0, this._gradientPixels = {
        inRange: null,
        outOfRange: null
      };
      var t = ks.createCanvas();
      this.canvas = t;
    }
    return r.prototype.update = function(t, e, a, n, i, o) {
      var s = this._getBrush(), l = this._getGradient(i, "inRange"), u = this._getGradient(i, "outOfRange"), c = this.pointSize + this.blurSize, v = this.canvas, f = v.getContext("2d"), h = t.length;
      v.width = e, v.height = a;
      for (var p = 0; p < h; ++p) {
        var d = t[p], g = d[0], y = d[1], m = d[2], _ = n(m);
        f.globalAlpha = _, f.drawImage(s, g - c, y - c);
      }
      if (!v.width || !v.height)
        return v;
      for (var S = f.getImageData(0, 0, v.width, v.height), x = S.data, b = 0, D = x.length, A = this.minOpacity, T = this.maxOpacity, C = T - A; b < D; ) {
        var _ = x[b + 3] / 256, M = Math.floor(_ * (ak - 1)) * 4;
        if (_ > 0) {
          var I = o(_) ? l : u;
          _ > 0 && (_ = _ * C + A), x[b++] = I[M], x[b++] = I[M + 1], x[b++] = I[M + 2], x[b++] = I[M + 3] * _ * 256;
        } else
          b += 4;
      }
      return f.putImageData(S, 0, 0), v;
    }, r.prototype._getBrush = function() {
      var t = this._brushCanvas || (this._brushCanvas = ks.createCanvas()), e = this.pointSize + this.blurSize, a = e * 2;
      t.width = a, t.height = a;
      var n = t.getContext("2d");
      return n.clearRect(0, 0, a, a), n.shadowOffsetX = a, n.shadowBlur = this.blurSize, n.shadowColor = "#000", n.beginPath(), n.arc(-e, e, this.pointSize, 0, Math.PI * 2, !0), n.closePath(), n.fill(), t;
    }, r.prototype._getGradient = function(t, e) {
      for (var a = this._gradientPixels, n = a[e] || (a[e] = new Uint8ClampedArray(256 * 4)), i = [0, 0, 0, 0], o = 0, s = 0; s < 256; s++)
        t[e](s / 255, !0, i), n[o++] = i[0], n[o++] = i[1], n[o++] = i[2], n[o++] = i[3];
      return n;
    }, r;
  }()
), by = { env: {} };
function ik(r, t, e) {
  var a = r[1] - r[0];
  t = G(t, function(o) {
    return {
      interval: [(o.interval[0] - r[0]) / a, (o.interval[1] - r[0]) / a]
    };
  });
  var n = t.length, i = 0;
  return function(o) {
    var s;
    for (s = i; s < n; s++) {
      var l = t[s].interval;
      if (l[0] <= o && o <= l[1]) {
        i = s;
        break;
      }
    }
    if (s === n)
      for (s = i - 1; s >= 0; s--) {
        var l = t[s].interval;
        if (l[0] <= o && o <= l[1]) {
          i = s;
          break;
        }
      }
    return s >= 0 && s < n && e[s];
  };
}
function ok(r, t) {
  var e = r[1] - r[0];
  return t = [(t[0] - r[0]) / e, (t[1] - r[0]) / e], function(a) {
    return a >= t[0] && a <= t[1];
  };
}
function wy(r) {
  var t = r.dimensions;
  return t[0] === "lng" && t[1] === "lat";
}
var sk = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i;
      if (a.eachComponent("visualMap", function(s) {
        s.eachTargetSeries(function(l) {
          l === e && (i = s);
        });
      }), by.env.NODE_ENV !== "production" && !i)
        throw new Error("Heatmap must use with visualMap");
      this._progressiveEls = null, this.group.removeAll();
      var o = e.coordinateSystem;
      o.type === "cartesian2d" || o.type === "calendar" ? this._renderOnCartesianAndCalendar(e, n, 0, e.getData().count()) : wy(o) && this._renderOnGeo(o, e, i, n);
    }, t.prototype.incrementalPrepareRender = function(e, a, n) {
      this.group.removeAll();
    }, t.prototype.incrementalRender = function(e, a, n, i) {
      var o = a.coordinateSystem;
      o && (wy(o) ? this.render(a, n, i) : (this._progressiveEls = [], this._renderOnCartesianAndCalendar(a, i, e.start, e.end, !0)));
    }, t.prototype.eachRendered = function(e) {
      ia(this._progressiveEls || this.group, e);
    }, t.prototype._renderOnCartesianAndCalendar = function(e, a, n, i, o) {
      var s = e.coordinateSystem, l = Za(s, "cartesian2d"), u, c, v, f;
      if (l) {
        var h = s.getAxis("x"), p = s.getAxis("y");
        if (by.env.NODE_ENV !== "production") {
          if (!(h.type === "category" && p.type === "category"))
            throw new Error("Heatmap on cartesian must have two category axes");
          if (!(h.onBand && p.onBand))
            throw new Error("Heatmap on cartesian must have two axes with boundaryGap true");
        }
        u = h.getBandWidth() + 0.5, c = p.getBandWidth() + 0.5, v = h.scale.getExtent(), f = p.scale.getExtent();
      }
      for (var d = this.group, g = e.getData(), y = e.getModel(["emphasis", "itemStyle"]).getItemStyle(), m = e.getModel(["blur", "itemStyle"]).getItemStyle(), _ = e.getModel(["select", "itemStyle"]).getItemStyle(), S = e.get(["itemStyle", "borderRadius"]), x = tt(e), b = e.getModel("emphasis"), D = b.get("focus"), A = b.get("blurScope"), T = b.get("disabled"), C = l ? [g.mapDimension("x"), g.mapDimension("y"), g.mapDimension("value")] : [g.mapDimension("time"), g.mapDimension("value")], M = n; M < i; M++) {
        var I = void 0, L = g.getItemVisual(M, "style");
        if (l) {
          var P = g.get(C[0], M), E = g.get(C[1], M);
          if (isNaN(g.get(C[2], M)) || isNaN(P) || isNaN(E) || P < v[0] || P > v[1] || E < f[0] || E > f[1])
            continue;
          var N = s.dataToPoint([P, E]);
          I = new de({
            shape: {
              x: N[0] - u / 2,
              y: N[1] - c / 2,
              width: u,
              height: c
            },
            style: L
          });
        } else {
          if (isNaN(g.get(C[1], M)))
            continue;
          I = new de({
            z2: 1,
            shape: s.dataToRect([g.get(C[0], M)]).contentShape,
            style: L
          });
        }
        if (g.hasItemOption) {
          var O = g.getItemModel(M), k = O.getModel("emphasis");
          y = k.getModel("itemStyle").getItemStyle(), m = O.getModel(["blur", "itemStyle"]).getItemStyle(), _ = O.getModel(["select", "itemStyle"]).getItemStyle(), S = O.get(["itemStyle", "borderRadius"]), D = k.get("focus"), A = k.get("blurScope"), T = k.get("disabled"), x = tt(O);
        }
        I.shape.r = S;
        var V = e.getRawValue(M), F = "-";
        V && V[2] != null && (F = V[2] + ""), lt(I, x, {
          labelFetcher: e,
          labelDataIndex: M,
          defaultOpacity: L.opacity,
          defaultText: F
        }), I.ensureState("emphasis").style = y, I.ensureState("blur").style = m, I.ensureState("select").style = _, Be(I, D, A, T), I.incremental = o, o && (I.states.emphasis.hoverLayer = !0), d.add(I), g.setItemGraphicEl(M, I), this._progressiveEls && this._progressiveEls.push(I);
      }
    }, t.prototype._renderOnGeo = function(e, a, n, i) {
      var o = n.targetVisuals.inRange, s = n.targetVisuals.outOfRange, l = a.getData(), u = this._hmLayer || this._hmLayer || new nk();
      u.blurSize = a.get("blurSize"), u.pointSize = a.get("pointSize"), u.minOpacity = a.get("minOpacity"), u.maxOpacity = a.get("maxOpacity");
      var c = e.getViewRect().clone(), v = e.getRoamTransform();
      c.applyTransform(v);
      var f = Math.max(c.x, 0), h = Math.max(c.y, 0), p = Math.min(c.width + c.x, i.getWidth()), d = Math.min(c.height + c.y, i.getHeight()), g = p - f, y = d - h, m = [l.mapDimension("lng"), l.mapDimension("lat"), l.mapDimension("value")], _ = l.mapArray(m, function(D, A, T) {
        var C = e.dataToPoint([D, A]);
        return C[0] -= f, C[1] -= h, C.push(T), C;
      }), S = n.getExtent(), x = n.type === "visualMap.continuous" ? ok(S, n.option.range) : ik(S, n.getPieceList(), n.option.selected);
      u.update(_, g, y, o.color.getNormalizer(), {
        inRange: o.color.getColorMapper(),
        outOfRange: s.color.getColorMapper()
      }, x);
      var b = new Ut({
        style: {
          width: g,
          height: y,
          x: f,
          y: h,
          image: u.canvas
        },
        silent: !0
      });
      this.group.add(b);
    }, t.type = "heatmap", t;
  }(De)
), lk = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.getInitialData = function(e, a) {
      return Pr(null, this, {
        generateCoord: "value"
      });
    }, t.prototype.preventIncremental = function() {
      var e = Kn.get(this.get("coordinateSystem"));
      if (e && e.dimensions)
        return e.dimensions[0] === "lng" && e.dimensions[1] === "lat";
    }, t.type = "series.heatmap", t.dependencies = ["grid", "geo", "calendar"], t.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Geo coordinate system
      geoIndex: 0,
      blurSize: 30,
      pointSize: 20,
      maxOpacity: 1,
      minOpacity: 0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, t;
  }(Le)
);
function uk(r) {
  r.registerChartView(sk), r.registerSeriesModel(lk);
}
var ck = ["itemStyle", "borderWidth"], Dy = [{
  xy: "x",
  wh: "width",
  index: 0,
  posDesc: ["left", "right"]
}, {
  xy: "y",
  wh: "height",
  index: 1,
  posDesc: ["top", "bottom"]
}], yc = new Wa(), vk = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = this.group, o = e.getData(), s = this._data, l = e.coordinateSystem, u = l.getBaseAxis(), c = u.isHorizontal(), v = l.master.getRect(), f = {
        ecSize: {
          width: n.getWidth(),
          height: n.getHeight()
        },
        seriesModel: e,
        coordSys: l,
        coordSysExtent: [[v.x, v.x + v.width], [v.y, v.y + v.height]],
        isHorizontal: c,
        valueDim: Dy[+c],
        categoryDim: Dy[1 - +c]
      };
      o.diff(s).add(function(p) {
        if (o.hasValue(p)) {
          var d = Ty(o, p), g = Ay(o, p, d, f), y = Cy(o, f, g);
          o.setItemGraphicEl(p, y), i.add(y), Iy(y, f, g);
        }
      }).update(function(p, d) {
        var g = s.getItemGraphicEl(d);
        if (!o.hasValue(p)) {
          i.remove(g);
          return;
        }
        var y = Ty(o, p), m = Ay(o, p, y, f), _ = ub(o, m);
        g && _ !== g.__pictorialShapeStr && (i.remove(g), o.setItemGraphicEl(p, null), g = null), g ? mk(g, f, m) : g = Cy(o, f, m, !0), o.setItemGraphicEl(p, g), g.__pictorialSymbolMeta = m, i.add(g), Iy(g, f, m);
      }).remove(function(p) {
        var d = s.getItemGraphicEl(p);
        d && My(s, p, d.__pictorialSymbolMeta.animationModel, d);
      }).execute();
      var h = e.get("clip", !0) ? bo(e.coordinateSystem, !1, e) : null;
      return h ? i.setClipPath(h) : i.removeClipPath(), this._data = o, this.group;
    }, t.prototype.remove = function(e, a) {
      var n = this.group, i = this._data;
      e.get("animation") ? i && i.eachItemGraphicEl(function(o) {
        My(i, j(o).dataIndex, e, o);
      }) : n.removeAll();
    }, t.type = "pictorialBar", t;
  }(De)
);
function Ay(r, t, e, a) {
  var n = r.getItemLayout(t), i = e.get("symbolRepeat"), o = e.get("symbolClip"), s = e.get("symbolPosition") || "start", l = e.get("symbolRotate"), u = (l || 0) * Math.PI / 180 || 0, c = e.get("symbolPatternSize") || 2, v = e.isAnimationEnabled(), f = {
    dataIndex: t,
    layout: n,
    itemModel: e,
    symbolType: r.getItemVisual(t, "symbol") || "circle",
    style: r.getItemVisual(t, "style"),
    symbolClip: o,
    symbolRepeat: i,
    symbolRepeatDirection: e.get("symbolRepeatDirection"),
    symbolPatternSize: c,
    rotation: u,
    animationModel: v ? e : null,
    hoverScale: v && e.get(["emphasis", "scale"]),
    z2: e.getShallow("z", !0) || 0
  };
  fk(e, i, n, a, f), hk(r, t, n, i, o, f.boundingLength, f.pxSign, c, a, f), pk(e, f.symbolScale, u, a, f);
  var h = f.symbolSize, p = $a(e.get("symbolOffset"), h);
  return dk(e, h, n, i, o, p, s, f.valueLineWidth, f.boundingLength, f.repeatCutLength, a, f), f;
}
function fk(r, t, e, a, n) {
  var i = a.valueDim, o = r.get("symbolBoundingData"), s = a.coordSys.getOtherAxis(a.coordSys.getBaseAxis()), l = s.toGlobalCoord(s.dataToCoord(0)), u = 1 - +(e[i.wh] <= 0), c;
  if (B(o)) {
    var v = [mc(s, o[0]) - l, mc(s, o[1]) - l];
    v[1] < v[0] && v.reverse(), c = v[u];
  } else o != null ? c = mc(s, o) - l : t ? c = a.coordSysExtent[i.index][u] - l : c = e[i.wh];
  n.boundingLength = c, t && (n.repeatCutLength = e[i.wh]), n.pxSign = c > 0 ? 1 : -1;
}
function mc(r, t) {
  return r.toGlobalCoord(r.dataToCoord(r.scale.parse(t)));
}
function hk(r, t, e, a, n, i, o, s, l, u) {
  var c = l.valueDim, v = l.categoryDim, f = Math.abs(e[v.wh]), h = r.getItemVisual(t, "symbolSize"), p;
  B(h) ? p = h.slice() : h == null ? p = ["100%", "100%"] : p = [h, h], p[v.index] = H(p[v.index], f), p[c.index] = H(p[c.index], a ? f : Math.abs(i)), u.symbolSize = p;
  var d = u.symbolScale = [p[0] / s, p[1] / s];
  d[c.index] *= (l.isHorizontal ? -1 : 1) * o;
}
function pk(r, t, e, a, n) {
  var i = r.get(ck) || 0;
  i && (yc.attr({
    scaleX: t[0],
    scaleY: t[1],
    rotation: e
  }), yc.updateTransform(), i /= yc.getLineScale(), i *= t[a.valueDim.index]), n.valueLineWidth = i || 0;
}
function dk(r, t, e, a, n, i, o, s, l, u, c, v) {
  var f = c.categoryDim, h = c.valueDim, p = v.pxSign, d = Math.max(t[h.index] + s, 0), g = d;
  if (a) {
    var y = Math.abs(l), m = $e(r.get("symbolMargin"), "15%") + "", _ = !1;
    m.lastIndexOf("!") === m.length - 1 && (_ = !0, m = m.slice(0, m.length - 1));
    var S = H(m, t[h.index]), x = Math.max(d + S * 2, 0), b = _ ? 0 : S * 2, D = sf(a), A = D ? a : Ly((y + b) / x), T = y - A * d;
    S = T / 2 / (_ ? A : Math.max(A - 1, 1)), x = d + S * 2, b = _ ? 0 : S * 2, !D && a !== "fixed" && (A = u ? Ly((Math.abs(u) + b) / x) : 0), g = A * x - b, v.repeatTimes = A, v.symbolMargin = S;
  }
  var C = p * (g / 2), M = v.pathPosition = [];
  M[f.index] = e[f.wh] / 2, M[h.index] = o === "start" ? C : o === "end" ? l - C : l / 2, i && (M[0] += i[0], M[1] += i[1]);
  var I = v.bundlePosition = [];
  I[f.index] = e[f.xy], I[h.index] = e[h.xy];
  var L = v.barRectShape = z({}, e);
  L[h.wh] = p * Math.max(Math.abs(e[h.wh]), Math.abs(M[h.index] + C)), L[f.wh] = e[f.wh];
  var P = v.clipShape = {};
  P[f.xy] = -e[f.xy], P[f.wh] = c.ecSize[f.wh], P[h.xy] = 0, P[h.wh] = e[h.wh];
}
function nb(r) {
  var t = r.symbolPatternSize, e = Ze(
    // Consider texture img, make a big size.
    r.symbolType,
    -t / 2,
    -t / 2,
    t,
    t
  );
  return e.attr({
    culling: !0
  }), e.type !== "image" && e.setStyle({
    strokeNoScale: !0
  }), e;
}
function ib(r, t, e, a) {
  var n = r.__pictorialBundle, i = e.symbolSize, o = e.valueLineWidth, s = e.pathPosition, l = t.valueDim, u = e.repeatTimes || 0, c = 0, v = i[t.valueDim.index] + o + e.symbolMargin * 2;
  for (xh(r, function(d) {
    d.__pictorialAnimationIndex = c, d.__pictorialRepeatTimes = u, c < u ? bn(d, null, p(c), e, a) : bn(d, null, {
      scaleX: 0,
      scaleY: 0
    }, e, a, function() {
      n.remove(d);
    }), c++;
  }); c < u; c++) {
    var f = nb(e);
    f.__pictorialAnimationIndex = c, f.__pictorialRepeatTimes = u, n.add(f);
    var h = p(c);
    bn(f, {
      x: h.x,
      y: h.y,
      scaleX: 0,
      scaleY: 0
    }, {
      scaleX: h.scaleX,
      scaleY: h.scaleY,
      rotation: h.rotation
    }, e, a);
  }
  function p(d) {
    var g = s.slice(), y = e.pxSign, m = d;
    return (e.symbolRepeatDirection === "start" ? y > 0 : y < 0) && (m = u - 1 - d), g[l.index] = v * (m - u / 2 + 0.5) + s[l.index], {
      x: g[0],
      y: g[1],
      scaleX: e.symbolScale[0],
      scaleY: e.symbolScale[1],
      rotation: e.rotation
    };
  }
}
function ob(r, t, e, a) {
  var n = r.__pictorialBundle, i = r.__pictorialMainPath;
  i ? bn(i, null, {
    x: e.pathPosition[0],
    y: e.pathPosition[1],
    scaleX: e.symbolScale[0],
    scaleY: e.symbolScale[1],
    rotation: e.rotation
  }, e, a) : (i = r.__pictorialMainPath = nb(e), n.add(i), bn(i, {
    x: e.pathPosition[0],
    y: e.pathPosition[1],
    scaleX: 0,
    scaleY: 0,
    rotation: e.rotation
  }, {
    scaleX: e.symbolScale[0],
    scaleY: e.symbolScale[1]
  }, e, a));
}
function sb(r, t, e) {
  var a = z({}, t.barRectShape), n = r.__pictorialBarRect;
  n ? bn(n, null, {
    shape: a
  }, t, e) : (n = r.__pictorialBarRect = new de({
    z2: 2,
    shape: a,
    silent: !0,
    style: {
      stroke: "transparent",
      fill: "transparent",
      lineWidth: 0
    }
  }), n.disableMorphing = !0, r.add(n));
}
function lb(r, t, e, a) {
  if (e.symbolClip) {
    var n = r.__pictorialClipPath, i = z({}, e.clipShape), o = t.valueDim, s = e.animationModel, l = e.dataIndex;
    if (n)
      pe(n, {
        shape: i
      }, s, l);
    else {
      i[o.wh] = 0, n = new de({
        shape: i
      }), r.__pictorialBundle.setClipPath(n), r.__pictorialClipPath = n;
      var u = {};
      u[o.wh] = e.clipShape[o.wh], Ua[a ? "updateProps" : "initProps"](n, {
        shape: u
      }, s, l);
    }
  }
}
function Ty(r, t) {
  var e = r.getItemModel(t);
  return e.getAnimationDelayParams = gk, e.isAnimationEnabled = yk, e;
}
function gk(r) {
  return {
    index: r.__pictorialAnimationIndex,
    count: r.__pictorialRepeatTimes
  };
}
function yk() {
  return this.parentModel.isAnimationEnabled() && !!this.getShallow("animation");
}
function Cy(r, t, e, a) {
  var n = new re(), i = new re();
  return n.add(i), n.__pictorialBundle = i, i.x = e.bundlePosition[0], i.y = e.bundlePosition[1], e.symbolRepeat ? ib(n, t, e) : ob(n, t, e), sb(n, e, a), lb(n, t, e, a), n.__pictorialShapeStr = ub(r, e), n.__pictorialSymbolMeta = e, n;
}
function mk(r, t, e) {
  var a = e.animationModel, n = e.dataIndex, i = r.__pictorialBundle;
  pe(i, {
    x: e.bundlePosition[0],
    y: e.bundlePosition[1]
  }, a, n), e.symbolRepeat ? ib(r, t, e, !0) : ob(r, t, e, !0), sb(r, e, !0), lb(r, t, e, !0);
}
function My(r, t, e, a) {
  var n = a.__pictorialBarRect;
  n && n.removeTextContent();
  var i = [];
  xh(a, function(o) {
    i.push(o);
  }), a.__pictorialMainPath && i.push(a.__pictorialMainPath), a.__pictorialClipPath && (e = null), w(i, function(o) {
    Qr(o, {
      scaleX: 0,
      scaleY: 0
    }, e, t, function() {
      a.parent && a.parent.remove(a);
    });
  }), r.setItemGraphicEl(t, null);
}
function ub(r, t) {
  return [r.getItemVisual(t.dataIndex, "symbol") || "none", !!t.symbolRepeat, !!t.symbolClip].join(":");
}
function xh(r, t, e) {
  w(r.__pictorialBundle.children(), function(a) {
    a !== r.__pictorialBarRect && t.call(e, a);
  });
}
function bn(r, t, e, a, n, i) {
  t && r.attr(t), a.symbolClip && !n ? e && r.attr(e) : e && Ua[n ? "updateProps" : "initProps"](r, e, a.animationModel, a.dataIndex, i);
}
function Iy(r, t, e) {
  var a = e.dataIndex, n = e.itemModel, i = n.getModel("emphasis"), o = i.getModel("itemStyle").getItemStyle(), s = n.getModel(["blur", "itemStyle"]).getItemStyle(), l = n.getModel(["select", "itemStyle"]).getItemStyle(), u = n.getShallow("cursor"), c = i.get("focus"), v = i.get("blurScope"), f = i.get("scale");
  xh(r, function(d) {
    if (d instanceof Ut) {
      var g = d.style;
      d.useStyle(z({
        // TODO other properties like dx, dy ?
        image: g.image,
        x: g.x,
        y: g.y,
        width: g.width,
        height: g.height
      }, e.style));
    } else
      d.useStyle(e.style);
    var y = d.ensureState("emphasis");
    y.style = o, f && (y.scaleX = d.scaleX * 1.1, y.scaleY = d.scaleY * 1.1), d.ensureState("blur").style = s, d.ensureState("select").style = l, u && (d.cursor = u), d.z2 = e.z2;
  });
  var h = t.valueDim.posDesc[+(e.boundingLength > 0)], p = r.__pictorialBarRect;
  p.ignoreClip = !0, lt(p, tt(n), {
    labelFetcher: t.seriesModel,
    labelDataIndex: a,
    defaultText: En(t.seriesModel.getData(), a),
    inheritColor: e.style.fill,
    defaultOpacity: e.style.opacity,
    defaultOutsidePosition: h
  }), Be(r, c, v, i.get("disabled"));
}
function Ly(r) {
  var t = Math.round(r);
  return Math.abs(r - t) < 1e-4 ? t : Math.ceil(r);
}
var _k = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.hasSymbolVisual = !0, e.defaultSymbol = "roundRect", e;
    }
    return t.prototype.getInitialData = function(e) {
      return e.stack = null, r.prototype.getInitialData.apply(this, arguments);
    }, t.type = "series.pictorialBar", t.dependencies = ["grid"], t.defaultOption = oa(Ji.defaultOption, {
      symbol: "circle",
      symbolSize: null,
      symbolRotate: null,
      symbolPosition: null,
      symbolOffset: null,
      symbolMargin: null,
      symbolRepeat: !1,
      symbolRepeatDirection: "end",
      symbolClip: !1,
      symbolBoundingData: null,
      symbolPatternSize: 400,
      barGap: "-100%",
      // Pictorial bar do not clip by default because in many cases
      // xAxis and yAxis are not displayed and it's expected not to clip
      clip: !1,
      // z can be set in data item, which is z2 actually.
      // Disable progressive
      progressive: 0,
      emphasis: {
        // By default pictorialBar do not hover scale. Hover scale is not suitable
        // for the case that both has foreground and background.
        scale: !1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }), t;
  }(Ji)
);
function Sk(r) {
  r.registerChartView(vk), r.registerSeriesModel(_k), r.registerLayout(r.PRIORITY.VISUAL.LAYOUT, te(lx, "pictorialBar")), r.registerLayout(r.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, ux("pictorialBar"));
}
var xk = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._layers = [], e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = e.getData(), o = this, s = this.group, l = e.getLayerSeries(), u = i.getLayout("layoutInfo"), c = u.rect, v = u.boundaryGap;
      s.x = 0, s.y = c.y + v[0];
      function f(g) {
        return g.name;
      }
      var h = new Cr(this._layersSeries || [], l, f, f), p = [];
      h.add(U(d, this, "add")).update(U(d, this, "update")).remove(U(d, this, "remove")).execute();
      function d(g, y, m) {
        var _ = o._layers;
        if (g === "remove") {
          s.remove(_[y]);
          return;
        }
        for (var S = [], x = [], b, D = l[y].indices, A = 0; A < D.length; A++) {
          var T = i.getItemLayout(D[A]), C = T.x, M = T.y0, I = T.y;
          S.push(C, M), x.push(C, M + I), b = i.getItemVisual(D[A], "style");
        }
        var L, P = i.getItemLayout(D[0]), E = e.getModel("label"), N = E.get("margin"), O = e.getModel("emphasis");
        if (g === "add") {
          var k = p[y] = new re();
          L = new Ox({
            shape: {
              points: S,
              stackedOnPoints: x,
              smooth: 0.4,
              stackedOnSmooth: 0.4,
              smoothConstraint: !1
            },
            z2: 0
          }), k.add(L), s.add(k), e.isAnimationEnabled() && L.setClipPath(bk(L.getBoundingRect(), e, function() {
            L.removeClipPath();
          }));
        } else {
          var k = _[m];
          L = k.childAt(0), s.add(k), p[y] = k, pe(L, {
            shape: {
              points: S,
              stackedOnPoints: x
            }
          }, e), er(L);
        }
        lt(L, tt(e), {
          labelDataIndex: D[A - 1],
          defaultText: i.getName(D[A - 1]),
          inheritColor: b.fill
        }, {
          normal: {
            verticalAlign: "middle"
            // align: 'right'
          }
        }), L.setTextConfig({
          position: null,
          local: !0
        });
        var V = L.getTextContent();
        V && (V.x = P.x - N, V.y = P.y0 + P.y / 2), L.useStyle(b), i.setItemGraphicEl(y, L), st(L, e), Be(L, O.get("focus"), O.get("blurScope"), O.get("disabled"));
      }
      this._layersSeries = l, this._layers = p;
    }, t.type = "themeRiver", t;
  }(De)
);
function bk(r, t, e) {
  var a = new de({
    shape: {
      x: r.x - 10,
      y: r.y - 10,
      width: 0,
      height: r.height + 20
    }
  });
  return Pe(a, {
    shape: {
      x: r.x - 50,
      width: r.width + 100,
      height: r.height + 20
    }
  }, t, e), a;
}
var _c = 2, wk = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new Ao(U(this.getData, this), U(this.getRawData, this));
    }, t.prototype.fixData = function(e) {
      var a = e.length, n = {}, i = Zc(e, function(f) {
        return n.hasOwnProperty(f[0] + "") || (n[f[0] + ""] = -1), f[2];
      }), o = [];
      i.buckets.each(function(f, h) {
        o.push({
          name: h,
          dataList: f
        });
      });
      for (var s = o.length, l = 0; l < s; ++l) {
        for (var u = o[l].name, c = 0; c < o[l].dataList.length; ++c) {
          var v = o[l].dataList[c][0] + "";
          n[v] = l;
        }
        for (var v in n)
          n.hasOwnProperty(v) && n[v] !== l && (n[v] = l, e[a] = [v, 0, u], a++);
      }
      return e;
    }, t.prototype.getInitialData = function(e, a) {
      for (var n = this.getReferringComponents("singleAxis", Ye).models[0], i = n.get("type"), o = Ae(e.data, function(p) {
        return p[2] !== void 0;
      }), s = this.fixData(o || []), l = [], u = this.nameMap = Z(), c = 0, v = 0; v < s.length; ++v)
        l.push(s[v][_c]), u.get(s[v][_c]) || (u.set(s[v][_c], c), c++);
      var f = mo(s, {
        coordDimensions: ["single"],
        dimensionsDefine: [{
          name: "time",
          type: js(i)
        }, {
          name: "value",
          type: "float"
        }, {
          name: "name",
          type: "ordinal"
        }],
        encodeDefine: {
          single: 0,
          value: 1,
          itemName: 2
        }
      }).dimensions, h = new yt(f, this);
      return h.initData(s), h;
    }, t.prototype.getLayerSeries = function() {
      for (var e = this.getData(), a = e.count(), n = [], i = 0; i < a; ++i)
        n[i] = i;
      var o = e.mapDimension("single"), s = Zc(n, function(u) {
        return e.get("name", u);
      }), l = [];
      return s.buckets.each(function(u, c) {
        u.sort(function(v, f) {
          return e.get(o, v) - e.get(o, f);
        }), l.push({
          name: c,
          indices: u
        });
      }), l;
    }, t.prototype.getAxisTooltipData = function(e, a, n) {
      B(e) || (e = e ? [e] : []);
      for (var i = this.getData(), o = this.getLayerSeries(), s = [], l = o.length, u, c = 0; c < l; ++c) {
        for (var v = Number.MAX_VALUE, f = -1, h = o[c].indices.length, p = 0; p < h; ++p) {
          var d = i.get(e[0], o[c].indices[p]), g = Math.abs(d - a);
          g <= v && (u = d, v = g, f = o[c].indices[p]);
        }
        s.push(f);
      }
      return {
        dataIndices: s,
        nestestValue: u
      };
    }, t.prototype.formatTooltip = function(e, a, n) {
      var i = this.getData(), o = i.getName(e), s = i.get(i.mapDimension("value"), e);
      return rt("nameValue", {
        name: o,
        value: s
      });
    }, t.type = "series.themeRiver", t.dependencies = ["singleAxis"], t.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "singleAxis",
      // gap in axis's orthogonal orientation
      boundaryGap: ["10%", "10%"],
      // legendHoverLink: true,
      singleAxisIndex: 0,
      animationEasing: "linear",
      label: {
        margin: 4,
        show: !0,
        position: "left",
        fontSize: 11
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, t;
  }(Le)
);
function Dk(r, t) {
  r.eachSeriesByType("themeRiver", function(e) {
    var a = e.getData(), n = e.coordinateSystem, i = {}, o = n.getRect();
    i.rect = o;
    var s = e.get("boundaryGap"), l = n.getAxis();
    if (i.boundaryGap = s, l.orient === "horizontal") {
      s[0] = H(s[0], o.height), s[1] = H(s[1], o.height);
      var u = o.height - s[0] - s[1];
      Ey(a, e, u);
    } else {
      s[0] = H(s[0], o.width), s[1] = H(s[1], o.width);
      var c = o.width - s[0] - s[1];
      Ey(a, e, c);
    }
    a.setLayout("layoutInfo", i);
  });
}
function Ey(r, t, e) {
  if (r.count())
    for (var a = t.coordinateSystem, n = t.getLayerSeries(), i = r.mapDimension("single"), o = r.mapDimension("value"), s = G(n, function(g) {
      return G(g.indices, function(y) {
        var m = a.dataToPoint(r.get(i, y));
        return m[1] = r.get(o, y), m;
      });
    }), l = Ak(s), u = l.y0, c = e / l.max, v = n.length, f = n[0].indices.length, h, p = 0; p < f; ++p) {
      h = u[p] * c, r.setItemLayout(n[0].indices[p], {
        layerIndex: 0,
        x: s[0][p][0],
        y0: h,
        y: s[0][p][1] * c
      });
      for (var d = 1; d < v; ++d)
        h += s[d - 1][p][1] * c, r.setItemLayout(n[d].indices[p], {
          layerIndex: d,
          x: s[d][p][0],
          y0: h,
          y: s[d][p][1] * c
        });
    }
}
function Ak(r) {
  for (var t = r.length, e = r[0].length, a = [], n = [], i = 0, o = 0; o < e; ++o) {
    for (var s = 0, l = 0; l < t; ++l)
      s += r[l][o][1];
    s > i && (i = s), a.push(s);
  }
  for (var u = 0; u < e; ++u)
    n[u] = (i - a[u]) / 2;
  i = 0;
  for (var c = 0; c < e; ++c) {
    var v = a[c] + n[c];
    v > i && (i = v);
  }
  return {
    y0: n,
    max: i
  };
}
function Tk(r) {
  r.registerChartView(xk), r.registerSeriesModel(wk), r.registerLayout(Dk), r.registerProcessor(Do("themeRiver"));
}
var Ck = 2, Mk = 4, Py = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n, i) {
      var o = r.call(this) || this;
      o.z2 = Ck, o.textConfig = {
        inside: !0
      }, j(o).seriesIndex = a.seriesIndex;
      var s = new ve({
        z2: Mk,
        silent: e.getModel().get(["label", "silent"])
      });
      return o.setTextContent(s), o.updateData(!0, e, a, n, i), o;
    }
    return t.prototype.updateData = function(e, a, n, i, o) {
      this.node = a, a.piece = this, n = n || this._seriesModel, i = i || this._ecModel;
      var s = this;
      j(s).dataIndex = a.dataIndex;
      var l = a.getModel(), u = l.getModel("emphasis"), c = a.getLayout(), v = z({}, c);
      v.label = null;
      var f = a.getVisual("style");
      f.lineJoin = "bevel";
      var h = a.getVisual("decal");
      h && (f.decal = In(h, o));
      var p = Ca(l.getModel("itemStyle"), v, !0);
      z(v, p), w(xt, function(m) {
        var _ = s.ensureState(m), S = l.getModel([m, "itemStyle"]);
        _.style = S.getItemStyle();
        var x = Ca(S, v);
        x && (_.shape = x);
      }), e ? (s.setShape(v), s.shape.r = c.r0, Pe(s, {
        shape: {
          r: c.r
        }
      }, n, a.dataIndex)) : (pe(s, {
        shape: v
      }, n), er(s)), s.useStyle(f), this._updateLabel(n);
      var d = l.getShallow("cursor");
      d && s.attr("cursor", d), this._seriesModel = n || this._seriesModel, this._ecModel = i || this._ecModel;
      var g = u.get("focus"), y = g === "ancestor" ? a.getAncestorsIndices() : g === "descendant" ? a.getDescendantIndices() : g;
      Be(this, y, u.get("blurScope"), u.get("disabled"));
    }, t.prototype._updateLabel = function(e) {
      var a = this, n = this.node.getModel(), i = n.getModel("label"), o = this.node.getLayout(), s = o.endAngle - o.startAngle, l = (o.startAngle + o.endAngle) / 2, u = Math.cos(l), c = Math.sin(l), v = this, f = v.getTextContent(), h = this.node.dataIndex, p = i.get("minAngle") / 180 * Math.PI, d = i.get("show") && !(p != null && Math.abs(s) < p);
      f.ignore = !d, w(Ui, function(y) {
        var m = y === "normal" ? n.getModel("label") : n.getModel([y, "label"]), _ = y === "normal", S = _ ? f : f.ensureState(y), x = e.getFormattedLabel(h, y);
        _ && (x = x || a.node.name), S.style = Ie(m, {}, null, y !== "normal", !0), x && (S.style.text = x);
        var b = m.get("show");
        b != null && !_ && (S.ignore = !b);
        var D = g(m, "position"), A = _ ? v : v.states[y], T = A.style.fill;
        A.textConfig = {
          outsideFill: m.get("color") === "inherit" ? T : null,
          inside: D !== "outside"
        };
        var C, M = g(m, "distance") || 0, I = g(m, "align"), L = g(m, "rotate"), P = Math.PI * 0.5, E = Math.PI * 1.5, N = _r(L === "tangential" ? Math.PI / 2 - l : l), O = N > P && !Wi(N - P) && N < E;
        D === "outside" ? (C = o.r + M, I = O ? "right" : "left") : !I || I === "center" ? (s === 2 * Math.PI && o.r0 === 0 ? C = 0 : C = (o.r + o.r0) / 2, I = "center") : I === "left" ? (C = o.r0 + M, I = O ? "right" : "left") : I === "right" && (C = o.r - M, I = O ? "left" : "right"), S.style.align = I, S.style.verticalAlign = g(m, "verticalAlign") || "middle", S.x = C * u + o.cx, S.y = C * c + o.cy;
        var k = 0;
        L === "radial" ? k = _r(-l) + (O ? Math.PI : 0) : L === "tangential" ? k = _r(Math.PI / 2 - l) + (O ? Math.PI : 0) : _e(L) && (k = L * Math.PI / 180), S.rotation = _r(k);
      });
      function g(y, m) {
        var _ = y.get(m);
        return _ ?? i.get(m);
      }
      f.dirtyStyle();
    }, t;
  }(Ht)
), Ny = { env: {} }, zv = "sunburstRootToNode", Ry = "sunburstHighlight", Ik = "sunburstUnhighlight";
function Lk(r) {
  r.registerAction({
    type: zv,
    update: "updateView"
  }, function(t, e) {
    e.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: t
    }, a);
    function a(n, i) {
      var o = eo(t, [zv], n);
      if (o) {
        var s = n.getViewRoot();
        s && (t.direction = sh(s, o.node) ? "rollUp" : "drillDown"), n.resetViewRoot(o.node);
      }
    }
  }), r.registerAction({
    type: Ry,
    update: "none"
  }, function(t, e, a) {
    t = z({}, t), e.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: t
    }, n);
    function n(i) {
      var o = eo(t, [Ry], i);
      o && (t.dataIndex = o.node.dataIndex);
    }
    Ny.env.NODE_ENV !== "production" && We("sunburstHighlight", "highlight"), a.dispatchAction(z(t, {
      type: "highlight"
    }));
  }), r.registerAction({
    type: Ik,
    update: "updateView"
  }, function(t, e, a) {
    t = z({}, t), Ny.env.NODE_ENV !== "production" && We("sunburstUnhighlight", "downplay"), a.dispatchAction(z(t, {
      type: "downplay"
    }));
  });
}
var Ek = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n, i) {
      var o = this;
      this.seriesModel = e, this.api = n, this.ecModel = a;
      var s = e.getData(), l = s.tree.root, u = e.getViewRoot(), c = this.group, v = e.get("renderLabelForZeroData"), f = [];
      u.eachNode(function(m) {
        f.push(m);
      });
      var h = this._oldChildren || [];
      p(f, h), y(l, u), this._initEvents(), this._oldChildren = f;
      function p(m, _) {
        if (m.length === 0 && _.length === 0)
          return;
        new Cr(_, m, S, S).add(x).update(x).remove(te(x, null)).execute();
        function S(b) {
          return b.getId();
        }
        function x(b, D) {
          var A = b == null ? null : m[b], T = D == null ? null : _[D];
          d(A, T);
        }
      }
      function d(m, _) {
        if (!v && m && !m.getValue() && (m = null), m !== l && _ !== l) {
          if (_ && _.piece)
            m ? (_.piece.updateData(!1, m, e, a, n), s.setItemGraphicEl(m.dataIndex, _.piece)) : g(_);
          else if (m) {
            var S = new Py(m, e, a, n);
            c.add(S), s.setItemGraphicEl(m.dataIndex, S);
          }
        }
      }
      function g(m) {
        m && m.piece && (c.remove(m.piece), m.piece = null);
      }
      function y(m, _) {
        _.depth > 0 ? (o.virtualPiece ? o.virtualPiece.updateData(!1, m, e, a, n) : (o.virtualPiece = new Py(m, e, a, n), c.add(o.virtualPiece)), _.piece.off("click"), o.virtualPiece.on("click", function(S) {
          o._rootToNode(_.parentNode);
        })) : o.virtualPiece && (c.remove(o.virtualPiece), o.virtualPiece = null);
      }
    }, t.prototype._initEvents = function() {
      var e = this;
      this.group.off("click"), this.group.on("click", function(a) {
        var n = !1, i = e.seriesModel.getViewRoot();
        i.eachNode(function(o) {
          if (!n && o.piece && o.piece === a.target) {
            var s = o.getModel().get("nodeClick");
            if (s === "rootToNode")
              e._rootToNode(o);
            else if (s === "link") {
              var l = o.getModel(), u = l.get("link");
              if (u) {
                var c = l.get("target", !0) || "_blank";
                Ws(u, c);
              }
            }
            n = !0;
          }
        });
      });
    }, t.prototype._rootToNode = function(e) {
      e !== this.seriesModel.getViewRoot() && this.api.dispatchAction({
        type: zv,
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: e
      });
    }, t.prototype.containPoint = function(e, a) {
      var n = a.getData(), i = n.getItemLayout(0);
      if (i) {
        var o = e[0] - i.cx, s = e[1] - i.cy, l = Math.sqrt(o * o + s * s);
        return l <= i.r && l >= i.r0;
      }
    }, t.type = "sunburst", t;
  }(De)
), Pk = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.ignoreStyleOnData = !0, e;
    }
    return t.prototype.getInitialData = function(e, a) {
      var n = {
        name: e.name,
        children: e.data
      };
      cb(n);
      var i = this._levelModels = G(e.levels || [], function(l) {
        return new me(l, this, a);
      }, this), o = oh.createTree(n, this, s);
      function s(l) {
        l.wrapMethod("getItemModel", function(u, c) {
          var v = o.getNodeByDataIndex(c), f = i[v.depth];
          return f && (u.parentModel = f), u;
        });
      }
      return o.data;
    }, t.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, t.prototype.getDataParams = function(e) {
      var a = r.prototype.getDataParams.apply(this, arguments), n = this.getData().tree.getNodeByDataIndex(e);
      return a.treePathInfo = $l(n, this), a;
    }, t.prototype.getLevelModel = function(e) {
      return this._levelModels && this._levelModels[e.depth];
    }, t.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, t.prototype.resetViewRoot = function(e) {
      e ? this._viewRoot = e : e = this._viewRoot;
      var a = this.getRawData().tree.root;
      (!e || e !== a && !a.contains(e)) && (this._viewRoot = a);
    }, t.prototype.enableAriaDecal = function() {
      d1(this);
    }, t.type = "series.sunburst", t.defaultOption = {
      // zlevel: 0,
      z: 2,
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      // 最小角度改为0
      minAngle: 0,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // 'rootToNode', 'link', or false
      nodeClick: "rootToNode",
      renderLabelForZeroData: !1,
      label: {
        // could be: 'radial', 'tangential', or 'none'
        rotate: "radial",
        show: !0,
        opacity: 1,
        // 'left' is for inner side of inside, and 'right' is for outer
        // side for inside
        align: "center",
        position: "inside",
        distance: 5,
        silent: !0
      },
      itemStyle: {
        borderWidth: 1,
        borderColor: "white",
        borderType: "solid",
        shadowBlur: 0,
        shadowColor: "rgba(0, 0, 0, 0.2)",
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      emphasis: {
        focus: "descendant"
      },
      blur: {
        itemStyle: {
          opacity: 0.2
        },
        label: {
          opacity: 0.1
        }
      },
      // Animation type can be expansion, scale.
      animationType: "expansion",
      animationDuration: 1e3,
      animationDurationUpdate: 500,
      data: [],
      /**
       * Sort order.
       *
       * Valid values: 'desc', 'asc', null, or callback function.
       * 'desc' and 'asc' for descend and ascendant order;
       * null for not sorting;
       * example of callback function:
       * function(nodeA, nodeB) {
       *     return nodeA.getValue() - nodeB.getValue();
       * }
       */
      sort: "desc"
    }, t;
  }(Le)
);
function cb(r) {
  var t = 0;
  w(r.children, function(a) {
    cb(a);
    var n = a.value;
    B(n) && (n = n[0]), t += n;
  });
  var e = r.value;
  B(e) && (e = e[0]), (e == null || isNaN(e)) && (e = t), e < 0 && (e = 0), B(r.value) ? r.value[0] = e : r.value = e;
}
var ky = Math.PI / 180;
function Nk(r, t, e) {
  t.eachSeriesByType(r, function(a) {
    var n = a.get("center"), i = a.get("radius");
    B(i) || (i = [0, i]), B(n) || (n = [n, n]);
    var o = e.getWidth(), s = e.getHeight(), l = Math.min(o, s), u = H(n[0], o), c = H(n[1], s), v = H(i[0], l / 2), f = H(i[1], l / 2), h = -a.get("startAngle") * ky, p = a.get("minAngle") * ky, d = a.getData().tree.root, g = a.getViewRoot(), y = g.depth, m = a.get("sort");
    m != null && vb(g, m);
    var _ = 0;
    w(g.children, function(N) {
      !isNaN(N.getValue()) && _++;
    });
    var S = g.getValue(), x = Math.PI / (S || _) * 2, b = g.depth > 0, D = g.height - (b ? -1 : 1), A = (f - v) / (D || 1), T = a.get("clockwise"), C = a.get("stillShowZeroSum"), M = T ? 1 : -1, I = function(N, O) {
      if (N) {
        var k = O;
        if (N !== d) {
          var V = N.getValue(), F = S === 0 && C ? x : V * x;
          F < p && (F = p), k = O + M * F;
          var W = N.depth - y - (b ? -1 : 1), q = v + A * W, ae = v + A * (W + 1), ie = a.getLevelModel(N);
          if (ie) {
            var ge = ie.get("r0", !0), Se = ie.get("r", !0), he = ie.get("radius", !0);
            he != null && (ge = he[0], Se = he[1]), ge != null && (q = H(ge, l / 2)), Se != null && (ae = H(Se, l / 2));
          }
          N.setLayout({
            angle: F,
            startAngle: O,
            endAngle: k,
            clockwise: T,
            cx: u,
            cy: c,
            r0: q,
            r: ae
          });
        }
        if (N.children && N.children.length) {
          var ne = 0;
          w(N.children, function(Ce) {
            ne += I(Ce, O + ne);
          });
        }
        return k - O;
      }
    };
    if (b) {
      var L = v, P = v + A, E = Math.PI * 2;
      d.setLayout({
        angle: E,
        startAngle: h,
        endAngle: h + E,
        clockwise: T,
        cx: u,
        cy: c,
        r0: L,
        r: P
      });
    }
    I(g, h);
  });
}
function vb(r, t) {
  var e = r.children || [];
  r.children = Rk(e, t), e.length && w(r.children, function(a) {
    vb(a, t);
  });
}
function Rk(r, t) {
  if (X(t)) {
    var e = G(r, function(n, i) {
      var o = n.getValue();
      return {
        params: {
          depth: n.depth,
          height: n.height,
          dataIndex: n.dataIndex,
          getValue: function() {
            return o;
          }
        },
        index: i
      };
    });
    return e.sort(function(n, i) {
      return t(n.params, i.params);
    }), G(e, function(n) {
      return r[n.index];
    });
  } else {
    var a = t === "asc";
    return r.sort(function(n, i) {
      var o = (n.getValue() - i.getValue()) * (a ? 1 : -1);
      return o === 0 ? (n.dataIndex - i.dataIndex) * (a ? -1 : 1) : o;
    });
  }
}
function kk(r) {
  var t = {};
  function e(a, n, i) {
    for (var o = a; o && o.depth > 1; )
      o = o.parentNode;
    var s = n.getColorFromPalette(o.name || o.dataIndex + "", t);
    return a.depth > 1 && Y(s) && (s = Zw(s, (a.depth - 1) / (i - 1) * 0.5)), s;
  }
  r.eachSeriesByType("sunburst", function(a) {
    var n = a.getData(), i = n.tree;
    i.eachNode(function(o) {
      var s = o.getModel(), l = s.getModel("itemStyle").getItemStyle();
      l.fill || (l.fill = e(o, a, i.root.height));
      var u = n.ensureUniqueItemVisual(o.dataIndex, "style");
      z(u, l);
    });
  });
}
function Ok(r) {
  r.registerChartView(Ek), r.registerSeriesModel(Pk), r.registerLayout(te(Nk, "sunburst")), r.registerProcessor(te(Do, "sunburst")), r.registerVisual(kk), Lk(r);
}
var Oy = {
  color: "fill",
  borderColor: "stroke"
}, Vk = {
  symbol: 1,
  symbolSize: 1,
  symbolKeepAspect: 1,
  legendIcon: 1,
  visualMeta: 1,
  liftZ: 1,
  decal: 1
}, br = ue(), Bk = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.optionUpdated = function() {
      this.currentZLevel = this.get("zlevel", !0), this.currentZ = this.get("z", !0);
    }, t.prototype.getInitialData = function(e, a) {
      return Pr(null, this);
    }, t.prototype.getDataParams = function(e, a, n) {
      var i = r.prototype.getDataParams.call(this, e, a);
      return n && (i.info = br(n).info), i;
    }, t.type = "series.custom", t.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], t.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Custom series will not clip by default.
      // Some case will use custom series to draw label
      // For example https://echarts.apache.org/examples/en/editor.html?c=custom-gantt-flight
      clip: !1
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
    }, t;
  }(Le)
);
function zk(r, t) {
  return t = t || [0, 0], G(["x", "y"], function(e, a) {
    var n = this.getAxis(e), i = t[a], o = r[a] / 2;
    return n.type === "category" ? n.getBandWidth() : Math.abs(n.dataToCoord(i - o) - n.dataToCoord(i + o));
  }, this);
}
function Gk(r) {
  var t = r.master.getRect();
  return {
    coordSys: {
      // The name exposed to user is always 'cartesian2d' but not 'grid'.
      type: "cartesian2d",
      x: t.x,
      y: t.y,
      width: t.width,
      height: t.height
    },
    api: {
      coord: function(e) {
        return r.dataToPoint(e);
      },
      size: U(zk, r)
    }
  };
}
function Fk(r, t) {
  return t = t || [0, 0], G([0, 1], function(e) {
    var a = t[e], n = r[e] / 2, i = [], o = [];
    return i[e] = a - n, o[e] = a + n, i[1 - e] = o[1 - e] = t[1 - e], Math.abs(this.dataToPoint(i)[e] - this.dataToPoint(o)[e]);
  }, this);
}
function Hk(r) {
  var t = r.getBoundingRect();
  return {
    coordSys: {
      type: "geo",
      x: t.x,
      y: t.y,
      width: t.width,
      height: t.height,
      zoom: r.getZoom()
    },
    api: {
      coord: function(e) {
        return r.dataToPoint(e);
      },
      size: U(Fk, r)
    }
  };
}
function Wk(r, t) {
  var e = this.getAxis(), a = t instanceof Array ? t[0] : t, n = (r instanceof Array ? r[0] : r) / 2;
  return e.type === "category" ? e.getBandWidth() : Math.abs(e.dataToCoord(a - n) - e.dataToCoord(a + n));
}
function Uk(r) {
  var t = r.getRect();
  return {
    coordSys: {
      type: "singleAxis",
      x: t.x,
      y: t.y,
      width: t.width,
      height: t.height
    },
    api: {
      coord: function(e) {
        return r.dataToPoint(e);
      },
      size: U(Wk, r)
    }
  };
}
function $k(r, t) {
  return t = t || [0, 0], G(["Radius", "Angle"], function(e, a) {
    var n = "get" + e + "Axis", i = this[n](), o = t[a], s = r[a] / 2, l = i.type === "category" ? i.getBandWidth() : Math.abs(i.dataToCoord(o - s) - i.dataToCoord(o + s));
    return e === "Angle" && (l = l * Math.PI / 180), l;
  }, this);
}
function Yk(r) {
  var t = r.getRadiusAxis(), e = r.getAngleAxis(), a = t.getExtent();
  return a[0] > a[1] && a.reverse(), {
    coordSys: {
      type: "polar",
      cx: r.cx,
      cy: r.cy,
      r: a[1],
      r0: a[0]
    },
    api: {
      coord: function(n) {
        var i = t.dataToRadius(n[0]), o = e.dataToAngle(n[1]), s = r.coordToPoint([i, o]);
        return s.push(i, o * Math.PI / 180), s;
      },
      size: U($k, r)
    }
  };
}
function Zk(r) {
  var t = r.getRect(), e = r.getRangeInfo();
  return {
    coordSys: {
      type: "calendar",
      x: t.x,
      y: t.y,
      width: t.width,
      height: t.height,
      cellWidth: r.getCellWidth(),
      cellHeight: r.getCellHeight(),
      rangeInfo: {
        start: e.start,
        end: e.end,
        weeks: e.weeks,
        dayCount: e.allDay
      }
    },
    api: {
      coord: function(a, n) {
        return r.dataToPoint(a, n);
      }
    }
  };
}
var Xk = { env: {} }, Vy = {};
function fb(r, t, e, a) {
  return r && (r.legacy || r.legacy !== !1 && !e && !a && t !== "tspan" && (t === "text" || $(r, "text")));
}
function hb(r, t, e) {
  var a = r, n, i, o;
  if (t === "text")
    o = a;
  else {
    o = {}, $(a, "text") && (o.text = a.text), $(a, "rich") && (o.rich = a.rich), $(a, "textFill") && (o.fill = a.textFill), $(a, "textStroke") && (o.stroke = a.textStroke), $(a, "fontFamily") && (o.fontFamily = a.fontFamily), $(a, "fontSize") && (o.fontSize = a.fontSize), $(a, "fontStyle") && (o.fontStyle = a.fontStyle), $(a, "fontWeight") && (o.fontWeight = a.fontWeight), i = {
      type: "text",
      style: o,
      // ec4 does not support rectText trigger.
      // And when text position is different in normal and emphasis
      // => hover text trigger emphasis;
      // => text position changed, leave mouse pointer immediately;
      // That might cause incorrect state.
      silent: !0
    }, n = {};
    var s = $(a, "textPosition");
    e ? n.position = s ? a.textPosition : "inside" : s && (n.position = a.textPosition), $(a, "textPosition") && (n.position = a.textPosition), $(a, "textOffset") && (n.offset = a.textOffset), $(a, "textRotation") && (n.rotation = a.textRotation), $(a, "textDistance") && (n.distance = a.textDistance);
  }
  return By(o, r), w(o.rich, function(l) {
    By(l, l);
  }), {
    textConfig: n,
    textContent: i
  };
}
function By(r, t) {
  t && (t.font = t.textFont || t.font, $(t, "textStrokeWidth") && (r.lineWidth = t.textStrokeWidth), $(t, "textAlign") && (r.align = t.textAlign), $(t, "textVerticalAlign") && (r.verticalAlign = t.textVerticalAlign), $(t, "textLineHeight") && (r.lineHeight = t.textLineHeight), $(t, "textWidth") && (r.width = t.textWidth), $(t, "textHeight") && (r.height = t.textHeight), $(t, "textBackgroundColor") && (r.backgroundColor = t.textBackgroundColor), $(t, "textPadding") && (r.padding = t.textPadding), $(t, "textBorderColor") && (r.borderColor = t.textBorderColor), $(t, "textBorderWidth") && (r.borderWidth = t.textBorderWidth), $(t, "textBorderRadius") && (r.borderRadius = t.textBorderRadius), $(t, "textBoxShadowColor") && (r.shadowColor = t.textBoxShadowColor), $(t, "textBoxShadowBlur") && (r.shadowBlur = t.textBoxShadowBlur), $(t, "textBoxShadowOffsetX") && (r.shadowOffsetX = t.textBoxShadowOffsetX), $(t, "textBoxShadowOffsetY") && (r.shadowOffsetY = t.textBoxShadowOffsetY));
}
function zy(r, t, e) {
  var a = r;
  a.textPosition = a.textPosition || e.position || "inside", e.offset != null && (a.textOffset = e.offset), e.rotation != null && (a.textRotation = e.rotation), e.distance != null && (a.textDistance = e.distance);
  var n = a.textPosition.indexOf("inside") >= 0, i = r.fill || "#000";
  Gy(a, t);
  var o = a.textFill == null;
  return n ? o && (a.textFill = e.insideFill || "#fff", !a.textStroke && e.insideStroke && (a.textStroke = e.insideStroke), !a.textStroke && (a.textStroke = i), a.textStrokeWidth == null && (a.textStrokeWidth = 2)) : (o && (a.textFill = r.fill || e.outsideFill || "#000"), !a.textStroke && e.outsideStroke && (a.textStroke = e.outsideStroke)), a.text = t.text, a.rich = t.rich, w(t.rich, function(s) {
    Gy(s, s);
  }), a;
}
function Gy(r, t) {
  t && ($(t, "fill") && (r.textFill = t.fill), $(t, "stroke") && (r.textStroke = t.fill), $(t, "lineWidth") && (r.textStrokeWidth = t.lineWidth), $(t, "font") && (r.font = t.font), $(t, "fontStyle") && (r.fontStyle = t.fontStyle), $(t, "fontWeight") && (r.fontWeight = t.fontWeight), $(t, "fontSize") && (r.fontSize = t.fontSize), $(t, "fontFamily") && (r.fontFamily = t.fontFamily), $(t, "align") && (r.textAlign = t.align), $(t, "verticalAlign") && (r.textVerticalAlign = t.verticalAlign), $(t, "lineHeight") && (r.textLineHeight = t.lineHeight), $(t, "width") && (r.textWidth = t.width), $(t, "height") && (r.textHeight = t.height), $(t, "backgroundColor") && (r.textBackgroundColor = t.backgroundColor), $(t, "padding") && (r.textPadding = t.padding), $(t, "borderColor") && (r.textBorderColor = t.borderColor), $(t, "borderWidth") && (r.textBorderWidth = t.borderWidth), $(t, "borderRadius") && (r.textBorderRadius = t.borderRadius), $(t, "shadowColor") && (r.textBoxShadowColor = t.shadowColor), $(t, "shadowBlur") && (r.textBoxShadowBlur = t.shadowBlur), $(t, "shadowOffsetX") && (r.textBoxShadowOffsetX = t.shadowOffsetX), $(t, "shadowOffsetY") && (r.textBoxShadowOffsetY = t.shadowOffsetY), $(t, "textShadowColor") && (r.textShadowColor = t.textShadowColor), $(t, "textShadowBlur") && (r.textShadowBlur = t.textShadowBlur), $(t, "textShadowOffsetX") && (r.textShadowOffsetX = t.textShadowOffsetX), $(t, "textShadowOffsetY") && (r.textShadowOffsetY = t.textShadowOffsetY));
}
function Fy(r, t) {
  if (Xk.env.NODE_ENV !== "production") {
    var e = r + "^_^" + t;
    Vy[e] || (console.warn('[ECharts] DEPRECATED: "' + r + '" has been deprecated. ' + t), Vy[e] = !0);
  }
}
var Rt = { env: {} }, pb = {
  position: ["x", "y"],
  scale: ["scaleX", "scaleY"],
  origin: ["originX", "originY"]
}, Hy = Fe(pb), ol = wn(Hi, function(r, t) {
  return r[t] = 1, r;
}, {}), Wy = Hi.join(", "), sl = ["", "style", "shape", "extra"], Rn = ue();
function bh(r, t, e, a, n) {
  var i = r + "Animation", o = Hn(r, a, n) || {}, s = Rn(t).userDuring;
  return o.duration > 0 && (o.during = s ? U(Qk, {
    el: t,
    userDuring: s
  }) : null, o.setToFinal = !0, o.scope = r), z(o, e[i]), o;
}
function As(r, t, e, a) {
  a = a || {};
  var n = a.dataIndex, i = a.isInit, o = a.clearStyle, s = e.isAnimationEnabled(), l = Rn(r), u = t.style;
  l.userDuring = t.during;
  var c = {}, v = {};
  if (tO(r, t, v), $y("shape", t, v), $y("extra", t, v), !i && s && (eO(r, t, c), Uy("shape", r, t, c), Uy("extra", r, t, c), rO(r, t, u, c)), v.style = u, Kk(r, v, o), jk(r, t), s)
    if (i) {
      var f = {};
      w(sl, function(p) {
        var d = p ? t[p] : t;
        d && d.enterFrom && (p && (f[p] = f[p] || {}), z(p ? f[p] : f, d.enterFrom));
      });
      var h = bh("enter", r, t, e, n);
      h.duration > 0 && r.animateFrom(f, h);
    } else
      qk(r, t, n || 0, e, c);
  db(r, t), u ? r.dirty() : r.markRedraw();
}
function db(r, t) {
  for (var e = Rn(r).leaveToProps, a = 0; a < sl.length; a++) {
    var n = sl[a], i = n ? t[n] : t;
    i && i.leaveTo && (e || (e = Rn(r).leaveToProps = {}), n && (e[n] = e[n] || {}), z(n ? e[n] : e, i.leaveTo));
  }
}
function Xl(r, t, e, a) {
  if (r) {
    var n = r.parent, i = Rn(r).leaveToProps;
    if (i) {
      var o = bh("update", r, t, e, 0);
      o.done = function() {
        n.remove(r);
      }, r.animateTo(i, o);
    } else
      n.remove(r);
  }
}
function Na(r) {
  return r === "all";
}
function Kk(r, t, e) {
  var a = t.style;
  if (!r.isGroup && a) {
    if (e) {
      r.useStyle({});
      for (var n = r.animators, i = 0; i < n.length; i++) {
        var o = n[i];
        o.targetName === "style" && o.changeTarget(r.style);
      }
    }
    r.setStyle(a);
  }
  t && (t.style = null, t && r.attr(t), t.style = a);
}
function qk(r, t, e, a, n) {
  if (n) {
    var i = bh("update", r, t, a, e);
    i.duration > 0 && r.animateFrom(n, i);
  }
}
function jk(r, t) {
  $(t, "silent") && (r.silent = t.silent), $(t, "ignore") && (r.ignore = t.ignore), r instanceof Ra && $(t, "invisible") && (r.invisible = t.invisible), r instanceof Ee && $(t, "autoBatch") && (r.autoBatch = t.autoBatch);
}
var ar = {}, Jk = {
  // Usually other props do not need to be changed in animation during.
  setTransform: function(r, t) {
    return Rt.env.NODE_ENV !== "production" && K($(ol, r), "Only " + Wy + " available in `setTransform`."), ar.el[r] = t, this;
  },
  getTransform: function(r) {
    return Rt.env.NODE_ENV !== "production" && K($(ol, r), "Only " + Wy + " available in `getTransform`."), ar.el[r];
  },
  setShape: function(r, t) {
    Rt.env.NODE_ENV !== "production" && un(r);
    var e = ar.el, a = e.shape || (e.shape = {});
    return a[r] = t, e.dirtyShape && e.dirtyShape(), this;
  },
  getShape: function(r) {
    Rt.env.NODE_ENV !== "production" && un(r);
    var t = ar.el.shape;
    if (t)
      return t[r];
  },
  setStyle: function(r, t) {
    Rt.env.NODE_ENV !== "production" && un(r);
    var e = ar.el, a = e.style;
    return a && (Rt.env.NODE_ENV !== "production" && Dn(t) && Ve("style." + r + " must not be assigned with NaN."), a[r] = t, e.dirtyStyle && e.dirtyStyle()), this;
  },
  getStyle: function(r) {
    Rt.env.NODE_ENV !== "production" && un(r);
    var t = ar.el.style;
    if (t)
      return t[r];
  },
  setExtra: function(r, t) {
    Rt.env.NODE_ENV !== "production" && un(r);
    var e = ar.el.extra || (ar.el.extra = {});
    return e[r] = t, this;
  },
  getExtra: function(r) {
    Rt.env.NODE_ENV !== "production" && un(r);
    var t = ar.el.extra;
    if (t)
      return t[r];
  }
};
function un(r) {
  if (Rt.env.NODE_ENV !== "production" && (r === "transition" || r === "enterFrom" || r === "leaveTo"))
    throw new Error('key must not be "' + r + '"');
}
function Qk() {
  var r = this, t = r.el;
  if (t) {
    var e = Rn(t).userDuring, a = r.userDuring;
    if (e !== a) {
      r.el = r.userDuring = null;
      return;
    }
    ar.el = t, a(Jk);
  }
}
function Uy(r, t, e, a) {
  var n = e[r];
  if (n) {
    var i = t[r], o;
    if (i) {
      var s = e.transition, l = n.transition;
      if (l)
        if (!o && (o = a[r] = {}), Na(l))
          z(o, i);
        else
          for (var u = we(l), c = 0; c < u.length; c++) {
            var v = u[c], f = i[v];
            o[v] = f;
          }
      else if (Na(s) || fe(s, r) >= 0) {
        !o && (o = a[r] = {});
        for (var h = Fe(i), c = 0; c < h.length; c++) {
          var v = h[c], f = i[v];
          aO(n[v], f) && (o[v] = f);
        }
      }
    }
  }
}
function $y(r, t, e) {
  var a = t[r];
  if (a)
    for (var n = e[r] = {}, i = Fe(a), o = 0; o < i.length; o++) {
      var s = i[o];
      n[s] = Xw(a[s]);
    }
}
function eO(r, t, e) {
  for (var a = t.transition, n = Na(a) ? Hi : we(a || []), i = 0; i < n.length; i++) {
    var o = n[i];
    if (!(o === "style" || o === "shape" || o === "extra")) {
      var s = r[o];
      Rt.env.NODE_ENV !== "production" && gb(o, "el.transition"), e[o] = s;
    }
  }
}
function tO(r, t, e) {
  for (var a = 0; a < Hy.length; a++) {
    var n = Hy[a], i = pb[n], o = t[n];
    o && (e[i[0]] = o[0], e[i[1]] = o[1]);
  }
  for (var a = 0; a < Hi.length; a++) {
    var s = Hi[a];
    t[s] != null && (e[s] = t[s]);
  }
}
function rO(r, t, e, a) {
  if (e) {
    var n = r.style, i;
    if (n) {
      var o = e.transition, s = t.transition;
      if (o && !Na(o)) {
        var l = we(o);
        !i && (i = a.style = {});
        for (var u = 0; u < l.length; u++) {
          var c = l[u], v = n[c];
          i[c] = v;
        }
      } else if (r.getAnimationStyleProps && (Na(s) || Na(o) || fe(s, "style") >= 0)) {
        var f = r.getAnimationStyleProps(), h = f ? f.style : null;
        if (h) {
          !i && (i = a.style = {});
          for (var p = Fe(e), u = 0; u < p.length; u++) {
            var c = p[u];
            if (h[c]) {
              var v = n[c];
              i[c] = v;
            }
          }
        }
      }
    }
  }
}
function aO(r, t) {
  return Vn(r) ? r !== t : r != null && isFinite(r);
}
var gb;
Rt.env.NODE_ENV !== "production" && (gb = function(r, t) {
  $(ol, r) || Ve("Prop `" + r + "` is not a permitted in `" + t + "`. Only `" + Fe(ol).join("`, `") + "` are permitted.");
});
var Yy = { env: {} }, yb = ue(), nO = ["percent", "easing", "shape", "style", "extra"];
function mb(r) {
  r.stopAnimation("keyframe"), r.attr(yb(r));
}
function ll(r, t, e) {
  if (!(!e.isAnimationEnabled() || !t)) {
    if (B(t)) {
      w(t, function(s) {
        ll(r, s, e);
      });
      return;
    }
    var a = t.keyframes, n = t.duration;
    if (e && n == null) {
      var i = Hn("enter", e, 0);
      n = i && i.duration;
    }
    if (!(!a || !n)) {
      var o = yb(r);
      w(sl, function(s) {
        if (!(s && !r[s])) {
          var l, u = !1;
          a.sort(function(c, v) {
            return c.percent - v.percent;
          }), w(a, function(c) {
            var v = r.animators, f = s ? c[s] : c;
            if (Yy.env.NODE_ENV !== "production" && c.percent >= 1 && (u = !0), !!f) {
              var h = Fe(f);
              if (s || (h = Ae(h, function(g) {
                return fe(nO, g) < 0;
              })), !!h.length) {
                l || (l = r.animate(s, t.loop, !0), l.scope = "keyframe");
                for (var p = 0; p < v.length; p++)
                  v[p] !== l && v[p].targetName === l.targetName && v[p].stopTracks(h);
                s && (o[s] = o[s] || {});
                var d = s ? o[s] : o;
                w(h, function(g) {
                  d[g] = ((s ? r[s] : r) || {})[g];
                }), l.whenWithKeys(n * c.percent, f, h, c.easing);
              }
            }
          }), l && (Yy.env.NODE_ENV !== "production" && (u || Ve("End frame with percent: 1 is missing in the keyframeAnimation.", !0)), l.delay(t.delay || 0).duration(n).start(t.easing));
        }
      });
    }
  }
}
var qr = { env: {} }, wr = "emphasis", Wr = "normal", wh = "blur", Dh = "select", aa = [Wr, wr, wh, Dh], Sc = {
  normal: ["itemStyle"],
  emphasis: [wr, "itemStyle"],
  blur: [wh, "itemStyle"],
  select: [Dh, "itemStyle"]
}, xc = {
  normal: ["label"],
  emphasis: [wr, "label"],
  blur: [wh, "label"],
  select: [Dh, "label"]
}, iO = ["x", "y"], oO = "e\0\0", Pt = {
  normal: {},
  emphasis: {},
  blur: {},
  select: {}
}, Zy = {
  cartesian2d: Gk,
  geo: Hk,
  single: Uk,
  polar: Yk,
  calendar: Zk
};
function ul(r) {
  return r instanceof Ee;
}
function Gv(r) {
  return r instanceof Ra;
}
function sO(r, t) {
  t.copyTransform(r), Gv(t) && Gv(r) && (t.setStyle(r.style), t.z = r.z, t.z2 = r.z2, t.zlevel = r.zlevel, t.invisible = r.invisible, t.ignore = r.ignore, ul(t) && ul(r) && t.setShape(r.shape));
}
var lO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n, i) {
      this._progressiveEls = null;
      var o = this._data, s = e.getData(), l = this.group, u = Xy(e, s, a, n);
      o || l.removeAll(), s.diff(o).add(function(v) {
        bc(n, null, v, u(v, i), e, l, s);
      }).remove(function(v) {
        var f = o.getItemGraphicEl(v);
        f && Xl(f, br(f).option, e);
      }).update(function(v, f) {
        var h = o.getItemGraphicEl(f);
        bc(n, h, v, u(v, i), e, l, s);
      }).execute();
      var c = e.get("clip", !0) ? bo(e.coordinateSystem, !1, e) : null;
      c ? l.setClipPath(c) : l.removeClipPath(), this._data = s;
    }, t.prototype.incrementalPrepareRender = function(e, a, n) {
      this.group.removeAll(), this._data = null;
    }, t.prototype.incrementalRender = function(e, a, n, i, o) {
      var s = a.getData(), l = Xy(a, s, n, i), u = this._progressiveEls = [];
      function c(h) {
        h.isGroup || (h.incremental = !0, h.ensureState("emphasis").hoverLayer = !0);
      }
      for (var v = e.start; v < e.end; v++) {
        var f = bc(null, null, v, l(v, o), a, this.group, s);
        f && (f.traverse(c), u.push(f));
      }
    }, t.prototype.eachRendered = function(e) {
      ia(this._progressiveEls || this.group, e);
    }, t.prototype.filterForExposedEvent = function(e, a, n, i) {
      var o = a.element;
      if (o == null || n.name === o)
        return !0;
      for (; (n = n.__hostTarget || n.parent) && n !== this.group; )
        if (n.name === o)
          return !0;
      return !1;
    }, t.type = "custom", t;
  }(De)
);
function Ah(r) {
  var t = r.type, e;
  if (t === "path") {
    var a = r.shape, n = a.width != null && a.height != null ? {
      x: a.x || 0,
      y: a.y || 0,
      width: a.width,
      height: a.height
    } : null, i = xb(a);
    e = Tl(i, null, n, a.layout || "center"), br(e).customPathData = i;
  } else if (t === "image")
    e = new Ut({}), br(e).customImagePath = r.style.image;
  else if (t === "text")
    e = new ve({});
  else if (t === "group")
    e = new re();
  else {
    if (t === "compoundPath")
      throw new Error('"compoundPath" is not supported yet.');
    var o = Sf(t);
    if (!o) {
      var s = "";
      qr.env.NODE_ENV !== "production" && (s = 'graphic type "' + t + '" can not be found.'), ye(s);
    }
    e = new o();
  }
  return br(e).customGraphicType = t, e.name = r.name, e.z2EmphasisLift = 1, e.z2SelectLift = 1, e;
}
function Th(r, t, e, a, n, i, o) {
  mb(t);
  var s = n && n.normal.cfg;
  s && t.setTextConfig(s), a && a.transition == null && (a.transition = iO);
  var l = a && a.style;
  if (l) {
    if (t.type === "text") {
      var u = l;
      $(u, "textFill") && (u.fill = u.textFill), $(u, "textStroke") && (u.stroke = u.textStroke);
    }
    var c = void 0, v = ul(t) ? l.decal : null;
    r && v && (v.dirty = !0, c = In(v, r)), l.__decalPattern = c;
  }
  if (Gv(t) && l) {
    var c = l.__decalPattern;
    c && (l.decal = c);
  }
  As(t, a, i, {
    dataIndex: e,
    isInit: o,
    clearStyle: !0
  }), ll(t, a.keyframeAnimation, i);
}
function _b(r, t, e, a, n) {
  var i = t.isGroup ? null : t, o = n && n[r].cfg;
  if (i) {
    var s = i.ensureState(r);
    if (a === !1) {
      var l = i.getState(r);
      l && (l.style = null);
    } else
      s.style = a || null;
    o && (s.textConfig = o), za(i);
  }
}
function uO(r, t, e) {
  if (!r.isGroup) {
    var a = r, n = e.currentZ, i = e.currentZLevel;
    a.z = n, a.zlevel = i;
    var o = t.z2;
    o != null && (a.z2 = o || 0);
    for (var s = 0; s < aa.length; s++)
      cO(a, t, aa[s]);
  }
}
function cO(r, t, e) {
  var a = e === Wr, n = a ? t : cl(t, e), i = n ? n.z2 : null, o;
  i != null && (o = a ? r : r.ensureState(e), o.z2 = i || 0);
}
function Xy(r, t, e, a) {
  var n = r.get("renderItem"), i = r.coordinateSystem, o = {};
  i && (qr.env.NODE_ENV !== "production" && (K(n, "series.render is required."), K(i.prepareCustoms || Zy[i.type], "This coordSys does not support custom series.")), o = i.prepareCustoms ? i.prepareCustoms(i) : Zy[i.type](i));
  for (var s = ee({
    getWidth: a.getWidth,
    getHeight: a.getHeight,
    getZr: a.getZr,
    getDevicePixelRatio: a.getDevicePixelRatio,
    value: S,
    style: b,
    ordinalRawValue: x,
    styleEmphasis: D,
    visual: C,
    barLayout: M,
    currentSeriesIndices: I,
    font: L
  }, o.api || {}), l = {
    // The life cycle of context: current round of rendering.
    // The global life cycle is probably not necessary, because
    // user can store global status by themselves.
    context: {},
    seriesId: r.id,
    seriesName: r.name,
    seriesIndex: r.seriesIndex,
    coordSys: o.coordSys,
    dataInsideLength: t.count(),
    encode: vO(r.getData())
  }, u, c, v = {}, f = {}, h = {}, p = {}, d = 0; d < aa.length; d++) {
    var g = aa[d];
    h[g] = r.getModel(Sc[g]), p[g] = r.getModel(xc[g]);
  }
  function y(P) {
    return P === u ? c || (c = t.getItemModel(P)) : t.getItemModel(P);
  }
  function m(P, E) {
    return t.hasItemOption ? P === u ? v[E] || (v[E] = y(P).getModel(Sc[E])) : y(P).getModel(Sc[E]) : h[E];
  }
  function _(P, E) {
    return t.hasItemOption ? P === u ? f[E] || (f[E] = y(P).getModel(xc[E])) : y(P).getModel(xc[E]) : p[E];
  }
  return function(P, E) {
    return u = P, c = null, v = {}, f = {}, n && n(ee({
      dataIndexInside: P,
      dataIndex: t.getRawIndex(P),
      // Can be used for optimization when zoom or roam.
      actionType: E ? E.type : null
    }, l), s);
  };
  function S(P, E) {
    return E == null && (E = u), t.getStore().get(t.getDimensionIndex(P || 0), E);
  }
  function x(P, E) {
    E == null && (E = u), P = P || 0;
    var N = t.getDimensionInfo(P);
    if (!N) {
      var O = t.getDimensionIndex(P);
      return O >= 0 ? t.getStore().get(O, E) : void 0;
    }
    var k = t.get(N.name, E), V = N && N.ordinalMeta;
    return V ? V.categories[k] : k;
  }
  function b(P, E) {
    qr.env.NODE_ENV !== "production" && Fy("api.style", "Please write literal style directly instead."), E == null && (E = u);
    var N = t.getItemVisual(E, "style"), O = N && N.fill, k = N && N.opacity, V = m(E, Wr).getItemStyle();
    O != null && (V.fill = O), k != null && (V.opacity = k);
    var F = {
      inheritColor: Y(O) ? O : "#000"
    }, W = _(E, Wr), q = Ie(W, null, F, !1, !0);
    q.text = W.getShallow("show") ? ce(r.getFormattedLabel(E, Wr), En(t, E)) : null;
    var ae = Fs(W, F, !1);
    return T(P, V), V = zy(V, q, ae), P && A(V, P), V.legacy = !0, V;
  }
  function D(P, E) {
    qr.env.NODE_ENV !== "production" && Fy("api.styleEmphasis", "Please write literal style directly instead."), E == null && (E = u);
    var N = m(E, wr).getItemStyle(), O = _(E, wr), k = Ie(O, null, null, !0, !0);
    k.text = O.getShallow("show") ? na(r.getFormattedLabel(E, wr), r.getFormattedLabel(E, Wr), En(t, E)) : null;
    var V = Fs(O, null, !0);
    return T(P, N), N = zy(N, k, V), P && A(N, P), N.legacy = !0, N;
  }
  function A(P, E) {
    for (var N in E)
      $(E, N) && (P[N] = E[N]);
  }
  function T(P, E) {
    P && (P.textFill && (E.textFill = P.textFill), P.textPosition && (E.textPosition = P.textPosition));
  }
  function C(P, E) {
    if (E == null && (E = u), $(Oy, P)) {
      var N = t.getItemVisual(E, "style");
      return N ? N[Oy[P]] : null;
    }
    if ($(Vk, P))
      return t.getItemVisual(E, P);
  }
  function M(P) {
    if (i.type === "cartesian2d") {
      var E = i.getBaseAxis();
      return PM(ee({
        axis: E
      }, P));
    }
  }
  function I() {
    return e.getCurrentSeriesIndices();
  }
  function L(P) {
    return xf(P, e);
  }
}
function vO(r) {
  var t = {};
  return w(r.dimensions, function(e) {
    var a = r.getDimensionInfo(e);
    if (!a.isExtraCoord) {
      var n = a.coordDim, i = t[n] = t[n] || [];
      i[a.coordDimIndex] = r.getDimensionIndex(e);
    }
  }), t;
}
function bc(r, t, e, a, n, i, o) {
  if (!a) {
    i.remove(t);
    return;
  }
  var s = Ch(r, t, e, a, n, i);
  return s && o.setItemGraphicEl(e, s), s && Be(s, a.focus, a.blurScope, a.emphasisDisabled), s;
}
function Ch(r, t, e, a, n, i) {
  qr.env.NODE_ENV !== "production" && K(a, "should not have an null/undefined element setting");
  var o = -1, s = t;
  t && Sb(t, a, n) && (o = fe(i.childrenRef(), t), t = null);
  var l = !t, u = t;
  u ? u.clearStates() : (u = Ah(a), s && sO(s, u)), a.morph === !1 ? u.disableMorphing = !0 : u.disableMorphing && (u.disableMorphing = !1), Pt.normal.cfg = Pt.normal.conOpt = Pt.emphasis.cfg = Pt.emphasis.conOpt = Pt.blur.cfg = Pt.blur.conOpt = Pt.select.cfg = Pt.select.conOpt = null, Pt.isLegacy = !1, hO(u, e, a, n, l, Pt), fO(u, e, a, n, l), Th(r, u, e, a, Pt, n, l), $(a, "info") && (br(u).info = a.info);
  for (var c = 0; c < aa.length; c++) {
    var v = aa[c];
    if (v !== Wr) {
      var f = cl(a, v), h = Mh(a, f, v);
      _b(v, u, f, h, Pt);
    }
  }
  return uO(u, a, n), a.type === "group" && pO(r, u, e, a, n), o >= 0 ? i.replaceAt(u, o) : i.add(u), u;
}
function Sb(r, t, e) {
  var a = br(r), n = t.type, i = t.shape, o = t.style;
  return (
    // Always create new if universal transition is enabled.
    // Because we do transition after render. It needs to know what old element is. Replacement will loose it.
    e.isUniversalTransitionEnabled() || n != null && n !== a.customGraphicType || n === "path" && mO(i) && xb(i) !== a.customPathData || n === "image" && $(o, "image") && o.image !== a.customImagePath
  );
}
function fO(r, t, e, a, n) {
  var i = e.clipPath;
  if (i === !1)
    r && r.getClipPath() && r.removeClipPath();
  else if (i) {
    var o = r.getClipPath();
    o && Sb(o, i, a) && (o = null), o || (o = Ah(i), qr.env.NODE_ENV !== "production" && K(ul(o), "Only any type of `path` can be used in `clipPath`, rather than " + o.type + "."), r.setClipPath(o)), Th(null, o, t, i, null, a, n);
  }
}
function hO(r, t, e, a, n, i) {
  if (!r.isGroup) {
    Ky(e, null, i), Ky(e, wr, i);
    var o = i.normal.conOpt, s = i.emphasis.conOpt, l = i.blur.conOpt, u = i.select.conOpt;
    if (o != null || s != null || u != null || l != null) {
      var c = r.getTextContent();
      if (o === !1)
        c && r.removeTextContent();
      else {
        o = i.normal.conOpt = o || {
          type: "text"
        }, c ? c.clearStates() : (c = Ah(o), r.setTextContent(c)), Th(null, c, t, o, null, a, n);
        for (var v = o && o.style, f = 0; f < aa.length; f++) {
          var h = aa[f];
          if (h !== Wr) {
            var p = i[h].conOpt;
            _b(h, c, p, Mh(o, p, h), null);
          }
        }
        v ? c.dirty() : c.markRedraw();
      }
    }
  }
}
function Ky(r, t, e) {
  var a = t ? cl(r, t) : r, n = t ? Mh(r, a, wr) : r.style, i = r.type, o = a ? a.textConfig : null, s = r.textContent, l = s ? t ? cl(s, t) : s : null;
  if (n && // Because emphasis style has little info to detect legacy,
  // if normal is legacy, emphasis is trade as legacy.
  (e.isLegacy || fb(n, i, !!o, !!l))) {
    e.isLegacy = !0;
    var u = hb(n, i, !t);
    !o && u.textConfig && (o = u.textConfig), !l && u.textContent && (l = u.textContent);
  }
  if (!t && l) {
    var c = l;
    !c.type && (c.type = "text"), qr.env.NODE_ENV !== "production" && K(c.type === "text", 'textContent.type must be "text"');
  }
  var v = t ? e[t] : e.normal;
  v.cfg = o, v.conOpt = l;
}
function cl(r, t) {
  return t ? r ? r[t] : null : r;
}
function Mh(r, t, e) {
  var a = t && t.style;
  return a == null && e === wr && r && (a = r.styleEmphasis), a;
}
function pO(r, t, e, a, n) {
  var i = a.children, o = i ? i.length : 0, s = a.$mergeChildren, l = s === "byName" || a.diffChildrenByName, u = s === !1;
  if (!(!o && !l && !u)) {
    if (l) {
      gO({
        api: r,
        oldChildren: t.children() || [],
        newChildren: i || [],
        dataIndex: e,
        seriesModel: n,
        group: t
      });
      return;
    }
    u && t.removeAll();
    for (var c = 0; c < o; c++) {
      var v = i[c], f = t.childAt(c);
      v ? (v.ignore == null && (v.ignore = !1), Ch(r, f, e, v, n, t)) : (qr.env.NODE_ENV !== "production" && K(f, "renderItem should not return a group containing elements as null/undefined/{} if they do not exist before."), f.ignore = !0);
    }
    for (var h = t.childCount() - 1; h >= c; h--) {
      var p = t.childAt(h);
      dO(t, p, n);
    }
  }
}
function dO(r, t, e) {
  t && Xl(t, br(r).option, e);
}
function gO(r) {
  new Cr(r.oldChildren, r.newChildren, qy, qy, r).add(jy).update(jy).remove(yO).execute();
}
function qy(r, t) {
  var e = r && r.name;
  return e ?? oO + t;
}
function jy(r, t) {
  var e = this.context, a = r != null ? e.newChildren[r] : null, n = t != null ? e.oldChildren[t] : null;
  Ch(e.api, n, e.dataIndex, a, e.seriesModel, e.group);
}
function yO(r) {
  var t = this.context, e = t.oldChildren[r];
  e && Xl(e, br(e).option, t.seriesModel);
}
function xb(r) {
  return r && (r.pathData || r.d);
}
function mO(r) {
  return r && ($(r, "pathData") || $(r, "d"));
}
function _O(r) {
  r.registerChartView(lO), r.registerSeriesModel(Bk);
}
var xa = ue(), Jy = Q, wc = U, Ih = (
  /** @class */
  function() {
    function r() {
      this._dragging = !1, this.animationThreshold = 15;
    }
    return r.prototype.render = function(t, e, a, n) {
      var i = e.get("value"), o = e.get("status");
      if (this._axisModel = t, this._axisPointerModel = e, this._api = a, !(!n && this._lastValue === i && this._lastStatus === o)) {
        this._lastValue = i, this._lastStatus = o;
        var s = this._group, l = this._handle;
        if (!o || o === "hide") {
          s && s.hide(), l && l.hide();
          return;
        }
        s && s.show(), l && l.show();
        var u = {};
        this.makeElOption(u, i, t, e, a);
        var c = u.graphicKey;
        c !== this._lastGraphicKey && this.clear(a), this._lastGraphicKey = c;
        var v = this._moveAnimation = this.determineAnimation(t, e);
        if (!s)
          s = this._group = new re(), this.createPointerEl(s, u, t, e), this.createLabelEl(s, u, t, e), a.getZr().add(s);
        else {
          var f = te(Qy, e, v);
          this.updatePointerEl(s, u, f), this.updateLabelEl(s, u, f, e);
        }
        tm(s, e, !0), this._renderHandle(i);
      }
    }, r.prototype.remove = function(t) {
      this.clear(t);
    }, r.prototype.dispose = function(t) {
      this.clear(t);
    }, r.prototype.determineAnimation = function(t, e) {
      var a = e.get("animation"), n = t.axis, i = n.type === "category", o = e.get("snap");
      if (!o && !i)
        return !1;
      if (a === "auto" || a == null) {
        var s = this.animationThreshold;
        if (i && n.getBandWidth() > s)
          return !0;
        if (o) {
          var l = Qf(t).seriesDataCount, u = n.getExtent();
          return Math.abs(u[0] - u[1]) / l > s;
        }
        return !1;
      }
      return a === !0;
    }, r.prototype.makeElOption = function(t, e, a, n, i) {
    }, r.prototype.createPointerEl = function(t, e, a, n) {
      var i = e.pointer;
      if (i) {
        var o = xa(t).pointerEl = new Ua[i.type](Jy(e.pointer));
        t.add(o);
      }
    }, r.prototype.createLabelEl = function(t, e, a, n) {
      if (e.label) {
        var i = xa(t).labelEl = new ve(Jy(e.label));
        t.add(i), em(i, n);
      }
    }, r.prototype.updatePointerEl = function(t, e, a) {
      var n = xa(t).pointerEl;
      n && e.pointer && (n.setStyle(e.pointer.style), a(n, {
        shape: e.pointer.shape
      }));
    }, r.prototype.updateLabelEl = function(t, e, a, n) {
      var i = xa(t).labelEl;
      i && (i.setStyle(e.label.style), a(i, {
        // Consider text length change in vertical axis, animation should
        // be used on shape, otherwise the effect will be weird.
        // TODOTODO
        // shape: elOption.label.shape,
        x: e.label.x,
        y: e.label.y
      }), em(i, n));
    }, r.prototype._renderHandle = function(t) {
      if (!(this._dragging || !this.updateHandleTransform)) {
        var e = this._axisPointerModel, a = this._api.getZr(), n = this._handle, i = e.getModel("handle"), o = e.get("status");
        if (!i.get("show") || !o || o === "hide") {
          n && a.remove(n), this._handle = null;
          return;
        }
        var s;
        this._handle || (s = !0, n = this._handle = go(i.get("icon"), {
          cursor: "move",
          draggable: !0,
          onmousemove: function(u) {
            jr(u.event);
          },
          onmousedown: wc(this._onHandleDragMove, this, 0, 0),
          drift: wc(this._onHandleDragMove, this),
          ondragend: wc(this._onHandleDragEnd, this)
        }), a.add(n)), tm(n, e, !1), n.setStyle(i.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"]));
        var l = i.get("size");
        B(l) || (l = [l, l]), n.scaleX = l[0] / 2, n.scaleY = l[1] / 2, jn(this, "_doDispatchAxisPointer", i.get("throttle") || 0, "fixRate"), this._moveHandleToValue(t, s);
      }
    }, r.prototype._moveHandleToValue = function(t, e) {
      Qy(this._axisPointerModel, !e && this._moveAnimation, this._handle, Dc(this.getHandleTransform(t, this._axisModel, this._axisPointerModel)));
    }, r.prototype._onHandleDragMove = function(t, e) {
      var a = this._handle;
      if (a) {
        this._dragging = !0;
        var n = this.updateHandleTransform(Dc(a), [t, e], this._axisModel, this._axisPointerModel);
        this._payloadInfo = n, a.stopAnimation(), a.attr(Dc(n)), xa(a).lastProp = null, this._doDispatchAxisPointer();
      }
    }, r.prototype._doDispatchAxisPointer = function() {
      var t = this._handle;
      if (t) {
        var e = this._payloadInfo, a = this._axisModel;
        this._api.dispatchAction({
          type: "updateAxisPointer",
          x: e.cursorPoint[0],
          y: e.cursorPoint[1],
          tooltipOption: e.tooltipOption,
          axesInfo: [{
            axisDim: a.axis.dim,
            axisIndex: a.componentIndex
          }]
        });
      }
    }, r.prototype._onHandleDragEnd = function() {
      this._dragging = !1;
      var t = this._handle;
      if (t) {
        var e = this._axisPointerModel.get("value");
        this._moveHandleToValue(e), this._api.dispatchAction({
          type: "hideTip"
        });
      }
    }, r.prototype.clear = function(t) {
      this._lastValue = null, this._lastStatus = null;
      var e = t.getZr(), a = this._group, n = this._handle;
      e && a && (this._lastGraphicKey = null, a && e.remove(a), n && e.remove(n), this._group = null, this._handle = null, this._payloadInfo = null), Ki(this, "_doDispatchAxisPointer");
    }, r.prototype.doClear = function() {
    }, r.prototype.buildLabel = function(t, e, a) {
      return a = a || 0, {
        x: t[a],
        y: t[1 - a],
        width: e[a],
        height: e[1 - a]
      };
    }, r;
  }()
);
function Qy(r, t, e, a) {
  bb(xa(e).lastProp, a) || (xa(e).lastProp = a, t ? pe(e, a, r) : (e.stopAnimation(), e.attr(a)));
}
function bb(r, t) {
  if (J(r) && J(t)) {
    var e = !0;
    return w(t, function(a, n) {
      e = e && bb(r[n], a);
    }), !!e;
  } else
    return r === t;
}
function em(r, t) {
  r[t.get(["label", "show"]) ? "show" : "hide"]();
}
function Dc(r) {
  return {
    x: r.x || 0,
    y: r.y || 0,
    rotation: r.rotation || 0
  };
}
function tm(r, t, e) {
  var a = t.get("z"), n = t.get("zlevel");
  r && r.traverse(function(i) {
    i.type !== "group" && (a != null && (i.z = a), n != null && (i.zlevel = n), i.silent = e);
  });
}
function Lh(r) {
  var t = r.get("type"), e = r.getModel(t + "Style"), a;
  return t === "line" ? (a = e.getLineStyle(), a.fill = null) : t === "shadow" && (a = e.getAreaStyle(), a.stroke = null), a;
}
function wb(r, t, e, a, n) {
  var i = e.get("value"), o = Db(i, t.axis, t.ecModel, e.get("seriesDataIndices"), {
    precision: e.get(["label", "precision"]),
    formatter: e.get(["label", "formatter"])
  }), s = e.getModel("label"), l = Yn(s.get("padding") || 0), u = s.getFont(), c = _l(o, u), v = n.position, f = c.width + l[1] + l[3], h = c.height + l[0] + l[2], p = n.align;
  p === "right" && (v[0] -= f), p === "center" && (v[0] -= f / 2);
  var d = n.verticalAlign;
  d === "bottom" && (v[1] -= h), d === "middle" && (v[1] -= h / 2), SO(v, f, h, a);
  var g = s.get("backgroundColor");
  (!g || g === "auto") && (g = t.get(["axisLine", "lineStyle", "color"])), r.label = {
    // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},
    x: v[0],
    y: v[1],
    style: Ie(s, {
      text: o,
      font: u,
      fill: s.getTextColor(),
      padding: l,
      backgroundColor: g
    }),
    // Label should be over axisPointer.
    z2: 10
  };
}
function SO(r, t, e, a) {
  var n = a.getWidth(), i = a.getHeight();
  r[0] = Math.min(r[0] + t, n) - t, r[1] = Math.min(r[1] + e, i) - e, r[0] = Math.max(r[0], 0), r[1] = Math.max(r[1], 0);
}
function Db(r, t, e, a, n) {
  r = t.scale.parse(r);
  var i = t.scale.getLabel({
    value: r
  }, {
    // If `precision` is set, width can be fixed (like '12.00500'), which
    // helps to debounce when when moving label.
    precision: n.precision
  }), o = n.formatter;
  if (o) {
    var s = {
      value: Xf(t, {
        value: r
      }),
      axisDimension: t.dim,
      axisIndex: t.index,
      seriesData: []
    };
    w(a, function(l) {
      var u = e.getSeriesByIndex(l.seriesIndex), c = l.dataIndexInside, v = u && u.getDataParams(c);
      v && s.seriesData.push(v);
    }), Y(o) ? i = o.replace("{value}", i) : X(o) && (i = o(s));
  }
  return i;
}
function Eh(r, t, e) {
  var a = zn();
  return co(a, a, e.rotation), ka(a, a, e.position), Jt([r.dataToCoord(t), (e.labelOffset || 0) + (e.labelDirection || 1) * (e.labelMargin || 0)], a);
}
function Ab(r, t, e, a, n, i) {
  var o = mt.innerTextLayout(e.rotation, 0, e.labelDirection);
  e.labelMargin = n.get(["label", "margin"]), wb(t, a, n, i, {
    position: Eh(a.axis, r, e),
    align: o.textAlign,
    verticalAlign: o.textVerticalAlign
  });
}
function Ph(r, t, e) {
  return e = e || 0, {
    x1: r[e],
    y1: r[1 - e],
    x2: t[e],
    y2: t[1 - e]
  };
}
function Tb(r, t, e) {
  return e = e || 0, {
    x: r[e],
    y: r[1 - e],
    width: t[e],
    height: t[1 - e]
  };
}
function rm(r, t, e, a, n, i) {
  return {
    cx: r,
    cy: t,
    r0: e,
    r: a,
    startAngle: n,
    endAngle: i,
    clockwise: !0
  };
}
var xO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.makeElOption = function(e, a, n, i, o) {
      var s = n.axis, l = s.grid, u = i.get("type"), c = am(l, s).getOtherAxis(s).getGlobalExtent(), v = s.toGlobalCoord(s.dataToCoord(a, !0));
      if (u && u !== "none") {
        var f = Lh(i), h = bO[u](s, v, c);
        h.style = f, e.graphicKey = h.type, e.pointer = h;
      }
      var p = bv(l.model, n);
      Ab(
        // @ts-ignore
        a,
        e,
        p,
        n,
        i,
        o
      );
    }, t.prototype.getHandleTransform = function(e, a, n) {
      var i = bv(a.axis.grid.model, a, {
        labelInside: !1
      });
      i.labelMargin = n.get(["handle", "margin"]);
      var o = Eh(a.axis, e, i);
      return {
        x: o[0],
        y: o[1],
        rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
      };
    }, t.prototype.updateHandleTransform = function(e, a, n, i) {
      var o = n.axis, s = o.grid, l = o.getGlobalExtent(!0), u = am(s, o).getOtherAxis(o).getGlobalExtent(), c = o.dim === "x" ? 0 : 1, v = [e.x, e.y];
      v[c] += a[c], v[c] = Math.min(l[1], v[c]), v[c] = Math.max(l[0], v[c]);
      var f = (u[1] + u[0]) / 2, h = [f, f];
      h[c] = v[c];
      var p = [{
        verticalAlign: "middle"
      }, {
        align: "center"
      }];
      return {
        x: v[0],
        y: v[1],
        rotation: e.rotation,
        cursorPoint: h,
        tooltipOption: p[c]
      };
    }, t;
  }(Ih)
);
function am(r, t) {
  var e = {};
  return e[t.dim + "AxisIndex"] = t.index, r.getCartesian(e);
}
var bO = {
  line: function(r, t, e) {
    var a = Ph([t, e[0]], [t, e[1]], nm(r));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: a
    };
  },
  shadow: function(r, t, e) {
    var a = Math.max(1, r.getBandWidth()), n = e[1] - e[0];
    return {
      type: "Rect",
      shape: Tb([t - a / 2, e[0]], [a, n], nm(r))
    };
  }
};
function nm(r) {
  return r.dim === "x" ? 0 : 1;
}
var wO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "axisPointer", t.defaultOption = {
      // 'auto' means that show when triggered by tooltip or handle.
      show: "auto",
      // zlevel: 0,
      z: 50,
      type: "line",
      // axispointer triggered by tootip determine snap automatically,
      // see `modelHelper`.
      snap: !1,
      triggerTooltip: !0,
      triggerEmphasis: !0,
      value: null,
      status: null,
      link: [],
      // Do not set 'auto' here, otherwise global animation: false
      // will not effect at this axispointer.
      animation: null,
      animationDurationUpdate: 200,
      lineStyle: {
        color: "#B9BEC9",
        width: 1,
        type: "dashed"
      },
      shadowStyle: {
        color: "rgba(210,219,238,0.2)"
      },
      label: {
        show: !0,
        formatter: null,
        precision: "auto",
        margin: 3,
        color: "#fff",
        padding: [5, 7, 5, 7],
        backgroundColor: "auto",
        borderColor: null,
        borderWidth: 0,
        borderRadius: 3
      },
      handle: {
        show: !1,
        // eslint-disable-next-line
        icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z",
        size: 45,
        // handle margin is from symbol center to axis, which is stable when circular move.
        margin: 50,
        // color: '#1b8bbd'
        // color: '#2f4554'
        color: "#333",
        shadowBlur: 3,
        shadowColor: "#aaa",
        shadowOffsetX: 0,
        shadowOffsetY: 2,
        // For mobile performance
        throttle: 40
      }
    }, t;
  }(se)
), Sr = ue(), DO = w;
function Cb(r, t, e) {
  if (!Oe.node) {
    var a = t.getZr();
    Sr(a).records || (Sr(a).records = {}), AO(a, t);
    var n = Sr(a).records[r] || (Sr(a).records[r] = {});
    n.handler = e;
  }
}
function AO(r, t) {
  if (Sr(r).initialized)
    return;
  Sr(r).initialized = !0, e("click", te(im, "click")), e("mousemove", te(im, "mousemove")), e("globalout", CO);
  function e(a, n) {
    r.on(a, function(i) {
      var o = MO(t);
      DO(Sr(r).records, function(s) {
        s && n(s, i, o.dispatchAction);
      }), TO(o.pendings, t);
    });
  }
}
function TO(r, t) {
  var e = r.showTip.length, a = r.hideTip.length, n;
  e ? n = r.showTip[e - 1] : a && (n = r.hideTip[a - 1]), n && (n.dispatchAction = null, t.dispatchAction(n));
}
function CO(r, t, e) {
  r.handler("leave", null, e);
}
function im(r, t, e, a) {
  t.handler(r, e, a);
}
function MO(r) {
  var t = {
    showTip: [],
    hideTip: []
  }, e = function(a) {
    var n = t[a.type];
    n ? n.push(a) : (a.dispatchAction = e, r.dispatchAction(a));
  };
  return {
    dispatchAction: e,
    pendings: t
  };
}
function Fv(r, t) {
  if (!Oe.node) {
    var e = t.getZr(), a = (Sr(e).records || {})[r];
    a && (Sr(e).records[r] = null);
  }
}
var IO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = a.getComponent("tooltip"), o = e.get("triggerOn") || i && i.get("triggerOn") || "mousemove|click";
      Cb("axisPointer", n, function(s, l, u) {
        o !== "none" && (s === "leave" || o.indexOf(s) >= 0) && u({
          type: "updateAxisPointer",
          currTrigger: s,
          x: l && l.offsetX,
          y: l && l.offsetY
        });
      });
    }, t.prototype.remove = function(e, a) {
      Fv("axisPointer", a);
    }, t.prototype.dispose = function(e, a) {
      Fv("axisPointer", a);
    }, t.type = "axisPointer", t;
  }(Re)
);
function Mb(r, t) {
  var e = [], a = r.seriesIndex, n;
  if (a == null || !(n = t.getSeriesByIndex(a)))
    return {
      point: []
    };
  var i = n.getData(), o = Va(i, r);
  if (o == null || o < 0 || B(o))
    return {
      point: []
    };
  var s = i.getItemGraphicEl(o), l = n.coordinateSystem;
  if (n.getTooltipPosition)
    e = n.getTooltipPosition(o) || [];
  else if (l && l.dataToPoint)
    if (r.isStacked) {
      var u = l.getBaseAxis(), c = l.getOtherAxis(u), v = c.dim, f = u.dim, h = v === "x" || v === "radius" ? 1 : 0, p = i.mapDimension(f), d = [];
      d[h] = i.get(p, o), d[1 - h] = i.get(i.getCalculationInfo("stackResultDimension"), o), e = l.dataToPoint(d) || [];
    } else
      e = l.dataToPoint(i.getValues(G(l.dimensions, function(y) {
        return i.mapDimension(y);
      }), o)) || [];
  else if (s) {
    var g = s.getBoundingRect().clone();
    g.applyTransform(s.transform), e = [g.x + g.width / 2, g.y + g.height / 2];
  }
  return {
    point: e,
    el: s
  };
}
var om = ue();
function LO(r, t, e) {
  var a = r.currTrigger, n = [r.x, r.y], i = r, o = r.dispatchAction || U(e.dispatchAction, e), s = t.getComponent("axisPointer").coordSysAxesInfo;
  if (s) {
    Ts(n) && (n = Mb({
      seriesIndex: i.seriesIndex,
      // Do not use dataIndexInside from other ec instance.
      // FIXME: auto detect it?
      dataIndex: i.dataIndex
    }, t).point);
    var l = Ts(n), u = i.axesInfo, c = s.axesInfo, v = a === "leave" || Ts(n), f = {}, h = {}, p = {
      list: [],
      map: {}
    }, d = {
      showPointer: te(PO, h),
      showTooltip: te(NO, p)
    };
    w(s.coordSysMap, function(y, m) {
      var _ = l || y.containPoint(n);
      w(s.coordSysAxesInfo[m], function(S, x) {
        var b = S.axis, D = VO(u, S);
        if (!v && _ && (!u || D)) {
          var A = D && D.value;
          A == null && !l && (A = b.pointToData(n)), A != null && sm(S, A, d, !1, f);
        }
      });
    });
    var g = {};
    return w(c, function(y, m) {
      var _ = y.linkGroup;
      _ && !h[m] && w(_.axesInfo, function(S, x) {
        var b = h[x];
        if (S !== y && b) {
          var D = b.value;
          _.mapper && (D = y.axis.scale.parse(_.mapper(D, lm(S), lm(y)))), g[y.key] = D;
        }
      });
    }), w(g, function(y, m) {
      sm(c[m], y, d, !0, f);
    }), RO(h, c, f), kO(p, n, r, o), OO(c, o, e), f;
  }
}
function sm(r, t, e, a, n) {
  var i = r.axis;
  if (!(i.scale.isBlank() || !i.containData(t))) {
    if (!r.involveSeries) {
      e.showPointer(r, t);
      return;
    }
    var o = EO(t, r), s = o.payloadBatch, l = o.snapToValue;
    s[0] && n.seriesIndex == null && z(n, s[0]), !a && r.snap && i.containData(l) && l != null && (t = l), e.showPointer(r, t, s), e.showTooltip(r, o, l);
  }
}
function EO(r, t) {
  var e = t.axis, a = e.dim, n = r, i = [], o = Number.MAX_VALUE, s = -1;
  return w(t.seriesModels, function(l, u) {
    var c = l.getData().mapDimensionsAll(a), v, f;
    if (l.getAxisTooltipData) {
      var h = l.getAxisTooltipData(c, r, e);
      f = h.dataIndices, v = h.nestestValue;
    } else {
      if (f = l.getData().indicesOfNearest(
        c[0],
        r,
        // Add a threshold to avoid find the wrong dataIndex
        // when data length is not same.
        // false,
        e.type === "category" ? 0.5 : null
      ), !f.length)
        return;
      v = l.getData().get(c[0], f[0]);
    }
    if (!(v == null || !isFinite(v))) {
      var p = r - v, d = Math.abs(p);
      d <= o && ((d < o || p >= 0 && s < 0) && (o = d, s = p, n = v, i.length = 0), w(f, function(g) {
        i.push({
          seriesIndex: l.seriesIndex,
          dataIndexInside: g,
          dataIndex: l.getData().getRawIndex(g)
        });
      }));
    }
  }), {
    payloadBatch: i,
    snapToValue: n
  };
}
function PO(r, t, e, a) {
  r[t.key] = {
    value: e,
    payloadBatch: a
  };
}
function NO(r, t, e, a) {
  var n = e.payloadBatch, i = t.axis, o = i.model, s = t.axisPointerModel;
  if (!(!t.triggerTooltip || !n.length)) {
    var l = t.coordSys.model, u = Qi(l), c = r.map[u];
    c || (c = r.map[u] = {
      coordSysId: l.id,
      coordSysIndex: l.componentIndex,
      coordSysType: l.type,
      coordSysMainType: l.mainType,
      dataByAxis: []
    }, r.list.push(c)), c.dataByAxis.push({
      axisDim: i.dim,
      axisIndex: o.componentIndex,
      axisType: o.type,
      axisId: o.id,
      value: a,
      // Caustion: viewHelper.getValueLabel is actually on "view stage", which
      // depends that all models have been updated. So it should not be performed
      // here. Considering axisPointerModel used here is volatile, which is hard
      // to be retrieve in TooltipView, we prepare parameters here.
      valueLabelOpt: {
        precision: s.get(["label", "precision"]),
        formatter: s.get(["label", "formatter"])
      },
      seriesDataIndices: n.slice()
    });
  }
}
function RO(r, t, e) {
  var a = e.axesInfo = [];
  w(t, function(n, i) {
    var o = n.axisPointerModel.option, s = r[i];
    s ? (!n.useHandle && (o.status = "show"), o.value = s.value, o.seriesDataIndices = (s.payloadBatch || []).slice()) : !n.useHandle && (o.status = "hide"), o.status === "show" && a.push({
      axisDim: n.axis.dim,
      axisIndex: n.axis.model.componentIndex,
      value: o.value
    });
  });
}
function kO(r, t, e, a) {
  if (Ts(t) || !r.list.length) {
    a({
      type: "hideTip"
    });
    return;
  }
  var n = ((r.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
  a({
    type: "showTip",
    escapeConnect: !0,
    x: t[0],
    y: t[1],
    tooltipOption: e.tooltipOption,
    position: e.position,
    dataIndexInside: n.dataIndexInside,
    dataIndex: n.dataIndex,
    seriesIndex: n.seriesIndex,
    dataByCoordSys: r.list
  });
}
function OO(r, t, e) {
  var a = e.getZr(), n = "axisPointerLastHighlights", i = om(a)[n] || {}, o = om(a)[n] = {};
  w(r, function(u, c) {
    var v = u.axisPointerModel.option;
    v.status === "show" && u.triggerEmphasis && w(v.seriesDataIndices, function(f) {
      var h = f.seriesIndex + " | " + f.dataIndex;
      o[h] = f;
    });
  });
  var s = [], l = [];
  w(i, function(u, c) {
    !o[c] && l.push(u);
  }), w(o, function(u, c) {
    !i[c] && s.push(u);
  }), l.length && e.dispatchAction({
    type: "downplay",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: l
  }), s.length && e.dispatchAction({
    type: "highlight",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: s
  });
}
function VO(r, t) {
  for (var e = 0; e < (r || []).length; e++) {
    var a = r[e];
    if (t.axis.dim === a.axisDim && t.axis.model.componentIndex === a.axisIndex)
      return a;
  }
}
function lm(r) {
  var t = r.axis.model, e = {}, a = e.axisDim = r.axis.dim;
  return e.axisIndex = e[a + "AxisIndex"] = t.componentIndex, e.axisName = e[a + "AxisName"] = t.name, e.axisId = e[a + "AxisId"] = t.id, e;
}
function Ts(r) {
  return !r || r[0] == null || isNaN(r[0]) || r[1] == null || isNaN(r[1]);
}
function Mo(r) {
  Xa.registerAxisPointerClass("CartesianAxisPointer", xO), r.registerComponentModel(wO), r.registerComponentView(IO), r.registerPreprocessor(function(t) {
    if (t) {
      (!t.axisPointer || t.axisPointer.length === 0) && (t.axisPointer = {});
      var e = t.axisPointer.link;
      e && !B(e) && (t.axisPointer.link = [e]);
    }
  }), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, function(t, e) {
    t.getComponent("axisPointer").coordSysAxesInfo = YL(t, e);
  }), r.registerAction({
    type: "updateAxisPointer",
    event: "updateAxisPointer",
    update: ":updateAxisPointer"
  }, LO);
}
function BO(r) {
  oe(a1), oe(Mo);
}
var zO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.makeElOption = function(e, a, n, i, o) {
      var s = n.axis;
      s.dim === "angle" && (this.animationThreshold = Math.PI / 18);
      var l = s.polar, u = l.getOtherAxis(s), c = u.getExtent(), v = s.dataToCoord(a), f = i.get("type");
      if (f && f !== "none") {
        var h = Lh(i), p = FO[f](s, l, v, c);
        p.style = h, e.graphicKey = p.type, e.pointer = p;
      }
      var d = i.get(["label", "margin"]), g = GO(a, n, i, l, d);
      wb(e, n, i, o, g);
    }, t;
  }(Ih)
);
function GO(r, t, e, a, n) {
  var i = t.axis, o = i.dataToCoord(r), s = a.getAngleAxis().getExtent()[0];
  s = s / 180 * Math.PI;
  var l = a.getRadiusAxis().getExtent(), u, c, v;
  if (i.dim === "radius") {
    var f = zn();
    co(f, f, s), ka(f, f, [a.cx, a.cy]), u = Jt([o, -n], f);
    var h = t.getModel("axisLabel").get("rotate") || 0, p = mt.innerTextLayout(s, h * Math.PI / 180, -1);
    c = p.textAlign, v = p.textVerticalAlign;
  } else {
    var d = l[1];
    u = a.coordToPoint([d + n, o]);
    var g = a.cx, y = a.cy;
    c = Math.abs(u[0] - g) / d < 0.3 ? "center" : u[0] > g ? "left" : "right", v = Math.abs(u[1] - y) / d < 0.3 ? "middle" : u[1] > y ? "top" : "bottom";
  }
  return {
    position: u,
    align: c,
    verticalAlign: v
  };
}
var FO = {
  line: function(r, t, e, a) {
    return r.dim === "angle" ? {
      type: "Line",
      shape: Ph(t.coordToPoint([a[0], e]), t.coordToPoint([a[1], e]))
    } : {
      type: "Circle",
      shape: {
        cx: t.cx,
        cy: t.cy,
        r: e
      }
    };
  },
  shadow: function(r, t, e, a) {
    var n = Math.max(1, r.getBandWidth()), i = Math.PI / 180;
    return r.dim === "angle" ? {
      type: "Sector",
      shape: rm(
        t.cx,
        t.cy,
        a[0],
        a[1],
        // In ECharts y is negative if angle is positive
        (-e - n / 2) * i,
        (-e + n / 2) * i
      )
    } : {
      type: "Sector",
      shape: rm(t.cx, t.cy, e - n / 2, e + n / 2, 0, Math.PI * 2)
    };
  }
}, HO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.findAxisModel = function(e) {
      var a, n = this.ecModel;
      return n.eachComponent(e, function(i) {
        i.getCoordSysModel() === this && (a = i);
      }, this), a;
    }, t.type = "polar", t.dependencies = ["radiusAxis", "angleAxis"], t.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "80%"
    }, t;
  }(se)
), Nh = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("polar", Ye).models[0];
    }, t.type = "polarAxis", t;
  }(se)
);
at(Nh, _o);
var WO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "angleAxis", t;
  }(Nh)
), UO = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "radiusAxis", t;
  }(Nh)
), Rh = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a) {
      return r.call(this, "radius", e, a) || this;
    }
    return t.prototype.pointToData = function(e, a) {
      return this.polar.pointToData(e, a)[this.dim === "radius" ? 0 : 1];
    }, t;
  }(rr)
);
Rh.prototype.dataToRadius = rr.prototype.dataToCoord;
Rh.prototype.radiusToData = rr.prototype.coordToData;
var $O = ue(), kh = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a) {
      return r.call(this, "angle", e, a || [0, 360]) || this;
    }
    return t.prototype.pointToData = function(e, a) {
      return this.polar.pointToData(e, a)[this.dim === "radius" ? 0 : 1];
    }, t.prototype.calculateCategoryInterval = function() {
      var e = this, a = e.getLabelModel(), n = e.scale, i = n.getExtent(), o = n.count();
      if (i[1] - i[0] < 1)
        return 0;
      var s = i[0], l = e.dataToCoord(s + 1) - e.dataToCoord(s), u = Math.abs(l), c = _l(s == null ? "" : s + "", a.getFont(), "center", "top"), v = Math.max(c.height, 7), f = v / u;
      isNaN(f) && (f = 1 / 0);
      var h = Math.max(0, Math.floor(f)), p = $O(e.model), d = p.lastAutoInterval, g = p.lastTickCount;
      return d != null && g != null && Math.abs(d - h) <= 1 && Math.abs(g - o) <= 1 && d > h ? h = d : (p.lastTickCount = o, p.lastAutoInterval = h), h;
    }, t;
  }(rr)
);
kh.prototype.dataToAngle = rr.prototype.dataToCoord;
kh.prototype.angleToData = rr.prototype.coordToData;
var Ib = ["radius", "angle"], YO = (
  /** @class */
  function() {
    function r(t) {
      this.dimensions = Ib, this.type = "polar", this.cx = 0, this.cy = 0, this._radiusAxis = new Rh(), this._angleAxis = new kh(), this.axisPointerEnabled = !0, this.name = t || "", this._radiusAxis.polar = this._angleAxis.polar = this;
    }
    return r.prototype.containPoint = function(t) {
      var e = this.pointToCoord(t);
      return this._radiusAxis.contain(e[0]) && this._angleAxis.contain(e[1]);
    }, r.prototype.containData = function(t) {
      return this._radiusAxis.containData(t[0]) && this._angleAxis.containData(t[1]);
    }, r.prototype.getAxis = function(t) {
      var e = "_" + t + "Axis";
      return this[e];
    }, r.prototype.getAxes = function() {
      return [this._radiusAxis, this._angleAxis];
    }, r.prototype.getAxesByScale = function(t) {
      var e = [], a = this._angleAxis, n = this._radiusAxis;
      return a.scale.type === t && e.push(a), n.scale.type === t && e.push(n), e;
    }, r.prototype.getAngleAxis = function() {
      return this._angleAxis;
    }, r.prototype.getRadiusAxis = function() {
      return this._radiusAxis;
    }, r.prototype.getOtherAxis = function(t) {
      var e = this._angleAxis;
      return t === e ? this._radiusAxis : e;
    }, r.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis();
    }, r.prototype.getTooltipAxes = function(t) {
      var e = t != null && t !== "auto" ? this.getAxis(t) : this.getBaseAxis();
      return {
        baseAxes: [e],
        otherAxes: [this.getOtherAxis(e)]
      };
    }, r.prototype.dataToPoint = function(t, e) {
      return this.coordToPoint([this._radiusAxis.dataToRadius(t[0], e), this._angleAxis.dataToAngle(t[1], e)]);
    }, r.prototype.pointToData = function(t, e) {
      var a = this.pointToCoord(t);
      return [this._radiusAxis.radiusToData(a[0], e), this._angleAxis.angleToData(a[1], e)];
    }, r.prototype.pointToCoord = function(t) {
      var e = t[0] - this.cx, a = t[1] - this.cy, n = this.getAngleAxis(), i = n.getExtent(), o = Math.min(i[0], i[1]), s = Math.max(i[0], i[1]);
      n.inverse ? o = s - 360 : s = o + 360;
      var l = Math.sqrt(e * e + a * a);
      e /= l, a /= l;
      for (var u = Math.atan2(-a, e) / Math.PI * 180, c = u < o ? 1 : -1; u < o || u > s; )
        u += c * 360;
      return [l, u];
    }, r.prototype.coordToPoint = function(t) {
      var e = t[0], a = t[1] / 180 * Math.PI, n = Math.cos(a) * e + this.cx, i = -Math.sin(a) * e + this.cy;
      return [n, i];
    }, r.prototype.getArea = function() {
      var t = this.getAngleAxis(), e = this.getRadiusAxis(), a = e.getExtent().slice();
      a[0] > a[1] && a.reverse();
      var n = t.getExtent(), i = Math.PI / 180;
      return {
        cx: this.cx,
        cy: this.cy,
        r0: a[0],
        r: a[1],
        startAngle: -n[0] * i,
        endAngle: -n[1] * i,
        clockwise: t.inverse,
        contain: function(o, s) {
          var l = o - this.cx, u = s - this.cy, c = l * l + u * u - 1e-4, v = this.r, f = this.r0;
          return c <= v * v && c >= f * f;
        }
      };
    }, r.prototype.convertToPixel = function(t, e, a) {
      var n = um(e);
      return n === this ? this.dataToPoint(a) : null;
    }, r.prototype.convertFromPixel = function(t, e, a) {
      var n = um(e);
      return n === this ? this.pointToData(a) : null;
    }, r;
  }()
);
function um(r) {
  var t = r.seriesModel, e = r.polarModel;
  return e && e.coordinateSystem || t && t.coordinateSystem;
}
const ZO = YO;
var XO = { env: {} };
function KO(r, t, e) {
  var a = t.get("center"), n = e.getWidth(), i = e.getHeight();
  r.cx = H(a[0], n), r.cy = H(a[1], i);
  var o = r.getRadiusAxis(), s = Math.min(n, i) / 2, l = t.get("radius");
  l == null ? l = [0, "100%"] : B(l) || (l = [0, l]);
  var u = [H(l[0], s), H(l[1], s)];
  o.inverse ? o.setExtent(u[1], u[0]) : o.setExtent(u[0], u[1]);
}
function qO(r, t) {
  var e = this, a = e.getAngleAxis(), n = e.getRadiusAxis();
  if (a.scale.setExtent(1 / 0, -1 / 0), n.scale.setExtent(1 / 0, -1 / 0), r.eachSeries(function(s) {
    if (s.coordinateSystem === e) {
      var l = s.getData();
      w(Js(l, "radius"), function(u) {
        n.scale.unionExtentFromData(l, u);
      }), w(Js(l, "angle"), function(u) {
        a.scale.unionExtentFromData(l, u);
      });
    }
  }), Ln(a.scale, a.model), Ln(n.scale, n.model), a.type === "category" && !a.onBand) {
    var i = a.getExtent(), o = 360 / a.scale.count();
    a.inverse ? i[1] += o : i[1] -= o, a.setExtent(i[0], i[1]);
  }
}
function jO(r) {
  return r.mainType === "angleAxis";
}
function cm(r, t) {
  var e;
  if (r.type = t.get("type"), r.scale = Wl(t), r.onBand = t.get("boundaryGap") && r.type === "category", r.inverse = t.get("inverse"), jO(t)) {
    r.inverse = r.inverse !== t.get("clockwise");
    var a = t.get("startAngle"), n = (e = t.get("endAngle")) !== null && e !== void 0 ? e : a + (r.inverse ? -360 : 360);
    r.setExtent(a, n);
  }
  t.axis = r, r.model = t;
}
var JO = {
  dimensions: Ib,
  create: function(r, t) {
    var e = [];
    return r.eachComponent("polar", function(a, n) {
      var i = new ZO(n + "");
      i.update = qO;
      var o = i.getRadiusAxis(), s = i.getAngleAxis(), l = a.findAxisModel("radiusAxis"), u = a.findAxisModel("angleAxis");
      cm(o, l), cm(s, u), KO(i, a, t), e.push(i), a.coordinateSystem = i, i.model = a;
    }), r.eachSeries(function(a) {
      if (a.get("coordinateSystem") === "polar") {
        var n = a.getReferringComponents("polar", Ye).models[0];
        if (XO.env.NODE_ENV !== "production" && !n)
          throw new Error('Polar "' + $e(a.get("polarIndex"), a.get("polarId"), 0) + '" not found');
        a.coordinateSystem = n.coordinateSystem;
      }
    }), e;
  }
}, QO = ["axisLine", "axisLabel", "axisTick", "minorTick", "splitLine", "minorSplitLine", "splitArea"];
function os(r, t, e) {
  t[1] > t[0] && (t = t.slice().reverse());
  var a = r.coordToPoint([t[0], e]), n = r.coordToPoint([t[1], e]);
  return {
    x1: a[0],
    y1: a[1],
    x2: n[0],
    y2: n[1]
  };
}
function ss(r) {
  var t = r.getRadiusAxis();
  return t.inverse ? 0 : 1;
}
function vm(r) {
  var t = r[0], e = r[r.length - 1];
  t && e && Math.abs(Math.abs(t.coord - e.coord) - 360) < 1e-4 && r.pop();
}
var eV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.axisPointerClass = "PolarAxisPointer", e;
    }
    return t.prototype.render = function(e, a) {
      if (this.group.removeAll(), !!e.get("show")) {
        var n = e.axis, i = n.polar, o = i.getRadiusAxis().getExtent(), s = n.getTicksCoords(), l = n.getMinorTicksCoords(), u = G(n.getViewLabels(), function(c) {
          c = Q(c);
          var v = n.scale, f = v.type === "ordinal" ? v.getRawOrdinalNumber(c.tickValue) : c.tickValue;
          return c.coord = n.dataToCoord(f), c;
        });
        vm(u), vm(s), w(QO, function(c) {
          e.get([c, "show"]) && (!n.scale.isBlank() || c === "axisLine") && tV[c](this.group, e, i, s, l, o, u);
        }, this);
      }
    }, t.type = "angleAxis", t;
  }(Xa)
), tV = {
  axisLine: function(r, t, e, a, n, i) {
    var o = t.getModel(["axisLine", "lineStyle"]), s = e.getAngleAxis(), l = Math.PI / 180, u = s.getExtent(), c = ss(e), v = c ? 0 : 1, f, h = Math.abs(u[1] - u[0]) === 360 ? "Circle" : "Arc";
    i[v] === 0 ? f = new Ua[h]({
      shape: {
        cx: e.cx,
        cy: e.cy,
        r: i[c],
        startAngle: -u[0] * l,
        endAngle: -u[1] * l,
        clockwise: s.inverse
      },
      style: o.getLineStyle(),
      z2: 1,
      silent: !0
    }) : f = new gl({
      shape: {
        cx: e.cx,
        cy: e.cy,
        r: i[c],
        r0: i[v]
      },
      style: o.getLineStyle(),
      z2: 1,
      silent: !0
    }), f.style.fill = null, r.add(f);
  },
  axisTick: function(r, t, e, a, n, i) {
    var o = t.getModel("axisTick"), s = (o.get("inside") ? -1 : 1) * o.get("length"), l = i[ss(e)], u = G(a, function(c) {
      return new it({
        shape: os(e, [l, l + s], c.coord)
      });
    });
    r.add(Vt(u, {
      style: ee(o.getModel("lineStyle").getLineStyle(), {
        stroke: t.get(["axisLine", "lineStyle", "color"])
      })
    }));
  },
  minorTick: function(r, t, e, a, n, i) {
    if (n.length) {
      for (var o = t.getModel("axisTick"), s = t.getModel("minorTick"), l = (o.get("inside") ? -1 : 1) * s.get("length"), u = i[ss(e)], c = [], v = 0; v < n.length; v++)
        for (var f = 0; f < n[v].length; f++)
          c.push(new it({
            shape: os(e, [u, u + l], n[v][f].coord)
          }));
      r.add(Vt(c, {
        style: ee(s.getModel("lineStyle").getLineStyle(), ee(o.getLineStyle(), {
          stroke: t.get(["axisLine", "lineStyle", "color"])
        }))
      }));
    }
  },
  axisLabel: function(r, t, e, a, n, i, o) {
    var s = t.getCategories(!0), l = t.getModel("axisLabel"), u = l.get("margin"), c = t.get("triggerEvent");
    w(o, function(v, f) {
      var h = l, p = v.tickValue, d = i[ss(e)], g = e.coordToPoint([d + u, v.coord]), y = e.cx, m = e.cy, _ = Math.abs(g[0] - y) / d < 0.3 ? "center" : g[0] > y ? "left" : "right", S = Math.abs(g[1] - m) / d < 0.3 ? "middle" : g[1] > m ? "top" : "bottom";
      if (s && s[p]) {
        var x = s[p];
        J(x) && x.textStyle && (h = new me(x.textStyle, l, l.ecModel));
      }
      var b = new ve({
        silent: mt.isLabelSilent(t),
        style: Ie(h, {
          x: g[0],
          y: g[1],
          fill: h.getTextColor() || t.get(["axisLine", "lineStyle", "color"]),
          text: v.formattedLabel,
          align: _,
          verticalAlign: S
        })
      });
      if (r.add(b), c) {
        var D = mt.makeAxisEventDataBase(t);
        D.targetType = "axisLabel", D.value = v.rawLabel, j(b).eventData = D;
      }
    }, this);
  },
  splitLine: function(r, t, e, a, n, i) {
    var o = t.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0;
    l = l instanceof Array ? l : [l];
    for (var c = [], v = 0; v < a.length; v++) {
      var f = u++ % l.length;
      c[f] = c[f] || [], c[f].push(new it({
        shape: os(e, i, a[v].coord)
      }));
    }
    for (var v = 0; v < c.length; v++)
      r.add(Vt(c[v], {
        style: ee({
          stroke: l[v % l.length]
        }, s.getLineStyle()),
        silent: !0,
        z: t.get("z")
      }));
  },
  minorSplitLine: function(r, t, e, a, n, i) {
    if (n.length) {
      for (var o = t.getModel("minorSplitLine"), s = o.getModel("lineStyle"), l = [], u = 0; u < n.length; u++)
        for (var c = 0; c < n[u].length; c++)
          l.push(new it({
            shape: os(e, i, n[u][c].coord)
          }));
      r.add(Vt(l, {
        style: s.getLineStyle(),
        silent: !0,
        z: t.get("z")
      }));
    }
  },
  splitArea: function(r, t, e, a, n, i) {
    if (a.length) {
      var o = t.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var c = [], v = Math.PI / 180, f = -a[0].coord * v, h = Math.min(i[0], i[1]), p = Math.max(i[0], i[1]), d = t.get("clockwise"), g = 1, y = a.length; g <= y; g++) {
        var m = g === y ? a[0].coord : a[g].coord, _ = u++ % l.length;
        c[_] = c[_] || [], c[_].push(new Ht({
          shape: {
            cx: e.cx,
            cy: e.cy,
            r0: h,
            r: p,
            startAngle: f,
            endAngle: -m * v,
            clockwise: d
          },
          silent: !0
        })), f = -m * v;
      }
      for (var g = 0; g < c.length; g++)
        r.add(Vt(c[g], {
          style: ee({
            fill: l[g % l.length]
          }, s.getAreaStyle()),
          silent: !0
        }));
    }
  }
}, rV = ["axisLine", "axisTickLabel", "axisName"], aV = ["splitLine", "splitArea", "minorSplitLine"], nV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.axisPointerClass = "PolarAxisPointer", e;
    }
    return t.prototype.render = function(e, a) {
      if (this.group.removeAll(), !!e.get("show")) {
        var n = this._axisGroup, i = this._axisGroup = new re();
        this.group.add(i);
        var o = e.axis, s = o.polar, l = s.getAngleAxis(), u = o.getTicksCoords(), c = o.getMinorTicksCoords(), v = l.getExtent()[0], f = o.getExtent(), h = oV(s, e, v), p = new mt(e, h);
        w(rV, p.add, p), i.add(p.getGroup()), po(n, i, e), w(aV, function(d) {
          e.get([d, "show"]) && !o.scale.isBlank() && iV[d](this.group, e, s, v, f, u, c);
        }, this);
      }
    }, t.type = "radiusAxis", t;
  }(Xa)
), iV = {
  splitLine: function(r, t, e, a, n, i) {
    var o = t.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0, c = e.getAngleAxis(), v = Math.PI / 180, f = c.getExtent(), h = Math.abs(f[1] - f[0]) === 360 ? "Circle" : "Arc";
    l = l instanceof Array ? l : [l];
    for (var p = [], d = 0; d < i.length; d++) {
      var g = u++ % l.length;
      p[g] = p[g] || [], p[g].push(new Ua[h]({
        shape: {
          cx: e.cx,
          cy: e.cy,
          // ensure circle radius >= 0
          r: Math.max(i[d].coord, 0),
          startAngle: -f[0] * v,
          endAngle: -f[1] * v,
          clockwise: c.inverse
        }
      }));
    }
    for (var d = 0; d < p.length; d++)
      r.add(Vt(p[d], {
        style: ee({
          stroke: l[d % l.length],
          fill: null
        }, s.getLineStyle()),
        silent: !0
      }));
  },
  minorSplitLine: function(r, t, e, a, n, i, o) {
    if (o.length) {
      for (var s = t.getModel("minorSplitLine"), l = s.getModel("lineStyle"), u = [], c = 0; c < o.length; c++)
        for (var v = 0; v < o[c].length; v++)
          u.push(new Wa({
            shape: {
              cx: e.cx,
              cy: e.cy,
              r: o[c][v].coord
            }
          }));
      r.add(Vt(u, {
        style: ee({
          fill: null
        }, l.getLineStyle()),
        silent: !0
      }));
    }
  },
  splitArea: function(r, t, e, a, n, i) {
    if (i.length) {
      var o = t.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var c = [], v = i[0].coord, f = 1; f < i.length; f++) {
        var h = u++ % l.length;
        c[h] = c[h] || [], c[h].push(new Ht({
          shape: {
            cx: e.cx,
            cy: e.cy,
            r0: v,
            r: i[f].coord,
            startAngle: 0,
            endAngle: Math.PI * 2
          },
          silent: !0
        })), v = i[f].coord;
      }
      for (var f = 0; f < c.length; f++)
        r.add(Vt(c[f], {
          style: ee({
            fill: l[f % l.length]
          }, s.getAreaStyle()),
          silent: !0
        }));
    }
  }
};
function oV(r, t, e) {
  return {
    position: [r.cx, r.cy],
    rotation: e / 180 * Math.PI,
    labelDirection: -1,
    tickDirection: -1,
    nameDirection: 1,
    labelRotate: t.getModel("axisLabel").get("rotate"),
    // Over splitLine and splitArea
    z2: 1
  };
}
function Lb(r) {
  return r.get("stack") || "__ec_stack_" + r.seriesIndex;
}
function Eb(r, t) {
  return t.dim + r.model.componentIndex;
}
function sV(r, t, e) {
  var a = {}, n = lV(Ae(t.getSeriesByType(r), function(i) {
    return !t.isSeriesFiltered(i) && i.coordinateSystem && i.coordinateSystem.type === "polar";
  }));
  t.eachSeriesByType(r, function(i) {
    if (i.coordinateSystem.type === "polar") {
      var o = i.getData(), s = i.coordinateSystem, l = s.getBaseAxis(), u = Eb(s, l), c = Lb(i), v = n[u][c], f = v.offset, h = v.width, p = s.getOtherAxis(l), d = i.coordinateSystem.cx, g = i.coordinateSystem.cy, y = i.get("barMinHeight") || 0, m = i.get("barMinAngle") || 0;
      a[c] = a[c] || [];
      for (var _ = o.mapDimension(p.dim), S = o.mapDimension(l.dim), x = ta(
        o,
        _
        /* , baseDim */
      ), b = l.dim !== "radius" || !i.get("roundCap", !0), D = p.model, A = D.get("startValue"), T = p.dataToCoord(A || 0), C = 0, M = o.count(); C < M; C++) {
        var I = o.get(_, C), L = o.get(S, C), P = I >= 0 ? "p" : "n", E = T;
        x && (a[c][L] || (a[c][L] = {
          p: T,
          n: T
          // Negative stack
        }), E = a[c][L][P]);
        var N = void 0, O = void 0, k = void 0, V = void 0;
        if (p.dim === "radius") {
          var F = p.dataToCoord(I) - T, W = l.dataToCoord(L);
          Math.abs(F) < y && (F = (F < 0 ? -1 : 1) * y), N = E, O = E + F, k = W - f, V = k - h, x && (a[c][L][P] = O);
        } else {
          var q = p.dataToCoord(I, b) - T, ae = l.dataToCoord(L);
          Math.abs(q) < m && (q = (q < 0 ? -1 : 1) * m), N = ae + f, O = N + h, k = E, V = E + q, x && (a[c][L][P] = V);
        }
        o.setItemLayout(C, {
          cx: d,
          cy: g,
          r0: N,
          r: O,
          // Consider that positive angle is anti-clockwise,
          // while positive radian of sector is clockwise
          startAngle: -k * Math.PI / 180,
          endAngle: -V * Math.PI / 180,
          /**
           * Keep the same logic with bar in catesion: use end value to
           * control direction. Notice that if clockwise is true (by
           * default), the sector will always draw clockwisely, no matter
           * whether endAngle is greater or less than startAngle.
           */
          clockwise: k >= V
        });
      }
    }
  });
}
function lV(r) {
  var t = {};
  w(r, function(a, n) {
    var i = a.getData(), o = a.coordinateSystem, s = o.getBaseAxis(), l = Eb(o, s), u = s.getExtent(), c = s.type === "category" ? s.getBandWidth() : Math.abs(u[1] - u[0]) / i.count(), v = t[l] || {
      bandWidth: c,
      remainedWidth: c,
      autoWidthCount: 0,
      categoryGap: "20%",
      gap: "30%",
      stacks: {}
    }, f = v.stacks;
    t[l] = v;
    var h = Lb(a);
    f[h] || v.autoWidthCount++, f[h] = f[h] || {
      width: 0,
      maxWidth: 0
    };
    var p = H(a.get("barWidth"), c), d = H(a.get("barMaxWidth"), c), g = a.get("barGap"), y = a.get("barCategoryGap");
    p && !f[h].width && (p = Math.min(v.remainedWidth, p), f[h].width = p, v.remainedWidth -= p), d && (f[h].maxWidth = d), g != null && (v.gap = g), y != null && (v.categoryGap = y);
  });
  var e = {};
  return w(t, function(a, n) {
    e[n] = {};
    var i = a.stacks, o = a.bandWidth, s = H(a.categoryGap, o), l = H(a.gap, 1), u = a.remainedWidth, c = a.autoWidthCount, v = (u - s) / (c + (c - 1) * l);
    v = Math.max(v, 0), w(i, function(d, g) {
      var y = d.maxWidth;
      y && y < v && (y = Math.min(y, u), d.width && (y = Math.min(y, d.width)), u -= y, d.width = y, c--);
    }), v = (u - s) / (c + (c - 1) * l), v = Math.max(v, 0);
    var f = 0, h;
    w(i, function(d, g) {
      d.width || (d.width = v), h = d, f += d.width * (1 + l);
    }), h && (f -= h.width * l);
    var p = -f / 2;
    w(i, function(d, g) {
      e[n][g] = e[n][g] || {
        offset: p,
        width: d.width
      }, p += d.width * (1 + l);
    });
  }), e;
}
var uV = {
  startAngle: 90,
  clockwise: !0,
  splitNumber: 12,
  axisLabel: {
    rotate: 0
  }
}, cV = {
  splitNumber: 5
}, vV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "polar", t;
  }(Re)
);
function fV(r) {
  oe(Mo), Xa.registerAxisPointerClass("PolarAxisPointer", zO), r.registerCoordinateSystem("polar", JO), r.registerComponentModel(HO), r.registerComponentView(vV), Pn(r, "angle", WO, uV), Pn(r, "radius", UO, cV), r.registerComponentView(eV), r.registerComponentView(nV), r.registerLayout(te(sV, "bar"));
}
function Hv(r, t) {
  t = t || {};
  var e = r.coordinateSystem, a = r.axis, n = {}, i = a.position, o = a.orient, s = e.getRect(), l = [s.x, s.x + s.width, s.y, s.y + s.height], u = {
    horizontal: {
      top: l[2],
      bottom: l[3]
    },
    vertical: {
      left: l[0],
      right: l[1]
    }
  };
  n.position = [o === "vertical" ? u.vertical[i] : l[0], o === "horizontal" ? u.horizontal[i] : l[3]];
  var c = {
    horizontal: 0,
    vertical: 1
  };
  n.rotation = Math.PI / 2 * c[o];
  var v = {
    top: -1,
    bottom: 1,
    right: 1,
    left: -1
  };
  n.labelDirection = n.tickDirection = n.nameDirection = v[i], r.get(["axisTick", "inside"]) && (n.tickDirection = -n.tickDirection), $e(t.labelInside, r.get(["axisLabel", "inside"])) && (n.labelDirection = -n.labelDirection);
  var f = t.rotate;
  return f == null && (f = r.get(["axisLabel", "rotate"])), n.labelRotation = i === "top" ? -f : f, n.z2 = 1, n;
}
var hV = ["axisLine", "axisTickLabel", "axisName"], pV = ["splitArea", "splitLine"], dV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.axisPointerClass = "SingleAxisPointer", e;
    }
    return t.prototype.render = function(e, a, n, i) {
      var o = this.group;
      o.removeAll();
      var s = this._axisGroup;
      this._axisGroup = new re();
      var l = Hv(e), u = new mt(e, l);
      w(hV, u.add, u), o.add(this._axisGroup), o.add(u.getGroup()), w(pV, function(c) {
        e.get([c, "show"]) && gV[c](this, this.group, this._axisGroup, e);
      }, this), po(s, this._axisGroup, e), r.prototype.render.call(this, e, a, n, i);
    }, t.prototype.remove = function() {
      e1(this);
    }, t.type = "singleAxis", t;
  }(Xa)
), gV = {
  splitLine: function(r, t, e, a) {
    var n = a.axis;
    if (!n.scale.isBlank()) {
      var i = a.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color");
      s = s instanceof Array ? s : [s];
      for (var l = o.get("width"), u = a.coordinateSystem.getRect(), c = n.isHorizontal(), v = [], f = 0, h = n.getTicksCoords({
        tickModel: i
      }), p = [], d = [], g = 0; g < h.length; ++g) {
        var y = n.toGlobalCoord(h[g].coord);
        c ? (p[0] = y, p[1] = u.y, d[0] = y, d[1] = u.y + u.height) : (p[0] = u.x, p[1] = y, d[0] = u.x + u.width, d[1] = y);
        var m = new it({
          shape: {
            x1: p[0],
            y1: p[1],
            x2: d[0],
            y2: d[1]
          },
          silent: !0
        });
        Cn(m.shape, l);
        var _ = f++ % s.length;
        v[_] = v[_] || [], v[_].push(m);
      }
      for (var S = o.getLineStyle(["color"]), g = 0; g < v.length; ++g)
        t.add(Vt(v[g], {
          style: ee({
            stroke: s[g % s.length]
          }, S),
          silent: !0
        }));
    }
  },
  splitArea: function(r, t, e, a) {
    Qx(r, e, a, a);
  }
}, Cs = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.getCoordSysModel = function() {
      return this;
    }, t.type = "singleAxis", t.layoutMode = "box", t.defaultOption = {
      left: "5%",
      top: "5%",
      right: "5%",
      bottom: "5%",
      type: "value",
      position: "bottom",
      orient: "horizontal",
      axisLine: {
        show: !0,
        lineStyle: {
          width: 1,
          type: "solid"
        }
      },
      // Single coordinate system and single axis is the,
      // which is used as the parent tooltip model.
      // same model, so we set default tooltip show as true.
      tooltip: {
        show: !0
      },
      axisTick: {
        show: !0,
        length: 6,
        lineStyle: {
          width: 1
        }
      },
      axisLabel: {
        show: !0,
        interval: "auto"
      },
      splitLine: {
        show: !0,
        lineStyle: {
          type: "dashed",
          opacity: 0.2
        }
      }
    }, t;
  }(se)
);
at(Cs, _o.prototype);
var yV = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n, i, o) {
      var s = r.call(this, e, a, n) || this;
      return s.type = i || "value", s.position = o || "bottom", s;
    }
    return t.prototype.isHorizontal = function() {
      var e = this.position;
      return e === "top" || e === "bottom";
    }, t.prototype.pointToData = function(e, a) {
      return this.coordinateSystem.pointToData(e)[0];
    }, t;
  }(rr)
), Pb = ["single"], mV = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.type = "single", this.dimension = "single", this.dimensions = Pb, this.axisPointerEnabled = !0, this.model = t, this._init(t, e, a);
    }
    return r.prototype._init = function(t, e, a) {
      var n = this.dimension, i = new yV(n, Wl(t), [0, 0], t.get("type"), t.get("position")), o = i.type === "category";
      i.onBand = o && t.get("boundaryGap"), i.inverse = t.get("inverse"), i.orient = t.get("orient"), t.axis = i, i.model = t, i.coordinateSystem = this, this._axis = i;
    }, r.prototype.update = function(t, e) {
      t.eachSeries(function(a) {
        if (a.coordinateSystem === this) {
          var n = a.getData();
          w(n.mapDimensionsAll(this.dimension), function(i) {
            this._axis.scale.unionExtentFromData(n, i);
          }, this), Ln(this._axis.scale, this._axis.model);
        }
      }, this);
    }, r.prototype.resize = function(t, e) {
      this._rect = qe({
        left: t.get("left"),
        top: t.get("top"),
        right: t.get("right"),
        bottom: t.get("bottom"),
        width: t.get("width"),
        height: t.get("height")
      }, {
        width: e.getWidth(),
        height: e.getHeight()
      }), this._adjustAxis();
    }, r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype._adjustAxis = function() {
      var t = this._rect, e = this._axis, a = e.isHorizontal(), n = a ? [0, t.width] : [0, t.height], i = e.inverse ? 1 : 0;
      e.setExtent(n[i], n[1 - i]), this._updateAxisTransform(e, a ? t.x : t.y);
    }, r.prototype._updateAxisTransform = function(t, e) {
      var a = t.getExtent(), n = a[0] + a[1], i = t.isHorizontal();
      t.toGlobalCoord = i ? function(o) {
        return o + e;
      } : function(o) {
        return n - o + e;
      }, t.toLocalCoord = i ? function(o) {
        return o - e;
      } : function(o) {
        return n - o + e;
      };
    }, r.prototype.getAxis = function() {
      return this._axis;
    }, r.prototype.getBaseAxis = function() {
      return this._axis;
    }, r.prototype.getAxes = function() {
      return [this._axis];
    }, r.prototype.getTooltipAxes = function() {
      return {
        baseAxes: [this.getAxis()],
        // Empty otherAxes
        otherAxes: []
      };
    }, r.prototype.containPoint = function(t) {
      var e = this.getRect(), a = this.getAxis(), n = a.orient;
      return n === "horizontal" ? a.contain(a.toLocalCoord(t[0])) && t[1] >= e.y && t[1] <= e.y + e.height : a.contain(a.toLocalCoord(t[1])) && t[0] >= e.y && t[0] <= e.y + e.height;
    }, r.prototype.pointToData = function(t) {
      var e = this.getAxis();
      return [e.coordToData(e.toLocalCoord(t[e.orient === "horizontal" ? 0 : 1]))];
    }, r.prototype.dataToPoint = function(t) {
      var e = this.getAxis(), a = this.getRect(), n = [], i = e.orient === "horizontal" ? 0 : 1;
      return t instanceof Array && (t = t[0]), n[i] = e.toGlobalCoord(e.dataToCoord(+t)), n[1 - i] = i === 0 ? a.y + a.height / 2 : a.x + a.width / 2, n;
    }, r.prototype.convertToPixel = function(t, e, a) {
      var n = fm(e);
      return n === this ? this.dataToPoint(a) : null;
    }, r.prototype.convertFromPixel = function(t, e, a) {
      var n = fm(e);
      return n === this ? this.pointToData(a) : null;
    }, r;
  }()
);
function fm(r) {
  var t = r.seriesModel, e = r.singleAxisModel;
  return e && e.coordinateSystem || t && t.coordinateSystem;
}
function _V(r, t) {
  var e = [];
  return r.eachComponent("singleAxis", function(a, n) {
    var i = new mV(a, r, t);
    i.name = "single_" + n, i.resize(a, t), a.coordinateSystem = i, e.push(i);
  }), r.eachSeries(function(a) {
    if (a.get("coordinateSystem") === "singleAxis") {
      var n = a.getReferringComponents("singleAxis", Ye).models[0];
      a.coordinateSystem = n && n.coordinateSystem;
    }
  }), e;
}
var SV = {
  create: _V,
  dimensions: Pb
}, hm = ["x", "y"], xV = ["width", "height"], bV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.makeElOption = function(e, a, n, i, o) {
      var s = n.axis, l = s.coordinateSystem, u = Ac(l, 1 - vl(s)), c = l.dataToPoint(a)[0], v = i.get("type");
      if (v && v !== "none") {
        var f = Lh(i), h = wV[v](s, c, u);
        h.style = f, e.graphicKey = h.type, e.pointer = h;
      }
      var p = Hv(n);
      Ab(
        // @ts-ignore
        a,
        e,
        p,
        n,
        i,
        o
      );
    }, t.prototype.getHandleTransform = function(e, a, n) {
      var i = Hv(a, {
        labelInside: !1
      });
      i.labelMargin = n.get(["handle", "margin"]);
      var o = Eh(a.axis, e, i);
      return {
        x: o[0],
        y: o[1],
        rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
      };
    }, t.prototype.updateHandleTransform = function(e, a, n, i) {
      var o = n.axis, s = o.coordinateSystem, l = vl(o), u = Ac(s, l), c = [e.x, e.y];
      c[l] += a[l], c[l] = Math.min(u[1], c[l]), c[l] = Math.max(u[0], c[l]);
      var v = Ac(s, 1 - l), f = (v[1] + v[0]) / 2, h = [f, f];
      return h[l] = c[l], {
        x: c[0],
        y: c[1],
        rotation: e.rotation,
        cursorPoint: h,
        tooltipOption: {
          verticalAlign: "middle"
        }
      };
    }, t;
  }(Ih)
), wV = {
  line: function(r, t, e) {
    var a = Ph([t, e[0]], [t, e[1]], vl(r));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: a
    };
  },
  shadow: function(r, t, e) {
    var a = r.getBandWidth(), n = e[1] - e[0];
    return {
      type: "Rect",
      shape: Tb([t - a / 2, e[0]], [a, n], vl(r))
    };
  }
};
function vl(r) {
  return r.isHorizontal() ? 0 : 1;
}
function Ac(r, t) {
  var e = r.getRect();
  return [e[hm[t]], e[hm[t]] + e[xV[t]]];
}
var DV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "single", t;
  }(Re)
);
function AV(r) {
  oe(Mo), Xa.registerAxisPointerClass("SingleAxisPointer", bV), r.registerComponentView(DV), r.registerComponentView(dV), r.registerComponentModel(Cs), Pn(r, "single", Cs, Cs.defaultOption), r.registerCoordinateSystem("single", SV);
}
var TV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e, a, n) {
      var i = Zn(e);
      r.prototype.init.apply(this, arguments), pm(e, i);
    }, t.prototype.mergeOption = function(e) {
      r.prototype.mergeOption.apply(this, arguments), pm(this.option, e);
    }, t.prototype.getCellSize = function() {
      return this.option.cellSize;
    }, t.type = "calendar", t.defaultOption = {
      // zlevel: 0,
      z: 2,
      left: 80,
      top: 60,
      cellSize: 20,
      // horizontal vertical
      orient: "horizontal",
      // month separate line style
      splitLine: {
        show: !0,
        lineStyle: {
          color: "#000",
          width: 1,
          type: "solid"
        }
      },
      // rect style  temporarily unused emphasis
      itemStyle: {
        color: "#fff",
        borderWidth: 1,
        borderColor: "#ccc"
      },
      // week text style
      dayLabel: {
        show: !0,
        firstDay: 0,
        // start end
        position: "start",
        margin: "50%",
        color: "#000"
      },
      // month text style
      monthLabel: {
        show: !0,
        // start end
        position: "start",
        margin: 5,
        // center or left
        align: "center",
        formatter: null,
        color: "#000"
      },
      // year text style
      yearLabel: {
        show: !0,
        // top bottom left right
        position: null,
        margin: 30,
        formatter: null,
        color: "#ccc",
        fontFamily: "sans-serif",
        fontWeight: "bolder",
        fontSize: 20
      }
    }, t;
  }(se)
);
function pm(r, t) {
  var e = r.cellSize, a;
  B(e) ? a = e : a = r.cellSize = [e, e], a.length === 1 && (a[1] = a[0]);
  var n = G([0, 1], function(i) {
    return LA(t, i) && (a[i] = "auto"), a[i] != null && a[i] !== "auto";
  });
  ea(r, t, {
    type: "box",
    ignoreSize: n
  });
}
var CV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      var i = this.group;
      i.removeAll();
      var o = e.coordinateSystem, s = o.getRangeInfo(), l = o.getOrient(), u = a.getLocaleModel();
      this._renderDayRect(e, s, i), this._renderLines(e, s, l, i), this._renderYearText(e, s, l, i), this._renderMonthText(e, u, l, i), this._renderWeekText(e, u, s, l, i);
    }, t.prototype._renderDayRect = function(e, a, n) {
      for (var i = e.coordinateSystem, o = e.getModel("itemStyle").getItemStyle(), s = i.getCellWidth(), l = i.getCellHeight(), u = a.start.time; u <= a.end.time; u = i.getNextNDay(u, 1).time) {
        var c = i.dataToRect([u], !1).tl, v = new de({
          shape: {
            x: c[0],
            y: c[1],
            width: s,
            height: l
          },
          cursor: "default",
          style: o
        });
        n.add(v);
      }
    }, t.prototype._renderLines = function(e, a, n, i) {
      var o = this, s = e.coordinateSystem, l = e.getModel(["splitLine", "lineStyle"]).getLineStyle(), u = e.get(["splitLine", "show"]), c = l.lineWidth;
      this._tlpoints = [], this._blpoints = [], this._firstDayOfMonth = [], this._firstDayPoints = [];
      for (var v = a.start, f = 0; v.time <= a.end.time; f++) {
        p(v.formatedDate), f === 0 && (v = s.getDateInfo(a.start.y + "-" + a.start.m));
        var h = v.date;
        h.setMonth(h.getMonth() + 1), v = s.getDateInfo(h);
      }
      p(s.getNextNDay(a.end.time, 1).formatedDate);
      function p(d) {
        o._firstDayOfMonth.push(s.getDateInfo(d)), o._firstDayPoints.push(s.dataToRect([d], !1).tl);
        var g = o._getLinePointsOfOneWeek(e, d, n);
        o._tlpoints.push(g[0]), o._blpoints.push(g[g.length - 1]), u && o._drawSplitline(g, l, i);
      }
      u && this._drawSplitline(o._getEdgesPoints(o._tlpoints, c, n), l, i), u && this._drawSplitline(o._getEdgesPoints(o._blpoints, c, n), l, i);
    }, t.prototype._getEdgesPoints = function(e, a, n) {
      var i = [e[0].slice(), e[e.length - 1].slice()], o = n === "horizontal" ? 0 : 1;
      return i[0][o] = i[0][o] - a / 2, i[1][o] = i[1][o] + a / 2, i;
    }, t.prototype._drawSplitline = function(e, a, n) {
      var i = new Ct({
        z2: 20,
        shape: {
          points: e
        },
        style: a
      });
      n.add(i);
    }, t.prototype._getLinePointsOfOneWeek = function(e, a, n) {
      for (var i = e.coordinateSystem, o = i.getDateInfo(a), s = [], l = 0; l < 7; l++) {
        var u = i.getNextNDay(o.time, l), c = i.dataToRect([u.time], !1);
        s[2 * u.day] = c.tl, s[2 * u.day + 1] = c[n === "horizontal" ? "bl" : "tr"];
      }
      return s;
    }, t.prototype._formatterLabel = function(e, a) {
      return Y(e) && e ? CA(e, a) : X(e) ? e(a) : a.nameMap;
    }, t.prototype._yearTextPositionControl = function(e, a, n, i, o) {
      var s = a[0], l = a[1], u = ["center", "bottom"];
      i === "bottom" ? (l += o, u = ["center", "top"]) : i === "left" ? s -= o : i === "right" ? (s += o, u = ["center", "top"]) : l -= o;
      var c = 0;
      return (i === "left" || i === "right") && (c = Math.PI / 2), {
        rotation: c,
        x: s,
        y: l,
        style: {
          align: u[0],
          verticalAlign: u[1]
        }
      };
    }, t.prototype._renderYearText = function(e, a, n, i) {
      var o = e.getModel("yearLabel");
      if (o.get("show")) {
        var s = o.get("margin"), l = o.get("position");
        l || (l = n !== "horizontal" ? "top" : "left");
        var u = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]], c = (u[0][0] + u[1][0]) / 2, v = (u[0][1] + u[1][1]) / 2, f = n === "horizontal" ? 0 : 1, h = {
          top: [c, u[f][1]],
          bottom: [c, u[1 - f][1]],
          left: [u[1 - f][0], v],
          right: [u[f][0], v]
        }, p = a.start.y;
        +a.end.y > +a.start.y && (p = p + "-" + a.end.y);
        var d = o.get("formatter"), g = {
          start: a.start.y,
          end: a.end.y,
          nameMap: p
        }, y = this._formatterLabel(d, g), m = new ve({
          z2: 30,
          style: Ie(o, {
            text: y
          })
        });
        m.attr(this._yearTextPositionControl(m, h[l], n, l, s)), i.add(m);
      }
    }, t.prototype._monthTextPositionControl = function(e, a, n, i, o) {
      var s = "left", l = "top", u = e[0], c = e[1];
      return n === "horizontal" ? (c = c + o, a && (s = "center"), i === "start" && (l = "bottom")) : (u = u + o, a && (l = "middle"), i === "start" && (s = "right")), {
        x: u,
        y: c,
        align: s,
        verticalAlign: l
      };
    }, t.prototype._renderMonthText = function(e, a, n, i) {
      var o = e.getModel("monthLabel");
      if (o.get("show")) {
        var s = o.get("nameMap"), l = o.get("margin"), u = o.get("position"), c = o.get("align"), v = [this._tlpoints, this._blpoints];
        (!s || Y(s)) && (s && (a = tv(s) || a), s = a.get(["time", "monthAbbr"]) || []);
        var f = u === "start" ? 0 : 1, h = n === "horizontal" ? 0 : 1;
        l = u === "start" ? -l : l;
        for (var p = c === "center", d = 0; d < v[f].length - 1; d++) {
          var g = v[f][d].slice(), y = this._firstDayOfMonth[d];
          if (p) {
            var m = this._firstDayPoints[d];
            g[h] = (m[h] + v[0][d + 1][h]) / 2;
          }
          var _ = o.get("formatter"), S = s[+y.m - 1], x = {
            yyyy: y.y,
            yy: (y.y + "").slice(2),
            MM: y.m,
            M: +y.m,
            nameMap: S
          }, b = this._formatterLabel(_, x), D = new ve({
            z2: 30,
            style: z(Ie(o, {
              text: b
            }), this._monthTextPositionControl(g, p, n, u, l))
          });
          i.add(D);
        }
      }
    }, t.prototype._weekTextPositionControl = function(e, a, n, i, o) {
      var s = "center", l = "middle", u = e[0], c = e[1], v = n === "start";
      return a === "horizontal" ? (u = u + i + (v ? 1 : -1) * o[0] / 2, s = v ? "right" : "left") : (c = c + i + (v ? 1 : -1) * o[1] / 2, l = v ? "bottom" : "top"), {
        x: u,
        y: c,
        align: s,
        verticalAlign: l
      };
    }, t.prototype._renderWeekText = function(e, a, n, i, o) {
      var s = e.getModel("dayLabel");
      if (s.get("show")) {
        var l = e.coordinateSystem, u = s.get("position"), c = s.get("nameMap"), v = s.get("margin"), f = l.getFirstDayOfWeek();
        if (!c || Y(c)) {
          c && (a = tv(c) || a);
          var h = a.get(["time", "dayOfWeekShort"]);
          c = h || G(a.get(["time", "dayOfWeekAbbr"]), function(x) {
            return x[0];
          });
        }
        var p = l.getNextNDay(n.end.time, 7 - n.lweek).time, d = [l.getCellWidth(), l.getCellHeight()];
        v = H(v, Math.min(d[1], d[0])), u === "start" && (p = l.getNextNDay(n.start.time, -(7 + n.fweek)).time, v = -v);
        for (var g = 0; g < 7; g++) {
          var y = l.getNextNDay(p, g), m = l.dataToRect([y.time], !1).center, _ = g;
          _ = Math.abs((g + f) % 7);
          var S = new ve({
            z2: 30,
            style: z(Ie(s, {
              text: c[_]
            }), this._weekTextPositionControl(m, i, u, v, d))
          });
          o.add(S);
        }
      }
    }, t.type = "calendar", t;
  }(Re)
), MV = { env: {} }, Tc = 864e5, IV = (
  /** @class */
  function() {
    function r(t, e, a) {
      this.type = "calendar", this.dimensions = r.dimensions, this.getDimensionsInfo = r.getDimensionsInfo, this._model = t;
    }
    return r.getDimensionsInfo = function() {
      return [{
        name: "time",
        type: "time"
      }, "value"];
    }, r.prototype.getRangeInfo = function() {
      return this._rangeInfo;
    }, r.prototype.getModel = function() {
      return this._model;
    }, r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype.getCellWidth = function() {
      return this._sw;
    }, r.prototype.getCellHeight = function() {
      return this._sh;
    }, r.prototype.getOrient = function() {
      return this._orient;
    }, r.prototype.getFirstDayOfWeek = function() {
      return this._firstDayOfWeek;
    }, r.prototype.getDateInfo = function(t) {
      t = vr(t);
      var e = t.getFullYear(), a = t.getMonth() + 1, n = a < 10 ? "0" + a : "" + a, i = t.getDate(), o = i < 10 ? "0" + i : "" + i, s = t.getDay();
      return s = Math.abs((s + 7 - this.getFirstDayOfWeek()) % 7), {
        y: e + "",
        m: n,
        d: o,
        day: s,
        time: t.getTime(),
        formatedDate: e + "-" + n + "-" + o,
        date: t
      };
    }, r.prototype.getNextNDay = function(t, e) {
      return e = e || 0, e === 0 ? this.getDateInfo(t) : (t = new Date(this.getDateInfo(t).time), t.setDate(t.getDate() + e), this.getDateInfo(t));
    }, r.prototype.update = function(t, e) {
      this._firstDayOfWeek = +this._model.getModel("dayLabel").get("firstDay"), this._orient = this._model.get("orient"), this._lineWidth = this._model.getModel("itemStyle").getItemStyle().lineWidth || 0, this._rangeInfo = this._getRangeInfo(this._initRangeOption());
      var a = this._rangeInfo.weeks || 1, n = ["width", "height"], i = this._model.getCellSize().slice(), o = this._model.getBoxLayoutParams(), s = this._orient === "horizontal" ? [a, 7] : [7, a];
      w([0, 1], function(v) {
        c(i, v) && (o[n[v]] = i[v] * s[v]);
      });
      var l = {
        width: e.getWidth(),
        height: e.getHeight()
      }, u = this._rect = qe(o, l);
      w([0, 1], function(v) {
        c(i, v) || (i[v] = u[n[v]] / s[v]);
      });
      function c(v, f) {
        return v[f] != null && v[f] !== "auto";
      }
      this._sw = i[0], this._sh = i[1];
    }, r.prototype.dataToPoint = function(t, e) {
      B(t) && (t = t[0]), e == null && (e = !0);
      var a = this.getDateInfo(t), n = this._rangeInfo, i = a.formatedDate;
      if (e && !(a.time >= n.start.time && a.time < n.end.time + Tc))
        return [NaN, NaN];
      var o = a.day, s = this._getRangeInfo([n.start.time, i]).nthWeek;
      return this._orient === "vertical" ? [this._rect.x + o * this._sw + this._sw / 2, this._rect.y + s * this._sh + this._sh / 2] : [this._rect.x + s * this._sw + this._sw / 2, this._rect.y + o * this._sh + this._sh / 2];
    }, r.prototype.pointToData = function(t) {
      var e = this.pointToDate(t);
      return e && e.time;
    }, r.prototype.dataToRect = function(t, e) {
      var a = this.dataToPoint(t, e);
      return {
        contentShape: {
          x: a[0] - (this._sw - this._lineWidth) / 2,
          y: a[1] - (this._sh - this._lineWidth) / 2,
          width: this._sw - this._lineWidth,
          height: this._sh - this._lineWidth
        },
        center: a,
        tl: [a[0] - this._sw / 2, a[1] - this._sh / 2],
        tr: [a[0] + this._sw / 2, a[1] - this._sh / 2],
        br: [a[0] + this._sw / 2, a[1] + this._sh / 2],
        bl: [a[0] - this._sw / 2, a[1] + this._sh / 2]
      };
    }, r.prototype.pointToDate = function(t) {
      var e = Math.floor((t[0] - this._rect.x) / this._sw) + 1, a = Math.floor((t[1] - this._rect.y) / this._sh) + 1, n = this._rangeInfo.range;
      return this._orient === "vertical" ? this._getDateByWeeksAndDay(a, e - 1, n) : this._getDateByWeeksAndDay(e, a - 1, n);
    }, r.prototype.convertToPixel = function(t, e, a) {
      var n = dm(e);
      return n === this ? n.dataToPoint(a) : null;
    }, r.prototype.convertFromPixel = function(t, e, a) {
      var n = dm(e);
      return n === this ? n.pointToData(a) : null;
    }, r.prototype.containPoint = function(t) {
      return console.warn("Not implemented."), !1;
    }, r.prototype._initRangeOption = function() {
      var t = this._model.get("range"), e;
      if (B(t) && t.length === 1 && (t = t[0]), B(t))
        e = t;
      else {
        var a = t.toString();
        if (/^\d{4}$/.test(a) && (e = [a + "-01-01", a + "-12-31"]), /^\d{4}[\/|-]\d{1,2}$/.test(a)) {
          var n = this.getDateInfo(a), i = n.date;
          i.setMonth(i.getMonth() + 1);
          var o = this.getNextNDay(i, -1);
          e = [n.formatedDate, o.formatedDate];
        }
        /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(a) && (e = [a, a]);
      }
      if (!e)
        return MV.env.NODE_ENV !== "production" && Z0("Invalid date range."), t;
      var s = this._getRangeInfo(e);
      return s.start.time > s.end.time && e.reverse(), e;
    }, r.prototype._getRangeInfo = function(t) {
      var e = [this.getDateInfo(t[0]), this.getDateInfo(t[1])], a;
      e[0].time > e[1].time && (a = !0, e.reverse());
      var n = Math.floor(e[1].time / Tc) - Math.floor(e[0].time / Tc) + 1, i = new Date(e[0].time), o = i.getDate(), s = e[1].date.getDate();
      i.setDate(o + n - 1);
      var l = i.getDate();
      if (l !== s)
        for (var u = i.getTime() - e[1].time > 0 ? 1 : -1; (l = i.getDate()) !== s && (i.getTime() - e[1].time) * u > 0; )
          n -= u, i.setDate(l - u);
      var c = Math.floor((n + e[0].day + 6) / 7), v = a ? -c + 1 : c - 1;
      return a && e.reverse(), {
        range: [e[0].formatedDate, e[1].formatedDate],
        start: e[0],
        end: e[1],
        allDay: n,
        weeks: c,
        // From 0.
        nthWeek: v,
        fweek: e[0].day,
        lweek: e[1].day
      };
    }, r.prototype._getDateByWeeksAndDay = function(t, e, a) {
      var n = this._getRangeInfo(a);
      if (t > n.weeks || t === 0 && e < n.fweek || t === n.weeks && e > n.lweek)
        return null;
      var i = (t - 1) * 7 - n.fweek + e, o = new Date(n.start.time);
      return o.setDate(+n.start.d + i), this.getDateInfo(o);
    }, r.create = function(t, e) {
      var a = [];
      return t.eachComponent("calendar", function(n) {
        var i = new r(n);
        a.push(i), n.coordinateSystem = i;
      }), t.eachSeries(function(n) {
        n.get("coordinateSystem") === "calendar" && (n.coordinateSystem = a[n.get("calendarIndex") || 0]);
      }), a;
    }, r.dimensions = ["time", "value"], r;
  }()
);
function dm(r) {
  var t = r.calendarModel, e = r.seriesModel, a = t ? t.coordinateSystem : e ? e.coordinateSystem : null;
  return a;
}
function LV(r) {
  r.registerComponentModel(TV), r.registerComponentView(CV), r.registerCoordinateSystem("calendar", IV);
}
var Nb = { env: {} };
function EV(r, t) {
  var e = r.existing;
  if (t.id = r.keyInfo.id, !t.type && e && (t.type = e.type), t.parentId == null) {
    var a = t.parentOption;
    a ? t.parentId = a.id : e && (t.parentId = e.parentId);
  }
  t.parentOption = null;
}
function gm(r, t) {
  var e;
  return w(t, function(a) {
    r[a] != null && r[a] !== "auto" && (e = !0);
  }), e;
}
function PV(r, t, e) {
  var a = z({}, e), n = r[t], i = e.$action || "merge";
  if (i === "merge")
    if (n) {
      if (Nb.env.NODE_ENV !== "production") {
        var o = e.type;
        K(!o || n.type === o, 'Please set $action: "replace" to change `type`');
      }
      le(n, a, !0), ea(n, a, {
        ignoreSize: !0
      }), H_(e, n), ls(e, n), ls(e, n, "shape"), ls(e, n, "style"), ls(e, n, "extra"), e.clipPath = n.clipPath;
    } else
      r[t] = a;
  else i === "replace" ? r[t] = a : i === "remove" && n && (r[t] = null);
}
var Rb = ["transition", "enterFrom", "leaveTo"], NV = Rb.concat(["enterAnimation", "updateAnimation", "leaveAnimation"]);
function ls(r, t, e) {
  if (e && (!r[e] && t[e] && (r[e] = {}), r = r[e], t = t[e]), !(!r || !t))
    for (var a = e ? Rb : NV, n = 0; n < a.length; n++) {
      var i = a[n];
      r[i] == null && t[i] != null && (r[i] = t[i]);
    }
}
function RV(r, t) {
  if (r && (r.hv = t.hv = [
    // Rigid body, don't care about `width`.
    gm(t, ["left", "right"]),
    // Rigid body, don't care about `height`.
    gm(t, ["top", "bottom"])
  ], r.type === "group")) {
    var e = r, a = t;
    e.width == null && (e.width = a.width = 0), e.height == null && (e.height = a.height = 0);
  }
}
var kV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.preventAutoZ = !0, e;
    }
    return t.prototype.mergeOption = function(e, a) {
      var n = this.option.elements;
      this.option.elements = null, r.prototype.mergeOption.call(this, e, a), this.option.elements = n;
    }, t.prototype.optionUpdated = function(e, a) {
      var n = this.option, i = (a ? n : e).elements, o = n.elements = a ? [] : n.elements, s = [];
      this._flatten(i, s, null);
      var l = r_(o, s, "normalMerge"), u = this._elOptionsToUpdate = [];
      w(l, function(c, v) {
        var f = c.newOption;
        Nb.env.NODE_ENV !== "production" && K(J(f) || c.existing, "Empty graphic option definition"), f && (u.push(f), EV(c, f), PV(o, v, f), RV(o[v], f));
      }, this), n.elements = Ae(o, function(c) {
        return c && delete c.$action, c != null;
      });
    }, t.prototype._flatten = function(e, a, n) {
      w(e, function(i) {
        if (i) {
          n && (i.parentOption = n), a.push(i);
          var o = i.children;
          o && o.length && this._flatten(o, a, i), delete i.children;
        }
      }, this);
    }, t.prototype.useElOptionsToUpdate = function() {
      var e = this._elOptionsToUpdate;
      return this._elOptionsToUpdate = null, e;
    }, t.type = "graphic", t.defaultOption = {
      elements: []
      // parentId: null
    }, t;
  }(se)
), Wv = { env: {} }, ym = {
  // Reserved but not supported in graphic component.
  path: null,
  compoundPath: null,
  // Supported in graphic component.
  group: re,
  image: Ut,
  text: ve
}, kt = ue(), OV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function() {
      this._elMap = Z();
    }, t.prototype.render = function(e, a, n) {
      e !== this._lastGraphicModel && this._clear(), this._lastGraphicModel = e, this._updateElements(e), this._relocate(e, n);
    }, t.prototype._updateElements = function(e) {
      var a = e.useElOptionsToUpdate();
      if (a) {
        var n = this._elMap, i = this.group, o = e.get("z"), s = e.get("zlevel");
        w(a, function(l) {
          var u = Ke(l.id, null), c = u != null ? n.get(u) : null, v = Ke(l.parentId, null), f = v != null ? n.get(v) : i, h = l.type, p = l.style;
          h === "text" && p && l.hv && l.hv[1] && (p.textVerticalAlign = p.textBaseline = p.verticalAlign = p.align = null);
          var d = l.textContent, g = l.textConfig;
          if (p && fb(p, h, !!g, !!d)) {
            var y = hb(p, h, !0);
            !g && y.textConfig && (g = l.textConfig = y.textConfig), !d && y.textContent && (d = y.textContent);
          }
          var m = VV(l);
          Wv.env.NODE_ENV !== "production" && c && K(f === c.parent, "Changing parent is not supported.");
          var _ = l.$action || "merge", S = _ === "merge", x = _ === "replace";
          if (S) {
            var b = !c, D = c;
            b ? D = mm(u, f, l.type, n) : (D && (kt(D).isNew = !1), mb(D)), D && (As(D, m, e, {
              isInit: b
            }), _m(D, l, o, s));
          } else if (x) {
            Ms(c, l, n, e);
            var A = mm(u, f, l.type, n);
            A && (As(A, m, e, {
              isInit: !0
            }), _m(A, l, o, s));
          } else _ === "remove" && (db(c, l), Ms(c, l, n, e));
          var T = n.get(u);
          if (T && d)
            if (S) {
              var C = T.getTextContent();
              C ? C.attr(d) : T.setTextContent(new ve(d));
            } else x && T.setTextContent(new ve(d));
          if (T) {
            var M = l.clipPath;
            if (M) {
              var I = M.type, L = void 0, b = !1;
              if (S) {
                var P = T.getClipPath();
                b = !P || kt(P).type !== I, L = b ? Uv(I) : P;
              } else x && (b = !0, L = Uv(I));
              T.setClipPath(L), As(L, M, e, {
                isInit: b
              }), ll(L, M.keyframeAnimation, e);
            }
            var E = kt(T);
            T.setTextConfig(g), E.option = l, BV(T, e, l), Wn({
              el: T,
              componentModel: e,
              itemName: T.name,
              itemTooltipOption: l.tooltip
            }), ll(T, l.keyframeAnimation, e);
          }
        });
      }
    }, t.prototype._relocate = function(e, a) {
      for (var n = e.option.elements, i = this.group, o = this._elMap, s = a.getWidth(), l = a.getHeight(), u = ["x", "y"], c = 0; c < n.length; c++) {
        var v = n[c], f = Ke(v.id, null), h = f != null ? o.get(f) : null;
        if (!(!h || !h.isGroup)) {
          var p = h.parent, d = p === i, g = kt(h), y = kt(p);
          g.width = H(g.option.width, d ? s : y.width) || 0, g.height = H(g.option.height, d ? l : y.height) || 0;
        }
      }
      for (var c = n.length - 1; c >= 0; c--) {
        var v = n[c], f = Ke(v.id, null), h = f != null ? o.get(f) : null;
        if (h) {
          var p = h.parent, y = kt(p), m = p === i ? {
            width: s,
            height: l
          } : {
            width: y.width,
            height: y.height
          }, _ = {}, S = Rl(h, v, m, null, {
            hv: v.hv,
            boundingMode: v.bounding
          }, _);
          if (!kt(h).isNew && S) {
            for (var x = v.transition, b = {}, D = 0; D < u.length; D++) {
              var A = u[D], T = _[A];
              x && (Na(x) || fe(x, A) >= 0) ? b[A] = T : h[A] = T;
            }
            pe(h, b, e, 0);
          } else
            h.attr(_);
        }
      }
    }, t.prototype._clear = function() {
      var e = this, a = this._elMap;
      a.each(function(n) {
        Ms(n, kt(n).option, a, e._lastGraphicModel);
      }), this._elMap = Z();
    }, t.prototype.dispose = function() {
      this._clear();
    }, t.type = "graphic", t;
  }(Re)
);
function Uv(r) {
  Wv.env.NODE_ENV !== "production" && K(r, "graphic type MUST be set");
  var t = $(ym, r) ? ym[r] : Sf(r);
  Wv.env.NODE_ENV !== "production" && K(t, "graphic type " + r + " can not be found");
  var e = new t({});
  return kt(e).type = r, e;
}
function mm(r, t, e, a) {
  var n = Uv(e);
  return t.add(n), a.set(r, n), kt(n).id = r, kt(n).isNew = !0, n;
}
function Ms(r, t, e, a) {
  var n = r && r.parent;
  n && (r.type === "group" && r.traverse(function(i) {
    Ms(i, t, e, a);
  }), Xl(r, t, a), e.removeKey(kt(r).id));
}
function _m(r, t, e, a) {
  r.isGroup || w([
    ["cursor", Ra.prototype.cursor],
    // We should not support configure z and zlevel in the element level.
    // But seems we didn't limit it previously. So here still use it to avoid breaking.
    ["zlevel", a || 0],
    ["z", e || 0],
    // z2 must not be null/undefined, otherwise sort error may occur.
    ["z2", 0]
  ], function(n) {
    var i = n[0];
    $(t, i) ? r[i] = ce(t[i], n[1]) : r[i] == null && (r[i] = n[1]);
  }), w(Fe(t), function(n) {
    if (n.indexOf("on") === 0) {
      var i = t[n];
      r[n] = X(i) ? i : null;
    }
  }), $(t, "draggable") && (r.draggable = t.draggable), t.name != null && (r.name = t.name), t.id != null && (r.id = t.id);
}
function VV(r) {
  return r = z({}, r), w(["id", "parentId", "$action", "hv", "bounding", "textContent", "clipPath"].concat(F_), function(t) {
    delete r[t];
  }), r;
}
function BV(r, t, e) {
  var a = j(r).eventData;
  !r.silent && !r.ignore && !a && (a = j(r).eventData = {
    componentType: "graphic",
    componentIndex: t.componentIndex,
    name: r.name
  }), a && (a.info = e.info);
}
function zV(r) {
  r.registerComponentModel(kV), r.registerComponentView(OV), r.registerPreprocessor(function(t) {
    var e = t.graphic;
    B(e) ? !e[0] || !e[0].elements ? t.graphic = [{
      elements: e
    }] : t.graphic = [t.graphic[0]] : e && !e.elements && (t.graphic = [{
      elements: [e]
    }]);
  });
}
var GV = { env: {} }, Sm = ["x", "y", "radius", "angle", "single"], FV = ["cartesian2d", "polar", "singleAxis"];
function HV(r) {
  var t = r.get("coordinateSystem");
  return fe(FV, t) >= 0;
}
function Ur(r) {
  return GV.env.NODE_ENV !== "production" && K(r), r + "Axis";
}
function WV(r, t) {
  var e = Z(), a = [], n = Z();
  r.eachComponent({
    mainType: "dataZoom",
    query: t
  }, function(c) {
    n.get(c.uid) || s(c);
  });
  var i;
  do
    i = !1, r.eachComponent("dataZoom", o);
  while (i);
  function o(c) {
    !n.get(c.uid) && l(c) && (s(c), i = !0);
  }
  function s(c) {
    n.set(c.uid, !0), a.push(c), u(c);
  }
  function l(c) {
    var v = !1;
    return c.eachTargetAxis(function(f, h) {
      var p = e.get(f);
      p && p[h] && (v = !0);
    }), v;
  }
  function u(c) {
    c.eachTargetAxis(function(v, f) {
      (e.get(v) || e.set(v, []))[f] = !0;
    });
  }
  return a;
}
function kb(r) {
  var t = r.ecModel, e = {
    infoList: [],
    infoMap: Z()
  };
  return r.eachTargetAxis(function(a, n) {
    var i = t.getComponent(Ur(a), n);
    if (i) {
      var o = i.getCoordSysModel();
      if (o) {
        var s = o.uid, l = e.infoMap.get(s);
        l || (l = {
          model: o,
          axisModels: []
        }, e.infoList.push(l), e.infoMap.set(s, l)), l.axisModels.push(i);
      }
    }
  }), e;
}
var xm = { env: {} }, Cc = (
  /** @class */
  function() {
    function r() {
      this.indexList = [], this.indexMap = [];
    }
    return r.prototype.add = function(t) {
      this.indexMap[t] || (this.indexList.push(t), this.indexMap[t] = !0);
    }, r;
  }()
), io = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._autoThrottle = !0, e._noTarget = !0, e._rangePropMode = ["percent", "percent"], e;
    }
    return t.prototype.init = function(e, a, n) {
      var i = bm(e);
      this.settledOption = i, this.mergeDefaultAndTheme(e, n), this._doInit(i);
    }, t.prototype.mergeOption = function(e) {
      var a = bm(e);
      le(this.option, e, !0), le(this.settledOption, a, !0), this._doInit(a);
    }, t.prototype._doInit = function(e) {
      var a = this.option;
      this._setDefaultThrottle(e), this._updateRangeUse(e);
      var n = this.settledOption;
      w([["start", "startValue"], ["end", "endValue"]], function(i, o) {
        this._rangePropMode[o] === "value" && (a[i[0]] = n[i[0]] = null);
      }, this), this._resetTarget();
    }, t.prototype._resetTarget = function() {
      var e = this.get("orient", !0), a = this._targetAxisInfoMap = Z(), n = this._fillSpecifiedTargetAxis(a);
      n ? this._orient = e || this._makeAutoOrientByTargetAxis() : (this._orient = e || "horizontal", this._fillAutoTargetAxisByOrient(a, this._orient)), this._noTarget = !0, a.each(function(i) {
        i.indexList.length && (this._noTarget = !1);
      }, this);
    }, t.prototype._fillSpecifiedTargetAxis = function(e) {
      var a = !1;
      return w(Sm, function(n) {
        var i = this.getReferringComponents(Ur(n), bD);
        if (i.specified) {
          a = !0;
          var o = new Cc();
          w(i.models, function(s) {
            o.add(s.componentIndex);
          }), e.set(n, o);
        }
      }, this), a;
    }, t.prototype._fillAutoTargetAxisByOrient = function(e, a) {
      var n = this.ecModel, i = !0;
      if (i) {
        var o = a === "vertical" ? "y" : "x", s = n.findComponents({
          mainType: o + "Axis"
        });
        l(s, o);
      }
      if (i) {
        var s = n.findComponents({
          mainType: "singleAxis",
          filter: function(c) {
            return c.get("orient", !0) === a;
          }
        });
        l(s, "single");
      }
      function l(u, c) {
        var v = u[0];
        if (v) {
          var f = new Cc();
          if (f.add(v.componentIndex), e.set(c, f), i = !1, c === "x" || c === "y") {
            var h = v.getReferringComponents("grid", Ye).models[0];
            h && w(u, function(p) {
              v.componentIndex !== p.componentIndex && h === p.getReferringComponents("grid", Ye).models[0] && f.add(p.componentIndex);
            });
          }
        }
      }
      i && w(Sm, function(u) {
        if (i) {
          var c = n.findComponents({
            mainType: Ur(u),
            filter: function(f) {
              return f.get("type", !0) === "category";
            }
          });
          if (c[0]) {
            var v = new Cc();
            v.add(c[0].componentIndex), e.set(u, v), i = !1;
          }
        }
      }, this);
    }, t.prototype._makeAutoOrientByTargetAxis = function() {
      var e;
      return this.eachTargetAxis(function(a) {
        !e && (e = a);
      }, this), e === "y" ? "vertical" : "horizontal";
    }, t.prototype._setDefaultThrottle = function(e) {
      if (e.hasOwnProperty("throttle") && (this._autoThrottle = !1), this._autoThrottle) {
        var a = this.ecModel.option;
        this.option.throttle = a.animation && a.animationDurationUpdate > 0 ? 100 : 20;
      }
    }, t.prototype._updateRangeUse = function(e) {
      var a = this._rangePropMode, n = this.get("rangeMode");
      w([["start", "startValue"], ["end", "endValue"]], function(i, o) {
        var s = e[i[0]] != null, l = e[i[1]] != null;
        s && !l ? a[o] = "percent" : !s && l ? a[o] = "value" : n ? a[o] = n[o] : s && (a[o] = "percent");
      });
    }, t.prototype.noTarget = function() {
      return this._noTarget;
    }, t.prototype.getFirstTargetAxisModel = function() {
      var e;
      return this.eachTargetAxis(function(a, n) {
        e == null && (e = this.ecModel.getComponent(Ur(a), n));
      }, this), e;
    }, t.prototype.eachTargetAxis = function(e, a) {
      this._targetAxisInfoMap.each(function(n, i) {
        w(n.indexList, function(o) {
          e.call(a, i, o);
        });
      });
    }, t.prototype.getAxisProxy = function(e, a) {
      var n = this.getAxisModel(e, a);
      if (n)
        return n.__dzAxisProxy;
    }, t.prototype.getAxisModel = function(e, a) {
      xm.env.NODE_ENV !== "production" && K(e && a != null);
      var n = this._targetAxisInfoMap.get(e);
      if (n && n.indexMap[a])
        return this.ecModel.getComponent(Ur(e), a);
    }, t.prototype.setRawRange = function(e) {
      var a = this.option, n = this.settledOption;
      w([["start", "startValue"], ["end", "endValue"]], function(i) {
        (e[i[0]] != null || e[i[1]] != null) && (a[i[0]] = n[i[0]] = e[i[0]], a[i[1]] = n[i[1]] = e[i[1]]);
      }, this), this._updateRangeUse(e);
    }, t.prototype.setCalculatedRange = function(e) {
      var a = this.option;
      w(["start", "startValue", "end", "endValue"], function(n) {
        a[n] = e[n];
      });
    }, t.prototype.getPercentRange = function() {
      var e = this.findRepresentativeAxisProxy();
      if (e)
        return e.getDataPercentWindow();
    }, t.prototype.getValueRange = function(e, a) {
      if (e == null && a == null) {
        var n = this.findRepresentativeAxisProxy();
        if (n)
          return n.getDataValueWindow();
      } else
        return this.getAxisProxy(e, a).getDataValueWindow();
    }, t.prototype.findRepresentativeAxisProxy = function(e) {
      if (e)
        return e.__dzAxisProxy;
      for (var a, n = this._targetAxisInfoMap.keys(), i = 0; i < n.length; i++)
        for (var o = n[i], s = this._targetAxisInfoMap.get(o), l = 0; l < s.indexList.length; l++) {
          var u = this.getAxisProxy(o, s.indexList[l]);
          if (u.hostedBy(this))
            return u;
          a || (a = u);
        }
      return a;
    }, t.prototype.getRangePropMode = function() {
      return this._rangePropMode.slice();
    }, t.prototype.getOrient = function() {
      return xm.env.NODE_ENV !== "production" && K(this._orient), this._orient;
    }, t.type = "dataZoom", t.dependencies = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "series", "toolbox"], t.defaultOption = {
      // zlevel: 0,
      z: 4,
      filterMode: "filter",
      start: 0,
      end: 100
    }, t;
  }(se)
);
function bm(r) {
  var t = {};
  return w(["start", "end", "startValue", "endValue", "throttle"], function(e) {
    r.hasOwnProperty(e) && (t[e] = r[e]);
  }), t;
}
var UV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "dataZoom.select", t;
  }(io)
), Oh = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n, i) {
      this.dataZoomModel = e, this.ecModel = a, this.api = n;
    }, t.type = "dataZoom", t;
  }(Re)
), $V = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "dataZoom.select", t;
  }(Oh)
), pn = w, wm = zt, YV = (
  /** @class */
  function() {
    function r(t, e, a, n) {
      this._dimName = t, this._axisIndex = e, this.ecModel = n, this._dataZoomModel = a;
    }
    return r.prototype.hostedBy = function(t) {
      return this._dataZoomModel === t;
    }, r.prototype.getDataValueWindow = function() {
      return this._valueWindow.slice();
    }, r.prototype.getDataPercentWindow = function() {
      return this._percentWindow.slice();
    }, r.prototype.getTargetSeriesModels = function() {
      var t = [];
      return this.ecModel.eachSeries(function(e) {
        if (HV(e)) {
          var a = Ur(this._dimName), n = e.getReferringComponents(a, Ye).models[0];
          n && this._axisIndex === n.componentIndex && t.push(e);
        }
      }, this), t;
    }, r.prototype.getAxisModel = function() {
      return this.ecModel.getComponent(this._dimName + "Axis", this._axisIndex);
    }, r.prototype.getMinMaxSpan = function() {
      return Q(this._minMaxSpan);
    }, r.prototype.calculateDataWindow = function(t) {
      var e = this._dataExtent, a = this.getAxisModel(), n = a.axis.scale, i = this._dataZoomModel.getRangePropMode(), o = [0, 100], s = [], l = [], u;
      pn(["start", "end"], function(f, h) {
        var p = t[f], d = t[f + "Value"];
        i[h] === "percent" ? (p == null && (p = o[h]), d = n.parse(xe(p, o, e))) : (u = !0, d = d == null ? e[h] : n.parse(d), p = xe(d, e, o)), l[h] = d == null || isNaN(d) ? e[h] : d, s[h] = p == null || isNaN(p) ? o[h] : p;
      }), wm(l), wm(s);
      var c = this._minMaxSpan;
      u ? v(l, s, e, o, !1) : v(s, l, o, e, !0);
      function v(f, h, p, d, g) {
        var y = g ? "Span" : "ValueSpan";
        Ka(0, f, p, "all", c["min" + y], c["max" + y]);
        for (var m = 0; m < 2; m++)
          h[m] = xe(f[m], p, d, !0), g && (h[m] = n.parse(h[m]));
      }
      return {
        valueWindow: l,
        percentWindow: s
      };
    }, r.prototype.reset = function(t) {
      if (t === this._dataZoomModel) {
        var e = this.getTargetSeriesModels();
        this._dataExtent = ZV(this, this._dimName, e), this._updateMinMaxSpan();
        var a = this.calculateDataWindow(t.settledOption);
        this._valueWindow = a.valueWindow, this._percentWindow = a.percentWindow, this._setAxisModel();
      }
    }, r.prototype.filterData = function(t, e) {
      if (t !== this._dataZoomModel)
        return;
      var a = this._dimName, n = this.getTargetSeriesModels(), i = t.get("filterMode"), o = this._valueWindow;
      if (i === "none")
        return;
      pn(n, function(l) {
        var u = l.getData(), c = u.mapDimensionsAll(a);
        if (c.length) {
          if (i === "weakFilter") {
            var v = u.getStore(), f = G(c, function(h) {
              return u.getDimensionIndex(h);
            }, u);
            u.filterSelf(function(h) {
              for (var p, d, g, y = 0; y < c.length; y++) {
                var m = v.get(f[y], h), _ = !isNaN(m), S = m < o[0], x = m > o[1];
                if (_ && !S && !x)
                  return !0;
                _ && (g = !0), S && (p = !0), x && (d = !0);
              }
              return g && p && d;
            });
          } else
            pn(c, function(h) {
              if (i === "empty")
                l.setData(u = u.map(h, function(d) {
                  return s(d) ? d : NaN;
                }));
              else {
                var p = {};
                p[h] = o, u.selectRange(p);
              }
            });
          pn(c, function(h) {
            u.setApproximateExtent(o, h);
          });
        }
      });
      function s(l) {
        return l >= o[0] && l <= o[1];
      }
    }, r.prototype._updateMinMaxSpan = function() {
      var t = this._minMaxSpan = {}, e = this._dataZoomModel, a = this._dataExtent;
      pn(["min", "max"], function(n) {
        var i = e.get(n + "Span"), o = e.get(n + "ValueSpan");
        o != null && (o = this.getAxisModel().axis.scale.parse(o)), o != null ? i = xe(a[0] + o, a, [0, 100], !0) : i != null && (o = xe(i, [0, 100], a, !0) - a[0]), t[n + "Span"] = i, t[n + "ValueSpan"] = o;
      }, this);
    }, r.prototype._setAxisModel = function() {
      var t = this.getAxisModel(), e = this._percentWindow, a = this._valueWindow;
      if (e) {
        var n = K0(a, [0, 500]);
        n = Math.min(n, 20);
        var i = t.axis.scale.rawExtentInfo;
        e[0] !== 0 && i.setDeterminedMinMax("min", +a[0].toFixed(n)), e[1] !== 100 && i.setDeterminedMinMax("max", +a[1].toFixed(n)), i.freeze();
      }
    }, r;
  }()
);
function ZV(r, t, e) {
  var a = [1 / 0, -1 / 0];
  pn(e, function(o) {
    tI(a, o.getData(), t);
  });
  var n = r.getAxisModel(), i = hx(n.axis.scale, n, a).calculate();
  return [i.min, i.max];
}
var XV = {
  // `dataZoomProcessor` will only be performed in needed series. Consider if
  // there is a line series and a pie series, it is better not to update the
  // line series if only pie series is needed to be updated.
  getTargetSeries: function(r) {
    function t(n) {
      r.eachComponent("dataZoom", function(i) {
        i.eachTargetAxis(function(o, s) {
          var l = r.getComponent(Ur(o), s);
          n(o, s, l, i);
        });
      });
    }
    t(function(n, i, o, s) {
      o.__dzAxisProxy = null;
    });
    var e = [];
    t(function(n, i, o, s) {
      o.__dzAxisProxy || (o.__dzAxisProxy = new YV(n, i, s, r), e.push(o.__dzAxisProxy));
    });
    var a = Z();
    return w(e, function(n) {
      w(n.getTargetSeriesModels(), function(i) {
        a.set(i.uid, i);
      });
    }), a;
  },
  // Consider appendData, where filter should be performed. Because data process is
  // in block mode currently, it is not need to worry about that the overallProgress
  // execute every frame.
  overallReset: function(r, t) {
    r.eachComponent("dataZoom", function(e) {
      e.eachTargetAxis(function(a, n) {
        e.getAxisProxy(a, n).reset(e);
      }), e.eachTargetAxis(function(a, n) {
        e.getAxisProxy(a, n).filterData(e, t);
      });
    }), r.eachComponent("dataZoom", function(e) {
      var a = e.findRepresentativeAxisProxy();
      if (a) {
        var n = a.getDataPercentWindow(), i = a.getDataValueWindow();
        e.setCalculatedRange({
          start: n[0],
          end: n[1],
          startValue: i[0],
          endValue: i[1]
        });
      }
    });
  }
};
function KV(r) {
  r.registerAction("dataZoom", function(t, e) {
    var a = WV(e, t);
    w(a, function(n) {
      n.setRawRange({
        start: t.start,
        end: t.end,
        startValue: t.startValue,
        endValue: t.endValue
      });
    });
  });
}
var Dm = !1;
function Vh(r) {
  Dm || (Dm = !0, r.registerProcessor(r.PRIORITY.PROCESSOR.FILTER, XV), KV(r), r.registerSubTypeDefaulter("dataZoom", function() {
    return "slider";
  }));
}
function qV(r) {
  r.registerComponentModel(UV), r.registerComponentView($V), Vh(r);
}
var Ot = (
  /** @class */
  /* @__PURE__ */ function() {
    function r() {
    }
    return r;
  }()
), Ob = {};
function dn(r, t) {
  Ob[r] = t;
}
function Vb(r) {
  return Ob[r];
}
var jV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.optionUpdated = function() {
      r.prototype.optionUpdated.apply(this, arguments);
      var e = this.ecModel;
      w(this.option.feature, function(a, n) {
        var i = Vb(n);
        i && (i.getDefaultOption && (i.defaultOption = i.getDefaultOption(e)), le(a, i.defaultOption));
      });
    }, t.type = "toolbox", t.layoutMode = {
      type: "box",
      ignoreSize: !0
    }, t.defaultOption = {
      show: !0,
      z: 6,
      // zlevel: 0,
      orient: "horizontal",
      left: "right",
      top: "top",
      // right
      // bottom
      backgroundColor: "transparent",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemSize: 15,
      itemGap: 8,
      showTitle: !0,
      iconStyle: {
        borderColor: "#666",
        color: "none"
      },
      emphasis: {
        iconStyle: {
          borderColor: "#3E98C5"
        }
      },
      // textStyle: {},
      // feature
      tooltip: {
        show: !1,
        position: "bottom"
      }
    }, t;
  }(se)
);
function JV(r, t, e) {
  var a = t.getBoxLayoutParams(), n = t.get("padding"), i = {
    width: e.getWidth(),
    height: e.getHeight()
  }, o = qe(a, i, n);
  Ea(t.get("orient"), r, t.get("itemGap"), o.width, o.height), Rl(r, a, i, n);
}
function Bb(r, t) {
  var e = Yn(t.get("padding")), a = t.getItemStyle(["color", "opacity"]);
  return a.fill = t.get("backgroundColor"), r = new de({
    shape: {
      x: r.x - e[3],
      y: r.y - e[0],
      width: r.width + e[1] + e[3],
      height: r.height + e[0] + e[2],
      r: t.get("borderRadius")
    },
    style: a,
    silent: !0,
    z2: -1
  }), r;
}
var QV = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.render = function(e, a, n, i) {
      var o = this.group;
      if (o.removeAll(), !e.get("show"))
        return;
      var s = +e.get("itemSize"), l = e.get("orient") === "vertical", u = e.get("feature") || {}, c = this._features || (this._features = {}), v = [];
      w(u, function(p, d) {
        v.push(d);
      }), new Cr(this._featureNames || [], v).add(f).update(f).remove(te(f, null)).execute(), this._featureNames = v;
      function f(p, d) {
        var g = v[p], y = v[d], m = u[g], _ = new me(m, e, e.ecModel), S;
        if (i && i.newTitle != null && i.featureName === g && (m.title = i.newTitle), g && !y) {
          if (eB(g))
            S = {
              onclick: _.option.onclick,
              featureName: g
            };
          else {
            var x = Vb(g);
            if (!x)
              return;
            S = new x();
          }
          c[g] = S;
        } else if (S = c[y], !S)
          return;
        S.uid = $n("toolbox-feature"), S.model = _, S.ecModel = a, S.api = n;
        var b = S instanceof Ot;
        if (!g && y) {
          b && S.dispose && S.dispose(a, n);
          return;
        }
        if (!_.get("show") || b && S.unusable) {
          b && S.remove && S.remove(a, n);
          return;
        }
        h(_, S, g), _.setIconStatus = function(D, A) {
          var T = this.option, C = this.iconPaths;
          T.iconStatus = T.iconStatus || {}, T.iconStatus[D] = A, C[D] && (A === "emphasis" ? Ar : Tr)(C[D]);
        }, S instanceof Ot && S.render && S.render(_, a, n, i);
      }
      function h(p, d, g) {
        var y = p.getModel("iconStyle"), m = p.getModel(["emphasis", "iconStyle"]), _ = d instanceof Ot && d.getIcons ? d.getIcons() : p.get("icon"), S = p.get("title") || {}, x, b;
        Y(_) ? (x = {}, x[g] = _) : x = _, Y(S) ? (b = {}, b[g] = S) : b = S;
        var D = p.iconPaths = {};
        w(x, function(A, T) {
          var C = go(A, {}, {
            x: -s / 2,
            y: -s / 2,
            width: s,
            height: s
          });
          C.setStyle(y.getItemStyle());
          var M = C.ensureState("emphasis");
          M.style = m.getItemStyle();
          var I = new ve({
            style: {
              text: b[T],
              align: m.get("textAlign"),
              borderRadius: m.get("textBorderRadius"),
              padding: m.get("textPadding"),
              fill: null,
              font: xf({
                fontStyle: m.get("textFontStyle"),
                fontFamily: m.get("textFontFamily"),
                fontSize: m.get("textFontSize"),
                fontWeight: m.get("textFontWeight")
              }, a)
            },
            ignore: !0
          });
          C.setTextContent(I), Wn({
            el: C,
            componentModel: e,
            itemName: T,
            formatterParamsExtra: {
              title: b[T]
            }
          }), C.__title = b[T], C.on("mouseover", function() {
            var L = m.getItemStyle(), P = l ? e.get("right") == null && e.get("left") !== "right" ? "right" : "left" : e.get("bottom") == null && e.get("top") !== "bottom" ? "bottom" : "top";
            I.setStyle({
              fill: m.get("textFill") || L.fill || L.stroke || "#000",
              backgroundColor: m.get("textBackgroundColor")
            }), C.setTextConfig({
              position: m.get("textPosition") || P
            }), I.ignore = !e.get("showTitle"), n.enterEmphasis(this);
          }).on("mouseout", function() {
            p.get(["iconStatus", T]) !== "emphasis" && n.leaveEmphasis(this), I.hide();
          }), (p.get(["iconStatus", T]) === "emphasis" ? Ar : Tr)(C), o.add(C), C.on("click", U(d.onclick, d, a, n, T)), D[T] = C;
        });
      }
      JV(o, e, n), o.add(Bb(o.getBoundingRect(), e)), l || o.eachChild(function(p) {
        var d = p.__title, g = p.ensureState("emphasis"), y = g.textConfig || (g.textConfig = {}), m = p.getTextContent(), _ = m && m.ensureState("emphasis");
        if (_ && !X(_) && d) {
          var S = _.style || (_.style = {}), x = _l(d, ve.makeFont(S)), b = p.x + o.x, D = p.y + o.y + s, A = !1;
          D + x.height > n.getHeight() && (y.position = "top", A = !0);
          var T = A ? -5 - x.height : s + 10;
          b + x.width / 2 > n.getWidth() ? (y.position = ["100%", T], S.align = "right") : b - x.width / 2 < 0 && (y.position = [0, T], S.align = "left");
        }
      });
    }, t.prototype.updateView = function(e, a, n, i) {
      w(this._features, function(o) {
        o instanceof Ot && o.updateView && o.updateView(o.model, a, n, i);
      });
    }, t.prototype.remove = function(e, a) {
      w(this._features, function(n) {
        n instanceof Ot && n.remove && n.remove(e, a);
      }), this.group.removeAll();
    }, t.prototype.dispose = function(e, a) {
      w(this._features, function(n) {
        n instanceof Ot && n.dispose && n.dispose(e, a);
      });
    }, t.type = "toolbox", t;
  }(Re)
);
function eB(r) {
  return r.indexOf("my") === 0;
}
var tB = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.onclick = function(e, a) {
      var n = this.model, i = n.get("name") || e.get("title.0.text") || "echarts", o = a.getZr().painter.getType() === "svg", s = o ? "svg" : n.get("type", !0) || "png", l = a.getConnectedDataURL({
        type: s,
        backgroundColor: n.get("backgroundColor", !0) || e.get("backgroundColor") || "#fff",
        connectedBackgroundColor: n.get("connectedBackgroundColor"),
        excludeComponents: n.get("excludeComponents"),
        pixelRatio: n.get("pixelRatio")
      }), u = Oe.browser;
      if (typeof MouseEvent == "function" && (u.newEdge || !u.ie && !u.edge)) {
        var c = document.createElement("a");
        c.download = i + "." + s, c.target = "_blank", c.href = l;
        var v = new MouseEvent("click", {
          // some micro front-end framework， window maybe is a Proxy
          view: document.defaultView,
          bubbles: !0,
          cancelable: !1
        });
        c.dispatchEvent(v);
      } else if (window.navigator.msSaveOrOpenBlob || o) {
        var f = l.split(","), h = f[0].indexOf("base64") > -1, p = o ? decodeURIComponent(f[1]) : f[1];
        h && (p = window.atob(p));
        var d = i + "." + s;
        if (window.navigator.msSaveOrOpenBlob) {
          for (var g = p.length, y = new Uint8Array(g); g--; )
            y[g] = p.charCodeAt(g);
          var m = new Blob([y]);
          window.navigator.msSaveOrOpenBlob(m, d);
        } else {
          var _ = document.createElement("iframe");
          document.body.appendChild(_);
          var S = _.contentWindow, x = S.document;
          x.open("image/svg+xml", "replace"), x.write(p), x.close(), S.focus(), x.execCommand("SaveAs", !0, d), document.body.removeChild(_);
        }
      } else {
        var b = n.get("lang"), D = '<body style="margin:0;"><img src="' + l + '" style="max-width:100%;" title="' + (b && b[0] || "") + '" /></body>', A = window.open();
        A.document.write(D), A.document.title = i;
      }
    }, t.getDefaultOption = function(e) {
      var a = {
        show: !0,
        icon: "M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0",
        title: e.getLocaleModel().get(["toolbox", "saveAsImage", "title"]),
        type: "png",
        // Default use option.backgroundColor
        // backgroundColor: '#fff',
        connectedBackgroundColor: "#fff",
        name: "",
        excludeComponents: ["toolbox"],
        // use current pixel ratio of device by default
        // pixelRatio: 1,
        lang: e.getLocaleModel().get(["toolbox", "saveAsImage", "lang"])
      };
      return a;
    }, t;
  }(Ot)
), Am = "__ec_magicType_stack__", rB = [["line", "bar"], ["stack"]], aB = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.getIcons = function() {
      var e = this.model, a = e.get("icon"), n = {};
      return w(e.get("type"), function(i) {
        a[i] && (n[i] = a[i]);
      }), n;
    }, t.getDefaultOption = function(e) {
      var a = {
        show: !0,
        type: [],
        // Icon group
        icon: {
          line: "M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4",
          bar: "M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7",
          // eslint-disable-next-line
          stack: "M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z"
          // jshint ignore:line
        },
        // `line`, `bar`, `stack`, `tiled`
        title: e.getLocaleModel().get(["toolbox", "magicType", "title"]),
        option: {},
        seriesIndex: {}
      };
      return a;
    }, t.prototype.onclick = function(e, a, n) {
      var i = this.model, o = i.get(["seriesIndex", n]);
      if (Tm[n]) {
        var s = {
          series: []
        }, l = function(v) {
          var f = v.subType, h = v.id, p = Tm[n](f, h, v, i);
          p && (ee(p, v.option), s.series.push(p));
          var d = v.coordinateSystem;
          if (d && d.type === "cartesian2d" && (n === "line" || n === "bar")) {
            var g = d.getAxesByScale("ordinal")[0];
            if (g) {
              var y = g.dim, m = y + "Axis", _ = v.getReferringComponents(m, Ye).models[0], S = _.componentIndex;
              s[m] = s[m] || [];
              for (var x = 0; x <= S; x++)
                s[m][S] = s[m][S] || {};
              s[m][S].boundaryGap = n === "bar";
            }
          }
        };
        w(rB, function(v) {
          fe(v, n) >= 0 && w(v, function(f) {
            i.setIconStatus(f, "normal");
          });
        }), i.setIconStatus(n, "emphasis"), e.eachComponent({
          mainType: "series",
          query: o == null ? null : {
            seriesIndex: o
          }
        }, l);
        var u, c = n;
        n === "stack" && (u = le({
          stack: i.option.title.tiled,
          tiled: i.option.title.stack
        }, i.option.title), i.get(["iconStatus", n]) !== "emphasis" && (c = "tiled")), a.dispatchAction({
          type: "changeMagicType",
          currentType: c,
          newOption: s,
          newTitle: u,
          featureName: "magicType"
        });
      }
    }, t;
  }(Ot)
), Tm = {
  line: function(r, t, e, a) {
    if (r === "bar")
      return le({
        id: t,
        type: "line",
        // Preserve data related option
        data: e.get("data"),
        stack: e.get("stack"),
        markPoint: e.get("markPoint"),
        markLine: e.get("markLine")
      }, a.get(["option", "line"]) || {}, !0);
  },
  bar: function(r, t, e, a) {
    if (r === "line")
      return le({
        id: t,
        type: "bar",
        // Preserve data related option
        data: e.get("data"),
        stack: e.get("stack"),
        markPoint: e.get("markPoint"),
        markLine: e.get("markLine")
      }, a.get(["option", "bar"]) || {}, !0);
  },
  stack: function(r, t, e, a) {
    var n = e.get("stack") === Am;
    if (r === "line" || r === "bar")
      return a.setIconStatus("stack", n ? "normal" : "emphasis"), le({
        id: t,
        stack: n ? "" : Am
      }, a.get(["option", "stack"]) || {}, !0);
  }
};
hr({
  type: "changeMagicType",
  event: "magicTypeChanged",
  update: "prepareAndUpdate"
}, function(r, t) {
  t.mergeOption(r.newOption);
});
var nB = { env: {} }, Kl = new Array(60).join("-"), kn = "	";
function iB(r) {
  var t = {}, e = [], a = [];
  return r.eachRawSeries(function(n) {
    var i = n.coordinateSystem;
    if (i && (i.type === "cartesian2d" || i.type === "polar")) {
      var o = i.getBaseAxis();
      if (o.type === "category") {
        var s = o.dim + "_" + o.index;
        t[s] || (t[s] = {
          categoryAxis: o,
          valueAxis: i.getOtherAxis(o),
          series: []
        }, a.push({
          axisDim: o.dim,
          axisIndex: o.index
        })), t[s].series.push(n);
      } else
        e.push(n);
    } else
      e.push(n);
  }), {
    seriesGroupByCategoryAxis: t,
    other: e,
    meta: a
  };
}
function oB(r) {
  var t = [];
  return w(r, function(e, a) {
    var n = e.categoryAxis, i = e.valueAxis, o = i.dim, s = [" "].concat(G(e.series, function(h) {
      return h.name;
    })), l = [n.model.getCategories()];
    w(e.series, function(h) {
      var p = h.getRawData();
      l.push(h.getRawData().mapArray(p.mapDimension(o), function(d) {
        return d;
      }));
    });
    for (var u = [s.join(kn)], c = 0; c < l[0].length; c++) {
      for (var v = [], f = 0; f < l.length; f++)
        v.push(l[f][c]);
      u.push(v.join(kn));
    }
    t.push(u.join(`
`));
  }), t.join(`

` + Kl + `

`);
}
function sB(r) {
  return G(r, function(t) {
    var e = t.getRawData(), a = [t.name], n = [];
    return e.each(e.dimensions, function() {
      for (var i = arguments.length, o = arguments[i - 1], s = e.getName(o), l = 0; l < i - 1; l++)
        n[l] = arguments[l];
      a.push((s ? s + kn : "") + n.join(kn));
    }), a.join(`
`);
  }).join(`

` + Kl + `

`);
}
function lB(r) {
  var t = iB(r);
  return {
    value: Ae([oB(t.seriesGroupByCategoryAxis), sB(t.other)], function(e) {
      return !!e.replace(/[\n\t\s]/g, "");
    }).join(`

` + Kl + `

`),
    meta: t.meta
  };
}
function fl(r) {
  return r.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function uB(r) {
  var t = r.slice(0, r.indexOf(`
`));
  if (t.indexOf(kn) >= 0)
    return !0;
}
var $v = new RegExp("[" + kn + "]+", "g");
function cB(r) {
  for (var t = r.split(/\n+/g), e = fl(t.shift()).split($v), a = [], n = G(e, function(l) {
    return {
      name: l,
      data: []
    };
  }), i = 0; i < t.length; i++) {
    var o = fl(t[i]).split($v);
    a.push(o.shift());
    for (var s = 0; s < o.length; s++)
      n[s] && (n[s].data[i] = o[s]);
  }
  return {
    series: n,
    categories: a
  };
}
function vB(r) {
  for (var t = r.split(/\n+/g), e = fl(t.shift()), a = [], n = 0; n < t.length; n++) {
    var i = fl(t[n]);
    if (i) {
      var o = i.split($v), s = "", l = void 0, u = !1;
      isNaN(o[0]) ? (u = !0, s = o[0], o = o.slice(1), a[n] = {
        name: s,
        value: []
      }, l = a[n].value) : l = a[n] = [];
      for (var c = 0; c < o.length; c++)
        l.push(+o[c]);
      l.length === 1 && (u ? a[n].value = l[0] : a[n] = l[0]);
    }
  }
  return {
    name: e,
    data: a
  };
}
function fB(r, t) {
  var e = r.split(new RegExp(`
*` + Kl + `
*`, "g")), a = {
    series: []
  };
  return w(e, function(n, i) {
    if (uB(n)) {
      var o = cB(n), s = t[i], l = s.axisDim + "Axis";
      s && (a[l] = a[l] || [], a[l][s.axisIndex] = {
        data: o.categories
      }, a.series = a.series.concat(o.series));
    } else {
      var o = vB(n);
      a.series.push(o);
    }
  }), a;
}
var hB = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.onclick = function(e, a) {
      setTimeout(function() {
        a.dispatchAction({
          type: "hideTip"
        });
      });
      var n = a.getDom(), i = this.model;
      this._dom && n.removeChild(this._dom);
      var o = document.createElement("div");
      o.style.cssText = "position:absolute;top:0;bottom:0;left:0;right:0;padding:5px", o.style.backgroundColor = i.get("backgroundColor") || "#fff";
      var s = document.createElement("h4"), l = i.get("lang") || [];
      s.innerHTML = l[0] || i.get("title"), s.style.cssText = "margin:10px 20px", s.style.color = i.get("textColor");
      var u = document.createElement("div"), c = document.createElement("textarea");
      u.style.cssText = "overflow:auto";
      var v = i.get("optionToContent"), f = i.get("contentToOption"), h = lB(e);
      if (X(v)) {
        var p = v(a.getOption());
        Y(p) ? u.innerHTML = p : Os(p) && u.appendChild(p);
      } else {
        c.readOnly = i.get("readOnly");
        var d = c.style;
        d.cssText = "display:block;width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;resize:none;box-sizing:border-box;outline:none", d.color = i.get("textColor"), d.borderColor = i.get("textareaBorderColor"), d.backgroundColor = i.get("textareaColor"), c.value = h.value, u.appendChild(c);
      }
      var g = h.meta, y = document.createElement("div");
      y.style.cssText = "position:absolute;bottom:5px;left:0;right:0";
      var m = "float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px", _ = document.createElement("div"), S = document.createElement("div");
      m += ";background-color:" + i.get("buttonColor"), m += ";color:" + i.get("buttonTextColor");
      var x = this;
      function b() {
        n.removeChild(o), x._dom = null;
      }
      tp(_, "click", b), tp(S, "click", function() {
        if (f == null && v != null || f != null && v == null) {
          nB.env.NODE_ENV !== "production" && Ve("It seems you have just provided one of `contentToOption` and `optionToContent` functions but missed the other one. Data change is ignored."), b();
          return;
        }
        var D;
        try {
          X(f) ? D = f(u, a.getOption()) : D = fB(c.value, g);
        } catch (A) {
          throw b(), new Error("Data view format error " + A);
        }
        D && a.dispatchAction({
          type: "changeDataView",
          newOption: D
        }), b();
      }), _.innerHTML = l[1], S.innerHTML = l[2], S.style.cssText = _.style.cssText = m, !i.get("readOnly") && y.appendChild(S), y.appendChild(_), o.appendChild(s), o.appendChild(u), o.appendChild(y), u.style.height = n.clientHeight - 80 + "px", n.appendChild(o), this._dom = o;
    }, t.prototype.remove = function(e, a) {
      this._dom && a.getDom().removeChild(this._dom);
    }, t.prototype.dispose = function(e, a) {
      this.remove(e, a);
    }, t.getDefaultOption = function(e) {
      var a = {
        show: !0,
        readOnly: !1,
        optionToContent: null,
        contentToOption: null,
        // eslint-disable-next-line
        icon: "M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28",
        title: e.getLocaleModel().get(["toolbox", "dataView", "title"]),
        lang: e.getLocaleModel().get(["toolbox", "dataView", "lang"]),
        backgroundColor: "#fff",
        textColor: "#000",
        textareaColor: "#fff",
        textareaBorderColor: "#333",
        buttonColor: "#c23531",
        buttonTextColor: "#fff"
      };
      return a;
    }, t;
  }(Ot)
);
function pB(r, t) {
  return G(r, function(e, a) {
    var n = t && t[a];
    if (J(n) && !B(n)) {
      var i = J(e) && !B(e);
      i || (e = {
        value: e
      });
      var o = n.name != null && e.name == null;
      return e = ee(e, n), o && delete e.name, e;
    } else
      return e;
  });
}
hr({
  type: "changeDataView",
  event: "dataViewChanged",
  update: "prepareAndUpdate"
}, function(r, t) {
  var e = [];
  w(r.newOption.series, function(a) {
    var n = t.getSeriesByName(a.name)[0];
    if (!n)
      e.push(z({
        // Default is scatter
        type: "scatter"
      }, a));
    else {
      var i = n.get("data");
      e.push({
        name: a.name,
        data: pB(a.data, i)
      });
    }
  }), t.mergeOption(ee({
    series: e
  }, r.newOption));
});
var zb = w, Gb = ue();
function dB(r, t) {
  var e = Bh(r);
  zb(t, function(a, n) {
    for (var i = e.length - 1; i >= 0; i--) {
      var o = e[i];
      if (o[n])
        break;
    }
    if (i < 0) {
      var s = r.queryComponents({
        mainType: "dataZoom",
        subType: "select",
        id: n
      })[0];
      if (s) {
        var l = s.getPercentRange();
        e[0][n] = {
          dataZoomId: n,
          start: l[0],
          end: l[1]
        };
      }
    }
  }), e.push(t);
}
function gB(r) {
  var t = Bh(r), e = t[t.length - 1];
  t.length > 1 && t.pop();
  var a = {};
  return zb(e, function(n, i) {
    for (var o = t.length - 1; o >= 0; o--)
      if (n = t[o][i], n) {
        a[i] = n;
        break;
      }
  }), a;
}
function yB(r) {
  Gb(r).snapshots = null;
}
function mB(r) {
  return Bh(r).length;
}
function Bh(r) {
  var t = Gb(r);
  return t.snapshots || (t.snapshots = [{}]), t.snapshots;
}
var _B = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.onclick = function(e, a) {
      yB(e), a.dispatchAction({
        type: "restore",
        from: this.uid
      });
    }, t.getDefaultOption = function(e) {
      var a = {
        show: !0,
        // eslint-disable-next-line
        icon: "M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5",
        title: e.getLocaleModel().get(["toolbox", "restore", "title"])
      };
      return a;
    }, t;
  }(Ot)
);
hr({
  type: "restore",
  event: "restore",
  update: "prepareAndUpdate"
}, function(r, t) {
  t.resetOption("recreate");
});
var Fb = { env: {} }, SB = ["grid", "xAxis", "yAxis", "geo", "graph", "polar", "radiusAxis", "angleAxis", "bmap"], zh = (
  /** @class */
  function() {
    function r(t, e, a) {
      var n = this;
      this._targetInfoList = [];
      var i = Cm(e, t);
      w(xB, function(o, s) {
        (!a || !a.include || fe(a.include, s) >= 0) && o(i, n._targetInfoList);
      });
    }
    return r.prototype.setOutputRanges = function(t, e) {
      return this.matchOutputRanges(t, e, function(a, n, i) {
        if ((a.coordRanges || (a.coordRanges = [])).push(n), !a.coordRange) {
          a.coordRange = n;
          var o = Mc[a.brushType](0, i, n);
          a.__rangeOffset = {
            offset: Em[a.brushType](o.values, a.range, [1, 1]),
            xyMinMax: o.xyMinMax
          };
        }
      }), t;
    }, r.prototype.matchOutputRanges = function(t, e, a) {
      w(t, function(n) {
        var i = this.findTargetInfo(n, e);
        i && i !== !0 && w(i.coordSyses, function(o) {
          var s = Mc[n.brushType](1, o, n.range, !0);
          a(n, s.values, o, e);
        });
      }, this);
    }, r.prototype.setInputRanges = function(t, e) {
      w(t, function(a) {
        var n = this.findTargetInfo(a, e);
        if (Fb.env.NODE_ENV !== "production" && (K(!n || n === !0 || a.coordRange, "coordRange must be specified when coord index specified."), K(!n || n !== !0 || a.range, "range must be specified in global brush.")), a.range = a.range || [], n && n !== !0) {
          a.panelId = n.panelId;
          var i = Mc[a.brushType](0, n.coordSys, a.coordRange), o = a.__rangeOffset;
          a.range = o ? Em[a.brushType](i.values, o.offset, bB(i.xyMinMax, o.xyMinMax)) : i.values;
        }
      }, this);
    }, r.prototype.makePanelOpts = function(t, e) {
      return G(this._targetInfoList, function(a) {
        var n = a.getPanelRect();
        return {
          panelId: a.panelId,
          defaultBrushType: e ? e(a) : null,
          clipPath: Y1(n),
          isTargetByCursor: X1(n, t, a.coordSysModel),
          getLinearBrushOtherExtent: Z1(n)
        };
      });
    }, r.prototype.controlSeries = function(t, e, a) {
      var n = this.findTargetInfo(t, a);
      return n === !0 || n && fe(n.coordSyses, e.coordinateSystem) >= 0;
    }, r.prototype.findTargetInfo = function(t, e) {
      for (var a = this._targetInfoList, n = Cm(e, t), i = 0; i < a.length; i++) {
        var o = a[i], s = t.panelId;
        if (s) {
          if (o.panelId === s)
            return o;
        } else
          for (var l = 0; l < Mm.length; l++)
            if (Mm[l](n, o))
              return o;
      }
      return !0;
    }, r;
  }()
);
function Yv(r) {
  return r[0] > r[1] && r.reverse(), r;
}
function Cm(r, t) {
  return Ni(r, t, {
    includeMainTypes: SB
  });
}
var xB = {
  grid: function(r, t) {
    var e = r.xAxisModels, a = r.yAxisModels, n = r.gridModels, i = Z(), o = {}, s = {};
    !e && !a && !n || (w(e, function(l) {
      var u = l.axis.grid.model;
      i.set(u.id, u), o[u.id] = !0;
    }), w(a, function(l) {
      var u = l.axis.grid.model;
      i.set(u.id, u), s[u.id] = !0;
    }), w(n, function(l) {
      i.set(l.id, l), o[l.id] = !0, s[l.id] = !0;
    }), i.each(function(l) {
      var u = l.coordinateSystem, c = [];
      w(u.getCartesians(), function(v, f) {
        (fe(e, v.getAxis("x").model) >= 0 || fe(a, v.getAxis("y").model) >= 0) && c.push(v);
      }), t.push({
        panelId: "grid--" + l.id,
        gridModel: l,
        coordSysModel: l,
        // Use the first one as the representitive coordSys.
        coordSys: c[0],
        coordSyses: c,
        getPanelRect: Im.grid,
        xAxisDeclared: o[l.id],
        yAxisDeclared: s[l.id]
      });
    }));
  },
  geo: function(r, t) {
    w(r.geoModels, function(e) {
      var a = e.coordinateSystem;
      t.push({
        panelId: "geo--" + e.id,
        geoModel: e,
        coordSysModel: e,
        coordSys: a,
        coordSyses: [a],
        getPanelRect: Im.geo
      });
    });
  }
}, Mm = [
  // grid
  function(r, t) {
    var e = r.xAxisModel, a = r.yAxisModel, n = r.gridModel;
    return !n && e && (n = e.axis.grid.model), !n && a && (n = a.axis.grid.model), n && n === t.gridModel;
  },
  // geo
  function(r, t) {
    var e = r.geoModel;
    return e && e === t.geoModel;
  }
], Im = {
  grid: function() {
    return this.coordSys.master.getRect().clone();
  },
  geo: function() {
    var r = this.coordSys, t = r.getBoundingRect().clone();
    return t.applyTransform(La(r)), t;
  }
}, Mc = {
  lineX: te(Lm, 0),
  lineY: te(Lm, 1),
  rect: function(r, t, e, a) {
    var n = r ? t.pointToData([e[0][0], e[1][0]], a) : t.dataToPoint([e[0][0], e[1][0]], a), i = r ? t.pointToData([e[0][1], e[1][1]], a) : t.dataToPoint([e[0][1], e[1][1]], a), o = [Yv([n[0], i[0]]), Yv([n[1], i[1]])];
    return {
      values: o,
      xyMinMax: o
    };
  },
  polygon: function(r, t, e, a) {
    var n = [[1 / 0, -1 / 0], [1 / 0, -1 / 0]], i = G(e, function(o) {
      var s = r ? t.pointToData(o, a) : t.dataToPoint(o, a);
      return n[0][0] = Math.min(n[0][0], s[0]), n[1][0] = Math.min(n[1][0], s[1]), n[0][1] = Math.max(n[0][1], s[0]), n[1][1] = Math.max(n[1][1], s[1]), s;
    });
    return {
      values: i,
      xyMinMax: n
    };
  }
};
function Lm(r, t, e, a) {
  Fb.env.NODE_ENV !== "production" && K(e.type === "cartesian2d", "lineX/lineY brush is available only in cartesian2d.");
  var n = e.getAxis(["x", "y"][r]), i = Yv(G([0, 1], function(s) {
    return t ? n.coordToData(n.toLocalCoord(a[s]), !0) : n.toGlobalCoord(n.dataToCoord(a[s]));
  })), o = [];
  return o[r] = i, o[1 - r] = [NaN, NaN], {
    values: i,
    xyMinMax: o
  };
}
var Em = {
  lineX: te(Pm, 0),
  lineY: te(Pm, 1),
  rect: function(r, t, e) {
    return [[r[0][0] - e[0] * t[0][0], r[0][1] - e[0] * t[0][1]], [r[1][0] - e[1] * t[1][0], r[1][1] - e[1] * t[1][1]]];
  },
  polygon: function(r, t, e) {
    return G(r, function(a, n) {
      return [a[0] - e[0] * t[n][0], a[1] - e[1] * t[n][1]];
    });
  }
};
function Pm(r, t, e, a) {
  return [t[0] - a[r] * e[0], t[1] - a[r] * e[1]];
}
function bB(r, t) {
  var e = Nm(r), a = Nm(t), n = [e[0] / a[0], e[1] / a[1]];
  return isNaN(n[0]) && (n[0] = 1), isNaN(n[1]) && (n[1] = 1), n;
}
function Nm(r) {
  return r ? [r[0][1] - r[0][0], r[1][1] - r[1][0]] : [NaN, NaN];
}
var Zv = w, wB = yD("toolbox-dataZoom_"), DB = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.render = function(e, a, n, i) {
      this._brushController || (this._brushController = new ph(n.getZr()), this._brushController.on("brush", U(this._onBrush, this)).mount()), CB(e, a, this, i, n), TB(e, a);
    }, t.prototype.onclick = function(e, a, n) {
      AB[n].call(this);
    }, t.prototype.remove = function(e, a) {
      this._brushController && this._brushController.unmount();
    }, t.prototype.dispose = function(e, a) {
      this._brushController && this._brushController.dispose();
    }, t.prototype._onBrush = function(e) {
      var a = e.areas;
      if (!e.isEnd || !a.length)
        return;
      var n = {}, i = this.ecModel;
      this._brushController.updateCovers([]);
      var o = new zh(Gh(this.model), i, {
        include: ["grid"]
      });
      o.matchOutputRanges(a, i, function(u, c, v) {
        if (v.type === "cartesian2d") {
          var f = u.brushType;
          f === "rect" ? (s("x", v, c[0]), s("y", v, c[1])) : s({
            lineX: "x",
            lineY: "y"
          }[f], v, c);
        }
      }), dB(i, n), this._dispatchZoomAction(n);
      function s(u, c, v) {
        var f = c.getAxis(u), h = f.model, p = l(u, h, i), d = p.findRepresentativeAxisProxy(h).getMinMaxSpan();
        (d.minValueSpan != null || d.maxValueSpan != null) && (v = Ka(0, v.slice(), f.scale.getExtent(), 0, d.minValueSpan, d.maxValueSpan)), p && (n[p.id] = {
          dataZoomId: p.id,
          startValue: v[0],
          endValue: v[1]
        });
      }
      function l(u, c, v) {
        var f;
        return v.eachComponent({
          mainType: "dataZoom",
          subType: "select"
        }, function(h) {
          var p = h.getAxisModel(u, c.componentIndex);
          p && (f = h);
        }), f;
      }
    }, t.prototype._dispatchZoomAction = function(e) {
      var a = [];
      Zv(e, function(n, i) {
        a.push(Q(n));
      }), a.length && this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        batch: a
      });
    }, t.getDefaultOption = function(e) {
      var a = {
        show: !0,
        filterMode: "filter",
        // Icon group
        icon: {
          zoom: "M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1",
          back: "M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26"
        },
        // `zoom`, `back`
        title: e.getLocaleModel().get(["toolbox", "dataZoom", "title"]),
        brushStyle: {
          borderWidth: 0,
          color: "rgba(210,219,238,0.2)"
        }
      };
      return a;
    }, t;
  }(Ot)
), AB = {
  zoom: function() {
    var r = !this._isZoomActive;
    this.api.dispatchAction({
      type: "takeGlobalCursor",
      key: "dataZoomSelect",
      dataZoomSelectActive: r
    });
  },
  back: function() {
    this._dispatchZoomAction(gB(this.ecModel));
  }
};
function Gh(r) {
  var t = {
    xAxisIndex: r.get("xAxisIndex", !0),
    yAxisIndex: r.get("yAxisIndex", !0),
    xAxisId: r.get("xAxisId", !0),
    yAxisId: r.get("yAxisId", !0)
  };
  return t.xAxisIndex == null && t.xAxisId == null && (t.xAxisIndex = "all"), t.yAxisIndex == null && t.yAxisId == null && (t.yAxisIndex = "all"), t;
}
function TB(r, t) {
  r.setIconStatus("back", mB(t) > 1 ? "emphasis" : "normal");
}
function CB(r, t, e, a, n) {
  var i = e._isZoomActive;
  a && a.type === "takeGlobalCursor" && (i = a.key === "dataZoomSelect" ? a.dataZoomSelectActive : !1), e._isZoomActive = i, r.setIconStatus("zoom", i ? "emphasis" : "normal");
  var o = new zh(Gh(r), t, {
    include: ["grid"]
  }), s = o.makePanelOpts(n, function(l) {
    return l.xAxisDeclared && !l.yAxisDeclared ? "lineX" : !l.xAxisDeclared && l.yAxisDeclared ? "lineY" : "rect";
  });
  e._brushController.setPanels(s).enableBrush(i && s.length ? {
    brushType: "auto",
    brushStyle: r.getModel("brushStyle").getItemStyle()
  } : !1);
}
VA("dataZoom", function(r) {
  var t = r.getComponent("toolbox", 0), e = ["feature", "dataZoom"];
  if (!t || t.get(e) == null)
    return;
  var a = t.getModel(e), n = [], i = Gh(a), o = Ni(r, i);
  Zv(o.xAxisModels, function(l) {
    return s(l, "xAxis", "xAxisIndex");
  }), Zv(o.yAxisModels, function(l) {
    return s(l, "yAxis", "yAxisIndex");
  });
  function s(l, u, c) {
    var v = l.componentIndex, f = {
      type: "select",
      $fromToolbox: !0,
      // Default to be filter
      filterMode: a.get("filterMode", !0) || "filter",
      // Id for merge mapping.
      id: wB + u + v
    };
    f[c] = v, n.push(f);
  }
  return n;
});
function MB(r) {
  r.registerComponentModel(jV), r.registerComponentView(QV), dn("saveAsImage", tB), dn("magicType", aB), dn("dataView", hB), dn("dataZoom", DB), dn("restore", _B), oe(qV);
}
var IB = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "tooltip", t.dependencies = ["axisPointer"], t.defaultOption = {
      // zlevel: 0,
      z: 60,
      show: !0,
      // tooltip main content
      showContent: !0,
      // 'trigger' only works on coordinate system.
      // 'item' | 'axis' | 'none'
      trigger: "item",
      // 'click' | 'mousemove' | 'none'
      triggerOn: "mousemove|click",
      alwaysShowContent: !1,
      displayMode: "single",
      renderMode: "auto",
      // whether restraint content inside viewRect.
      // If renderMode: 'richText', default true.
      // If renderMode: 'html', defaut false (for backward compat).
      confine: null,
      showDelay: 0,
      hideDelay: 100,
      // Animation transition time, unit is second
      transitionDuration: 0.4,
      enterable: !1,
      backgroundColor: "#fff",
      // box shadow
      shadowBlur: 10,
      shadowColor: "rgba(0, 0, 0, .2)",
      shadowOffsetX: 1,
      shadowOffsetY: 2,
      // tooltip border radius, unit is px, default is 4
      borderRadius: 4,
      // tooltip border width, unit is px, default is 0 (no border)
      borderWidth: 1,
      // Tooltip inside padding, default is 5 for all direction
      // Array is allowed to set up, right, bottom, left, same with css
      // The default value: See `tooltip/tooltipMarkup.ts#getPaddingFromTooltipModel`.
      padding: null,
      // Extra css text
      extraCssText: "",
      // axis indicator, trigger by axis
      axisPointer: {
        // default is line
        // legal values: 'line' | 'shadow' | 'cross'
        type: "line",
        // Valid when type is line, appoint tooltip line locate on which line. Optional
        // legal values: 'x' | 'y' | 'angle' | 'radius' | 'auto'
        // default is 'auto', chose the axis which type is category.
        // for multiply y axis, cartesian coord chose x axis, polar chose angle axis
        axis: "auto",
        animation: "auto",
        animationDurationUpdate: 200,
        animationEasingUpdate: "exponentialOut",
        crossStyle: {
          color: "#999",
          width: 1,
          type: "dashed",
          // TODO formatter
          textStyle: {}
        }
        // lineStyle and shadowStyle should not be specified here,
        // otherwise it will always override those styles on option.axisPointer.
      },
      textStyle: {
        color: "#666",
        fontSize: 14
      }
    }, t;
  }(se)
);
function Hb(r) {
  var t = r.get("confine");
  return t != null ? !!t : r.get("renderMode") === "richText";
}
function Wb(r) {
  if (Oe.domSupported) {
    for (var t = document.documentElement.style, e = 0, a = r.length; e < a; e++)
      if (r[e] in t)
        return r[e];
  }
}
var Ub = Wb(["transform", "webkitTransform", "OTransform", "MozTransform", "msTransform"]), LB = Wb(["webkitTransition", "transition", "OTransition", "MozTransition", "msTransition"]);
function $b(r, t) {
  if (!r)
    return t;
  t = z_(t, !0);
  var e = r.indexOf(t);
  return r = e === -1 ? t : "-" + r.slice(0, e) + "-" + t, r.toLowerCase();
}
function EB(r, t) {
  var e = r.currentStyle || document.defaultView && document.defaultView.getComputedStyle(r);
  return e ? e[t] : null;
}
var PB = $b(LB, "transition"), Fh = $b(Ub, "transform"), NB = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;" + (Oe.transform3dSupported ? "will-change:transform;" : "");
function RB(r) {
  return r = r === "left" ? "right" : r === "right" ? "left" : r === "top" ? "bottom" : "top", r;
}
function kB(r, t, e) {
  if (!Y(e) || e === "inside")
    return "";
  var a = r.get("backgroundColor"), n = r.get("borderWidth");
  t = Ga(t);
  var i = RB(e), o = Math.max(Math.round(n) * 1.5, 6), s = "", l = Fh + ":", u;
  fe(["left", "right"], i) > -1 ? (s += "top:50%", l += "translateY(-50%) rotate(" + (u = i === "left" ? -225 : -45) + "deg)") : (s += "left:50%", l += "translateX(-50%) rotate(" + (u = i === "top" ? 225 : 45) + "deg)");
  var c = u * Math.PI / 180, v = o + n, f = v * Math.abs(Math.cos(c)) + v * Math.abs(Math.sin(c)), h = Math.round(((f - Math.SQRT2 * n) / 2 + Math.SQRT2 * n - (f - v) / 2) * 100) / 100;
  s += ";" + i + ":-" + h + "px";
  var p = t + " solid " + n + "px;", d = ["position:absolute;width:" + o + "px;height:" + o + "px;z-index:-1;", s + ";" + l + ";", "border-bottom:" + p, "border-right:" + p, "background-color:" + a + ";"];
  return '<div style="' + d.join("") + '"></div>';
}
function OB(r, t) {
  var e = "cubic-bezier(0.23,1,0.32,1)", a = " " + r / 2 + "s " + e, n = "opacity" + a + ",visibility" + a;
  return t || (a = " " + r + "s " + e, n += Oe.transformSupported ? "," + Fh + a : ",left" + a + ",top" + a), PB + ":" + n;
}
function Rm(r, t, e) {
  var a = r.toFixed(0) + "px", n = t.toFixed(0) + "px";
  if (!Oe.transformSupported)
    return e ? "top:" + n + ";left:" + a + ";" : [["top", n], ["left", a]];
  var i = Oe.transform3dSupported, o = "translate" + (i ? "3d" : "") + "(" + a + "," + n + (i ? ",0" : "") + ")";
  return e ? "top:0;left:0;" + Fh + ":" + o + ";" : [["top", 0], ["left", 0], [Ub, o]];
}
function VB(r) {
  var t = [], e = r.get("fontSize"), a = r.getTextColor();
  a && t.push("color:" + a), t.push("font:" + r.getFont()), e && t.push("line-height:" + Math.round(e * 3 / 2) + "px");
  var n = r.get("textShadowColor"), i = r.get("textShadowBlur") || 0, o = r.get("textShadowOffsetX") || 0, s = r.get("textShadowOffsetY") || 0;
  return n && i && t.push("text-shadow:" + o + "px " + s + "px " + i + "px " + n), w(["decoration", "align"], function(l) {
    var u = r.get(l);
    u && t.push("text-" + l + ":" + u);
  }), t.join(";");
}
function BB(r, t, e) {
  var a = [], n = r.get("transitionDuration"), i = r.get("backgroundColor"), o = r.get("shadowBlur"), s = r.get("shadowColor"), l = r.get("shadowOffsetX"), u = r.get("shadowOffsetY"), c = r.getModel("textStyle"), v = _S(r, "html"), f = l + "px " + u + "px " + o + "px " + s;
  return a.push("box-shadow:" + f), t && n && a.push(OB(n, e)), i && a.push("background-color:" + i), w(["width", "color", "radius"], function(h) {
    var p = "border-" + h, d = z_(p), g = r.get(d);
    g != null && a.push(p + ":" + g + (h === "color" ? "" : "px"));
  }), a.push(VB(c)), v != null && a.push("padding:" + Yn(v).join("px ") + "px"), a.join(";") + ";";
}
function km(r, t, e, a, n) {
  var i = t && t.painter;
  if (e) {
    var o = i && i.getViewportRoot();
    o && qw(r, o, e, a, n);
  } else {
    r[0] = a, r[1] = n;
    var s = i && i.getViewportRootOffset();
    s && (r[0] += s.offsetLeft, r[1] += s.offsetTop);
  }
  r[2] = r[0] / t.getWidth(), r[3] = r[1] / t.getHeight();
}
var zB = (
  /** @class */
  function() {
    function r(t, e) {
      if (this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._alwaysShowContent = !1, this._firstShow = !0, this._longHide = !0, Oe.wxa)
        return null;
      var a = document.createElement("div");
      a.domBelongToZr = !0, this.el = a;
      var n = this._zr = t.getZr(), i = e.appendTo, o = i && (Y(i) ? document.querySelector(i) : Os(i) ? i : X(i) && i(t.getDom()));
      km(this._styleCoord, n, o, t.getWidth() / 2, t.getHeight() / 2), (o || t.getDom()).appendChild(a), this._api = t, this._container = o;
      var s = this;
      a.onmouseenter = function() {
        s._enterable && (clearTimeout(s._hideTimeout), s._show = !0), s._inContent = !0;
      }, a.onmousemove = function(l) {
        if (l = l || window.event, !s._enterable) {
          var u = n.handler, c = n.painter.getViewportRoot();
          Kw(c, l, !0), u.dispatch("mousemove", l);
        }
      }, a.onmouseleave = function() {
        s._inContent = !1, s._enterable && s._show && s.hideLater(s._hideDelay);
      };
    }
    return r.prototype.update = function(t) {
      if (!this._container) {
        var e = this._api.getDom(), a = EB(e, "position"), n = e.style;
        n.position !== "absolute" && a !== "absolute" && (n.position = "relative");
      }
      var i = t.get("alwaysShowContent");
      i && this._moveIfResized(), this._alwaysShowContent = i, this.el.className = t.get("className") || "";
    }, r.prototype.show = function(t, e) {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var a = this.el, n = a.style, i = this._styleCoord;
      a.innerHTML ? n.cssText = NB + BB(t, !this._firstShow, this._longHide) + Rm(i[0], i[1], !0) + ("border-color:" + Ga(e) + ";") + (t.get("extraCssText") || "") + (";pointer-events:" + (this._enterable ? "auto" : "none")) : n.display = "none", this._show = !0, this._firstShow = !1, this._longHide = !1;
    }, r.prototype.setContent = function(t, e, a, n, i) {
      var o = this.el;
      if (t == null) {
        o.innerHTML = "";
        return;
      }
      var s = "";
      if (Y(i) && a.get("trigger") === "item" && !Hb(a) && (s = kB(a, n, i)), Y(t))
        o.innerHTML = t + s;
      else if (t) {
        o.innerHTML = "", B(t) || (t = [t]);
        for (var l = 0; l < t.length; l++)
          Os(t[l]) && t[l].parentNode !== o && o.appendChild(t[l]);
        if (s && o.childNodes.length) {
          var u = document.createElement("div");
          u.innerHTML = s, o.appendChild(u);
        }
      }
    }, r.prototype.setEnterable = function(t) {
      this._enterable = t;
    }, r.prototype.getSize = function() {
      var t = this.el;
      return [t.offsetWidth, t.offsetHeight];
    }, r.prototype.moveTo = function(t, e) {
      var a = this._styleCoord;
      if (km(a, this._zr, this._container, t, e), a[0] != null && a[1] != null) {
        var n = this.el.style, i = Rm(a[0], a[1]);
        w(i, function(o) {
          n[o[0]] = o[1];
        });
      }
    }, r.prototype._moveIfResized = function() {
      var t = this._styleCoord[2], e = this._styleCoord[3];
      this.moveTo(t * this._zr.getWidth(), e * this._zr.getHeight());
    }, r.prototype.hide = function() {
      var t = this, e = this.el.style;
      e.visibility = "hidden", e.opacity = "0", Oe.transform3dSupported && (e.willChange = ""), this._show = !1, this._longHideTimeout = setTimeout(function() {
        return t._longHide = !0;
      }, 500);
    }, r.prototype.hideLater = function(t) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (t ? (this._hideDelay = t, this._show = !1, this._hideTimeout = setTimeout(U(this.hide, this), t)) : this.hide());
    }, r.prototype.isShow = function() {
      return this._show;
    }, r.prototype.dispose = function() {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var t = this.el.parentNode;
      t && t.removeChild(this.el), this.el = this._container = null;
    }, r;
  }()
), GB = { env: {} }, FB = (
  /** @class */
  function() {
    function r(t) {
      this._show = !1, this._styleCoord = [0, 0, 0, 0], this._alwaysShowContent = !1, this._enterable = !0, this._zr = t.getZr(), Vm(this._styleCoord, this._zr, t.getWidth() / 2, t.getHeight() / 2);
    }
    return r.prototype.update = function(t) {
      var e = t.get("alwaysShowContent");
      e && this._moveIfResized(), this._alwaysShowContent = e;
    }, r.prototype.show = function() {
      this._hideTimeout && clearTimeout(this._hideTimeout), this.el.show(), this._show = !0;
    }, r.prototype.setContent = function(t, e, a, n, i) {
      var o = this;
      J(t) && ye(GB.env.NODE_ENV !== "production" ? "Passing DOM nodes as content is not supported in richText tooltip!" : ""), this.el && this._zr.remove(this.el);
      var s = a.getModel("textStyle");
      this.el = new ve({
        style: {
          rich: e.richTextStyles,
          text: t,
          lineHeight: 22,
          borderWidth: 1,
          borderColor: n,
          textShadowColor: s.get("textShadowColor"),
          fill: a.get(["textStyle", "color"]),
          padding: _S(a, "richText"),
          verticalAlign: "top",
          align: "left"
        },
        z: a.get("z")
      }), w(["backgroundColor", "borderRadius", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"], function(u) {
        o.el.style[u] = a.get(u);
      }), w(["textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], function(u) {
        o.el.style[u] = s.get(u) || 0;
      }), this._zr.add(this.el);
      var l = this;
      this.el.on("mouseover", function() {
        l._enterable && (clearTimeout(l._hideTimeout), l._show = !0), l._inContent = !0;
      }), this.el.on("mouseout", function() {
        l._enterable && l._show && l.hideLater(l._hideDelay), l._inContent = !1;
      });
    }, r.prototype.setEnterable = function(t) {
      this._enterable = t;
    }, r.prototype.getSize = function() {
      var t = this.el, e = this.el.getBoundingRect(), a = Om(t.style);
      return [e.width + a.left + a.right, e.height + a.top + a.bottom];
    }, r.prototype.moveTo = function(t, e) {
      var a = this.el;
      if (a) {
        var n = this._styleCoord;
        Vm(n, this._zr, t, e), t = n[0], e = n[1];
        var i = a.style, o = Gr(i.borderWidth || 0), s = Om(i);
        a.x = t + o + s.left, a.y = e + o + s.top, a.markRedraw();
      }
    }, r.prototype._moveIfResized = function() {
      var t = this._styleCoord[2], e = this._styleCoord[3];
      this.moveTo(t * this._zr.getWidth(), e * this._zr.getHeight());
    }, r.prototype.hide = function() {
      this.el && this.el.hide(), this._show = !1;
    }, r.prototype.hideLater = function(t) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (t ? (this._hideDelay = t, this._show = !1, this._hideTimeout = setTimeout(U(this.hide, this), t)) : this.hide());
    }, r.prototype.isShow = function() {
      return this._show;
    }, r.prototype.dispose = function() {
      this._zr.remove(this.el);
    }, r;
  }()
);
function Gr(r) {
  return Math.max(0, r);
}
function Om(r) {
  var t = Gr(r.shadowBlur || 0), e = Gr(r.shadowOffsetX || 0), a = Gr(r.shadowOffsetY || 0);
  return {
    left: Gr(t - e),
    right: Gr(t + e),
    top: Gr(t - a),
    bottom: Gr(t + a)
  };
}
function Vm(r, t, e, a) {
  r[0] = e, r[1] = a, r[2] = r[0] / t.getWidth(), r[3] = r[1] / t.getHeight();
}
var HB = new de({
  shape: {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }
}), WB = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e, a) {
      if (!(Oe.node || !a.getDom())) {
        var n = e.getComponent("tooltip"), i = this._renderMode = DD(n.get("renderMode"));
        this._tooltipContent = i === "richText" ? new FB(a) : new zB(a, {
          appendTo: n.get("appendToBody", !0) ? "body" : n.get("appendTo", !0)
        });
      }
    }, t.prototype.render = function(e, a, n) {
      if (!(Oe.node || !n.getDom())) {
        this.group.removeAll(), this._tooltipModel = e, this._ecModel = a, this._api = n;
        var i = this._tooltipContent;
        i.update(e), i.setEnterable(e.get("enterable")), this._initGlobalListener(), this._keepShow(), this._renderMode !== "richText" && e.get("transitionDuration") ? jn(this, "_updatePosition", 50, "fixRate") : Ki(this, "_updatePosition");
      }
    }, t.prototype._initGlobalListener = function() {
      var e = this._tooltipModel, a = e.get("triggerOn");
      Cb("itemTooltip", this._api, U(function(n, i, o) {
        a !== "none" && (a.indexOf(n) >= 0 ? this._tryShow(i, o) : n === "leave" && this._hide(o));
      }, this));
    }, t.prototype._keepShow = function() {
      var e = this._tooltipModel, a = this._ecModel, n = this._api, i = e.get("triggerOn");
      if (this._lastX != null && this._lastY != null && i !== "none" && i !== "click") {
        var o = this;
        clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {
          !n.isDisposed() && o.manuallyShowTip(e, a, n, {
            x: o._lastX,
            y: o._lastY,
            dataByCoordSys: o._lastDataByCoordSys
          });
        });
      }
    }, t.prototype.manuallyShowTip = function(e, a, n, i) {
      if (!(i.from === this.uid || Oe.node || !n.getDom())) {
        var o = Bm(i, n);
        this._ticket = "";
        var s = i.dataByCoordSys, l = ZB(i, a, n);
        if (l) {
          var u = l.el.getBoundingRect().clone();
          u.applyTransform(l.el.transform), this._tryShow({
            offsetX: u.x + u.width / 2,
            offsetY: u.y + u.height / 2,
            target: l.el,
            position: i.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, o);
        } else if (i.tooltip && i.x != null && i.y != null) {
          var c = HB;
          c.x = i.x, c.y = i.y, c.update(), j(c).tooltipConfig = {
            name: null,
            option: i.tooltip
          }, this._tryShow({
            offsetX: i.x,
            offsetY: i.y,
            target: c
          }, o);
        } else if (s)
          this._tryShow({
            offsetX: i.x,
            offsetY: i.y,
            position: i.position,
            dataByCoordSys: s,
            tooltipOption: i.tooltipOption
          }, o);
        else if (i.seriesIndex != null) {
          if (this._manuallyAxisShowTip(e, a, n, i))
            return;
          var v = Mb(i, a), f = v.point[0], h = v.point[1];
          f != null && h != null && this._tryShow({
            offsetX: f,
            offsetY: h,
            target: v.el,
            position: i.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, o);
        } else i.x != null && i.y != null && (n.dispatchAction({
          type: "updateAxisPointer",
          x: i.x,
          y: i.y
        }), this._tryShow({
          offsetX: i.x,
          offsetY: i.y,
          position: i.position,
          target: n.getZr().findHover(i.x, i.y).target
        }, o));
      }
    }, t.prototype.manuallyHideTip = function(e, a, n, i) {
      var o = this._tooltipContent;
      this._tooltipModel && o.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = this._lastDataByCoordSys = null, i.from !== this.uid && this._hide(Bm(i, n));
    }, t.prototype._manuallyAxisShowTip = function(e, a, n, i) {
      var o = i.seriesIndex, s = i.dataIndex, l = a.getComponent("axisPointer").coordSysAxesInfo;
      if (!(o == null || s == null || l == null)) {
        var u = a.getSeriesByIndex(o);
        if (u) {
          var c = u.getData(), v = _i([c.getItemModel(s), u, (u.coordinateSystem || {}).model], this._tooltipModel);
          if (v.get("trigger") === "axis")
            return n.dispatchAction({
              type: "updateAxisPointer",
              seriesIndex: o,
              dataIndex: s,
              position: i.position
            }), !0;
        }
      }
    }, t.prototype._tryShow = function(e, a) {
      var n = e.target, i = this._tooltipModel;
      if (i) {
        this._lastX = e.offsetX, this._lastY = e.offsetY;
        var o = e.dataByCoordSys;
        if (o && o.length)
          this._showAxisTooltip(o, e);
        else if (n) {
          var s = j(n);
          if (s.ssrType === "legend")
            return;
          this._lastDataByCoordSys = null;
          var l, u;
          Ta(n, function(c) {
            if (j(c).dataIndex != null)
              return l = c, !0;
            if (j(c).tooltipConfig != null)
              return u = c, !0;
          }, !0), l ? this._showSeriesItemTooltip(e, l, a) : u ? this._showComponentItemTooltip(e, u, a) : this._hide(a);
        } else
          this._lastDataByCoordSys = null, this._hide(a);
      }
    }, t.prototype._showOrMove = function(e, a) {
      var n = e.get("showDelay");
      a = U(a, this), clearTimeout(this._showTimout), n > 0 ? this._showTimout = setTimeout(a, n) : a();
    }, t.prototype._showAxisTooltip = function(e, a) {
      var n = this._ecModel, i = this._tooltipModel, o = [a.offsetX, a.offsetY], s = _i([a.tooltipOption], i), l = this._renderMode, u = [], c = rt("section", {
        blocks: [],
        noHeader: !0
      }), v = [], f = new pu();
      w(e, function(m) {
        w(m.dataByAxis, function(_) {
          var S = n.getComponent(_.axisDim + "Axis", _.axisIndex), x = _.value;
          if (!(!S || x == null)) {
            var b = Db(x, S.axis, n, _.seriesDataIndices, _.valueLabelOpt), D = rt("section", {
              header: b,
              noHeader: !uo(b),
              sortBlocks: !0,
              blocks: []
            });
            c.blocks.push(D), w(_.seriesDataIndices, function(A) {
              var T = n.getSeriesByIndex(A.seriesIndex), C = A.dataIndexInside, M = T.getDataParams(C);
              if (!(M.dataIndex < 0)) {
                M.axisDim = _.axisDim, M.axisIndex = _.axisIndex, M.axisType = _.axisType, M.axisId = _.axisId, M.axisValue = Xf(S.axis, {
                  value: x
                }), M.axisValueLabel = b, M.marker = f.makeTooltipMarker("item", Ga(M.color), l);
                var I = Xp(T.formatTooltip(C, !0, null)), L = I.frag;
                if (L) {
                  var P = _i([T], i).get("valueFormatter");
                  D.blocks.push(P ? z({
                    valueFormatter: P
                  }, L) : L);
                }
                I.text && v.push(I.text), u.push(M);
              }
            });
          }
        });
      }), c.blocks.reverse(), v.reverse();
      var h = a.position, p = s.get("order"), d = ed(c, f, l, p, n.get("useUTC"), s.get("textStyle"));
      d && v.unshift(d);
      var g = l === "richText" ? `

` : "<br/>", y = v.join(g);
      this._showOrMove(s, function() {
        this._updateContentNotChangedOnAxis(e, u) ? this._updatePosition(s, h, o[0], o[1], this._tooltipContent, u) : this._showTooltipContent(s, y, u, Math.random() + "", o[0], o[1], h, null, f);
      });
    }, t.prototype._showSeriesItemTooltip = function(e, a, n) {
      var i = this._ecModel, o = j(a), s = o.seriesIndex, l = i.getSeriesByIndex(s), u = o.dataModel || l, c = o.dataIndex, v = o.dataType, f = u.getData(v), h = this._renderMode, p = e.positionDefault, d = _i([f.getItemModel(c), u, l && (l.coordinateSystem || {}).model], this._tooltipModel, p ? {
        position: p
      } : null), g = d.get("trigger");
      if (!(g != null && g !== "item")) {
        var y = u.getDataParams(c, v), m = new pu();
        y.marker = m.makeTooltipMarker("item", Ga(y.color), h);
        var _ = Xp(u.formatTooltip(c, !1, v)), S = d.get("order"), x = d.get("valueFormatter"), b = _.frag, D = b ? ed(x ? z({
          valueFormatter: x
        }, b) : b, m, h, S, i.get("useUTC"), d.get("textStyle")) : _.text, A = "item_" + u.name + "_" + c;
        this._showOrMove(d, function() {
          this._showTooltipContent(d, D, y, A, e.offsetX, e.offsetY, e.position, e.target, m);
        }), n({
          type: "showTip",
          dataIndexInside: c,
          dataIndex: f.getRawIndex(c),
          seriesIndex: s,
          from: this.uid
        });
      }
    }, t.prototype._showComponentItemTooltip = function(e, a, n) {
      var i = this._renderMode === "html", o = j(a), s = o.tooltipConfig, l = s.option || {}, u = l.encodeHTMLContent;
      if (Y(l)) {
        var c = l;
        l = {
          content: c,
          // Fixed formatter
          formatter: c
        }, u = !0;
      }
      u && i && l.content && (l = Q(l), l.content = Tt(l.content));
      var v = [l], f = this._ecModel.getComponent(o.componentMainType, o.componentIndex);
      f && v.push(f), v.push({
        formatter: l.content
      });
      var h = e.positionDefault, p = _i(v, this._tooltipModel, h ? {
        position: h
      } : null), d = p.get("content"), g = Math.random() + "", y = new pu();
      this._showOrMove(p, function() {
        var m = Q(p.get("formatterParams") || {});
        this._showTooltipContent(p, d, m, g, e.offsetX, e.offsetY, e.position, a, y);
      }), n({
        type: "showTip",
        from: this.uid
      });
    }, t.prototype._showTooltipContent = function(e, a, n, i, o, s, l, u, c) {
      if (this._ticket = "", !(!e.get("showContent") || !e.get("show"))) {
        var v = this._tooltipContent;
        v.setEnterable(e.get("enterable"));
        var f = e.get("formatter");
        l = l || e.get("position");
        var h = a, p = this._getNearestPoint([o, s], n, e.get("trigger"), e.get("borderColor")), d = p.color;
        if (f)
          if (Y(f)) {
            var g = e.ecModel.get("useUTC"), y = B(n) ? n[0] : n, m = y && y.axisType && y.axisType.indexOf("time") >= 0;
            h = f, m && (h = Il(y.axisValue, h, g)), h = G_(h, n, !0);
          } else if (X(f)) {
            var _ = U(function(S, x) {
              S === this._ticket && (v.setContent(x, c, e, d, l), this._updatePosition(e, l, o, s, v, n, u));
            }, this);
            this._ticket = i, h = f(n, i, _);
          } else
            h = f;
        v.setContent(h, c, e, d, l), v.show(e, d), this._updatePosition(e, l, o, s, v, n, u);
      }
    }, t.prototype._getNearestPoint = function(e, a, n, i) {
      if (n === "axis" || B(a))
        return {
          color: i || (this._renderMode === "html" ? "#fff" : "none")
        };
      if (!B(a))
        return {
          color: i || a.color || a.borderColor
        };
    }, t.prototype._updatePosition = function(e, a, n, i, o, s, l) {
      var u = this._api.getWidth(), c = this._api.getHeight();
      a = a || e.get("position");
      var v = o.getSize(), f = e.get("align"), h = e.get("verticalAlign"), p = l && l.getBoundingRect().clone();
      if (l && p.applyTransform(l.transform), X(a) && (a = a([n, i], s, o.el, p, {
        viewSize: [u, c],
        contentSize: v.slice()
      })), B(a))
        n = H(a[0], u), i = H(a[1], c);
      else if (J(a)) {
        var d = a;
        d.width = v[0], d.height = v[1];
        var g = qe(d, {
          width: u,
          height: c
        });
        n = g.x, i = g.y, f = null, h = null;
      } else if (Y(a) && l) {
        var y = YB(a, p, v, e.get("borderWidth"));
        n = y[0], i = y[1];
      } else {
        var y = UB(n, i, o, u, c, f ? null : 20, h ? null : 20);
        n = y[0], i = y[1];
      }
      if (f && (n -= zm(f) ? v[0] / 2 : f === "right" ? v[0] : 0), h && (i -= zm(h) ? v[1] / 2 : h === "bottom" ? v[1] : 0), Hb(e)) {
        var y = $B(n, i, o, u, c);
        n = y[0], i = y[1];
      }
      o.moveTo(n, i);
    }, t.prototype._updateContentNotChangedOnAxis = function(e, a) {
      var n = this._lastDataByCoordSys, i = this._cbParamsList, o = !!n && n.length === e.length;
      return o && w(n, function(s, l) {
        var u = s.dataByAxis || [], c = e[l] || {}, v = c.dataByAxis || [];
        o = o && u.length === v.length, o && w(u, function(f, h) {
          var p = v[h] || {}, d = f.seriesDataIndices || [], g = p.seriesDataIndices || [];
          o = o && f.value === p.value && f.axisType === p.axisType && f.axisId === p.axisId && d.length === g.length, o && w(d, function(y, m) {
            var _ = g[m];
            o = o && y.seriesIndex === _.seriesIndex && y.dataIndex === _.dataIndex;
          }), i && w(f.seriesDataIndices, function(y) {
            var m = y.seriesIndex, _ = a[m], S = i[m];
            _ && S && S.data !== _.data && (o = !1);
          });
        });
      }), this._lastDataByCoordSys = e, this._cbParamsList = a, !!o;
    }, t.prototype._hide = function(e) {
      this._lastDataByCoordSys = null, e({
        type: "hideTip",
        from: this.uid
      });
    }, t.prototype.dispose = function(e, a) {
      Oe.node || !a.getDom() || (Ki(this, "_updatePosition"), this._tooltipContent.dispose(), Fv("itemTooltip", a));
    }, t.type = "tooltip", t;
  }(Re)
);
function _i(r, t, e) {
  var a = t.ecModel, n;
  e ? (n = new me(e, a, a), n = new me(t.option, n, a)) : n = t;
  for (var i = r.length - 1; i >= 0; i--) {
    var o = r[i];
    o && (o instanceof me && (o = o.get("tooltip", !0)), Y(o) && (o = {
      formatter: o
    }), o && (n = new me(o, n, a)));
  }
  return n;
}
function Bm(r, t) {
  return r.dispatchAction || U(t.dispatchAction, t);
}
function UB(r, t, e, a, n, i, o) {
  var s = e.getSize(), l = s[0], u = s[1];
  return i != null && (r + l + i + 2 > a ? r -= l + i : r += i), o != null && (t + u + o > n ? t -= u + o : t += o), [r, t];
}
function $B(r, t, e, a, n) {
  var i = e.getSize(), o = i[0], s = i[1];
  return r = Math.min(r + o, a) - o, t = Math.min(t + s, n) - s, r = Math.max(r, 0), t = Math.max(t, 0), [r, t];
}
function YB(r, t, e, a) {
  var n = e[0], i = e[1], o = Math.ceil(Math.SQRT2 * a) + 8, s = 0, l = 0, u = t.width, c = t.height;
  switch (r) {
    case "inside":
      s = t.x + u / 2 - n / 2, l = t.y + c / 2 - i / 2;
      break;
    case "top":
      s = t.x + u / 2 - n / 2, l = t.y - i - o;
      break;
    case "bottom":
      s = t.x + u / 2 - n / 2, l = t.y + c + o;
      break;
    case "left":
      s = t.x - n - o, l = t.y + c / 2 - i / 2;
      break;
    case "right":
      s = t.x + u + o, l = t.y + c / 2 - i / 2;
  }
  return [s, l];
}
function zm(r) {
  return r === "center" || r === "middle";
}
function ZB(r, t, e) {
  var a = vf(r).queryOptionMap, n = a.keys()[0];
  if (!(!n || n === "series")) {
    var i = fo(t, n, a.get(n), {
      useDefault: !1,
      enableAll: !1,
      enableNone: !1
    }), o = i.models[0];
    if (o) {
      var s = e.getViewOfComponentModel(o), l;
      if (s.group.traverse(function(u) {
        var c = j(u).tooltipConfig;
        if (c && c.name === r.name)
          return l = u, !0;
      }), l)
        return {
          componentMainType: n,
          componentIndex: o.componentIndex,
          el: l
        };
    }
  }
}
function XB(r) {
  oe(Mo), r.registerComponentModel(IB), r.registerComponentView(WB), r.registerAction({
    type: "showTip",
    event: "showTip",
    update: "tooltip:manuallyShowTip"
  }, _t), r.registerAction({
    type: "hideTip",
    event: "hideTip",
    update: "tooltip:manuallyHideTip"
  }, _t);
}
var KB = ["rect", "polygon", "keep", "clear"];
function qB(r, t) {
  var e = we(r ? r.brush : []);
  if (e.length) {
    var a = [];
    w(e, function(l) {
      var u = l.hasOwnProperty("toolbox") ? l.toolbox : [];
      u instanceof Array && (a = a.concat(u));
    });
    var n = r && r.toolbox;
    B(n) && (n = n[0]), n || (n = {
      feature: {}
    }, r.toolbox = [n]);
    var i = n.feature || (n.feature = {}), o = i.brush || (i.brush = {}), s = o.type || (o.type = []);
    s.push.apply(s, a), jB(s), t && !s.length && s.push.apply(s, KB);
  }
}
function jB(r) {
  var t = {};
  w(r, function(e) {
    t[e] = 1;
  }), r.length = 0, w(t, function(e, a) {
    r.push(a);
  });
}
var Gm = w;
function Fm(r) {
  if (r) {
    for (var t in r)
      if (r.hasOwnProperty(t))
        return !0;
  }
}
function Xv(r, t, e) {
  var a = {};
  return Gm(t, function(i) {
    var o = a[i] = n();
    Gm(r[i], function(s, l) {
      if (et.isValidType(l)) {
        var u = {
          type: l,
          visual: s
        };
        e && e(u, i), o[l] = new et(u), l === "opacity" && (u = Q(u), u.type = "colorAlpha", o.__hidden.__alphaForOpacity = new et(u));
      }
    });
  }), a;
  function n() {
    var i = function() {
    };
    i.prototype.__hidden = i.prototype;
    var o = new i();
    return o;
  }
}
function Yb(r, t, e) {
  var a;
  w(e, function(n) {
    t.hasOwnProperty(n) && Fm(t[n]) && (a = !0);
  }), a && w(e, function(n) {
    t.hasOwnProperty(n) && Fm(t[n]) ? r[n] = Q(t[n]) : delete r[n];
  });
}
function JB(r, t, e, a, n, i) {
  var o = {};
  w(r, function(v) {
    var f = et.prepareVisualTypes(t[v]);
    o[v] = f;
  });
  var s;
  function l(v) {
    return Bf(e, s, v);
  }
  function u(v, f) {
    IS(e, s, v, f);
  }
  e.each(c);
  function c(v, f) {
    s = v;
    var h = e.getRawDataItem(s);
    if (!(h && h.visualMap === !1))
      for (var p = a.call(n, v), d = t[p], g = o[p], y = 0, m = g.length; y < m; y++) {
        var _ = g[y];
        d[_] && d[_].applyVisual(v, l, u);
      }
  }
}
function QB(r, t, e, a) {
  var n = {};
  return w(r, function(i) {
    var o = et.prepareVisualTypes(t[i]);
    n[i] = o;
  }), {
    progress: function(o, s) {
      var l;
      a != null && (l = s.getDimensionIndex(a));
      function u(x) {
        return Bf(s, v, x);
      }
      function c(x, b) {
        IS(s, v, x, b);
      }
      for (var v, f = s.getStore(); (v = o.next()) != null; ) {
        var h = s.getRawDataItem(v);
        if (!(h && h.visualMap === !1))
          for (var p = a != null ? f.get(l, v) : v, d = e(p), g = t[d], y = n[d], m = 0, _ = y.length; m < _; m++) {
            var S = y[m];
            g[S] && g[S].applyVisual(p, u, c);
          }
      }
    }
  };
}
function ez(r) {
  var t = r.brushType, e = {
    point: function(a) {
      return Hm[t].point(a, e, r);
    },
    rect: function(a) {
      return Hm[t].rect(a, e, r);
    }
  };
  return e;
}
var Hm = {
  lineX: Wm(0),
  lineY: Wm(1),
  rect: {
    point: function(r, t, e) {
      return r && e.boundingRect.contain(r[0], r[1]);
    },
    rect: function(r, t, e) {
      return r && e.boundingRect.intersect(r);
    }
  },
  polygon: {
    point: function(r, t, e) {
      return r && e.boundingRect.contain(r[0], r[1]) && Sa(e.range, r[0], r[1]);
    },
    rect: function(r, t, e) {
      var a = e.range;
      if (!r || a.length <= 1)
        return !1;
      var n = r.x, i = r.y, o = r.width, s = r.height, l = a[0];
      if (Sa(a, n, i) || Sa(a, n + o, i) || Sa(a, n, i + s) || Sa(a, n + o, i + s) || Te.create(r).contain(l[0], l[1]) || Di(n, i, n + o, i, a) || Di(n, i, n, i + s, a) || Di(n + o, i, n + o, i + s, a) || Di(n, i + s, n + o, i + s, a))
        return !0;
    }
  }
};
function Wm(r) {
  var t = ["x", "y"], e = ["width", "height"];
  return {
    point: function(a, n, i) {
      if (a) {
        var o = i.range, s = a[r];
        return Si(s, o);
      }
    },
    rect: function(a, n, i) {
      if (a) {
        var o = i.range, s = [a[t[r]], a[t[r]] + a[e[r]]];
        return s[1] < s[0] && s.reverse(), Si(s[0], o) || Si(s[1], o) || Si(o[0], s) || Si(o[1], s);
      }
    }
  };
}
function Si(r, t) {
  return t[0] <= r && r <= t[1];
}
var Um = ["inBrush", "outOfBrush"], Ic = "__ecBrushSelect", Kv = "__ecInBrushSelectEvent";
function Zb(r) {
  r.eachComponent({
    mainType: "brush"
  }, function(t) {
    var e = t.brushTargetManager = new zh(t.option, r);
    e.setInputRanges(t.areas, r);
  });
}
function tz(r, t, e) {
  var a = [], n, i;
  r.eachComponent({
    mainType: "brush"
  }, function(o) {
    e && e.type === "takeGlobalCursor" && o.setBrushOption(e.key === "brush" ? e.brushOption : {
      brushType: !1
    });
  }), Zb(r), r.eachComponent({
    mainType: "brush"
  }, function(o, s) {
    var l = {
      brushId: o.id,
      brushIndex: s,
      brushName: o.name,
      areas: Q(o.areas),
      selected: []
    };
    a.push(l);
    var u = o.option, c = u.brushLink, v = [], f = [], h = [], p = !1;
    s || (n = u.throttleType, i = u.throttleDelay);
    var d = G(o.areas, function(x) {
      var b = iz[x.brushType], D = ee({
        boundingRect: b ? b(x) : void 0
      }, x);
      return D.selectors = ez(D), D;
    }), g = Xv(o.option, Um, function(x) {
      x.mappingMethod = "fixed";
    });
    B(c) && w(c, function(x) {
      v[x] = 1;
    });
    function y(x) {
      return c === "all" || !!v[x];
    }
    function m(x) {
      return !!x.length;
    }
    r.eachSeries(function(x, b) {
      var D = h[b] = [];
      x.subType === "parallel" ? _(x, b) : S(x, b, D);
    });
    function _(x, b) {
      var D = x.coordinateSystem;
      p = p || D.hasAxisBrushed(), y(b) && D.eachActiveState(x.getData(), function(A, T) {
        A === "active" && (f[T] = 1);
      });
    }
    function S(x, b, D) {
      if (!(!x.brushSelector || nz(o, b)) && (w(d, function(T) {
        o.brushTargetManager.controlSeries(T, x, r) && D.push(T), p = p || m(D);
      }), y(b) && m(D))) {
        var A = x.getData();
        A.each(function(T) {
          $m(x, D, A, T) && (f[T] = 1);
        });
      }
    }
    r.eachSeries(function(x, b) {
      var D = {
        seriesId: x.id,
        seriesIndex: b,
        seriesName: x.name,
        dataIndex: []
      };
      l.selected.push(D);
      var A = h[b], T = x.getData(), C = y(b) ? function(M) {
        return f[M] ? (D.dataIndex.push(T.getRawIndex(M)), "inBrush") : "outOfBrush";
      } : function(M) {
        return $m(x, A, T, M) ? (D.dataIndex.push(T.getRawIndex(M)), "inBrush") : "outOfBrush";
      };
      (y(b) ? p : m(A)) && JB(Um, g, T, C);
    });
  }), rz(t, n, i, a, e);
}
function rz(r, t, e, a, n) {
  if (n) {
    var i = r.getZr();
    if (!i[Kv]) {
      i[Ic] || (i[Ic] = az);
      var o = jn(i, Ic, e, t);
      o(r, a);
    }
  }
}
function az(r, t) {
  if (!r.isDisposed()) {
    var e = r.getZr();
    e[Kv] = !0, r.dispatchAction({
      type: "brushSelect",
      batch: t
    }), e[Kv] = !1;
  }
}
function $m(r, t, e, a) {
  for (var n = 0, i = t.length; n < i; n++) {
    var o = t[n];
    if (r.brushSelector(a, e, o.selectors, o))
      return !0;
  }
}
function nz(r, t) {
  var e = r.option.seriesIndex;
  return e != null && e !== "all" && (B(e) ? fe(e, t) < 0 : t !== e);
}
var iz = {
  rect: function(r) {
    return Ym(r.range);
  },
  polygon: function(r) {
    for (var t, e = r.range, a = 0, n = e.length; a < n; a++) {
      t = t || [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
      var i = e[a];
      i[0] < t[0][0] && (t[0][0] = i[0]), i[0] > t[0][1] && (t[0][1] = i[0]), i[1] < t[1][0] && (t[1][0] = i[1]), i[1] > t[1][1] && (t[1][1] = i[1]);
    }
    return t && Ym(t);
  }
};
function Ym(r) {
  return new Te(r[0][0], r[1][0], r[0][1] - r[0][0], r[1][1] - r[1][0]);
}
var oz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e, a) {
      this.ecModel = e, this.api = a, this.model, (this._brushController = new ph(a.getZr())).on("brush", U(this._onBrush, this)).mount();
    }, t.prototype.render = function(e, a, n, i) {
      this.model = e, this._updateController(e, a, n, i);
    }, t.prototype.updateTransform = function(e, a, n, i) {
      Zb(a), this._updateController(e, a, n, i);
    }, t.prototype.updateVisual = function(e, a, n, i) {
      this.updateTransform(e, a, n, i);
    }, t.prototype.updateView = function(e, a, n, i) {
      this._updateController(e, a, n, i);
    }, t.prototype._updateController = function(e, a, n, i) {
      (!i || i.$from !== e.id) && this._brushController.setPanels(e.brushTargetManager.makePanelOpts(n)).enableBrush(e.brushOption).updateCovers(e.areas.slice());
    }, t.prototype.dispose = function() {
      this._brushController.dispose();
    }, t.prototype._onBrush = function(e) {
      var a = this.model.id, n = this.model.brushTargetManager.setOutputRanges(e.areas, this.ecModel);
      (!e.isEnd || e.removeOnClick) && this.api.dispatchAction({
        type: "brush",
        brushId: a,
        areas: Q(n),
        $from: a
      }), e.isEnd && this.api.dispatchAction({
        type: "brushEnd",
        brushId: a,
        areas: Q(n),
        $from: a
      });
    }, t.type = "brush", t;
  }(Re)
), sz = { env: {} }, lz = "#ddd", uz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.areas = [], e.brushOption = {}, e;
    }
    return t.prototype.optionUpdated = function(e, a) {
      var n = this.option;
      !a && Yb(n, e, ["inBrush", "outOfBrush"]);
      var i = n.inBrush = n.inBrush || {};
      n.outOfBrush = n.outOfBrush || {
        color: lz
      }, i.hasOwnProperty("liftZ") || (i.liftZ = 5);
    }, t.prototype.setAreas = function(e) {
      sz.env.NODE_ENV !== "production" && (K(B(e)), w(e, function(a) {
        K(a.brushType, "Illegal areas");
      })), e && (this.areas = G(e, function(a) {
        return Zm(this.option, a);
      }, this));
    }, t.prototype.setBrushOption = function(e) {
      this.brushOption = Zm(this.option, e), this.brushType = this.brushOption.brushType;
    }, t.type = "brush", t.dependencies = ["geo", "grid", "xAxis", "yAxis", "parallel", "series"], t.defaultOption = {
      seriesIndex: "all",
      brushType: "rect",
      brushMode: "single",
      transformable: !0,
      brushStyle: {
        borderWidth: 1,
        color: "rgba(210,219,238,0.3)",
        borderColor: "#D2DBEE"
      },
      throttleType: "fixRate",
      throttleDelay: 0,
      removeOnClick: !0,
      z: 1e4
    }, t;
  }(se)
);
function Zm(r, t) {
  return le({
    brushType: r.brushType,
    brushMode: r.brushMode,
    transformable: r.transformable,
    brushStyle: new me(r.brushStyle).getItemStyle(),
    removeOnClick: r.removeOnClick,
    z: r.z
  }, t, !0);
}
var cz = ["rect", "polygon", "lineX", "lineY", "keep", "clear"], vz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return t.prototype.render = function(e, a, n) {
      var i, o, s;
      a.eachComponent({
        mainType: "brush"
      }, function(l) {
        i = l.brushType, o = l.brushOption.brushMode || "single", s = s || !!l.areas.length;
      }), this._brushType = i, this._brushMode = o, w(e.get("type", !0), function(l) {
        e.setIconStatus(l, (l === "keep" ? o === "multiple" : l === "clear" ? s : l === i) ? "emphasis" : "normal");
      });
    }, t.prototype.updateView = function(e, a, n) {
      this.render(e, a, n);
    }, t.prototype.getIcons = function() {
      var e = this.model, a = e.get("icon", !0), n = {};
      return w(e.get("type", !0), function(i) {
        a[i] && (n[i] = a[i]);
      }), n;
    }, t.prototype.onclick = function(e, a, n) {
      var i = this._brushType, o = this._brushMode;
      n === "clear" ? (a.dispatchAction({
        type: "axisAreaSelect",
        intervals: []
      }), a.dispatchAction({
        type: "brush",
        command: "clear",
        // Clear all areas of all brush components.
        areas: []
      })) : a.dispatchAction({
        type: "takeGlobalCursor",
        key: "brush",
        brushOption: {
          brushType: n === "keep" ? i : i === n ? !1 : n,
          brushMode: n === "keep" ? o === "multiple" ? "single" : "multiple" : o
        }
      });
    }, t.getDefaultOption = function(e) {
      var a = {
        show: !0,
        type: cz.slice(),
        icon: {
          /* eslint-disable */
          rect: "M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13",
          polygon: "M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2",
          lineX: "M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4",
          lineY: "M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4",
          keep: "M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z",
          clear: "M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2"
          // jshint ignore:line
          /* eslint-enable */
        },
        // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`
        title: e.getLocaleModel().get(["toolbox", "brush", "title"])
      };
      return a;
    }, t;
  }(Ot)
);
function fz(r) {
  r.registerComponentView(oz), r.registerComponentModel(uz), r.registerPreprocessor(qB), r.registerVisual(r.PRIORITY.VISUAL.BRUSH, tz), r.registerAction({
    type: "brush",
    event: "brush",
    update: "updateVisual"
  }, function(t, e) {
    e.eachComponent({
      mainType: "brush",
      query: t
    }, function(a) {
      a.setAreas(t.areas);
    });
  }), r.registerAction({
    type: "brushSelect",
    event: "brushSelected",
    update: "none"
  }, _t), r.registerAction({
    type: "brushEnd",
    event: "brushEnd",
    update: "none"
  }, _t), dn("brush", vz);
}
var hz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, e;
    }
    return t.type = "title", t.defaultOption = {
      // zlevel: 0,
      z: 6,
      show: !0,
      text: "",
      target: "blank",
      subtext: "",
      subtarget: "blank",
      left: 0,
      top: 0,
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      textStyle: {
        fontSize: 18,
        fontWeight: "bold",
        color: "#464646"
      },
      subtextStyle: {
        fontSize: 12,
        color: "#6E7079"
      }
    }, t;
  }(se)
), pz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.render = function(e, a, n) {
      if (this.group.removeAll(), !!e.get("show")) {
        var i = this.group, o = e.getModel("textStyle"), s = e.getModel("subtextStyle"), l = e.get("textAlign"), u = ce(e.get("textBaseline"), e.get("textVerticalAlign")), c = new ve({
          style: Ie(o, {
            text: e.get("text"),
            fill: o.getTextColor()
          }, {
            disableBox: !0
          }),
          z2: 10
        }), v = c.getBoundingRect(), f = e.get("subtext"), h = new ve({
          style: Ie(s, {
            text: f,
            fill: s.getTextColor(),
            y: v.height + e.get("itemGap"),
            verticalAlign: "top"
          }, {
            disableBox: !0
          }),
          z2: 10
        }), p = e.get("link"), d = e.get("sublink"), g = e.get("triggerEvent", !0);
        c.silent = !p && !g, h.silent = !d && !g, p && c.on("click", function() {
          Ws(p, "_" + e.get("target"));
        }), d && h.on("click", function() {
          Ws(d, "_" + e.get("subtarget"));
        }), j(c).eventData = j(h).eventData = g ? {
          componentType: "title",
          componentIndex: e.componentIndex
        } : null, i.add(c), f && i.add(h);
        var y = i.getBoundingRect(), m = e.getBoxLayoutParams();
        m.width = y.width, m.height = y.height;
        var _ = qe(m, {
          width: n.getWidth(),
          height: n.getHeight()
        }, e.get("padding"));
        l || (l = e.get("left") || e.get("right"), l === "middle" && (l = "center"), l === "right" ? _.x += _.width : l === "center" && (_.x += _.width / 2)), u || (u = e.get("top") || e.get("bottom"), u === "center" && (u = "middle"), u === "bottom" ? _.y += _.height : u === "middle" && (_.y += _.height / 2), u = u || "top"), i.x = _.x, i.y = _.y, i.markRedraw();
        var S = {
          align: l,
          verticalAlign: u
        };
        c.setStyle(S), h.setStyle(S), y = i.getBoundingRect();
        var x = _.margin, b = e.getItemStyle(["color", "opacity"]);
        b.fill = e.get("backgroundColor");
        var D = new de({
          shape: {
            x: y.x - x[3],
            y: y.y - x[0],
            width: y.width + x[1] + x[3],
            height: y.height + x[0] + x[2],
            r: e.get("borderRadius")
          },
          style: b,
          subPixelOptimize: !0,
          silent: !0
        });
        i.add(D);
      }
    }, t.type = "title", t;
  }(Re)
);
function dz(r) {
  r.registerComponentModel(hz), r.registerComponentView(pz);
}
var Xm = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.layoutMode = "box", e;
    }
    return t.prototype.init = function(e, a, n) {
      this.mergeDefaultAndTheme(e, n), this._initData();
    }, t.prototype.mergeOption = function(e) {
      r.prototype.mergeOption.apply(this, arguments), this._initData();
    }, t.prototype.setCurrentIndex = function(e) {
      e == null && (e = this.option.currentIndex);
      var a = this._data.count();
      this.option.loop ? e = (e % a + a) % a : (e >= a && (e = a - 1), e < 0 && (e = 0)), this.option.currentIndex = e;
    }, t.prototype.getCurrentIndex = function() {
      return this.option.currentIndex;
    }, t.prototype.isIndexMax = function() {
      return this.getCurrentIndex() >= this._data.count() - 1;
    }, t.prototype.setPlayState = function(e) {
      this.option.autoPlay = !!e;
    }, t.prototype.getPlayState = function() {
      return !!this.option.autoPlay;
    }, t.prototype._initData = function() {
      var e = this.option, a = e.data || [], n = e.axisType, i = this._names = [], o;
      n === "category" ? (o = [], w(a, function(u, c) {
        var v = Ke(Gn(u), ""), f;
        J(u) ? (f = Q(u), f.value = c) : f = c, o.push(f), i.push(v);
      })) : o = a;
      var s = {
        category: "ordinal",
        time: "time",
        value: "number"
      }[n] || "number", l = this._data = new yt([{
        name: "value",
        type: s
      }], this);
      l.initData(o, i);
    }, t.prototype.getData = function() {
      return this._data;
    }, t.prototype.getCategories = function() {
      if (this.get("axisType") === "category")
        return this._names.slice();
    }, t.type = "timeline", t.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 4,
      show: !0,
      axisType: "time",
      realtime: !0,
      left: "20%",
      top: null,
      right: "20%",
      bottom: 0,
      width: null,
      height: 40,
      padding: 5,
      controlPosition: "left",
      autoPlay: !1,
      rewind: !1,
      loop: !0,
      playInterval: 2e3,
      currentIndex: 0,
      itemStyle: {},
      label: {
        color: "#000"
      },
      data: []
    }, t;
  }(se)
), Xb = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "timeline.slider", t.defaultOption = oa(Xm.defaultOption, {
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      orient: "horizontal",
      inverse: !1,
      tooltip: {
        trigger: "item"
        // data item may also have tootip attr.
      },
      symbol: "circle",
      symbolSize: 12,
      lineStyle: {
        show: !0,
        width: 2,
        color: "#DAE1F5"
      },
      label: {
        position: "auto",
        // When using number, label position is not
        // restricted by viewRect.
        // positive: right/bottom, negative: left/top
        show: !0,
        interval: "auto",
        rotate: 0,
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#A4B1D7"
      },
      itemStyle: {
        color: "#A4B1D7",
        borderWidth: 1
      },
      checkpointStyle: {
        symbol: "circle",
        symbolSize: 15,
        color: "#316bf3",
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0, 0, 0, 0.3)",
        // borderColor: 'rgba(194,53,49, 0.5)',
        animation: !0,
        animationDuration: 300,
        animationEasing: "quinticInOut"
      },
      controlStyle: {
        show: !0,
        showPlayBtn: !0,
        showPrevBtn: !0,
        showNextBtn: !0,
        itemSize: 24,
        itemGap: 12,
        position: "left",
        playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z",
        stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z",
        // eslint-disable-next-line max-len
        nextIcon: "M2,18.5A1.52,1.52,0,0,1,.92,18a1.49,1.49,0,0,1,0-2.12L7.81,9.36,1,3.11A1.5,1.5,0,1,1,3,.89l8,7.34a1.48,1.48,0,0,1,.49,1.09,1.51,1.51,0,0,1-.46,1.1L3,18.08A1.5,1.5,0,0,1,2,18.5Z",
        // eslint-disable-next-line max-len
        prevIcon: "M10,.5A1.52,1.52,0,0,1,11.08,1a1.49,1.49,0,0,1,0,2.12L4.19,9.64,11,15.89a1.5,1.5,0,1,1-2,2.22L1,10.77A1.48,1.48,0,0,1,.5,9.68,1.51,1.51,0,0,1,1,8.58L9,.92A1.5,1.5,0,0,1,10,.5Z",
        prevBtnSize: 18,
        nextBtnSize: 18,
        color: "#A4B1D7",
        borderColor: "#A4B1D7",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0,
          // 其余属性默认使用全局文本样式，详见TEXTSTYLE
          color: "#6f778d"
        },
        itemStyle: {
          color: "#316BF3"
        },
        controlStyle: {
          color: "#316BF3",
          borderColor: "#316BF3",
          borderWidth: 2
        }
      },
      progress: {
        lineStyle: {
          color: "#316BF3"
        },
        itemStyle: {
          color: "#316BF3"
        },
        label: {
          color: "#6f778d"
        }
      },
      data: []
    }), t;
  }(Xm)
);
at(Xb, Ol.prototype);
var gz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "timeline", t;
  }(Re)
), yz = (
  /** @class */
  function(r) {
    R(t, r);
    function t(e, a, n, i) {
      var o = r.call(this, e, a, n) || this;
      return o.type = i || "value", o;
    }
    return t.prototype.getLabelModel = function() {
      return this.model.getModel("label");
    }, t.prototype.isHorizontal = function() {
      return this.model.get("orient") === "horizontal";
    }, t;
  }(rr)
), Lc = Math.PI, Km = ue(), mz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function(e, a) {
      this.api = a;
    }, t.prototype.render = function(e, a, n) {
      if (this.model = e, this.api = n, this.ecModel = a, this.group.removeAll(), e.get("show", !0)) {
        var i = this._layout(e, n), o = this._createGroup("_mainGroup"), s = this._createGroup("_labelGroup"), l = this._axis = this._createAxis(i, e);
        e.formatTooltip = function(u) {
          var c = l.scale.getLabel({
            value: u
          });
          return rt("nameValue", {
            noName: !0,
            value: c
          });
        }, w(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(u) {
          this["_render" + u](i, o, l, e);
        }, this), this._renderAxisLabel(i, s, l, e), this._position(i, e);
      }
      this._doPlayStop(), this._updateTicksStatus();
    }, t.prototype.remove = function() {
      this._clearTimer(), this.group.removeAll();
    }, t.prototype.dispose = function() {
      this._clearTimer();
    }, t.prototype._layout = function(e, a) {
      var n = e.get(["label", "position"]), i = e.get("orient"), o = Sz(e, a), s;
      n == null || n === "auto" ? s = i === "horizontal" ? o.y + o.height / 2 < a.getHeight() / 2 ? "-" : "+" : o.x + o.width / 2 < a.getWidth() / 2 ? "+" : "-" : Y(n) ? s = {
        horizontal: {
          top: "-",
          bottom: "+"
        },
        vertical: {
          left: "-",
          right: "+"
        }
      }[i][n] : s = n;
      var l = {
        horizontal: "center",
        vertical: s >= 0 || s === "+" ? "left" : "right"
      }, u = {
        horizontal: s >= 0 || s === "+" ? "top" : "bottom",
        vertical: "middle"
      }, c = {
        horizontal: 0,
        vertical: Lc / 2
      }, v = i === "vertical" ? o.height : o.width, f = e.getModel("controlStyle"), h = f.get("show", !0), p = h ? f.get("itemSize") : 0, d = h ? f.get("itemGap") : 0, g = p + d, y = e.get(["label", "rotate"]) || 0;
      y = y * Lc / 180;
      var m, _, S, x = f.get("position", !0), b = h && f.get("showPlayBtn", !0), D = h && f.get("showPrevBtn", !0), A = h && f.get("showNextBtn", !0), T = 0, C = v;
      x === "left" || x === "bottom" ? (b && (m = [0, 0], T += g), D && (_ = [T, 0], T += g), A && (S = [C - p, 0], C -= g)) : (b && (m = [C - p, 0], C -= g), D && (_ = [0, 0], T += g), A && (S = [C - p, 0], C -= g));
      var M = [T, C];
      return e.get("inverse") && M.reverse(), {
        viewRect: o,
        mainLength: v,
        orient: i,
        rotation: c[i],
        labelRotation: y,
        labelPosOpt: s,
        labelAlign: e.get(["label", "align"]) || l[i],
        labelBaseline: e.get(["label", "verticalAlign"]) || e.get(["label", "baseline"]) || u[i],
        // Based on mainGroup.
        playPosition: m,
        prevBtnPosition: _,
        nextBtnPosition: S,
        axisExtent: M,
        controlSize: p,
        controlGap: d
      };
    }, t.prototype._position = function(e, a) {
      var n = this._mainGroup, i = this._labelGroup, o = e.viewRect;
      if (e.orient === "vertical") {
        var s = zn(), l = o.x, u = o.y + o.height;
        ka(s, s, [-l, -u]), co(s, s, -Lc / 2), ka(s, s, [l, u]), o = o.clone(), o.applyTransform(s);
      }
      var c = m(o), v = m(n.getBoundingRect()), f = m(i.getBoundingRect()), h = [n.x, n.y], p = [i.x, i.y];
      p[0] = h[0] = c[0][0];
      var d = e.labelPosOpt;
      if (d == null || Y(d)) {
        var g = d === "+" ? 0 : 1;
        _(h, v, c, 1, g), _(p, f, c, 1, 1 - g);
      } else {
        var g = d >= 0 ? 0 : 1;
        _(h, v, c, 1, g), p[1] = h[1] + d;
      }
      n.setPosition(h), i.setPosition(p), n.rotation = i.rotation = e.rotation, y(n), y(i);
      function y(S) {
        S.originX = c[0][0] - S.x, S.originY = c[1][0] - S.y;
      }
      function m(S) {
        return [[S.x, S.x + S.width], [S.y, S.y + S.height]];
      }
      function _(S, x, b, D, A) {
        S[D] += b[D][A] - x[D][A];
      }
    }, t.prototype._createAxis = function(e, a) {
      var n = a.getData(), i = a.get("axisType"), o = _z(a, i);
      o.getTicks = function() {
        return n.mapArray(["value"], function(u) {
          return {
            value: u
          };
        });
      };
      var s = n.getDataExtent("value");
      o.setExtent(s[0], s[1]), o.calcNiceTicks();
      var l = new yz("value", o, e.axisExtent, i);
      return l.model = a, l;
    }, t.prototype._createGroup = function(e) {
      var a = this[e] = new re();
      return this.group.add(a), a;
    }, t.prototype._renderAxisLine = function(e, a, n, i) {
      var o = n.getExtent();
      if (i.get(["lineStyle", "show"])) {
        var s = new it({
          shape: {
            x1: o[0],
            y1: 0,
            x2: o[1],
            y2: 0
          },
          style: z({
            lineCap: "round"
          }, i.getModel("lineStyle").getLineStyle()),
          silent: !0,
          z2: 1
        });
        a.add(s);
        var l = this._progressLine = new it({
          shape: {
            x1: o[0],
            x2: this._currentPointer ? this._currentPointer.x : o[0],
            y1: 0,
            y2: 0
          },
          style: ee({
            lineCap: "round",
            lineWidth: s.style.lineWidth
          }, i.getModel(["progress", "lineStyle"]).getLineStyle()),
          silent: !0,
          z2: 1
        });
        a.add(l);
      }
    }, t.prototype._renderAxisTick = function(e, a, n, i) {
      var o = this, s = i.getData(), l = n.scale.getTicks();
      this._tickSymbols = [], w(l, function(u) {
        var c = n.dataToCoord(u.value), v = s.getItemModel(u.value), f = v.getModel("itemStyle"), h = v.getModel(["emphasis", "itemStyle"]), p = v.getModel(["progress", "itemStyle"]), d = {
          x: c,
          y: 0,
          onclick: U(o._changeTimeline, o, u.value)
        }, g = qm(v, f, a, d);
        g.ensureState("emphasis").style = h.getItemStyle(), g.ensureState("progress").style = p.getItemStyle(), Ia(g);
        var y = j(g);
        v.get("tooltip") ? (y.dataIndex = u.value, y.dataModel = i) : y.dataIndex = y.dataModel = null, o._tickSymbols.push(g);
      });
    }, t.prototype._renderAxisLabel = function(e, a, n, i) {
      var o = this, s = n.getLabelModel();
      if (s.get("show")) {
        var l = i.getData(), u = n.getViewLabels();
        this._tickLabels = [], w(u, function(c) {
          var v = c.tickValue, f = l.getItemModel(v), h = f.getModel("label"), p = f.getModel(["emphasis", "label"]), d = f.getModel(["progress", "label"]), g = n.dataToCoord(c.tickValue), y = new ve({
            x: g,
            y: 0,
            rotation: e.labelRotation - e.rotation,
            onclick: U(o._changeTimeline, o, v),
            silent: !1,
            style: Ie(h, {
              text: c.formattedLabel,
              align: e.labelAlign,
              verticalAlign: e.labelBaseline
            })
          });
          y.ensureState("emphasis").style = Ie(p), y.ensureState("progress").style = Ie(d), a.add(y), Ia(y), Km(y).dataIndex = v, o._tickLabels.push(y);
        });
      }
    }, t.prototype._renderControl = function(e, a, n, i) {
      var o = e.controlSize, s = e.rotation, l = i.getModel("controlStyle").getItemStyle(), u = i.getModel(["emphasis", "controlStyle"]).getItemStyle(), c = i.getPlayState(), v = i.get("inverse", !0);
      f(e.nextBtnPosition, "next", U(this._changeTimeline, this, v ? "-" : "+")), f(e.prevBtnPosition, "prev", U(this._changeTimeline, this, v ? "+" : "-")), f(e.playPosition, c ? "stop" : "play", U(this._handlePlayClick, this, !c), !0);
      function f(h, p, d, g) {
        if (h) {
          var y = An(ce(i.get(["controlStyle", p + "BtnSize"]), o), o), m = [0, -y / 2, y, y], _ = xz(i, p + "Icon", m, {
            x: h[0],
            y: h[1],
            originX: o / 2,
            originY: 0,
            rotation: g ? -s : 0,
            rectHover: !0,
            style: l,
            onclick: d
          });
          _.ensureState("emphasis").style = u, a.add(_), Ia(_);
        }
      }
    }, t.prototype._renderCurrentPointer = function(e, a, n, i) {
      var o = i.getData(), s = i.getCurrentIndex(), l = o.getItemModel(s).getModel("checkpointStyle"), u = this, c = {
        onCreate: function(v) {
          v.draggable = !0, v.drift = U(u._handlePointerDrag, u), v.ondragend = U(u._handlePointerDragend, u), jm(v, u._progressLine, s, n, i, !0);
        },
        onUpdate: function(v) {
          jm(v, u._progressLine, s, n, i);
        }
      };
      this._currentPointer = qm(l, l, this._mainGroup, {}, this._currentPointer, c);
    }, t.prototype._handlePlayClick = function(e) {
      this._clearTimer(), this.api.dispatchAction({
        type: "timelinePlayChange",
        playState: e,
        from: this.uid
      });
    }, t.prototype._handlePointerDrag = function(e, a, n) {
      this._clearTimer(), this._pointerChangeTimeline([n.offsetX, n.offsetY]);
    }, t.prototype._handlePointerDragend = function(e) {
      this._pointerChangeTimeline([e.offsetX, e.offsetY], !0);
    }, t.prototype._pointerChangeTimeline = function(e, a) {
      var n = this._toAxisCoord(e)[0], i = this._axis, o = zt(i.getExtent().slice());
      n > o[1] && (n = o[1]), n < o[0] && (n = o[0]), this._currentPointer.x = n, this._currentPointer.markRedraw();
      var s = this._progressLine;
      s && (s.shape.x2 = n, s.dirty());
      var l = this._findNearestTick(n), u = this.model;
      (a || l !== u.getCurrentIndex() && u.get("realtime")) && this._changeTimeline(l);
    }, t.prototype._doPlayStop = function() {
      var e = this;
      this._clearTimer(), this.model.getPlayState() && (this._timer = setTimeout(function() {
        var a = e.model;
        e._changeTimeline(a.getCurrentIndex() + (a.get("rewind", !0) ? -1 : 1));
      }, this.model.get("playInterval")));
    }, t.prototype._toAxisCoord = function(e) {
      var a = this._mainGroup.getLocalTransform();
      return Jt(e, a, !0);
    }, t.prototype._findNearestTick = function(e) {
      var a = this.model.getData(), n = 1 / 0, i, o = this._axis;
      return a.each(["value"], function(s, l) {
        var u = o.dataToCoord(s), c = Math.abs(u - e);
        c < n && (n = c, i = l);
      }), i;
    }, t.prototype._clearTimer = function() {
      this._timer && (clearTimeout(this._timer), this._timer = null);
    }, t.prototype._changeTimeline = function(e) {
      var a = this.model.getCurrentIndex();
      e === "+" ? e = a + 1 : e === "-" && (e = a - 1), this.api.dispatchAction({
        type: "timelineChange",
        currentIndex: e,
        from: this.uid
      });
    }, t.prototype._updateTicksStatus = function() {
      var e = this.model.getCurrentIndex(), a = this._tickSymbols, n = this._tickLabels;
      if (a)
        for (var i = 0; i < a.length; i++)
          a && a[i] && a[i].toggleState("progress", i < e);
      if (n)
        for (var i = 0; i < n.length; i++)
          n && n[i] && n[i].toggleState("progress", Km(n[i]).dataIndex <= e);
    }, t.type = "timeline.slider", t;
  }(gz)
);
function _z(r, t) {
  if (t = t || r.get("type"), t)
    switch (t) {
      case "category":
        return new Hl({
          ordinalMeta: r.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new Yf({
          locale: r.ecModel.getLocaleModel(),
          useUTC: r.ecModel.get("useUTC")
        });
      default:
        return new Mr();
    }
}
function Sz(r, t) {
  return qe(r.getBoxLayoutParams(), {
    width: t.getWidth(),
    height: t.getHeight()
  }, r.get("padding"));
}
function xz(r, t, e, a) {
  var n = a.style, i = go(r.get(["controlStyle", t]), a || {}, new Te(e[0], e[1], e[2], e[3]));
  return n && i.setStyle(n), i;
}
function qm(r, t, e, a, n, i) {
  var o = t.get("color");
  if (n)
    n.setColor(o), e.add(n), i && i.onUpdate(n);
  else {
    var s = r.get("symbol");
    n = Ze(s, -1, -1, 2, 2, o), n.setStyle("strokeNoScale", !0), e.add(n), i && i.onCreate(n);
  }
  var l = t.getItemStyle(["color"]);
  n.setStyle(l), a = le({
    rectHover: !0,
    z2: 100
  }, a, !0);
  var u = Jn(r.get("symbolSize"));
  a.scaleX = u[0] / 2, a.scaleY = u[1] / 2;
  var c = $a(r.get("symbolOffset"), u);
  c && (a.x = (a.x || 0) + c[0], a.y = (a.y || 0) + c[1]);
  var v = r.get("symbolRotate");
  return a.rotation = (v || 0) * Math.PI / 180 || 0, n.attr(a), n.updateTransform(), n;
}
function jm(r, t, e, a, n, i) {
  if (!r.dragging) {
    var o = n.getModel("checkpointStyle"), s = a.dataToCoord(n.getData().get("value", e));
    if (i || !o.get("animation", !0))
      r.attr({
        x: s,
        y: 0
      }), t && t.attr({
        shape: {
          x2: s
        }
      });
    else {
      var l = {
        duration: o.get("animationDuration", !0),
        easing: o.get("animationEasing", !0)
      };
      r.stopAnimation(null, !0), r.animateTo({
        x: s,
        y: 0
      }, l), t && t.animateTo({
        shape: {
          x2: s
        }
      }, l);
    }
  }
}
function bz(r) {
  r.registerAction({
    type: "timelineChange",
    event: "timelineChanged",
    update: "prepareAndUpdate"
  }, function(t, e, a) {
    var n = e.getComponent("timeline");
    return n && t.currentIndex != null && (n.setCurrentIndex(t.currentIndex), !n.get("loop", !0) && n.isIndexMax() && n.getPlayState() && (n.setPlayState(!1), a.dispatchAction({
      type: "timelinePlayChange",
      playState: !1,
      from: t.from
    }))), e.resetOption("timeline", {
      replaceMerge: n.get("replaceMerge", !0)
    }), ee({
      currentIndex: n.option.currentIndex
    }, t);
  }), r.registerAction({
    type: "timelinePlayChange",
    event: "timelinePlayChanged",
    update: "update"
  }, function(t, e) {
    var a = e.getComponent("timeline");
    a && t.playState != null && a.setPlayState(t.playState);
  });
}
function wz(r) {
  var t = r && r.timeline;
  B(t) || (t = t ? [t] : []), w(t, function(e) {
    e && Dz(e);
  });
}
function Dz(r) {
  var t = r.type, e = {
    number: "value",
    time: "time"
  };
  if (e[t] && (r.axisType = e[t], delete r.type), Jm(r), ba(r, "controlPosition")) {
    var a = r.controlStyle || (r.controlStyle = {});
    ba(a, "position") || (a.position = r.controlPosition), a.position === "none" && !ba(a, "show") && (a.show = !1, delete a.position), delete r.controlPosition;
  }
  w(r.data || [], function(n) {
    J(n) && !B(n) && (!ba(n, "value") && ba(n, "name") && (n.value = n.name), Jm(n));
  });
}
function Jm(r) {
  var t = r.itemStyle || (r.itemStyle = {}), e = t.emphasis || (t.emphasis = {}), a = r.label || r.label || {}, n = a.normal || (a.normal = {}), i = {
    normal: 1,
    emphasis: 1
  };
  w(a, function(o, s) {
    !i[s] && !ba(n, s) && (n[s] = o);
  }), e.label && !ba(a, "emphasis") && (a.emphasis = e.label, delete e.label);
}
function ba(r, t) {
  return r.hasOwnProperty(t);
}
function Az(r) {
  r.registerComponentModel(Xb), r.registerComponentView(mz), r.registerSubTypeDefaulter("timeline", function() {
    return "slider";
  }), bz(r), r.registerPreprocessor(wz);
}
function Hh(r, t) {
  if (!r)
    return !1;
  for (var e = B(r) ? r : [r], a = 0; a < e.length; a++)
    if (e[a] && e[a][t])
      return !0;
  return !1;
}
var Tz = { env: {} };
function us(r) {
  Oa(r, "label", ["show"]);
}
var cs = ue(), Lr = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.createdBySelf = !1, e;
    }
    return t.prototype.init = function(e, a, n) {
      if (Tz.env.NODE_ENV !== "production" && this.type === "marker")
        throw new Error("Marker component is abstract component. Use markLine, markPoint, markArea instead.");
      this.mergeDefaultAndTheme(e, n), this._mergeOption(e, n, !1, !0);
    }, t.prototype.isAnimationEnabled = function() {
      if (Oe.node)
        return !1;
      var e = this.__hostSeries;
      return this.getShallow("animation") && e && e.isAnimationEnabled();
    }, t.prototype.mergeOption = function(e, a) {
      this._mergeOption(e, a, !1, !1);
    }, t.prototype._mergeOption = function(e, a, n, i) {
      var o = this.mainType;
      n || a.eachSeries(function(s) {
        var l = s.get(this.mainType, !0), u = cs(s)[o];
        if (!l || !l.data) {
          cs(s)[o] = null;
          return;
        }
        u ? u._mergeOption(l, a, !0) : (i && us(l), w(l.data, function(c) {
          c instanceof Array ? (us(c[0]), us(c[1])) : us(c);
        }), u = this.createMarkerModelFromSeries(l, this, a), z(u, {
          mainType: this.mainType,
          // Use the same series index and name
          seriesIndex: s.seriesIndex,
          name: s.name,
          createdBySelf: !0
        }), u.__hostSeries = s), cs(s)[o] = u;
      }, this);
    }, t.prototype.formatTooltip = function(e, a, n) {
      var i = this.getData(), o = this.getRawValue(e), s = i.getName(e);
      return rt("section", {
        header: this.name,
        blocks: [rt("nameValue", {
          name: s,
          value: o,
          noName: !s,
          noValue: o == null
        })]
      });
    }, t.prototype.getData = function() {
      return this._data;
    }, t.prototype.setData = function(e) {
      this._data = e;
    }, t.prototype.getDataParams = function(e, a) {
      var n = Ol.prototype.getDataParams.call(this, e, a), i = this.__hostSeries;
      return i && (n.seriesId = i.id, n.seriesName = i.name, n.seriesType = i.subType), n;
    }, t.getMarkerModelFromSeries = function(e, a) {
      return cs(e)[a];
    }, t.type = "marker", t.dependencies = ["series", "grid", "polar", "geo"], t;
  }(se)
);
at(Lr, Ol.prototype);
var Cz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.createMarkerModelFromSeries = function(e, a, n) {
      return new t(e, a, n);
    }, t.type = "markPoint", t.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: "pin",
      symbolSize: 50,
      // symbolRotate: 0,
      // symbolOffset: [0, 0]
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "inside"
      },
      itemStyle: {
        borderWidth: 2
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, t;
  }(Lr)
);
function qv(r) {
  return !(isNaN(parseFloat(r.x)) && isNaN(parseFloat(r.y)));
}
function Mz(r) {
  return !isNaN(parseFloat(r.x)) && !isNaN(parseFloat(r.y));
}
function vs(r, t, e, a, n, i) {
  var o = [], s = ta(
    t,
    a
    /* , otherDataDim */
  ), l = s ? t.getCalculationInfo("stackResultDimension") : a, u = Wh(t, l, r), c = t.indicesOfNearest(l, u)[0];
  o[n] = t.get(e, c), o[i] = t.get(l, c);
  var v = t.get(a, c), f = or(t.get(a, c));
  return f = Math.min(f, 20), f >= 0 && (o[i] = +o[i].toFixed(f)), [o, v];
}
var Ec = {
  min: te(vs, "min"),
  max: te(vs, "max"),
  average: te(vs, "average"),
  median: te(vs, "median")
};
function oo(r, t) {
  if (t) {
    var e = r.getData(), a = r.coordinateSystem, n = a && a.dimensions;
    if (!Mz(t) && !B(t.coord) && B(n)) {
      var i = Kb(t, e, a, r);
      if (t = Q(t), t.type && Ec[t.type] && i.baseAxis && i.valueAxis) {
        var o = fe(n, i.baseAxis.dim), s = fe(n, i.valueAxis.dim), l = Ec[t.type](e, i.baseDataDim, i.valueDataDim, o, s);
        t.coord = l[0], t.value = l[1];
      } else
        t.coord = [t.xAxis != null ? t.xAxis : t.radiusAxis, t.yAxis != null ? t.yAxis : t.angleAxis];
    }
    if (t.coord == null || !B(n))
      t.coord = [];
    else
      for (var u = t.coord, c = 0; c < 2; c++)
        Ec[u[c]] && (u[c] = Wh(e, e.mapDimension(n[c]), u[c]));
    return t;
  }
}
function Kb(r, t, e, a) {
  var n = {};
  return r.valueIndex != null || r.valueDim != null ? (n.valueDataDim = r.valueIndex != null ? t.getDimension(r.valueIndex) : r.valueDim, n.valueAxis = e.getAxis(Iz(a, n.valueDataDim)), n.baseAxis = e.getOtherAxis(n.valueAxis), n.baseDataDim = t.mapDimension(n.baseAxis.dim)) : (n.baseAxis = a.getBaseAxis(), n.valueAxis = e.getOtherAxis(n.baseAxis), n.baseDataDim = t.mapDimension(n.baseAxis.dim), n.valueDataDim = t.mapDimension(n.valueAxis.dim)), n;
}
function Iz(r, t) {
  var e = r.getData().getDimensionInfo(t);
  return e && e.coordDim;
}
function so(r, t) {
  return r && r.containData && t.coord && !qv(t) ? r.containData(t.coord) : !0;
}
function Lz(r, t, e) {
  return r && r.containZone && t.coord && e.coord && !qv(t) && !qv(e) ? r.containZone(t.coord, e.coord) : !0;
}
function qb(r, t) {
  return r ? function(e, a, n, i) {
    var o = i < 2 ? e.coord && e.coord[i] : e.value;
    return Xr(o, t[i]);
  } : function(e, a, n, i) {
    return Xr(e.value, t[i]);
  };
}
function Wh(r, t, e) {
  if (e === "average") {
    var a = 0, n = 0;
    return r.each(t, function(i, o) {
      isNaN(i) || (a += i, n++);
    }), a / n;
  } else return e === "median" ? r.getMedian(t) : r.getDataExtent(t)[e === "max" ? 1 : 0];
}
var Pc = ue(), Uh = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.init = function() {
      this.markerGroupMap = Z();
    }, t.prototype.render = function(e, a, n) {
      var i = this, o = this.markerGroupMap;
      o.each(function(s) {
        Pc(s).keep = !1;
      }), a.eachSeries(function(s) {
        var l = Lr.getMarkerModelFromSeries(s, i.type);
        l && i.renderSeries(s, l, a, n);
      }), o.each(function(s) {
        !Pc(s).keep && i.group.remove(s.group);
      });
    }, t.prototype.markKeep = function(e) {
      Pc(e).keep = !0;
    }, t.prototype.toggleBlurSeries = function(e, a) {
      var n = this;
      w(e, function(i) {
        var o = Lr.getMarkerModelFromSeries(i, n.type);
        if (o) {
          var s = o.getData();
          s.eachItemGraphicEl(function(l) {
            l && (a ? f_(l) : yf(l));
          });
        }
      });
    }, t.type = "marker", t;
  }(Re)
);
function Qm(r, t, e) {
  var a = t.coordinateSystem;
  r.each(function(n) {
    var i = r.getItemModel(n), o, s = H(i.get("x"), e.getWidth()), l = H(i.get("y"), e.getHeight());
    if (!isNaN(s) && !isNaN(l))
      o = [s, l];
    else if (t.getMarkerPosition)
      o = t.getMarkerPosition(r.getValues(r.dimensions, n));
    else if (a) {
      var u = r.get(a.dimensions[0], n), c = r.get(a.dimensions[1], n);
      o = a.dataToPoint([u, c]);
    }
    isNaN(s) || (o[0] = s), isNaN(l) || (o[1] = l), r.setItemLayout(n, o);
  });
}
var Ez = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.updateTransform = function(e, a, n) {
      a.eachSeries(function(i) {
        var o = Lr.getMarkerModelFromSeries(i, "markPoint");
        o && (Qm(o.getData(), i, n), this.markerGroupMap.get(i.id).updateLayout());
      }, this);
    }, t.prototype.renderSeries = function(e, a, n, i) {
      var o = e.coordinateSystem, s = e.id, l = e.getData(), u = this.markerGroupMap, c = u.get(s) || u.set(s, new xo()), v = Pz(o, e, a);
      a.setData(v), Qm(a.getData(), e, i), v.each(function(f) {
        var h = v.getItemModel(f), p = h.getShallow("symbol"), d = h.getShallow("symbolSize"), g = h.getShallow("symbolRotate"), y = h.getShallow("symbolOffset"), m = h.getShallow("symbolKeepAspect");
        if (X(p) || X(d) || X(g) || X(y)) {
          var _ = a.getRawValue(f), S = a.getDataParams(f);
          X(p) && (p = p(_, S)), X(d) && (d = d(_, S)), X(g) && (g = g(_, S)), X(y) && (y = y(_, S));
        }
        var x = h.getModel("itemStyle").getItemStyle(), b = yo(l, "color");
        x.fill || (x.fill = b), v.setItemVisual(f, {
          symbol: p,
          symbolSize: d,
          symbolRotate: g,
          symbolOffset: y,
          symbolKeepAspect: m,
          style: x
        });
      }), c.updateData(v), this.group.add(c.group), v.eachItemGraphicEl(function(f) {
        f.traverse(function(h) {
          j(h).dataModel = a;
        });
      }), this.markKeep(c), c.group.silent = a.get("silent") || e.get("silent");
    }, t.type = "markPoint", t;
  }(Uh)
);
function Pz(r, t, e) {
  var a;
  r ? a = G(r && r.dimensions, function(s) {
    var l = t.getData().getDimensionInfo(t.getData().mapDimension(s)) || {};
    return z(z({}, l), {
      name: s,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : a = [{
    name: "value",
    type: "float"
  }];
  var n = new yt(a, e), i = G(e.get("data"), te(oo, t));
  r && (i = Ae(i, te(so, r)));
  var o = qb(!!r, a);
  return n.initData(i, null, o), n;
}
function Nz(r) {
  r.registerComponentModel(Cz), r.registerComponentView(Ez), r.registerPreprocessor(function(t) {
    Hh(t.series, "markPoint") && (t.markPoint = t.markPoint || {});
  });
}
var Rz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.createMarkerModelFromSeries = function(e, a, n) {
      return new t(e, a, n);
    }, t.type = "markLine", t.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: ["circle", "arrow"],
      symbolSize: [8, 16],
      // symbolRotate: 0,
      symbolOffset: 0,
      precision: 2,
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "end",
        distance: 5
      },
      lineStyle: {
        type: "dashed"
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          width: 3
        }
      },
      animationEasing: "linear"
    }, t;
  }(Lr)
), kz = { env: {} }, fs = ue(), Oz = function(r, t, e, a) {
  var n = r.getData(), i;
  if (B(a))
    i = a;
  else {
    var o = a.type;
    if (o === "min" || o === "max" || o === "average" || o === "median" || a.xAxis != null || a.yAxis != null) {
      var s = void 0, l = void 0;
      if (a.yAxis != null || a.xAxis != null)
        s = t.getAxis(a.yAxis != null ? "y" : "x"), l = $e(a.yAxis, a.xAxis);
      else {
        var u = Kb(a, n, t, r);
        s = u.valueAxis;
        var c = rx(n, u.valueDataDim);
        l = Wh(n, c, o);
      }
      var v = s.dim === "x" ? 0 : 1, f = 1 - v, h = Q(a), p = {
        coord: []
      };
      h.type = null, h.coord = [], h.coord[f] = -1 / 0, p.coord[f] = 1 / 0;
      var d = e.get("precision");
      d >= 0 && _e(l) && (l = +l.toFixed(Math.min(d, 20))), h.coord[v] = p.coord[v] = l, i = [h, p, {
        type: o,
        valueIndex: a.valueIndex,
        // Force to use the value of calculated value.
        value: l
      }];
    } else
      kz.env.NODE_ENV !== "production" && Z0("Invalid markLine data."), i = [];
  }
  var g = [oo(r, i[0]), oo(r, i[1]), z({}, i[2])];
  return g[2].type = g[2].type || null, le(g[2], g[0]), le(g[2], g[1]), g;
};
function hl(r) {
  return !isNaN(r) && !isFinite(r);
}
function e0(r, t, e, a) {
  var n = 1 - r, i = a.dimensions[r];
  return hl(t[n]) && hl(e[n]) && t[r] === e[r] && a.getAxis(i).containData(t[r]);
}
function Vz(r, t) {
  if (r.type === "cartesian2d") {
    var e = t[0].coord, a = t[1].coord;
    if (e && a && (e0(1, e, a, r) || e0(0, e, a, r)))
      return !0;
  }
  return so(r, t[0]) && so(r, t[1]);
}
function Nc(r, t, e, a, n) {
  var i = a.coordinateSystem, o = r.getItemModel(t), s, l = H(o.get("x"), n.getWidth()), u = H(o.get("y"), n.getHeight());
  if (!isNaN(l) && !isNaN(u))
    s = [l, u];
  else {
    if (a.getMarkerPosition)
      s = a.getMarkerPosition(r.getValues(r.dimensions, t));
    else {
      var c = i.dimensions, v = r.get(c[0], t), f = r.get(c[1], t);
      s = i.dataToPoint([v, f]);
    }
    if (Za(i, "cartesian2d")) {
      var h = i.getAxis("x"), p = i.getAxis("y"), c = i.dimensions;
      hl(r.get(c[0], t)) ? s[0] = h.toGlobalCoord(h.getExtent()[e ? 0 : 1]) : hl(r.get(c[1], t)) && (s[1] = p.toGlobalCoord(p.getExtent()[e ? 0 : 1]));
    }
    isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
  }
  r.setItemLayout(t, s);
}
var Bz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.updateTransform = function(e, a, n) {
      a.eachSeries(function(i) {
        var o = Lr.getMarkerModelFromSeries(i, "markLine");
        if (o) {
          var s = o.getData(), l = fs(o).from, u = fs(o).to;
          l.each(function(c) {
            Nc(l, c, !0, i, n), Nc(u, c, !1, i, n);
          }), s.each(function(c) {
            s.setItemLayout(c, [l.getItemLayout(c), u.getItemLayout(c)]);
          }), this.markerGroupMap.get(i.id).updateLayout();
        }
      }, this);
    }, t.prototype.renderSeries = function(e, a, n, i) {
      var o = e.coordinateSystem, s = e.id, l = e.getData(), u = this.markerGroupMap, c = u.get(s) || u.set(s, new hh());
      this.group.add(c.group);
      var v = zz(o, e, a), f = v.from, h = v.to, p = v.line;
      fs(a).from = f, fs(a).to = h, a.setData(p);
      var d = a.get("symbol"), g = a.get("symbolSize"), y = a.get("symbolRotate"), m = a.get("symbolOffset");
      B(d) || (d = [d, d]), B(g) || (g = [g, g]), B(y) || (y = [y, y]), B(m) || (m = [m, m]), v.from.each(function(S) {
        _(f, S, !0), _(h, S, !1);
      }), p.each(function(S) {
        var x = p.getItemModel(S).getModel("lineStyle").getLineStyle();
        p.setItemLayout(S, [f.getItemLayout(S), h.getItemLayout(S)]), x.stroke == null && (x.stroke = f.getItemVisual(S, "style").fill), p.setItemVisual(S, {
          fromSymbolKeepAspect: f.getItemVisual(S, "symbolKeepAspect"),
          fromSymbolOffset: f.getItemVisual(S, "symbolOffset"),
          fromSymbolRotate: f.getItemVisual(S, "symbolRotate"),
          fromSymbolSize: f.getItemVisual(S, "symbolSize"),
          fromSymbol: f.getItemVisual(S, "symbol"),
          toSymbolKeepAspect: h.getItemVisual(S, "symbolKeepAspect"),
          toSymbolOffset: h.getItemVisual(S, "symbolOffset"),
          toSymbolRotate: h.getItemVisual(S, "symbolRotate"),
          toSymbolSize: h.getItemVisual(S, "symbolSize"),
          toSymbol: h.getItemVisual(S, "symbol"),
          style: x
        });
      }), c.updateData(p), v.line.eachItemGraphicEl(function(S) {
        j(S).dataModel = a, S.traverse(function(x) {
          j(x).dataModel = a;
        });
      });
      function _(S, x, b) {
        var D = S.getItemModel(x);
        Nc(S, x, b, e, i);
        var A = D.getModel("itemStyle").getItemStyle();
        A.fill == null && (A.fill = yo(l, "color")), S.setItemVisual(x, {
          symbolKeepAspect: D.get("symbolKeepAspect"),
          // `0` should be considered as a valid value, so use `retrieve2` instead of `||`
          symbolOffset: ce(D.get("symbolOffset", !0), m[b ? 0 : 1]),
          symbolRotate: ce(D.get("symbolRotate", !0), y[b ? 0 : 1]),
          // TODO: when 2d array is supported, it should ignore parent
          symbolSize: ce(D.get("symbolSize"), g[b ? 0 : 1]),
          symbol: ce(D.get("symbol", !0), d[b ? 0 : 1]),
          style: A
        });
      }
      this.markKeep(c), c.group.silent = a.get("silent") || e.get("silent");
    }, t.type = "markLine", t;
  }(Uh)
);
function zz(r, t, e) {
  var a;
  r ? a = G(r && r.dimensions, function(u) {
    var c = t.getData().getDimensionInfo(t.getData().mapDimension(u)) || {};
    return z(z({}, c), {
      name: u,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : a = [{
    name: "value",
    type: "float"
  }];
  var n = new yt(a, e), i = new yt(a, e), o = new yt([], e), s = G(e.get("data"), te(Oz, t, r, e));
  r && (s = Ae(s, te(Vz, r)));
  var l = qb(!!r, a);
  return n.initData(G(s, function(u) {
    return u[0];
  }), null, l), i.initData(G(s, function(u) {
    return u[1];
  }), null, l), o.initData(G(s, function(u) {
    return u[2];
  })), o.hasItemOption = !0, {
    from: n,
    to: i,
    line: o
  };
}
function Gz(r) {
  r.registerComponentModel(Rz), r.registerComponentView(Bz), r.registerPreprocessor(function(t) {
    Hh(t.series, "markLine") && (t.markLine = t.markLine || {});
  });
}
var Fz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.createMarkerModelFromSeries = function(e, a, n) {
      return new t(e, a, n);
    }, t.type = "markArea", t.defaultOption = {
      // zlevel: 0,
      // PENDING
      z: 1,
      tooltip: {
        trigger: "item"
      },
      // markArea should fixed on the coordinate system
      animation: !1,
      label: {
        show: !0,
        position: "top"
      },
      itemStyle: {
        // color and borderColor default to use color from series
        // color: 'auto'
        // borderColor: 'auto'
        borderWidth: 0
      },
      emphasis: {
        label: {
          show: !0,
          position: "top"
        }
      }
    }, t;
  }(Lr)
), hs = ue(), Hz = function(r, t, e, a) {
  var n = a[0], i = a[1];
  if (!(!n || !i)) {
    var o = oo(r, n), s = oo(r, i), l = o.coord, u = s.coord;
    l[0] = $e(l[0], -1 / 0), l[1] = $e(l[1], -1 / 0), u[0] = $e(u[0], 1 / 0), u[1] = $e(u[1], 1 / 0);
    var c = of([{}, o, s]);
    return c.coord = [o.coord, s.coord], c.x0 = o.x, c.y0 = o.y, c.x1 = s.x, c.y1 = s.y, c;
  }
};
function pl(r) {
  return !isNaN(r) && !isFinite(r);
}
function t0(r, t, e, a) {
  var n = 1 - r;
  return pl(t[n]) && pl(e[n]);
}
function Wz(r, t) {
  var e = t.coord[0], a = t.coord[1], n = {
    coord: e,
    x: t.x0,
    y: t.y0
  }, i = {
    coord: a,
    x: t.x1,
    y: t.y1
  };
  return Za(r, "cartesian2d") ? e && a && (t0(1, e, a) || t0(0, e, a)) ? !0 : Lz(r, n, i) : so(r, n) || so(r, i);
}
function r0(r, t, e, a, n) {
  var i = a.coordinateSystem, o = r.getItemModel(t), s, l = H(o.get(e[0]), n.getWidth()), u = H(o.get(e[1]), n.getHeight());
  if (!isNaN(l) && !isNaN(u))
    s = [l, u];
  else {
    if (a.getMarkerPosition) {
      var c = r.getValues(["x0", "y0"], t), v = r.getValues(["x1", "y1"], t), f = i.clampData(c), h = i.clampData(v), p = [];
      e[0] === "x0" ? p[0] = f[0] > h[0] ? v[0] : c[0] : p[0] = f[0] > h[0] ? c[0] : v[0], e[1] === "y0" ? p[1] = f[1] > h[1] ? v[1] : c[1] : p[1] = f[1] > h[1] ? c[1] : v[1], s = a.getMarkerPosition(p, e, !0);
    } else {
      var d = r.get(e[0], t), g = r.get(e[1], t), y = [d, g];
      i.clampData && i.clampData(y, y), s = i.dataToPoint(y, !0);
    }
    if (Za(i, "cartesian2d")) {
      var m = i.getAxis("x"), _ = i.getAxis("y"), d = r.get(e[0], t), g = r.get(e[1], t);
      pl(d) ? s[0] = m.toGlobalCoord(m.getExtent()[e[0] === "x0" ? 0 : 1]) : pl(g) && (s[1] = _.toGlobalCoord(_.getExtent()[e[1] === "y0" ? 0 : 1]));
    }
    isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
  }
  return s;
}
var a0 = [["x0", "y0"], ["x1", "y0"], ["x1", "y1"], ["x0", "y1"]], Uz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.updateTransform = function(e, a, n) {
      a.eachSeries(function(i) {
        var o = Lr.getMarkerModelFromSeries(i, "markArea");
        if (o) {
          var s = o.getData();
          s.each(function(l) {
            var u = G(a0, function(v) {
              return r0(s, l, v, i, n);
            });
            s.setItemLayout(l, u);
            var c = s.getItemGraphicEl(l);
            c.setShape("points", u);
          });
        }
      }, this);
    }, t.prototype.renderSeries = function(e, a, n, i) {
      var o = e.coordinateSystem, s = e.id, l = e.getData(), u = this.markerGroupMap, c = u.get(s) || u.set(s, {
        group: new re()
      });
      this.group.add(c.group), this.markKeep(c);
      var v = $z(o, e, a);
      a.setData(v), v.each(function(f) {
        var h = G(a0, function(A) {
          return r0(v, f, A, e, i);
        }), p = o.getAxis("x").scale, d = o.getAxis("y").scale, g = p.getExtent(), y = d.getExtent(), m = [p.parse(v.get("x0", f)), p.parse(v.get("x1", f))], _ = [d.parse(v.get("y0", f)), d.parse(v.get("y1", f))];
        zt(m), zt(_);
        var S = !(g[0] > m[1] || g[1] < m[0] || y[0] > _[1] || y[1] < _[0]), x = !S;
        v.setItemLayout(f, {
          points: h,
          allClipped: x
        });
        var b = v.getItemModel(f).getModel("itemStyle").getItemStyle(), D = yo(l, "color");
        b.fill || (b.fill = D, Y(b.fill) && (b.fill = Vs(b.fill, 0.4))), b.stroke || (b.stroke = D), v.setItemVisual(f, "style", b);
      }), v.diff(hs(c).data).add(function(f) {
        var h = v.getItemLayout(f);
        if (!h.allClipped) {
          var p = new Wt({
            shape: {
              points: h.points
            }
          });
          v.setItemGraphicEl(f, p), c.group.add(p);
        }
      }).update(function(f, h) {
        var p = hs(c).data.getItemGraphicEl(h), d = v.getItemLayout(f);
        d.allClipped ? p && c.group.remove(p) : (p ? pe(p, {
          shape: {
            points: d.points
          }
        }, a, f) : p = new Wt({
          shape: {
            points: d.points
          }
        }), v.setItemGraphicEl(f, p), c.group.add(p));
      }).remove(function(f) {
        var h = hs(c).data.getItemGraphicEl(f);
        c.group.remove(h);
      }).execute(), v.eachItemGraphicEl(function(f, h) {
        var p = v.getItemModel(h), d = v.getItemVisual(h, "style");
        f.useStyle(v.getItemVisual(h, "style")), lt(f, tt(p), {
          labelFetcher: a,
          labelDataIndex: h,
          defaultText: v.getName(h) || "",
          inheritColor: Y(d.fill) ? Vs(d.fill, 1) : "#000"
        }), st(f, p), Be(f, null, null, p.get(["emphasis", "disabled"])), j(f).dataModel = a;
      }), hs(c).data = v, c.group.silent = a.get("silent") || e.get("silent");
    }, t.type = "markArea", t;
  }(Uh)
);
function $z(r, t, e) {
  var a, n, i = ["x0", "y0", "x1", "y1"];
  if (r) {
    var o = G(r && r.dimensions, function(u) {
      var c = t.getData(), v = c.getDimensionInfo(c.mapDimension(u)) || {};
      return z(z({}, v), {
        name: u,
        // DON'T use ordinalMeta to parse and collect ordinal.
        ordinalMeta: null
      });
    });
    n = G(i, function(u, c) {
      return {
        name: u,
        type: o[c % 2].type
      };
    }), a = new yt(n, e);
  } else
    n = [{
      name: "value",
      type: "float"
    }], a = new yt(n, e);
  var s = G(e.get("data"), te(Hz, t, r, e));
  r && (s = Ae(s, te(Wz, r)));
  var l = r ? function(u, c, v, f) {
    var h = u.coord[Math.floor(f / 2)][f % 2];
    return Xr(h, n[f]);
  } : function(u, c, v, f) {
    return Xr(u.value, n[f]);
  };
  return a.initData(s, null, l), a.hasItemOption = !0, a;
}
function Yz(r) {
  r.registerComponentModel(Fz), r.registerComponentView(Uz), r.registerPreprocessor(function(t) {
    Hh(t.series, "markArea") && (t.markArea = t.markArea || {});
  });
}
var Zz = function(r, t) {
  if (t === "all")
    return {
      type: "all",
      title: r.getLocaleModel().get(["legend", "selector", "all"])
    };
  if (t === "inverse")
    return {
      type: "inverse",
      title: r.getLocaleModel().get(["legend", "selector", "inverse"])
    };
}, jv = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.layoutMode = {
        type: "box",
        // legend.width/height are maxWidth/maxHeight actually,
        // whereas real width/height is calculated by its content.
        // (Setting {left: 10, right: 10} does not make sense).
        // So consider the case:
        // `setOption({legend: {left: 10});`
        // then `setOption({legend: {right: 10});`
        // The previous `left` should be cleared by setting `ignoreSize`.
        ignoreSize: !0
      }, e;
    }
    return t.prototype.init = function(e, a, n) {
      this.mergeDefaultAndTheme(e, n), e.selected = e.selected || {}, this._updateSelector(e);
    }, t.prototype.mergeOption = function(e, a) {
      r.prototype.mergeOption.call(this, e, a), this._updateSelector(e);
    }, t.prototype._updateSelector = function(e) {
      var a = e.selector, n = this.ecModel;
      a === !0 && (a = e.selector = ["all", "inverse"]), B(a) && w(a, function(i, o) {
        Y(i) && (i = {
          type: i
        }), a[o] = le(i, Zz(n, i.type));
      });
    }, t.prototype.optionUpdated = function() {
      this._updateData(this.ecModel);
      var e = this._data;
      if (e[0] && this.get("selectedMode") === "single") {
        for (var a = !1, n = 0; n < e.length; n++) {
          var i = e[n].get("name");
          if (this.isSelected(i)) {
            this.select(i), a = !0;
            break;
          }
        }
        !a && this.select(e[0].get("name"));
      }
    }, t.prototype._updateData = function(e) {
      var a = [], n = [];
      e.eachRawSeries(function(l) {
        var u = l.name;
        n.push(u);
        var c;
        if (l.legendVisualProvider) {
          var v = l.legendVisualProvider, f = v.getAllNames();
          e.isSeriesFiltered(l) || (n = n.concat(f)), f.length ? a = a.concat(f) : c = !0;
        } else
          c = !0;
        c && cf(l) && a.push(l.name);
      }), this._availableNames = n;
      var i = this.get("data") || a, o = Z(), s = G(i, function(l) {
        return (Y(l) || _e(l)) && (l = {
          name: l
        }), o.get(l.name) ? null : (o.set(l.name, !0), new me(l, this, this.ecModel));
      }, this);
      this._data = Ae(s, function(l) {
        return !!l;
      });
    }, t.prototype.getData = function() {
      return this._data;
    }, t.prototype.select = function(e) {
      var a = this.option.selected, n = this.get("selectedMode");
      if (n === "single") {
        var i = this._data;
        w(i, function(o) {
          a[o.get("name")] = !1;
        });
      }
      a[e] = !0;
    }, t.prototype.unSelect = function(e) {
      this.get("selectedMode") !== "single" && (this.option.selected[e] = !1);
    }, t.prototype.toggleSelected = function(e) {
      var a = this.option.selected;
      a.hasOwnProperty(e) || (a[e] = !0), this[a[e] ? "unSelect" : "select"](e);
    }, t.prototype.allSelect = function() {
      var e = this._data, a = this.option.selected;
      w(e, function(n) {
        a[n.get("name", !0)] = !0;
      });
    }, t.prototype.inverseSelect = function() {
      var e = this._data, a = this.option.selected;
      w(e, function(n) {
        var i = n.get("name", !0);
        a.hasOwnProperty(i) || (a[i] = !0), a[i] = !a[i];
      });
    }, t.prototype.isSelected = function(e) {
      var a = this.option.selected;
      return !(a.hasOwnProperty(e) && !a[e]) && fe(this._availableNames, e) >= 0;
    }, t.prototype.getOrient = function() {
      return this.get("orient") === "vertical" ? {
        index: 1,
        name: "vertical"
      } : {
        index: 0,
        name: "horizontal"
      };
    }, t.type = "legend.plain", t.dependencies = ["series"], t.defaultOption = {
      // zlevel: 0,
      z: 4,
      show: !0,
      orient: "horizontal",
      left: "center",
      // right: 'center',
      top: 0,
      // bottom: null,
      align: "auto",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      itemWidth: 25,
      itemHeight: 14,
      symbolRotate: "inherit",
      symbolKeepAspect: !0,
      inactiveColor: "#ccc",
      inactiveBorderColor: "#ccc",
      inactiveBorderWidth: "auto",
      itemStyle: {
        color: "inherit",
        opacity: "inherit",
        borderColor: "inherit",
        borderWidth: "auto",
        borderCap: "inherit",
        borderJoin: "inherit",
        borderDashOffset: "inherit",
        borderMiterLimit: "inherit"
      },
      lineStyle: {
        width: "auto",
        color: "inherit",
        inactiveColor: "#ccc",
        inactiveWidth: 2,
        opacity: "inherit",
        type: "inherit",
        cap: "inherit",
        join: "inherit",
        dashOffset: "inherit",
        miterLimit: "inherit"
      },
      textStyle: {
        color: "#333"
      },
      selectedMode: !0,
      selector: !1,
      selectorLabel: {
        show: !0,
        borderRadius: 10,
        padding: [3, 5, 3, 5],
        fontSize: 12,
        fontFamily: "sans-serif",
        color: "#666",
        borderWidth: 1,
        borderColor: "#666"
      },
      emphasis: {
        selectorLabel: {
          show: !0,
          color: "#eee",
          backgroundColor: "#666"
        }
      },
      selectorPosition: "auto",
      selectorItemGap: 7,
      selectorButtonGap: 10,
      tooltip: {
        show: !1
      }
    }, t;
  }(se)
), Xz = { env: {} }, cn = te, Jv = w, ps = re, jb = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.newlineDisabled = !1, e;
    }
    return t.prototype.init = function() {
      this.group.add(this._contentGroup = new ps()), this.group.add(this._selectorGroup = new ps()), this._isFirstRender = !0;
    }, t.prototype.getContentGroup = function() {
      return this._contentGroup;
    }, t.prototype.getSelectorGroup = function() {
      return this._selectorGroup;
    }, t.prototype.render = function(e, a, n) {
      var i = this._isFirstRender;
      if (this._isFirstRender = !1, this.resetInner(), !!e.get("show", !0)) {
        var o = e.get("align"), s = e.get("orient");
        (!o || o === "auto") && (o = e.get("left") === "right" && s === "vertical" ? "right" : "left");
        var l = e.get("selector", !0), u = e.get("selectorPosition", !0);
        l && (!u || u === "auto") && (u = s === "horizontal" ? "end" : "start"), this.renderInner(o, e, a, n, l, s, u);
        var c = e.getBoxLayoutParams(), v = {
          width: n.getWidth(),
          height: n.getHeight()
        }, f = e.get("padding"), h = qe(c, v, f), p = this.layoutInner(e, o, h, i, l, u), d = qe(ee({
          width: p.width,
          height: p.height
        }, c), v, f);
        this.group.x = d.x - p.x, this.group.y = d.y - p.y, this.group.markRedraw(), this.group.add(this._backgroundEl = Bb(p, e));
      }
    }, t.prototype.resetInner = function() {
      this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll();
    }, t.prototype.renderInner = function(e, a, n, i, o, s, l) {
      var u = this.getContentGroup(), c = Z(), v = a.get("selectedMode"), f = [];
      n.eachRawSeries(function(h) {
        !h.get("legendHoverLink") && f.push(h.id);
      }), Jv(a.getData(), function(h, p) {
        var d = h.get("name");
        if (!this.newlineDisabled && (d === "" || d === `
`)) {
          var g = new ps();
          g.newline = !0, u.add(g);
          return;
        }
        var y = n.getSeriesByName(d)[0];
        if (!c.get(d)) {
          if (y) {
            var m = y.getData(), _ = m.getVisual("legendLineStyle") || {}, S = m.getVisual("legendIcon"), x = m.getVisual("style"), b = this._createItem(y, d, p, h, a, e, _, x, S, v, i);
            b.on("click", cn(n0, d, null, i, f)).on("mouseover", cn(Qv, y.name, null, i, f)).on("mouseout", cn(ef, y.name, null, i, f)), n.ssr && b.eachChild(function(D) {
              var A = j(D);
              A.seriesIndex = y.seriesIndex, A.dataIndex = p, A.ssrType = "legend";
            }), c.set(d, !0);
          } else
            n.eachRawSeries(function(D) {
              if (!c.get(d) && D.legendVisualProvider) {
                var A = D.legendVisualProvider;
                if (!A.containName(d))
                  return;
                var T = A.indexOfName(d), C = A.getItemVisual(T, "style"), M = A.getItemVisual(T, "legendIcon"), I = $0(C.fill);
                I && I[3] === 0 && (I[3] = 0.2, C = z(z({}, C), {
                  fill: ds(I, "rgba")
                }));
                var L = this._createItem(D, d, p, h, a, e, {}, C, M, v, i);
                L.on("click", cn(n0, null, d, i, f)).on("mouseover", cn(Qv, null, d, i, f)).on("mouseout", cn(ef, null, d, i, f)), n.ssr && L.eachChild(function(P) {
                  var E = j(P);
                  E.seriesIndex = D.seriesIndex, E.dataIndex = p, E.ssrType = "legend";
                }), c.set(d, !0);
              }
            }, this);
          Xz.env.NODE_ENV !== "production" && (c.get(d) || console.warn(d + " series not exists. Legend data should be same with series name or data name."));
        }
      }, this), o && this._createSelector(o, a, i, s, l);
    }, t.prototype._createSelector = function(e, a, n, i, o) {
      var s = this.getSelectorGroup();
      Jv(e, function(u) {
        var c = u.type, v = new ve({
          style: {
            x: 0,
            y: 0,
            align: "center",
            verticalAlign: "middle"
          },
          onclick: function() {
            n.dispatchAction({
              type: c === "all" ? "legendAllSelect" : "legendInverseSelect"
            });
          }
        });
        s.add(v);
        var f = a.getModel("selectorLabel"), h = a.getModel(["emphasis", "selectorLabel"]);
        lt(v, {
          normal: f,
          emphasis: h
        }, {
          defaultText: u.title
        }), Ia(v);
      });
    }, t.prototype._createItem = function(e, a, n, i, o, s, l, u, c, v, f) {
      var h = e.visualDrawType, p = o.get("itemWidth"), d = o.get("itemHeight"), g = o.isSelected(a), y = i.get("symbolRotate"), m = i.get("symbolKeepAspect"), _ = i.get("icon");
      c = _ || c || "roundRect";
      var S = Kz(c, i, l, u, h, g, f), x = new ps(), b = i.getModel("textStyle");
      if (X(e.getLegendIcon) && (!_ || _ === "inherit"))
        x.add(e.getLegendIcon({
          itemWidth: p,
          itemHeight: d,
          icon: c,
          iconRotate: y,
          itemStyle: S.itemStyle,
          lineStyle: S.lineStyle,
          symbolKeepAspect: m
        }));
      else {
        var D = _ === "inherit" && e.getData().getVisual("symbol") ? y === "inherit" ? e.getData().getVisual("symbolRotate") : y : 0;
        x.add(qz({
          itemWidth: p,
          itemHeight: d,
          icon: c,
          iconRotate: D,
          itemStyle: S.itemStyle,
          lineStyle: S.lineStyle,
          symbolKeepAspect: m
        }));
      }
      var A = s === "left" ? p + 5 : -5, T = s, C = o.get("formatter"), M = a;
      Y(C) && C ? M = C.replace("{name}", a ?? "") : X(C) && (M = C(a));
      var I = g ? b.getTextColor() : i.get("inactiveColor");
      x.add(new ve({
        style: Ie(b, {
          text: M,
          x: A,
          y: d / 2,
          fill: I,
          align: T,
          verticalAlign: "middle"
        }, {
          inheritColor: I
        })
      }));
      var L = new de({
        shape: x.getBoundingRect(),
        style: {
          // Cannot use 'invisible' because SVG SSR will miss the node
          fill: "transparent"
        }
      }), P = i.getModel("tooltip");
      return P.get("show") && Wn({
        el: L,
        componentModel: o,
        itemName: a,
        itemTooltipOption: P.option
      }), x.add(L), x.eachChild(function(E) {
        E.silent = !0;
      }), L.silent = !v, this.getContentGroup().add(x), Ia(x), x.__legendDataIndex = n, x;
    }, t.prototype.layoutInner = function(e, a, n, i, o, s) {
      var l = this.getContentGroup(), u = this.getSelectorGroup();
      Ea(e.get("orient"), l, e.get("itemGap"), n.width, n.height);
      var c = l.getBoundingRect(), v = [-c.x, -c.y];
      if (u.markRedraw(), l.markRedraw(), o) {
        Ea(
          // Buttons in selectorGroup always layout horizontally
          "horizontal",
          u,
          e.get("selectorItemGap", !0)
        );
        var f = u.getBoundingRect(), h = [-f.x, -f.y], p = e.get("selectorButtonGap", !0), d = e.getOrient().index, g = d === 0 ? "width" : "height", y = d === 0 ? "height" : "width", m = d === 0 ? "y" : "x";
        s === "end" ? h[d] += c[g] + p : v[d] += f[g] + p, h[1 - d] += c[y] / 2 - f[y] / 2, u.x = h[0], u.y = h[1], l.x = v[0], l.y = v[1];
        var _ = {
          x: 0,
          y: 0
        };
        return _[g] = c[g] + p + f[g], _[y] = Math.max(c[y], f[y]), _[m] = Math.min(0, f[m] + h[1 - d]), _;
      } else
        return l.x = v[0], l.y = v[1], this.group.getBoundingRect();
    }, t.prototype.remove = function() {
      this.getContentGroup().removeAll(), this._isFirstRender = !0;
    }, t.type = "legend.plain", t;
  }(Re)
);
function Kz(r, t, e, a, n, i, o) {
  function s(g, y) {
    g.lineWidth === "auto" && (g.lineWidth = y.lineWidth > 0 ? 2 : 0), Jv(g, function(m, _) {
      g[_] === "inherit" && (g[_] = y[_]);
    });
  }
  var l = t.getModel("itemStyle"), u = l.getItemStyle(), c = r.lastIndexOf("empty", 0) === 0 ? "fill" : "stroke", v = l.getShallow("decal");
  u.decal = !v || v === "inherit" ? a.decal : In(v, o), u.fill === "inherit" && (u.fill = a[n]), u.stroke === "inherit" && (u.stroke = a[c]), u.opacity === "inherit" && (u.opacity = (n === "fill" ? a : e).opacity), s(u, a);
  var f = t.getModel("lineStyle"), h = f.getLineStyle();
  if (s(h, e), u.fill === "auto" && (u.fill = a.fill), u.stroke === "auto" && (u.stroke = a.fill), h.stroke === "auto" && (h.stroke = a.fill), !i) {
    var p = t.get("inactiveBorderWidth"), d = u[c];
    u.lineWidth = p === "auto" ? a.lineWidth > 0 && d ? 2 : 0 : u.lineWidth, u.fill = t.get("inactiveColor"), u.stroke = t.get("inactiveBorderColor"), h.stroke = f.get("inactiveColor"), h.lineWidth = f.get("inactiveWidth");
  }
  return {
    itemStyle: u,
    lineStyle: h
  };
}
function qz(r) {
  var t = r.icon || "roundRect", e = Ze(t, 0, 0, r.itemWidth, r.itemHeight, r.itemStyle.fill, r.symbolKeepAspect);
  return e.setStyle(r.itemStyle), e.rotation = (r.iconRotate || 0) * Math.PI / 180, e.setOrigin([r.itemWidth / 2, r.itemHeight / 2]), t.indexOf("empty") > -1 && (e.style.stroke = e.style.fill, e.style.fill = "#fff", e.style.lineWidth = 2), e;
}
function n0(r, t, e, a) {
  ef(r, t, e, a), e.dispatchAction({
    type: "legendToggleSelect",
    name: r ?? t
  }), Qv(r, t, e, a);
}
function Jb(r) {
  for (var t = r.getZr().storage.getDisplayList(), e, a = 0, n = t.length; a < n && !(e = t[a].states.emphasis); )
    a++;
  return e && e.hoverLayer;
}
function Qv(r, t, e, a) {
  Jb(e) || e.dispatchAction({
    type: "highlight",
    seriesName: r,
    name: t,
    excludeSeriesId: a
  });
}
function ef(r, t, e, a) {
  Jb(e) || e.dispatchAction({
    type: "downplay",
    seriesName: r,
    name: t,
    excludeSeriesId: a
  });
}
function jz(r) {
  var t = r.findComponents({
    mainType: "legend"
  });
  t && t.length && r.filterSeries(function(e) {
    for (var a = 0; a < t.length; a++)
      if (!t[a].isSelected(e.name))
        return !1;
    return !0;
  });
}
function xi(r, t, e) {
  var a = {}, n = r === "toggleSelected", i;
  return e.eachComponent("legend", function(o) {
    n && i != null ? o[i ? "select" : "unSelect"](t.name) : r === "allSelect" || r === "inverseSelect" ? o[r]() : (o[r](t.name), i = o.isSelected(t.name));
    var s = o.getData();
    w(s, function(l) {
      var u = l.get("name");
      if (!(u === `
` || u === "")) {
        var c = o.isSelected(u);
        a.hasOwnProperty(u) ? a[u] = a[u] && c : a[u] = c;
      }
    });
  }), r === "allSelect" || r === "inverseSelect" ? {
    selected: a
  } : {
    name: t.name,
    selected: a
  };
}
function Jz(r) {
  r.registerAction("legendToggleSelect", "legendselectchanged", te(xi, "toggleSelected")), r.registerAction("legendAllSelect", "legendselectall", te(xi, "allSelect")), r.registerAction("legendInverseSelect", "legendinverseselect", te(xi, "inverseSelect")), r.registerAction("legendSelect", "legendselected", te(xi, "select")), r.registerAction("legendUnSelect", "legendunselected", te(xi, "unSelect"));
}
function Qb(r) {
  r.registerComponentModel(jv), r.registerComponentView(jb), r.registerProcessor(r.PRIORITY.PROCESSOR.SERIES_FILTER, jz), r.registerSubTypeDefaulter("legend", function() {
    return "plain";
  }), Jz(r);
}
var Qz = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.setScrollDataIndex = function(e) {
      this.option.scrollDataIndex = e;
    }, t.prototype.init = function(e, a, n) {
      var i = Zn(e);
      r.prototype.init.call(this, e, a, n), i0(this, e, i);
    }, t.prototype.mergeOption = function(e, a) {
      r.prototype.mergeOption.call(this, e, a), i0(this, this.option, e);
    }, t.type = "legend.scroll", t.defaultOption = oa(jv.defaultOption, {
      scrollDataIndex: 0,
      pageButtonItemGap: 5,
      pageButtonGap: null,
      pageButtonPosition: "end",
      pageFormatter: "{current}/{total}",
      pageIcons: {
        horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"],
        vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"]
      },
      pageIconColor: "#2f4554",
      pageIconInactiveColor: "#aaa",
      pageIconSize: 15,
      pageTextStyle: {
        color: "#333"
      },
      animationDurationUpdate: 800
    }), t;
  }(jv)
);
function i0(r, t, e) {
  var a = r.getOrient(), n = [1, 1];
  n[a.index] = 0, ea(t, e, {
    type: "box",
    ignoreSize: !!n
  });
}
var o0 = re, Rc = ["width", "height"], kc = ["x", "y"], eG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.newlineDisabled = !0, e._currentIndex = 0, e;
    }
    return t.prototype.init = function() {
      r.prototype.init.call(this), this.group.add(this._containerGroup = new o0()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new o0());
    }, t.prototype.resetInner = function() {
      r.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null;
    }, t.prototype.renderInner = function(e, a, n, i, o, s, l) {
      var u = this;
      r.prototype.renderInner.call(this, e, a, n, i, o, s, l);
      var c = this._controllerGroup, v = a.get("pageIconSize", !0), f = B(v) ? v : [v, v];
      p("pagePrev", 0);
      var h = a.getModel("pageTextStyle");
      c.add(new ve({
        name: "pageText",
        style: {
          // Placeholder to calculate a proper layout.
          text: "xx/xx",
          fill: h.getTextColor(),
          font: h.getFont(),
          verticalAlign: "middle",
          align: "center"
        },
        silent: !0
      })), p("pageNext", 1);
      function p(d, g) {
        var y = d + "DataIndex", m = go(a.get("pageIcons", !0)[a.getOrient().name][g], {
          // Buttons will be created in each render, so we do not need
          // to worry about avoiding using legendModel kept in scope.
          onclick: U(u._pageGo, u, y, a, i)
        }, {
          x: -f[0] / 2,
          y: -f[1] / 2,
          width: f[0],
          height: f[1]
        });
        m.name = d, c.add(m);
      }
    }, t.prototype.layoutInner = function(e, a, n, i, o, s) {
      var l = this.getSelectorGroup(), u = e.getOrient().index, c = Rc[u], v = kc[u], f = Rc[1 - u], h = kc[1 - u];
      o && Ea(
        // Buttons in selectorGroup always layout horizontally
        "horizontal",
        l,
        e.get("selectorItemGap", !0)
      );
      var p = e.get("selectorButtonGap", !0), d = l.getBoundingRect(), g = [-d.x, -d.y], y = Q(n);
      o && (y[c] = n[c] - d[c] - p);
      var m = this._layoutContentAndController(e, i, y, u, c, f, h, v);
      if (o) {
        if (s === "end")
          g[u] += m[c] + p;
        else {
          var _ = d[c] + p;
          g[u] -= _, m[v] -= _;
        }
        m[c] += d[c] + p, g[1 - u] += m[h] + m[f] / 2 - d[f] / 2, m[f] = Math.max(m[f], d[f]), m[h] = Math.min(m[h], d[h] + g[1 - u]), l.x = g[0], l.y = g[1], l.markRedraw();
      }
      return m;
    }, t.prototype._layoutContentAndController = function(e, a, n, i, o, s, l, u) {
      var c = this.getContentGroup(), v = this._containerGroup, f = this._controllerGroup;
      Ea(e.get("orient"), c, e.get("itemGap"), i ? n.width : null, i ? null : n.height), Ea(
        // Buttons in controller are layout always horizontally.
        "horizontal",
        f,
        e.get("pageButtonItemGap", !0)
      );
      var h = c.getBoundingRect(), p = f.getBoundingRect(), d = this._showController = h[o] > n[o], g = [-h.x, -h.y];
      a || (g[i] = c[u]);
      var y = [0, 0], m = [-p.x, -p.y], _ = ce(e.get("pageButtonGap", !0), e.get("itemGap", !0));
      if (d) {
        var S = e.get("pageButtonPosition", !0);
        S === "end" ? m[i] += n[o] - p[o] : y[i] += p[o] + _;
      }
      m[1 - i] += h[s] / 2 - p[s] / 2, c.setPosition(g), v.setPosition(y), f.setPosition(m);
      var x = {
        x: 0,
        y: 0
      };
      if (x[o] = d ? n[o] : h[o], x[s] = Math.max(h[s], p[s]), x[l] = Math.min(0, p[l] + m[1 - i]), v.__rectSize = n[o], d) {
        var b = {
          x: 0,
          y: 0
        };
        b[o] = Math.max(n[o] - p[o] - _, 0), b[s] = x[s], v.setClipPath(new de({
          shape: b
        })), v.__rectSize = b[o];
      } else
        f.eachChild(function(A) {
          A.attr({
            invisible: !0,
            silent: !0
          });
        });
      var D = this._getPageInfo(e);
      return D.pageIndex != null && pe(
        c,
        {
          x: D.contentPosition[0],
          y: D.contentPosition[1]
        },
        // When switch from "show controller" to "not show controller", view should be
        // updated immediately without animation, otherwise causes weird effect.
        d ? e : null
      ), this._updatePageInfoView(e, D), x;
    }, t.prototype._pageGo = function(e, a, n) {
      var i = this._getPageInfo(a)[e];
      i != null && n.dispatchAction({
        type: "legendScroll",
        scrollDataIndex: i,
        legendId: a.id
      });
    }, t.prototype._updatePageInfoView = function(e, a) {
      var n = this._controllerGroup;
      w(["pagePrev", "pageNext"], function(c) {
        var v = c + "DataIndex", f = a[v] != null, h = n.childOfName(c);
        h && (h.setStyle("fill", f ? e.get("pageIconColor", !0) : e.get("pageIconInactiveColor", !0)), h.cursor = f ? "pointer" : "default");
      });
      var i = n.childOfName("pageText"), o = e.get("pageFormatter"), s = a.pageIndex, l = s != null ? s + 1 : 0, u = a.pageCount;
      i && o && i.setStyle("text", Y(o) ? o.replace("{current}", l == null ? "" : l + "").replace("{total}", u == null ? "" : u + "") : o({
        current: l,
        total: u
      }));
    }, t.prototype._getPageInfo = function(e) {
      var a = e.get("scrollDataIndex", !0), n = this.getContentGroup(), i = this._containerGroup.__rectSize, o = e.getOrient().index, s = Rc[o], l = kc[o], u = this._findTargetItemIndex(a), c = n.children(), v = c[u], f = c.length, h = f ? 1 : 0, p = {
        contentPosition: [n.x, n.y],
        pageCount: h,
        pageIndex: h - 1,
        pagePrevDataIndex: null,
        pageNextDataIndex: null
      };
      if (!v)
        return p;
      var d = S(v);
      p.contentPosition[o] = -d.s;
      for (var g = u + 1, y = d, m = d, _ = null; g <= f; ++g)
        _ = S(c[g]), // Half of the last item is out of the window.
        (!_ && m.e > y.s + i || _ && !x(_, y.s)) && (m.i > y.i ? y = m : y = _, y && (p.pageNextDataIndex == null && (p.pageNextDataIndex = y.i), ++p.pageCount)), m = _;
      for (var g = u - 1, y = d, m = d, _ = null; g >= -1; --g)
        _ = S(c[g]), // If the the end item does not intersect with the window started
        // from the current item, a page can be settled.
        (!_ || !x(m, _.s)) && y.i < m.i && (m = y, p.pagePrevDataIndex == null && (p.pagePrevDataIndex = y.i), ++p.pageCount, ++p.pageIndex), y = _;
      return p;
      function S(b) {
        if (b) {
          var D = b.getBoundingRect(), A = D[l] + b[l];
          return {
            s: A,
            e: A + D[s],
            i: b.__legendDataIndex
          };
        }
      }
      function x(b, D) {
        return b.e >= D && b.s <= D + i;
      }
    }, t.prototype._findTargetItemIndex = function(e) {
      if (!this._showController)
        return 0;
      var a, n = this.getContentGroup(), i;
      return n.eachChild(function(o, s) {
        var l = o.__legendDataIndex;
        i == null && l != null && (i = s), l === e && (a = s);
      }), a ?? i;
    }, t.type = "legend.scroll", t;
  }(jb)
);
function tG(r) {
  r.registerAction("legendScroll", "legendscroll", function(t, e) {
    var a = t.scrollDataIndex;
    a != null && e.eachComponent({
      mainType: "legend",
      subType: "scroll",
      query: t
    }, function(n) {
      n.setScrollDataIndex(a);
    });
  });
}
function rG(r) {
  oe(Qb), r.registerComponentModel(Qz), r.registerComponentView(eG), tG(r);
}
function aG(r) {
  oe(Qb), oe(rG);
}
var nG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "dataZoom.inside", t.defaultOption = oa(io.defaultOption, {
      disabled: !1,
      zoomLock: !1,
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !1,
      preventDefaultMouseMove: !0
    }), t;
  }(io)
), $h = ue();
function iG(r, t, e) {
  $h(r).coordSysRecordMap.each(function(a) {
    var n = a.dataZoomInfoMap.get(t.uid);
    n && (n.getRange = e);
  });
}
function oG(r, t) {
  for (var e = $h(r).coordSysRecordMap, a = e.keys(), n = 0; n < a.length; n++) {
    var i = a[n], o = e.get(i), s = o.dataZoomInfoMap;
    if (s) {
      var l = t.uid, u = s.get(l);
      u && (s.removeKey(l), s.keys().length || ew(e, o));
    }
  }
}
function ew(r, t) {
  if (t) {
    r.removeKey(t.model.uid);
    var e = t.controller;
    e && e.dispose();
  }
}
function sG(r, t) {
  var e = {
    model: t,
    containsPoint: te(uG, t),
    dispatchAction: te(lG, r),
    dataZoomInfoMap: null,
    controller: null
  }, a = e.controller = new To(r.getZr());
  return w(["pan", "zoom", "scrollMove"], function(n) {
    a.on(n, function(i) {
      var o = [];
      e.dataZoomInfoMap.each(function(s) {
        if (i.isAvailableBehavior(s.model.option)) {
          var l = (s.getRange || {})[n], u = l && l(s.dzReferCoordSysInfo, e.model.mainType, e.controller, i);
          !s.model.get("disabled", !0) && u && o.push({
            dataZoomId: s.model.id,
            start: u[0],
            end: u[1]
          });
        }
      }), o.length && e.dispatchAction(o);
    });
  }), e;
}
function lG(r, t) {
  r.isDisposed() || r.dispatchAction({
    type: "dataZoom",
    animation: {
      easing: "cubicOut",
      duration: 100
    },
    batch: t
  });
}
function uG(r, t, e, a) {
  return r.coordinateSystem.containPoint([e, a]);
}
function cG(r) {
  var t, e = "type_", a = {
    type_true: 2,
    type_move: 1,
    type_false: 0,
    type_undefined: -1
  }, n = !0;
  return r.each(function(i) {
    var o = i.model, s = o.get("disabled", !0) ? !1 : o.get("zoomLock", !0) ? "move" : !0;
    a[e + s] > a[e + t] && (t = s), n = n && o.get("preventDefaultMouseMove", !0);
  }), {
    controlType: t,
    opt: {
      // RoamController will enable all of these functionalities,
      // and the final behavior is determined by its event listener
      // provided by each inside zoom.
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !0,
      preventDefaultMouseMove: !!n
    }
  };
}
function vG(r) {
  r.registerProcessor(r.PRIORITY.PROCESSOR.FILTER, function(t, e) {
    var a = $h(e), n = a.coordSysRecordMap || (a.coordSysRecordMap = Z());
    n.each(function(i) {
      i.dataZoomInfoMap = null;
    }), t.eachComponent({
      mainType: "dataZoom",
      subType: "inside"
    }, function(i) {
      var o = kb(i);
      w(o.infoList, function(s) {
        var l = s.model.uid, u = n.get(l) || n.set(l, sG(e, s.model)), c = u.dataZoomInfoMap || (u.dataZoomInfoMap = Z());
        c.set(i.uid, {
          dzReferCoordSysInfo: s,
          model: i,
          getRange: null
        });
      });
    }), n.each(function(i) {
      var o = i.controller, s, l = i.dataZoomInfoMap;
      if (l) {
        var u = l.keys()[0];
        u != null && (s = l.get(u));
      }
      if (!s) {
        ew(n, i);
        return;
      }
      var c = cG(l);
      o.enable(c.controlType, c.opt), o.setPointerChecker(i.containsPoint), jn(i, "dispatchAction", s.model.get("throttle", !0), "fixRate");
    });
  });
}
var fG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = "dataZoom.inside", e;
    }
    return t.prototype.render = function(e, a, n) {
      if (r.prototype.render.apply(this, arguments), e.noTarget()) {
        this._clear();
        return;
      }
      this.range = e.getPercentRange(), iG(n, e, {
        pan: U(Oc.pan, this),
        zoom: U(Oc.zoom, this),
        scrollMove: U(Oc.scrollMove, this)
      });
    }, t.prototype.dispose = function() {
      this._clear(), r.prototype.dispose.apply(this, arguments);
    }, t.prototype._clear = function() {
      oG(this.api, this.dataZoomModel), this.range = null;
    }, t.type = "dataZoom.inside", t;
  }(Oh)
), Oc = {
  zoom: function(r, t, e, a) {
    var n = this.range, i = n.slice(), o = r.axisModels[0];
    if (o) {
      var s = Vc[t](null, [a.originX, a.originY], o, e, r), l = (s.signal > 0 ? s.pixelStart + s.pixelLength - s.pixel : s.pixel - s.pixelStart) / s.pixelLength * (i[1] - i[0]) + i[0], u = Math.max(1 / a.scale, 0);
      i[0] = (i[0] - l) * u + l, i[1] = (i[1] - l) * u + l;
      var c = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();
      if (Ka(0, i, [0, 100], 0, c.minSpan, c.maxSpan), this.range = i, n[0] !== i[0] || n[1] !== i[1])
        return i;
    }
  },
  pan: s0(function(r, t, e, a, n, i) {
    var o = Vc[a]([i.oldX, i.oldY], [i.newX, i.newY], t, n, e);
    return o.signal * (r[1] - r[0]) * o.pixel / o.pixelLength;
  }),
  scrollMove: s0(function(r, t, e, a, n, i) {
    var o = Vc[a]([0, 0], [i.scrollDelta, i.scrollDelta], t, n, e);
    return o.signal * (r[1] - r[0]) * i.scrollDelta;
  })
};
function s0(r) {
  return function(t, e, a, n) {
    var i = this.range, o = i.slice(), s = t.axisModels[0];
    if (s) {
      var l = r(o, s, t, e, a, n);
      if (Ka(l, o, [0, 100], "all"), this.range = o, i[0] !== o[0] || i[1] !== o[1])
        return o;
    }
  };
}
var Vc = {
  grid: function(r, t, e, a, n) {
    var i = e.axis, o = {}, s = n.model.coordinateSystem.getRect();
    return r = r || [0, 0], i.dim === "x" ? (o.pixel = t[0] - r[0], o.pixelLength = s.width, o.pixelStart = s.x, o.signal = i.inverse ? 1 : -1) : (o.pixel = t[1] - r[1], o.pixelLength = s.height, o.pixelStart = s.y, o.signal = i.inverse ? -1 : 1), o;
  },
  polar: function(r, t, e, a, n) {
    var i = e.axis, o = {}, s = n.model.coordinateSystem, l = s.getRadiusAxis().getExtent(), u = s.getAngleAxis().getExtent();
    return r = r ? s.pointToCoord(r) : [0, 0], t = s.pointToCoord(t), e.mainType === "radiusAxis" ? (o.pixel = t[0] - r[0], o.pixelLength = l[1] - l[0], o.pixelStart = l[0], o.signal = i.inverse ? 1 : -1) : (o.pixel = t[1] - r[1], o.pixelLength = u[1] - u[0], o.pixelStart = u[0], o.signal = i.inverse ? -1 : 1), o;
  },
  singleAxis: function(r, t, e, a, n) {
    var i = e.axis, o = n.model.coordinateSystem.getRect(), s = {};
    return r = r || [0, 0], i.orient === "horizontal" ? (s.pixel = t[0] - r[0], s.pixelLength = o.width, s.pixelStart = o.x, s.signal = i.inverse ? 1 : -1) : (s.pixel = t[1] - r[1], s.pixelLength = o.height, s.pixelStart = o.y, s.signal = i.inverse ? -1 : 1), s;
  }
};
function tw(r) {
  Vh(r), r.registerComponentModel(nG), r.registerComponentView(fG), vG(r);
}
var hG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.type = "dataZoom.slider", t.layoutMode = "box", t.defaultOption = oa(io.defaultOption, {
      show: !0,
      // deault value can only be drived in view stage.
      right: "ph",
      top: "ph",
      width: "ph",
      height: "ph",
      left: null,
      bottom: null,
      borderColor: "#d2dbee",
      borderRadius: 3,
      backgroundColor: "rgba(47,69,84,0)",
      // dataBackgroundColor: '#ddd',
      dataBackground: {
        lineStyle: {
          color: "#d2dbee",
          width: 0.5
        },
        areaStyle: {
          color: "#d2dbee",
          opacity: 0.2
        }
      },
      selectedDataBackground: {
        lineStyle: {
          color: "#8fb0f7",
          width: 0.5
        },
        areaStyle: {
          color: "#8fb0f7",
          opacity: 0.2
        }
      },
      // Color of selected window.
      fillerColor: "rgba(135,175,274,0.2)",
      handleIcon: "path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z",
      // Percent of the slider height
      handleSize: "100%",
      handleStyle: {
        color: "#fff",
        borderColor: "#ACB8D1"
      },
      moveHandleSize: 7,
      moveHandleIcon: "path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z",
      moveHandleStyle: {
        color: "#D2DBEE",
        opacity: 0.7
      },
      showDetail: !0,
      showDataShadow: "auto",
      realtime: !0,
      zoomLock: !1,
      textStyle: {
        color: "#6E7079"
      },
      brushSelect: !0,
      brushStyle: {
        color: "rgba(135,175,274,0.15)"
      },
      emphasis: {
        handleStyle: {
          borderColor: "#8FB0F7"
        },
        moveHandleStyle: {
          color: "#8FB0F7"
        }
      }
    }), t;
  }(io)
), pG = { env: {} }, bi = de, l0 = 7, dG = 1, Bc = 30, gG = 7, wi = "horizontal", u0 = "vertical", yG = 5, mG = ["line", "bar", "candlestick", "scatter"], _G = {
  easing: "cubicOut",
  duration: 100,
  delay: 0
}, SG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._displayables = {}, e;
    }
    return t.prototype.init = function(e, a) {
      this.api = a, this._onBrush = U(this._onBrush, this), this._onBrushEnd = U(this._onBrushEnd, this);
    }, t.prototype.render = function(e, a, n, i) {
      if (r.prototype.render.apply(this, arguments), jn(this, "_dispatchZoomAction", e.get("throttle"), "fixRate"), this._orient = e.getOrient(), e.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      if (e.noTarget()) {
        this._clear(), this.group.removeAll();
        return;
      }
      (!i || i.type !== "dataZoom" || i.from !== this.uid) && this._buildView(), this._updateView();
    }, t.prototype.dispose = function() {
      this._clear(), r.prototype.dispose.apply(this, arguments);
    }, t.prototype._clear = function() {
      Ki(this, "_dispatchZoomAction");
      var e = this.api.getZr();
      e.off("mousemove", this._onBrush), e.off("mouseup", this._onBrushEnd);
    }, t.prototype._buildView = function() {
      var e = this.group;
      e.removeAll(), this._brushing = !1, this._displayables.brushRect = null, this._resetLocation(), this._resetInterval();
      var a = this._displayables.sliderGroup = new re();
      this._renderBackground(), this._renderHandle(), this._renderDataShadow(), e.add(a), this._positionGroup();
    }, t.prototype._resetLocation = function() {
      var e = this.dataZoomModel, a = this.api, n = e.get("brushSelect"), i = n ? gG : 0, o = this._findCoordRect(), s = {
        width: a.getWidth(),
        height: a.getHeight()
      }, l = this._orient === wi ? {
        // Why using 'right', because right should be used in vertical,
        // and it is better to be consistent for dealing with position param merge.
        right: s.width - o.x - o.width,
        top: s.height - Bc - l0 - i,
        width: o.width,
        height: Bc
      } : {
        right: l0,
        top: o.y,
        width: Bc,
        height: o.height
      }, u = Zn(e.option);
      w(["right", "top", "width", "height"], function(v) {
        u[v] === "ph" && (u[v] = l[v]);
      });
      var c = qe(u, s);
      this._location = {
        x: c.x,
        y: c.y
      }, this._size = [c.width, c.height], this._orient === u0 && this._size.reverse();
    }, t.prototype._positionGroup = function() {
      var e = this.group, a = this._location, n = this._orient, i = this.dataZoomModel.getFirstTargetAxisModel(), o = i && i.get("inverse"), s = this._displayables.sliderGroup, l = (this._dataShadowInfo || {}).otherAxisInverse;
      s.attr(n === wi && !o ? {
        scaleY: l ? 1 : -1,
        scaleX: 1
      } : n === wi && o ? {
        scaleY: l ? 1 : -1,
        scaleX: -1
      } : n === u0 && !o ? {
        scaleY: l ? -1 : 1,
        scaleX: 1,
        rotation: Math.PI / 2
      } : {
        scaleY: l ? -1 : 1,
        scaleX: -1,
        rotation: Math.PI / 2
      });
      var u = e.getBoundingRect([s]);
      e.x = a.x - u.x, e.y = a.y - u.y, e.markRedraw();
    }, t.prototype._getViewExtent = function() {
      return [0, this._size[0]];
    }, t.prototype._renderBackground = function() {
      var e = this.dataZoomModel, a = this._size, n = this._displayables.sliderGroup, i = e.get("brushSelect");
      n.add(new bi({
        silent: !0,
        shape: {
          x: 0,
          y: 0,
          width: a[0],
          height: a[1]
        },
        style: {
          fill: e.get("backgroundColor")
        },
        z2: -40
      }));
      var o = new bi({
        shape: {
          x: 0,
          y: 0,
          width: a[0],
          height: a[1]
        },
        style: {
          fill: "transparent"
        },
        z2: 0,
        onclick: U(this._onClickPanel, this)
      }), s = this.api.getZr();
      i ? (o.on("mousedown", this._onBrushStart, this), o.cursor = "crosshair", s.on("mousemove", this._onBrush), s.on("mouseup", this._onBrushEnd)) : (s.off("mousemove", this._onBrush), s.off("mouseup", this._onBrushEnd)), n.add(o);
    }, t.prototype._renderDataShadow = function() {
      var e = this._dataShadowInfo = this._prepareDataShadowInfo();
      if (this._displayables.dataShadowSegs = [], !e)
        return;
      var a = this._size, n = this._shadowSize || [], i = e.series, o = i.getRawData(), s = i.getShadowDim && i.getShadowDim(), l = s && o.getDimensionInfo(s) ? i.getShadowDim() : e.otherDim;
      if (l == null)
        return;
      var u = this._shadowPolygonPts, c = this._shadowPolylinePts;
      if (o !== this._shadowData || l !== this._shadowDim || a[0] !== n[0] || a[1] !== n[1]) {
        var v = o.getDataExtent(l), f = (v[1] - v[0]) * 0.3;
        v = [v[0] - f, v[1] + f];
        var h = [0, a[1]], p = [0, a[0]], d = [[a[0], 0], [0, 0]], g = [], y = p[1] / (o.count() - 1), m = 0, _ = Math.round(o.count() / a[0]), S;
        o.each([l], function(T, C) {
          if (_ > 0 && C % _) {
            m += y;
            return;
          }
          var M = T == null || isNaN(T) || T === "", I = M ? 0 : xe(T, v, h, !0);
          M && !S && C ? (d.push([d[d.length - 1][0], 0]), g.push([g[g.length - 1][0], 0])) : !M && S && (d.push([m, 0]), g.push([m, 0])), d.push([m, I]), g.push([m, I]), m += y, S = M;
        }), u = this._shadowPolygonPts = d, c = this._shadowPolylinePts = g;
      }
      this._shadowData = o, this._shadowDim = l, this._shadowSize = [a[0], a[1]];
      var x = this.dataZoomModel;
      function b(T) {
        var C = x.getModel(T ? "selectedDataBackground" : "dataBackground"), M = new re(), I = new Wt({
          shape: {
            points: u
          },
          segmentIgnoreThreshold: 1,
          style: C.getModel("areaStyle").getAreaStyle(),
          silent: !0,
          z2: -20
        }), L = new Ct({
          shape: {
            points: c
          },
          segmentIgnoreThreshold: 1,
          style: C.getModel("lineStyle").getLineStyle(),
          silent: !0,
          z2: -19
        });
        return M.add(I), M.add(L), M;
      }
      for (var D = 0; D < 3; D++) {
        var A = b(D === 1);
        this._displayables.sliderGroup.add(A), this._displayables.dataShadowSegs.push(A);
      }
    }, t.prototype._prepareDataShadowInfo = function() {
      var e = this.dataZoomModel, a = e.get("showDataShadow");
      if (a !== !1) {
        var n, i = this.ecModel;
        return e.eachTargetAxis(function(o, s) {
          var l = e.getAxisProxy(o, s).getTargetSeriesModels();
          w(l, function(u) {
            if (!n && !(a !== !0 && fe(mG, u.get("type")) < 0)) {
              var c = i.getComponent(Ur(o), s).axis, v = xG(o), f, h = u.coordinateSystem;
              v != null && h.getOtherAxis && (f = h.getOtherAxis(c).inverse), v = u.getData().mapDimension(v), n = {
                thisAxis: c,
                series: u,
                thisDim: o,
                otherDim: v,
                otherAxisInverse: f
              };
            }
          }, this);
        }, this), n;
      }
    }, t.prototype._renderHandle = function() {
      var e = this.group, a = this._displayables, n = a.handles = [null, null], i = a.handleLabels = [null, null], o = this._displayables.sliderGroup, s = this._size, l = this.dataZoomModel, u = this.api, c = l.get("borderRadius") || 0, v = l.get("brushSelect"), f = a.filler = new bi({
        silent: v,
        style: {
          fill: l.get("fillerColor")
        },
        textConfig: {
          position: "inside"
        }
      });
      o.add(f), o.add(new bi({
        silent: !0,
        subPixelOptimize: !0,
        shape: {
          x: 0,
          y: 0,
          width: s[0],
          height: s[1],
          r: c
        },
        style: {
          // deprecated option
          stroke: l.get("dataBackgroundColor") || l.get("borderColor"),
          lineWidth: dG,
          fill: "rgba(0,0,0,0)"
        }
      })), w([0, 1], function(_) {
        var S = l.get("handleIcon");
        !Zs[S] && S.indexOf("path://") < 0 && S.indexOf("image://") < 0 && (S = "path://" + S, pG.env.NODE_ENV !== "production" && Qt("handleIcon now needs 'path://' prefix when using a path string"));
        var x = Ze(S, -1, 0, 2, 2, null, !0);
        x.attr({
          cursor: c0(this._orient),
          draggable: !0,
          drift: U(this._onDragMove, this, _),
          ondragend: U(this._onDragEnd, this),
          onmouseover: U(this._showDataInfo, this, !0),
          onmouseout: U(this._showDataInfo, this, !1),
          z2: 5
        });
        var b = x.getBoundingRect(), D = l.get("handleSize");
        this._handleHeight = H(D, this._size[1]), this._handleWidth = b.width / b.height * this._handleHeight, x.setStyle(l.getModel("handleStyle").getItemStyle()), x.style.strokeNoScale = !0, x.rectHover = !0, x.ensureState("emphasis").style = l.getModel(["emphasis", "handleStyle"]).getItemStyle(), Ia(x);
        var A = l.get("handleColor");
        A != null && (x.style.fill = A), o.add(n[_] = x);
        var T = l.getModel("textStyle");
        e.add(i[_] = new ve({
          silent: !0,
          invisible: !0,
          style: Ie(T, {
            x: 0,
            y: 0,
            text: "",
            verticalAlign: "middle",
            align: "center",
            fill: T.getTextColor(),
            font: T.getFont()
          }),
          z2: 10
        }));
      }, this);
      var h = f;
      if (v) {
        var p = H(l.get("moveHandleSize"), s[1]), d = a.moveHandle = new de({
          style: l.getModel("moveHandleStyle").getItemStyle(),
          silent: !0,
          shape: {
            r: [0, 0, 2, 2],
            y: s[1] - 0.5,
            height: p
          }
        }), g = p * 0.8, y = a.moveHandleIcon = Ze(l.get("moveHandleIcon"), -g / 2, -g / 2, g, g, "#fff", !0);
        y.silent = !0, y.y = s[1] + p / 2 - 0.5, d.ensureState("emphasis").style = l.getModel(["emphasis", "moveHandleStyle"]).getItemStyle();
        var m = Math.min(s[1] / 2, Math.max(p, 10));
        h = a.moveZone = new de({
          invisible: !0,
          shape: {
            y: s[1] - m,
            height: p + m
          }
        }), h.on("mouseover", function() {
          u.enterEmphasis(d);
        }).on("mouseout", function() {
          u.leaveEmphasis(d);
        }), o.add(d), o.add(y), o.add(h);
      }
      h.attr({
        draggable: !0,
        cursor: c0(this._orient),
        drift: U(this._onDragMove, this, "all"),
        ondragstart: U(this._showDataInfo, this, !0),
        ondragend: U(this._onDragEnd, this),
        onmouseover: U(this._showDataInfo, this, !0),
        onmouseout: U(this._showDataInfo, this, !1)
      });
    }, t.prototype._resetInterval = function() {
      var e = this._range = this.dataZoomModel.getPercentRange(), a = this._getViewExtent();
      this._handleEnds = [xe(e[0], [0, 100], a, !0), xe(e[1], [0, 100], a, !0)];
    }, t.prototype._updateInterval = function(e, a) {
      var n = this.dataZoomModel, i = this._handleEnds, o = this._getViewExtent(), s = n.findRepresentativeAxisProxy().getMinMaxSpan(), l = [0, 100];
      Ka(a, i, o, n.get("zoomLock") ? "all" : e, s.minSpan != null ? xe(s.minSpan, l, o, !0) : null, s.maxSpan != null ? xe(s.maxSpan, l, o, !0) : null);
      var u = this._range, c = this._range = zt([xe(i[0], o, l, !0), xe(i[1], o, l, !0)]);
      return !u || u[0] !== c[0] || u[1] !== c[1];
    }, t.prototype._updateView = function(e) {
      var a = this._displayables, n = this._handleEnds, i = zt(n.slice()), o = this._size;
      w([0, 1], function(h) {
        var p = a.handles[h], d = this._handleHeight;
        p.attr({
          scaleX: d / 2,
          scaleY: d / 2,
          // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.
          // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.
          x: n[h] + (h ? -1 : 1),
          y: o[1] / 2 - d / 2
        });
      }, this), a.filler.setShape({
        x: i[0],
        y: 0,
        width: i[1] - i[0],
        height: o[1]
      });
      var s = {
        x: i[0],
        width: i[1] - i[0]
      };
      a.moveHandle && (a.moveHandle.setShape(s), a.moveZone.setShape(s), a.moveZone.getBoundingRect(), a.moveHandleIcon && a.moveHandleIcon.attr("x", s.x + s.width / 2));
      for (var l = a.dataShadowSegs, u = [0, i[0], i[1], o[0]], c = 0; c < l.length; c++) {
        var v = l[c], f = v.getClipPath();
        f || (f = new de(), v.setClipPath(f)), f.setShape({
          x: u[c],
          y: 0,
          width: u[c + 1] - u[c],
          height: o[1]
        });
      }
      this._updateDataInfo(e);
    }, t.prototype._updateDataInfo = function(e) {
      var a = this.dataZoomModel, n = this._displayables, i = n.handleLabels, o = this._orient, s = ["", ""];
      if (a.get("showDetail")) {
        var l = a.findRepresentativeAxisProxy();
        if (l) {
          var u = l.getAxisModel().axis, c = this._range, v = e ? l.calculateDataWindow({
            start: c[0],
            end: c[1]
          }).valueWindow : l.getDataValueWindow();
          s = [this._formatLabel(v[0], u), this._formatLabel(v[1], u)];
        }
      }
      var f = zt(this._handleEnds.slice());
      h.call(this, 0), h.call(this, 1);
      function h(p) {
        var d = La(n.handles[p].parent, this.group), g = Cl(p === 0 ? "right" : "left", d), y = this._handleWidth / 2 + yG, m = Jt([f[p] + (p === 0 ? -y : y), this._size[1] / 2], d);
        i[p].setStyle({
          x: m[0],
          y: m[1],
          verticalAlign: o === wi ? "middle" : g,
          align: o === wi ? g : "center",
          text: s[p]
        });
      }
    }, t.prototype._formatLabel = function(e, a) {
      var n = this.dataZoomModel, i = n.get("labelFormatter"), o = n.get("labelPrecision");
      (o == null || o === "auto") && (o = a.getPixelPrecision());
      var s = e == null || isNaN(e) ? "" : a.type === "category" || a.type === "time" ? a.scale.getLabel({
        value: Math.round(e)
      }) : e.toFixed(Math.min(o, 20));
      return X(i) ? i(e, s) : Y(i) ? i.replace("{value}", s) : s;
    }, t.prototype._showDataInfo = function(e) {
      e = this._dragging || e;
      var a = this._displayables, n = a.handleLabels;
      n[0].attr("invisible", !e), n[1].attr("invisible", !e), a.moveHandle && this.api[e ? "enterEmphasis" : "leaveEmphasis"](a.moveHandle, 1);
    }, t.prototype._onDragMove = function(e, a, n, i) {
      this._dragging = !0, jr(i.event);
      var o = this._displayables.sliderGroup.getLocalTransform(), s = Jt([a, n], o, !0), l = this._updateInterval(e, s[0]), u = this.dataZoomModel.get("realtime");
      this._updateView(!u), l && u && this._dispatchZoomAction(!0);
    }, t.prototype._onDragEnd = function() {
      this._dragging = !1, this._showDataInfo(!1);
      var e = this.dataZoomModel.get("realtime");
      !e && this._dispatchZoomAction(!1);
    }, t.prototype._onClickPanel = function(e) {
      var a = this._size, n = this._displayables.sliderGroup.transformCoordToLocal(e.offsetX, e.offsetY);
      if (!(n[0] < 0 || n[0] > a[0] || n[1] < 0 || n[1] > a[1])) {
        var i = this._handleEnds, o = (i[0] + i[1]) / 2, s = this._updateInterval("all", n[0] - o);
        this._updateView(), s && this._dispatchZoomAction(!1);
      }
    }, t.prototype._onBrushStart = function(e) {
      var a = e.offsetX, n = e.offsetY;
      this._brushStart = new Ue(a, n), this._brushing = !0, this._brushStartTime = +/* @__PURE__ */ new Date();
    }, t.prototype._onBrushEnd = function(e) {
      if (this._brushing) {
        var a = this._displayables.brushRect;
        if (this._brushing = !1, !!a) {
          a.attr("ignore", !0);
          var n = a.shape, i = +/* @__PURE__ */ new Date();
          if (!(i - this._brushStartTime < 200 && Math.abs(n.width) < 5)) {
            var o = this._getViewExtent(), s = [0, 100];
            this._range = zt([xe(n.x, o, s, !0), xe(n.x + n.width, o, s, !0)]), this._handleEnds = [n.x, n.x + n.width], this._updateView(), this._dispatchZoomAction(!1);
          }
        }
      }
    }, t.prototype._onBrush = function(e) {
      this._brushing && (jr(e.event), this._updateBrushRect(e.offsetX, e.offsetY));
    }, t.prototype._updateBrushRect = function(e, a) {
      var n = this._displayables, i = this.dataZoomModel, o = n.brushRect;
      o || (o = n.brushRect = new bi({
        silent: !0,
        style: i.getModel("brushStyle").getItemStyle()
      }), n.sliderGroup.add(o)), o.attr("ignore", !1);
      var s = this._brushStart, l = this._displayables.sliderGroup, u = l.transformCoordToLocal(e, a), c = l.transformCoordToLocal(s.x, s.y), v = this._size;
      u[0] = Math.max(Math.min(v[0], u[0]), 0), o.setShape({
        x: c[0],
        y: 0,
        width: u[0] - c[0],
        height: v[1]
      });
    }, t.prototype._dispatchZoomAction = function(e) {
      var a = this._range;
      this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        dataZoomId: this.dataZoomModel.id,
        animation: e ? _G : null,
        start: a[0],
        end: a[1]
      });
    }, t.prototype._findCoordRect = function() {
      var e, a = kb(this.dataZoomModel).infoList;
      if (!e && a.length) {
        var n = a[0].model.coordinateSystem;
        e = n.getRect && n.getRect();
      }
      if (!e) {
        var i = this.api.getWidth(), o = this.api.getHeight();
        e = {
          x: i * 0.2,
          y: o * 0.2,
          width: i * 0.6,
          height: o * 0.6
        };
      }
      return e;
    }, t.type = "dataZoom.slider", t;
  }(Oh)
);
function xG(r) {
  var t = {
    x: "y",
    y: "x",
    radius: "angle",
    angle: "radius"
  };
  return t[r];
}
function c0(r) {
  return r === "vertical" ? "ns-resize" : "ew-resize";
}
function rw(r) {
  r.registerComponentModel(hG), r.registerComponentView(SG), Vh(r);
}
function bG(r) {
  oe(tw), oe(rw);
}
var aw = {
  /**
   * @public
   */
  get: function(r, t, e) {
    var a = Q((wG[r] || {})[t]);
    return e && B(a) ? a[a.length - 1] : a;
  }
}, wG = {
  color: {
    active: ["#006edd", "#e0ffff"],
    inactive: ["rgba(0,0,0,0)"]
  },
  colorHue: {
    active: [0, 360],
    inactive: [0, 0]
  },
  colorSaturation: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  colorLightness: {
    active: [0.9, 0.5],
    inactive: [0, 0]
  },
  colorAlpha: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  opacity: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  symbol: {
    active: ["circle", "roundRect", "diamond"],
    inactive: ["none"]
  },
  symbolSize: {
    active: [10, 50],
    inactive: [0, 0]
  }
}, v0 = et.mapVisual, DG = et.eachVisual, AG = B, f0 = w, TG = zt, CG = xe, dl = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.stateList = ["inRange", "outOfRange"], e.replacableOptionKeys = ["inRange", "outOfRange", "target", "controller", "color"], e.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, e.dataBound = [-1 / 0, 1 / 0], e.targetVisuals = {}, e.controllerVisuals = {}, e;
    }
    return t.prototype.init = function(e, a, n) {
      this.mergeDefaultAndTheme(e, n);
    }, t.prototype.optionUpdated = function(e, a) {
      var n = this.option;
      !a && Yb(n, e, this.replacableOptionKeys), this.textStyleModel = this.getModel("textStyle"), this.resetItemSize(), this.completeVisualOption();
    }, t.prototype.resetVisual = function(e) {
      var a = this.stateList;
      e = U(e, this), this.controllerVisuals = Xv(this.option.controller, a, e), this.targetVisuals = Xv(this.option.target, a, e);
    }, t.prototype.getItemSymbol = function() {
      return null;
    }, t.prototype.getTargetSeriesIndices = function() {
      var e = this.option.seriesIndex, a = [];
      return e == null || e === "all" ? this.ecModel.eachSeries(function(n, i) {
        a.push(i);
      }) : a = we(e), a;
    }, t.prototype.eachTargetSeries = function(e, a) {
      w(this.getTargetSeriesIndices(), function(n) {
        var i = this.ecModel.getSeriesByIndex(n);
        i && e.call(a, i);
      }, this);
    }, t.prototype.isTargetSeries = function(e) {
      var a = !1;
      return this.eachTargetSeries(function(n) {
        n === e && (a = !0);
      }), a;
    }, t.prototype.formatValueText = function(e, a, n) {
      var i = this.option, o = i.precision, s = this.dataBound, l = i.formatter, u;
      n = n || ["<", ">"], B(e) && (e = e.slice(), u = !0);
      var c = a ? e : u ? [v(e[0]), v(e[1])] : v(e);
      if (Y(l))
        return l.replace("{value}", u ? c[0] : c).replace("{value2}", u ? c[1] : c);
      if (X(l))
        return u ? l(e[0], e[1]) : l(e);
      if (u)
        return e[0] === s[0] ? n[0] + " " + c[1] : e[1] === s[1] ? n[1] + " " + c[0] : c[0] + " - " + c[1];
      return c;
      function v(f) {
        return f === s[0] ? "min" : f === s[1] ? "max" : (+f).toFixed(Math.min(o, 20));
      }
    }, t.prototype.resetExtent = function() {
      var e = this.option, a = TG([e.min, e.max]);
      this._dataExtent = a;
    }, t.prototype.getDataDimensionIndex = function(e) {
      var a = this.option.dimension;
      if (a != null)
        return e.getDimensionIndex(a);
      for (var n = e.dimensions, i = n.length - 1; i >= 0; i--) {
        var o = n[i], s = e.getDimensionInfo(o);
        if (!s.isCalculationCoord)
          return s.storeDimIndex;
      }
    }, t.prototype.getExtent = function() {
      return this._dataExtent.slice();
    }, t.prototype.completeVisualOption = function() {
      var e = this.ecModel, a = this.option, n = {
        inRange: a.inRange,
        outOfRange: a.outOfRange
      }, i = a.target || (a.target = {}), o = a.controller || (a.controller = {});
      le(i, n), le(o, n);
      var s = this.isCategory();
      l.call(this, i), l.call(this, o), u.call(this, i, "inRange", "outOfRange"), c.call(this, o);
      function l(v) {
        AG(a.color) && !v.inRange && (v.inRange = {
          color: a.color.slice().reverse()
        }), v.inRange = v.inRange || {
          color: e.get("gradientColor")
        };
      }
      function u(v, f, h) {
        var p = v[f], d = v[h];
        p && !d && (d = v[h] = {}, f0(p, function(g, y) {
          if (et.isValidType(y)) {
            var m = aw.get(y, "inactive", s);
            m != null && (d[y] = m, y === "color" && !d.hasOwnProperty("opacity") && !d.hasOwnProperty("colorAlpha") && (d.opacity = [0, 0]));
          }
        }));
      }
      function c(v) {
        var f = (v.inRange || {}).symbol || (v.outOfRange || {}).symbol, h = (v.inRange || {}).symbolSize || (v.outOfRange || {}).symbolSize, p = this.get("inactiveColor"), d = this.getItemSymbol(), g = d || "roundRect";
        f0(this.stateList, function(y) {
          var m = this.itemSize, _ = v[y];
          _ || (_ = v[y] = {
            color: s ? p : [p]
          }), _.symbol == null && (_.symbol = f && Q(f) || (s ? g : [g])), _.symbolSize == null && (_.symbolSize = h && Q(h) || (s ? m[0] : [m[0], m[0]])), _.symbol = v0(_.symbol, function(b) {
            return b === "none" ? g : b;
          });
          var S = _.symbolSize;
          if (S != null) {
            var x = -1 / 0;
            DG(S, function(b) {
              b > x && (x = b);
            }), _.symbolSize = v0(S, function(b) {
              return CG(b, [0, x], [0, m[0]], !0);
            });
          }
        }, this);
      }
    }, t.prototype.resetItemSize = function() {
      this.itemSize = [parseFloat(this.get("itemWidth")), parseFloat(this.get("itemHeight"))];
    }, t.prototype.isCategory = function() {
      return !!this.option.categories;
    }, t.prototype.setSelected = function(e) {
    }, t.prototype.getSelected = function() {
      return null;
    }, t.prototype.getValueState = function(e) {
      return null;
    }, t.prototype.getVisualMeta = function(e) {
      return null;
    }, t.type = "visualMap", t.dependencies = ["series"], t.defaultOption = {
      show: !0,
      // zlevel: 0,
      z: 4,
      seriesIndex: "all",
      min: 0,
      max: 200,
      left: 0,
      right: null,
      top: null,
      bottom: 0,
      itemWidth: null,
      itemHeight: null,
      inverse: !1,
      orient: "vertical",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      contentColor: "#5793f3",
      inactiveColor: "#aaa",
      borderWidth: 0,
      padding: 5,
      // 接受数组分别设定上右下左边距，同css
      textGap: 10,
      precision: 0,
      textStyle: {
        color: "#333"
        // 值域文字颜色
      }
    }, t;
  }(se)
), h0 = [20, 140], MG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.optionUpdated = function(e, a) {
      r.prototype.optionUpdated.apply(this, arguments), this.resetExtent(), this.resetVisual(function(n) {
        n.mappingMethod = "linear", n.dataExtent = this.getExtent();
      }), this._resetRange();
    }, t.prototype.resetItemSize = function() {
      r.prototype.resetItemSize.apply(this, arguments);
      var e = this.itemSize;
      (e[0] == null || isNaN(e[0])) && (e[0] = h0[0]), (e[1] == null || isNaN(e[1])) && (e[1] = h0[1]);
    }, t.prototype._resetRange = function() {
      var e = this.getExtent(), a = this.option.range;
      !a || a.auto ? (e.auto = 1, this.option.range = e) : B(a) && (a[0] > a[1] && a.reverse(), a[0] = Math.max(a[0], e[0]), a[1] = Math.min(a[1], e[1]));
    }, t.prototype.completeVisualOption = function() {
      r.prototype.completeVisualOption.apply(this, arguments), w(this.stateList, function(e) {
        var a = this.option.controller[e].symbolSize;
        a && a[0] !== a[1] && (a[0] = a[1] / 3);
      }, this);
    }, t.prototype.setSelected = function(e) {
      this.option.range = e.slice(), this._resetRange();
    }, t.prototype.getSelected = function() {
      var e = this.getExtent(), a = zt((this.get("range") || []).slice());
      return a[0] > e[1] && (a[0] = e[1]), a[1] > e[1] && (a[1] = e[1]), a[0] < e[0] && (a[0] = e[0]), a[1] < e[0] && (a[1] = e[0]), a;
    }, t.prototype.getValueState = function(e) {
      var a = this.option.range, n = this.getExtent();
      return (a[0] <= n[0] || a[0] <= e) && (a[1] >= n[1] || e <= a[1]) ? "inRange" : "outOfRange";
    }, t.prototype.findTargetDataIndices = function(e) {
      var a = [];
      return this.eachTargetSeries(function(n) {
        var i = [], o = n.getData();
        o.each(this.getDataDimensionIndex(o), function(s, l) {
          e[0] <= s && s <= e[1] && i.push(l);
        }, this), a.push({
          seriesId: n.id,
          dataIndex: i
        });
      }, this), a;
    }, t.prototype.getVisualMeta = function(e) {
      var a = p0(this, "outOfRange", this.getExtent()), n = p0(this, "inRange", this.option.range.slice()), i = [];
      function o(h, p) {
        i.push({
          value: h,
          color: e(h, p)
        });
      }
      for (var s = 0, l = 0, u = n.length, c = a.length; l < c && (!n.length || a[l] <= n[0]); l++)
        a[l] < n[s] && o(a[l], "outOfRange");
      for (var v = 1; s < u; s++, v = 0)
        v && i.length && o(n[s], "outOfRange"), o(n[s], "inRange");
      for (var v = 1; l < c; l++)
        (!n.length || n[n.length - 1] < a[l]) && (v && (i.length && o(i[i.length - 1].value, "outOfRange"), v = 0), o(a[l], "outOfRange"));
      var f = i.length;
      return {
        stops: i,
        outerColors: [f ? i[0].color : "transparent", f ? i[f - 1].color : "transparent"]
      };
    }, t.type = "visualMap.continuous", t.defaultOption = oa(dl.defaultOption, {
      align: "auto",
      calculable: !1,
      hoverLink: !0,
      realtime: !0,
      handleIcon: "path://M-11.39,9.77h0a3.5,3.5,0,0,1-3.5,3.5h-22a3.5,3.5,0,0,1-3.5-3.5h0a3.5,3.5,0,0,1,3.5-3.5h22A3.5,3.5,0,0,1-11.39,9.77Z",
      handleSize: "120%",
      handleStyle: {
        borderColor: "#fff",
        borderWidth: 1
      },
      indicatorIcon: "circle",
      indicatorSize: "50%",
      indicatorStyle: {
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0,0,0,0.2)"
      }
      // emphasis: {
      //     handleStyle: {
      //         shadowBlur: 3,
      //         shadowOffsetX: 1,
      //         shadowOffsetY: 1,
      //         shadowColor: 'rgba(0,0,0,0.2)'
      //     }
      // }
    }), t;
  }(dl)
);
function p0(r, t, e) {
  if (e[0] === e[1])
    return e.slice();
  for (var a = 200, n = (e[1] - e[0]) / a, i = e[0], o = [], s = 0; s <= a && i < e[1]; s++)
    o.push(i), i += n;
  return o.push(e[1]), o;
}
var nw = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e.autoPositionValues = {
        left: 1,
        right: 1,
        top: 1,
        bottom: 1
      }, e;
    }
    return t.prototype.init = function(e, a) {
      this.ecModel = e, this.api = a;
    }, t.prototype.render = function(e, a, n, i) {
      if (this.visualMapModel = e, e.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      this.doRender(e, a, n, i);
    }, t.prototype.renderBackground = function(e) {
      var a = this.visualMapModel, n = Yn(a.get("padding") || 0), i = e.getBoundingRect();
      e.add(new de({
        z2: -1,
        silent: !0,
        shape: {
          x: i.x - n[3],
          y: i.y - n[0],
          width: i.width + n[3] + n[1],
          height: i.height + n[0] + n[2]
        },
        style: {
          fill: a.get("backgroundColor"),
          stroke: a.get("borderColor"),
          lineWidth: a.get("borderWidth")
        }
      }));
    }, t.prototype.getControllerVisual = function(e, a, n) {
      n = n || {};
      var i = n.forceState, o = this.visualMapModel, s = {};
      if (a === "color") {
        var l = o.get("contentColor");
        s.color = l;
      }
      function u(h) {
        return s[h];
      }
      function c(h, p) {
        s[h] = p;
      }
      var v = o.controllerVisuals[i || o.getValueState(e)], f = et.prepareVisualTypes(v);
      return w(f, function(h) {
        var p = v[h];
        n.convertOpacityToAlpha && h === "opacity" && (h = "colorAlpha", p = v.__alphaForOpacity), et.dependsOn(h, a) && p && p.applyVisual(e, u, c);
      }), s[a];
    }, t.prototype.positionGroup = function(e) {
      var a = this.visualMapModel, n = this.api;
      Rl(e, a.getBoxLayoutParams(), {
        width: n.getWidth(),
        height: n.getHeight()
      });
    }, t.prototype.doRender = function(e, a, n, i) {
    }, t.type = "visualMap", t;
  }(Re)
), d0 = [["left", "right", "width"], ["top", "bottom", "height"]];
function iw(r, t, e) {
  var a = r.option, n = a.align;
  if (n != null && n !== "auto")
    return n;
  for (var i = {
    width: t.getWidth(),
    height: t.getHeight()
  }, o = a.orient === "horizontal" ? 1 : 0, s = d0[o], l = [0, null, 10], u = {}, c = 0; c < 3; c++)
    u[d0[1 - o][c]] = l[c], u[s[c]] = c === 2 ? e[0] : a[s[c]];
  var v = [["x", "width", 3], ["y", "height", 0]][o], f = qe(u, i, a.padding);
  return s[(f.margin[v[2]] || 0) + f[v[0]] + f[v[1]] * 0.5 < i[v[1]] * 0.5 ? 0 : 1];
}
function Is(r, t) {
  return w(r || [], function(e) {
    e.dataIndex != null && (e.dataIndexInside = e.dataIndex, e.dataIndex = null), e.highlightKey = "visualMap" + (t ? t.componentIndex : "");
  }), r;
}
var nr = xe, IG = w, g0 = Math.min, zc = Math.max, LG = 12, EG = 6, PG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._shapes = {}, e._dataInterval = [], e._handleEnds = [], e._hoverLinkDataIndices = [], e;
    }
    return t.prototype.init = function(e, a) {
      r.prototype.init.call(this, e, a), this._hoverLinkFromSeriesMouseOver = U(this._hoverLinkFromSeriesMouseOver, this), this._hideIndicator = U(this._hideIndicator, this);
    }, t.prototype.doRender = function(e, a, n, i) {
      (!i || i.type !== "selectDataRange" || i.from !== this.uid) && this._buildView();
    }, t.prototype._buildView = function() {
      this.group.removeAll();
      var e = this.visualMapModel, a = this.group;
      this._orient = e.get("orient"), this._useHandle = e.get("calculable"), this._resetInterval(), this._renderBar(a);
      var n = e.get("text");
      this._renderEndsText(a, n, 0), this._renderEndsText(a, n, 1), this._updateView(!0), this.renderBackground(a), this._updateView(), this._enableHoverLinkToSeries(), this._enableHoverLinkFromSeries(), this.positionGroup(a);
    }, t.prototype._renderEndsText = function(e, a, n) {
      if (a) {
        var i = a[1 - n];
        i = i != null ? i + "" : "";
        var o = this.visualMapModel, s = o.get("textGap"), l = o.itemSize, u = this._shapes.mainGroup, c = this._applyTransform([l[0] / 2, n === 0 ? -s : l[1] + s], u), v = this._applyTransform(n === 0 ? "bottom" : "top", u), f = this._orient, h = this.visualMapModel.textStyleModel;
        this.group.add(new ve({
          style: Ie(h, {
            x: c[0],
            y: c[1],
            verticalAlign: f === "horizontal" ? "middle" : v,
            align: f === "horizontal" ? v : "center",
            text: i
          })
        }));
      }
    }, t.prototype._renderBar = function(e) {
      var a = this.visualMapModel, n = this._shapes, i = a.itemSize, o = this._orient, s = this._useHandle, l = iw(a, this.api, i), u = n.mainGroup = this._createBarGroup(l), c = new re();
      u.add(c), c.add(n.outOfRange = y0()), c.add(n.inRange = y0(null, s ? _0(this._orient) : null, U(this._dragHandle, this, "all", !1), U(this._dragHandle, this, "all", !0))), c.setClipPath(new de({
        shape: {
          x: 0,
          y: 0,
          width: i[0],
          height: i[1],
          r: 3
        }
      }));
      var v = a.textStyleModel.getTextRect("国"), f = zc(v.width, v.height);
      s && (n.handleThumbs = [], n.handleLabels = [], n.handleLabelPoints = [], this._createHandle(a, u, 0, i, f, o), this._createHandle(a, u, 1, i, f, o)), this._createIndicator(a, u, i, f, o), e.add(u);
    }, t.prototype._createHandle = function(e, a, n, i, o, s) {
      var l = U(this._dragHandle, this, n, !1), u = U(this._dragHandle, this, n, !0), c = An(e.get("handleSize"), i[0]), v = Ze(e.get("handleIcon"), -c / 2, -c / 2, c, c, null, !0), f = _0(this._orient);
      v.attr({
        cursor: f,
        draggable: !0,
        drift: l,
        ondragend: u,
        onmousemove: function(y) {
          jr(y.event);
        }
      }), v.x = i[0] / 2, v.useStyle(e.getModel("handleStyle").getItemStyle()), v.setStyle({
        strokeNoScale: !0,
        strokeFirst: !0
      }), v.style.lineWidth *= 2, v.ensureState("emphasis").style = e.getModel(["emphasis", "handleStyle"]).getItemStyle(), Da(v, !0), a.add(v);
      var h = this.visualMapModel.textStyleModel, p = new ve({
        cursor: f,
        draggable: !0,
        drift: l,
        onmousemove: function(y) {
          jr(y.event);
        },
        ondragend: u,
        style: Ie(h, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      p.ensureState("blur").style = {
        opacity: 0.1
      }, p.stateTransition = {
        duration: 200
      }, this.group.add(p);
      var d = [c, 0], g = this._shapes;
      g.handleThumbs[n] = v, g.handleLabelPoints[n] = d, g.handleLabels[n] = p;
    }, t.prototype._createIndicator = function(e, a, n, i, o) {
      var s = An(e.get("indicatorSize"), n[0]), l = Ze(e.get("indicatorIcon"), -s / 2, -s / 2, s, s, null, !0);
      l.attr({
        cursor: "move",
        invisible: !0,
        silent: !0,
        x: n[0] / 2
      });
      var u = e.getModel("indicatorStyle").getItemStyle();
      if (l instanceof Ut) {
        var c = l.style;
        l.useStyle(z({
          // TODO other properties like x, y ?
          image: c.image,
          x: c.x,
          y: c.y,
          width: c.width,
          height: c.height
        }, u));
      } else
        l.useStyle(u);
      a.add(l);
      var v = this.visualMapModel.textStyleModel, f = new ve({
        silent: !0,
        invisible: !0,
        style: Ie(v, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      this.group.add(f);
      var h = [(o === "horizontal" ? i / 2 : EG) + n[0] / 2, 0], p = this._shapes;
      p.indicator = l, p.indicatorLabel = f, p.indicatorLabelPoint = h, this._firstShowIndicator = !0;
    }, t.prototype._dragHandle = function(e, a, n, i) {
      if (this._useHandle) {
        if (this._dragging = !a, !a) {
          var o = this._applyTransform([n, i], this._shapes.mainGroup, !0);
          this._updateInterval(e, o[1]), this._hideIndicator(), this._updateView();
        }
        a === !this.visualMapModel.get("realtime") && this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: this._dataInterval.slice()
        }), a ? !this._hovering && this._clearHoverLinkToSeries() : m0(this.visualMapModel) && this._doHoverLinkToSeries(this._handleEnds[e], !1);
      }
    }, t.prototype._resetInterval = function() {
      var e = this.visualMapModel, a = this._dataInterval = e.getSelected(), n = e.getExtent(), i = [0, e.itemSize[1]];
      this._handleEnds = [nr(a[0], n, i, !0), nr(a[1], n, i, !0)];
    }, t.prototype._updateInterval = function(e, a) {
      a = a || 0;
      var n = this.visualMapModel, i = this._handleEnds, o = [0, n.itemSize[1]];
      Ka(
        a,
        i,
        o,
        e,
        // cross is forbidden
        0
      );
      var s = n.getExtent();
      this._dataInterval = [nr(i[0], o, s, !0), nr(i[1], o, s, !0)];
    }, t.prototype._updateView = function(e) {
      var a = this.visualMapModel, n = a.getExtent(), i = this._shapes, o = [0, a.itemSize[1]], s = e ? o : this._handleEnds, l = this._createBarVisual(this._dataInterval, n, s, "inRange"), u = this._createBarVisual(n, n, o, "outOfRange");
      i.inRange.setStyle({
        fill: l.barColor
        // opacity: visualInRange.opacity
      }).setShape("points", l.barPoints), i.outOfRange.setStyle({
        fill: u.barColor
        // opacity: visualOutOfRange.opacity
      }).setShape("points", u.barPoints), this._updateHandle(s, l);
    }, t.prototype._createBarVisual = function(e, a, n, i) {
      var o = {
        forceState: i,
        convertOpacityToAlpha: !0
      }, s = this._makeColorGradient(e, o), l = [this.getControllerVisual(e[0], "symbolSize", o), this.getControllerVisual(e[1], "symbolSize", o)], u = this._createBarPoints(n, l);
      return {
        barColor: new ml(0, 0, 0, 1, s),
        barPoints: u,
        handlesColor: [s[0].color, s[s.length - 1].color]
      };
    }, t.prototype._makeColorGradient = function(e, a) {
      var n = 100, i = [], o = (e[1] - e[0]) / n;
      i.push({
        color: this.getControllerVisual(e[0], "color", a),
        offset: 0
      });
      for (var s = 1; s < n; s++) {
        var l = e[0] + o * s;
        if (l > e[1])
          break;
        i.push({
          color: this.getControllerVisual(l, "color", a),
          offset: s / n
        });
      }
      return i.push({
        color: this.getControllerVisual(e[1], "color", a),
        offset: 1
      }), i;
    }, t.prototype._createBarPoints = function(e, a) {
      var n = this.visualMapModel.itemSize;
      return [[n[0] - a[0], e[0]], [n[0], e[0]], [n[0], e[1]], [n[0] - a[1], e[1]]];
    }, t.prototype._createBarGroup = function(e) {
      var a = this._orient, n = this.visualMapModel.get("inverse");
      return new re(a === "horizontal" && !n ? {
        scaleX: e === "bottom" ? 1 : -1,
        rotation: Math.PI / 2
      } : a === "horizontal" && n ? {
        scaleX: e === "bottom" ? -1 : 1,
        rotation: -Math.PI / 2
      } : a === "vertical" && !n ? {
        scaleX: e === "left" ? 1 : -1,
        scaleY: -1
      } : {
        scaleX: e === "left" ? 1 : -1
      });
    }, t.prototype._updateHandle = function(e, a) {
      if (this._useHandle) {
        var n = this._shapes, i = this.visualMapModel, o = n.handleThumbs, s = n.handleLabels, l = i.itemSize, u = i.getExtent();
        IG([0, 1], function(c) {
          var v = o[c];
          v.setStyle("fill", a.handlesColor[c]), v.y = e[c];
          var f = nr(e[c], [0, l[1]], u, !0), h = this.getControllerVisual(f, "symbolSize");
          v.scaleX = v.scaleY = h / l[0], v.x = l[0] - h / 2;
          var p = Jt(n.handleLabelPoints[c], La(v, this.group));
          s[c].setStyle({
            x: p[0],
            y: p[1],
            text: i.formatValueText(this._dataInterval[c]),
            verticalAlign: "middle",
            align: this._orient === "vertical" ? this._applyTransform("left", n.mainGroup) : "center"
          });
        }, this);
      }
    }, t.prototype._showIndicator = function(e, a, n, i) {
      var o = this.visualMapModel, s = o.getExtent(), l = o.itemSize, u = [0, l[1]], c = this._shapes, v = c.indicator;
      if (v) {
        v.attr("invisible", !1);
        var f = {
          convertOpacityToAlpha: !0
        }, h = this.getControllerVisual(e, "color", f), p = this.getControllerVisual(e, "symbolSize"), d = nr(e, s, u, !0), g = l[0] - p / 2, y = {
          x: v.x,
          y: v.y
        };
        v.y = d, v.x = g;
        var m = Jt(c.indicatorLabelPoint, La(v, this.group)), _ = c.indicatorLabel;
        _.attr("invisible", !1);
        var S = this._applyTransform("left", c.mainGroup), x = this._orient, b = x === "horizontal";
        _.setStyle({
          text: (n || "") + o.formatValueText(a),
          verticalAlign: b ? S : "middle",
          align: b ? "center" : S
        });
        var D = {
          x: g,
          y: d,
          style: {
            fill: h
          }
        }, A = {
          style: {
            x: m[0],
            y: m[1]
          }
        };
        if (o.ecModel.isAnimationEnabled() && !this._firstShowIndicator) {
          var T = {
            duration: 100,
            easing: "cubicInOut",
            additive: !0
          };
          v.x = y.x, v.y = y.y, v.animateTo(D, T), _.animateTo(A, T);
        } else
          v.attr(D), _.attr(A);
        this._firstShowIndicator = !1;
        var C = this._shapes.handleLabels;
        if (C)
          for (var M = 0; M < C.length; M++)
            this.api.enterBlur(C[M]);
      }
    }, t.prototype._enableHoverLinkToSeries = function() {
      var e = this;
      this._shapes.mainGroup.on("mousemove", function(a) {
        if (e._hovering = !0, !e._dragging) {
          var n = e.visualMapModel.itemSize, i = e._applyTransform([a.offsetX, a.offsetY], e._shapes.mainGroup, !0, !0);
          i[1] = g0(zc(0, i[1]), n[1]), e._doHoverLinkToSeries(i[1], 0 <= i[0] && i[0] <= n[0]);
        }
      }).on("mouseout", function() {
        e._hovering = !1, !e._dragging && e._clearHoverLinkToSeries();
      });
    }, t.prototype._enableHoverLinkFromSeries = function() {
      var e = this.api.getZr();
      this.visualMapModel.option.hoverLink ? (e.on("mouseover", this._hoverLinkFromSeriesMouseOver, this), e.on("mouseout", this._hideIndicator, this)) : this._clearHoverLinkFromSeries();
    }, t.prototype._doHoverLinkToSeries = function(e, a) {
      var n = this.visualMapModel, i = n.itemSize;
      if (n.option.hoverLink) {
        var o = [0, i[1]], s = n.getExtent();
        e = g0(zc(o[0], e), o[1]);
        var l = NG(n, s, o), u = [e - l, e + l], c = nr(e, o, s, !0), v = [nr(u[0], o, s, !0), nr(u[1], o, s, !0)];
        u[0] < o[0] && (v[0] = -1 / 0), u[1] > o[1] && (v[1] = 1 / 0), a && (v[0] === -1 / 0 ? this._showIndicator(c, v[1], "< ", l) : v[1] === 1 / 0 ? this._showIndicator(c, v[0], "> ", l) : this._showIndicator(c, c, "≈ ", l));
        var f = this._hoverLinkDataIndices, h = [];
        (a || m0(n)) && (h = this._hoverLinkDataIndices = n.findTargetDataIndices(v));
        var p = SD(f, h);
        this._dispatchHighDown("downplay", Is(p[0], n)), this._dispatchHighDown("highlight", Is(p[1], n));
      }
    }, t.prototype._hoverLinkFromSeriesMouseOver = function(e) {
      var a;
      if (Ta(e.target, function(l) {
        var u = j(l);
        if (u.dataIndex != null)
          return a = u, !0;
      }, !0), !!a) {
        var n = this.ecModel.getSeriesByIndex(a.seriesIndex), i = this.visualMapModel;
        if (i.isTargetSeries(n)) {
          var o = n.getData(a.dataType), s = o.getStore().get(i.getDataDimensionIndex(o), a.dataIndex);
          isNaN(s) || this._showIndicator(s, s);
        }
      }
    }, t.prototype._hideIndicator = function() {
      var e = this._shapes;
      e.indicator && e.indicator.attr("invisible", !0), e.indicatorLabel && e.indicatorLabel.attr("invisible", !0);
      var a = this._shapes.handleLabels;
      if (a)
        for (var n = 0; n < a.length; n++)
          this.api.leaveBlur(a[n]);
    }, t.prototype._clearHoverLinkToSeries = function() {
      this._hideIndicator();
      var e = this._hoverLinkDataIndices;
      this._dispatchHighDown("downplay", Is(e, this.visualMapModel)), e.length = 0;
    }, t.prototype._clearHoverLinkFromSeries = function() {
      this._hideIndicator();
      var e = this.api.getZr();
      e.off("mouseover", this._hoverLinkFromSeriesMouseOver), e.off("mouseout", this._hideIndicator);
    }, t.prototype._applyTransform = function(e, a, n, i) {
      var o = La(a, i ? null : this.group);
      return B(e) ? Jt(e, o, n) : Cl(e, o, n);
    }, t.prototype._dispatchHighDown = function(e, a) {
      a && a.length && this.api.dispatchAction({
        type: e,
        batch: a
      });
    }, t.prototype.dispose = function() {
      this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
    }, t.type = "visualMap.continuous", t;
  }(nw)
);
function y0(r, t, e, a) {
  return new Wt({
    shape: {
      points: r
    },
    draggable: !!e,
    cursor: t,
    drift: e,
    onmousemove: function(n) {
      jr(n.event);
    },
    ondragend: a
  });
}
function NG(r, t, e) {
  var a = LG / 2, n = r.get("hoverLinkDataSize");
  return n && (a = nr(n, t, e, !0) / 2), a;
}
function m0(r) {
  var t = r.get("hoverLinkOnHandle");
  return !!(t ?? r.get("realtime"));
}
function _0(r) {
  return r === "vertical" ? "ns-resize" : "ew-resize";
}
var RG = {
  type: "selectDataRange",
  event: "dataRangeSelected",
  // FIXME use updateView appears wrong
  update: "update"
}, kG = function(r, t) {
  t.eachComponent({
    mainType: "visualMap",
    query: r
  }, function(e) {
    e.setSelected(r.selected);
  });
}, OG = [
  {
    createOnAllSeries: !0,
    reset: function(r, t) {
      var e = [];
      return t.eachComponent("visualMap", function(a) {
        var n = r.pipelineContext;
        !a.isTargetSeries(r) || n && n.large || e.push(QB(a.stateList, a.targetVisuals, U(a.getValueState, a), a.getDataDimensionIndex(r.getData())));
      }), e;
    }
  },
  // Only support color.
  {
    createOnAllSeries: !0,
    reset: function(r, t) {
      var e = r.getData(), a = [];
      t.eachComponent("visualMap", function(n) {
        if (n.isTargetSeries(r)) {
          var i = n.getVisualMeta(U(VG, null, r, n)) || {
            stops: [],
            outerColors: []
          }, o = n.getDataDimensionIndex(e);
          o >= 0 && (i.dimension = o, a.push(i));
        }
      }), r.getData().setVisual("visualMeta", a);
    }
  }
];
function VG(r, t, e, a) {
  for (var n = t.targetVisuals[a], i = et.prepareVisualTypes(n), o = {
    color: yo(r.getData(), "color")
    // default color.
  }, s = 0, l = i.length; s < l; s++) {
    var u = i[s], c = n[u === "opacity" ? "__alphaForOpacity" : u];
    c && c.applyVisual(e, v, f);
  }
  return o.color;
  function v(h) {
    return o[h];
  }
  function f(h, p) {
    o[h] = p;
  }
}
var S0 = w;
function BG(r) {
  var t = r && r.visualMap;
  B(t) || (t = t ? [t] : []), S0(t, function(e) {
    if (e) {
      vn(e, "splitList") && !vn(e, "pieces") && (e.pieces = e.splitList, delete e.splitList);
      var a = e.pieces;
      a && B(a) && S0(a, function(n) {
        J(n) && (vn(n, "start") && !vn(n, "min") && (n.min = n.start), vn(n, "end") && !vn(n, "max") && (n.max = n.end));
      });
    }
  });
}
function vn(r, t) {
  return r && r.hasOwnProperty && r.hasOwnProperty(t);
}
var x0 = !1;
function ow(r) {
  x0 || (x0 = !0, r.registerSubTypeDefaulter("visualMap", function(t) {
    return !t.categories && (!(t.pieces ? t.pieces.length > 0 : t.splitNumber > 0) || t.calculable) ? "continuous" : "piecewise";
  }), r.registerAction(RG, kG), w(OG, function(t) {
    r.registerVisual(r.PRIORITY.VISUAL.COMPONENT, t);
  }), r.registerPreprocessor(BG));
}
function sw(r) {
  r.registerComponentModel(MG), r.registerComponentView(PG), ow(r);
}
var zG = { env: {} }, GG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e._pieceList = [], e;
    }
    return t.prototype.optionUpdated = function(e, a) {
      r.prototype.optionUpdated.apply(this, arguments), this.resetExtent();
      var n = this._mode = this._determineMode();
      this._pieceList = [], FG[this._mode].call(this, this._pieceList), this._resetSelected(e, a);
      var i = this.option.categories;
      this.resetVisual(function(o, s) {
        n === "categories" ? (o.mappingMethod = "category", o.categories = Q(i)) : (o.dataExtent = this.getExtent(), o.mappingMethod = "piecewise", o.pieceList = G(this._pieceList, function(l) {
          return l = Q(l), s !== "inRange" && (l.visual = null), l;
        }));
      });
    }, t.prototype.completeVisualOption = function() {
      var e = this.option, a = {}, n = et.listVisualTypes(), i = this.isCategory();
      w(e.pieces, function(s) {
        w(n, function(l) {
          s.hasOwnProperty(l) && (a[l] = 1);
        });
      }), w(a, function(s, l) {
        var u = !1;
        w(this.stateList, function(c) {
          u = u || o(e, c, l) || o(e.target, c, l);
        }, this), !u && w(this.stateList, function(c) {
          (e[c] || (e[c] = {}))[l] = aw.get(l, c === "inRange" ? "active" : "inactive", i);
        });
      }, this);
      function o(s, l, u) {
        return s && s[l] && s[l].hasOwnProperty(u);
      }
      r.prototype.completeVisualOption.apply(this, arguments);
    }, t.prototype._resetSelected = function(e, a) {
      var n = this.option, i = this._pieceList, o = (a ? n : e).selected || {};
      if (n.selected = o, w(i, function(l, u) {
        var c = this.getSelectedMapKey(l);
        o.hasOwnProperty(c) || (o[c] = !0);
      }, this), n.selectedMode === "single") {
        var s = !1;
        w(i, function(l, u) {
          var c = this.getSelectedMapKey(l);
          o[c] && (s ? o[c] = !1 : s = !0);
        }, this);
      }
    }, t.prototype.getItemSymbol = function() {
      return this.get("itemSymbol");
    }, t.prototype.getSelectedMapKey = function(e) {
      return this._mode === "categories" ? e.value + "" : e.index + "";
    }, t.prototype.getPieceList = function() {
      return this._pieceList;
    }, t.prototype._determineMode = function() {
      var e = this.option;
      return e.pieces && e.pieces.length > 0 ? "pieces" : this.option.categories ? "categories" : "splitNumber";
    }, t.prototype.setSelected = function(e) {
      this.option.selected = Q(e);
    }, t.prototype.getValueState = function(e) {
      var a = et.findPieceIndex(e, this._pieceList);
      return a != null && this.option.selected[this.getSelectedMapKey(this._pieceList[a])] ? "inRange" : "outOfRange";
    }, t.prototype.findTargetDataIndices = function(e) {
      var a = [], n = this._pieceList;
      return this.eachTargetSeries(function(i) {
        var o = [], s = i.getData();
        s.each(this.getDataDimensionIndex(s), function(l, u) {
          var c = et.findPieceIndex(l, n);
          c === e && o.push(u);
        }, this), a.push({
          seriesId: i.id,
          dataIndex: o
        });
      }, this), a;
    }, t.prototype.getRepresentValue = function(e) {
      var a;
      if (this.isCategory())
        a = e.value;
      else if (e.value != null)
        a = e.value;
      else {
        var n = e.interval || [];
        a = n[0] === -1 / 0 && n[1] === 1 / 0 ? 0 : (n[0] + n[1]) / 2;
      }
      return a;
    }, t.prototype.getVisualMeta = function(e) {
      if (this.isCategory())
        return;
      var a = [], n = ["", ""], i = this;
      function o(c, v) {
        var f = i.getRepresentValue({
          interval: c
        });
        v || (v = i.getValueState(f));
        var h = e(f, v);
        c[0] === -1 / 0 ? n[0] = h : c[1] === 1 / 0 ? n[1] = h : a.push({
          value: c[0],
          color: h
        }, {
          value: c[1],
          color: h
        });
      }
      var s = this._pieceList.slice();
      if (!s.length)
        s.push({
          interval: [-1 / 0, 1 / 0]
        });
      else {
        var l = s[0].interval[0];
        l !== -1 / 0 && s.unshift({
          interval: [-1 / 0, l]
        }), l = s[s.length - 1].interval[1], l !== 1 / 0 && s.push({
          interval: [l, 1 / 0]
        });
      }
      var u = -1 / 0;
      return w(s, function(c) {
        var v = c.interval;
        v && (v[0] > u && o([u, v[0]], "outOfRange"), o(v.slice()), u = v[1]);
      }, this), {
        stops: a,
        outerColors: n
      };
    }, t.type = "visualMap.piecewise", t.defaultOption = oa(dl.defaultOption, {
      selected: null,
      minOpen: !1,
      maxOpen: !1,
      align: "auto",
      itemWidth: 20,
      itemHeight: 14,
      itemSymbol: "roundRect",
      pieces: null,
      categories: null,
      splitNumber: 5,
      selectedMode: "multiple",
      itemGap: 10,
      hoverLink: !0
      // Enable hover highlight.
    }), t;
  }(dl)
), FG = {
  splitNumber: function(r) {
    var t = this.option, e = Math.min(t.precision, 20), a = this.getExtent(), n = t.splitNumber;
    n = Math.max(parseInt(n, 10), 1), t.splitNumber = n;
    for (var i = (a[1] - a[0]) / n; +i.toFixed(e) !== i && e < 5; )
      e++;
    t.precision = e, i = +i.toFixed(e), t.minOpen && r.push({
      interval: [-1 / 0, a[0]],
      close: [0, 0]
    });
    for (var o = 0, s = a[0]; o < n; s += i, o++) {
      var l = o === n - 1 ? a[1] : s + i;
      r.push({
        interval: [s, l],
        close: [1, 1]
      });
    }
    t.maxOpen && r.push({
      interval: [a[1], 1 / 0],
      close: [0, 0]
    }), np(r), w(r, function(u, c) {
      u.index = c, u.text = this.formatValueText(u.interval);
    }, this);
  },
  categories: function(r) {
    var t = this.option;
    w(t.categories, function(e) {
      r.push({
        text: this.formatValueText(e, !0),
        value: e
      });
    }, this), b0(t, r);
  },
  pieces: function(r) {
    var t = this.option;
    w(t.pieces, function(e, a) {
      J(e) || (e = {
        value: e
      });
      var n = {
        text: "",
        index: a
      };
      if (e.label != null && (n.text = e.label), e.hasOwnProperty("value")) {
        var i = n.value = e.value;
        n.interval = [i, i], n.close = [1, 1];
      } else {
        for (var o = n.interval = [], s = n.close = [0, 0], l = [1, 0, 1], u = [-1 / 0, 1 / 0], c = [], v = 0; v < 2; v++) {
          for (var f = [["gte", "gt", "min"], ["lte", "lt", "max"]][v], h = 0; h < 3 && o[v] == null; h++)
            o[v] = e[f[h]], s[v] = l[h], c[v] = h === 2;
          o[v] == null && (o[v] = u[v]);
        }
        c[0] && o[1] === 1 / 0 && (s[0] = 0), c[1] && o[0] === -1 / 0 && (s[1] = 0), zG.env.NODE_ENV !== "production" && o[0] > o[1] && console.warn("Piece " + a + "is illegal: " + o + " lower bound should not greater then uppper bound."), o[0] === o[1] && s[0] && s[1] && (n.value = o[0]);
      }
      n.visual = et.retrieveVisuals(e), r.push(n);
    }, this), b0(t, r), np(r), w(r, function(e) {
      var a = e.close, n = [["<", "≤"][a[1]], [">", "≥"][a[0]]];
      e.text = e.text || this.formatValueText(e.value != null ? e.value : e.interval, !1, n);
    }, this);
  }
};
function b0(r, t) {
  var e = r.inverse;
  (r.orient === "vertical" ? !e : e) && t.reverse();
}
var HG = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = t.type, e;
    }
    return t.prototype.doRender = function() {
      var e = this.group;
      e.removeAll();
      var a = this.visualMapModel, n = a.get("textGap"), i = a.textStyleModel, o = i.getFont(), s = i.getTextColor(), l = this._getItemAlign(), u = a.itemSize, c = this._getViewData(), v = c.endsText, f = $e(a.get("showLabel", !0), !v);
      v && this._renderEndsText(e, v[0], u, f, l), w(c.viewPieceList, function(h) {
        var p = h.piece, d = new re();
        d.onclick = U(this._onItemClick, this, p), this._enableHoverLink(d, h.indexInModelPieceList);
        var g = a.getRepresentValue(p);
        if (this._createItemSymbol(d, g, [0, 0, u[0], u[1]]), f) {
          var y = this.visualMapModel.getValueState(g);
          d.add(new ve({
            style: {
              x: l === "right" ? -n : u[0] + n,
              y: u[1] / 2,
              text: p.text,
              verticalAlign: "middle",
              align: l,
              font: o,
              fill: s,
              opacity: y === "outOfRange" ? 0.5 : 1
            }
          }));
        }
        e.add(d);
      }, this), v && this._renderEndsText(e, v[1], u, f, l), Ea(a.get("orient"), e, a.get("itemGap")), this.renderBackground(e), this.positionGroup(e);
    }, t.prototype._enableHoverLink = function(e, a) {
      var n = this;
      e.on("mouseover", function() {
        return i("highlight");
      }).on("mouseout", function() {
        return i("downplay");
      });
      var i = function(o) {
        var s = n.visualMapModel;
        s.option.hoverLink && n.api.dispatchAction({
          type: o,
          batch: Is(s.findTargetDataIndices(a), s)
        });
      };
    }, t.prototype._getItemAlign = function() {
      var e = this.visualMapModel, a = e.option;
      if (a.orient === "vertical")
        return iw(e, this.api, e.itemSize);
      var n = a.align;
      return (!n || n === "auto") && (n = "left"), n;
    }, t.prototype._renderEndsText = function(e, a, n, i, o) {
      if (a) {
        var s = new re(), l = this.visualMapModel.textStyleModel;
        s.add(new ve({
          style: Ie(l, {
            x: i ? o === "right" ? n[0] : 0 : n[0] / 2,
            y: n[1] / 2,
            verticalAlign: "middle",
            align: i ? o : "center",
            text: a
          })
        })), e.add(s);
      }
    }, t.prototype._getViewData = function() {
      var e = this.visualMapModel, a = G(e.getPieceList(), function(s, l) {
        return {
          piece: s,
          indexInModelPieceList: l
        };
      }), n = e.get("text"), i = e.get("orient"), o = e.get("inverse");
      return (i === "horizontal" ? o : !o) ? a.reverse() : n && (n = n.slice().reverse()), {
        viewPieceList: a,
        endsText: n
      };
    }, t.prototype._createItemSymbol = function(e, a, n) {
      e.add(Ze(
        // symbol will be string
        this.getControllerVisual(a, "symbol"),
        n[0],
        n[1],
        n[2],
        n[3],
        // color will be string
        this.getControllerVisual(a, "color")
      ));
    }, t.prototype._onItemClick = function(e) {
      var a = this.visualMapModel, n = a.option, i = n.selectedMode;
      if (i) {
        var o = Q(n.selected), s = a.getSelectedMapKey(e);
        i === "single" || i === !0 ? (o[s] = !0, w(o, function(l, u) {
          o[u] = u === s;
        })) : o[s] = !o[s], this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: o
        });
      }
    }, t.type = "visualMap.piecewise", t;
  }(nw)
);
function lw(r) {
  r.registerComponentModel(GG), r.registerComponentView(HG), ow(r);
}
function WG(r) {
  oe(sw), oe(lw);
}
var UG = {
  label: {
    enabled: !0
  },
  decal: {
    show: !1
  }
}, w0 = ue(), $G = {};
function YG(r, t) {
  var e = r.getModel("aria");
  if (!e.get("enabled"))
    return;
  var a = Q(UG);
  le(a.label, r.getLocaleModel().get("aria"), !1), le(e.option, a, !1), n(), i();
  function n() {
    var u = e.getModel("decal"), c = u.get("show");
    if (c) {
      var v = Z();
      r.eachSeries(function(f) {
        if (!f.isColorBySeries()) {
          var h = v.get(f.type);
          h || (h = {}, v.set(f.type, h)), w0(f).scope = h;
        }
      }), r.eachRawSeries(function(f) {
        if (r.isSeriesFiltered(f))
          return;
        if (X(f.enableAriaDecal)) {
          f.enableAriaDecal();
          return;
        }
        var h = f.getData();
        if (f.isColorBySeries()) {
          var m = iv(f.ecModel, f.name, $G, r.getSeriesCount()), _ = h.getVisual("decal");
          h.setVisual("decal", S(_, m));
        } else {
          var p = f.getRawData(), d = {}, g = w0(f).scope;
          h.each(function(x) {
            var b = h.getRawIndex(x);
            d[b] = x;
          });
          var y = p.count();
          p.each(function(x) {
            var b = d[x], D = p.getName(x) || x + "", A = iv(f.ecModel, D, g, y), T = h.getItemVisual(b, "decal");
            h.setItemVisual(b, "decal", S(T, A));
          });
        }
        function S(x, b) {
          var D = x ? z(z({}, b), x) : b;
          return D.dirty = !0, D;
        }
      });
    }
  }
  function i() {
    var u = t.getZr().dom;
    if (u) {
      var c = r.getLocaleModel().get("aria"), v = e.getModel("label");
      if (v.option = ee(v.option, c), !!v.get("enabled")) {
        if (v.get("description")) {
          u.setAttribute("aria-label", v.get("description"));
          return;
        }
        var f = r.getSeriesCount(), h = v.get(["data", "maxCount"]) || 10, p = v.get(["series", "maxCount"]) || 10, d = Math.min(f, p), g;
        if (!(f < 1)) {
          var y = s();
          if (y) {
            var m = v.get(["general", "withTitle"]);
            g = o(m, {
              title: y
            });
          } else
            g = v.get(["general", "withoutTitle"]);
          var _ = [], S = f > 1 ? v.get(["series", "multiple", "prefix"]) : v.get(["series", "single", "prefix"]);
          g += o(S, {
            seriesCount: f
          }), r.eachSeries(function(A, T) {
            if (T < d) {
              var C = void 0, M = A.get("name"), I = M ? "withName" : "withoutName";
              C = f > 1 ? v.get(["series", "multiple", I]) : v.get(["series", "single", I]), C = o(C, {
                seriesId: A.seriesIndex,
                seriesName: A.get("name"),
                seriesType: l(A.subType)
              });
              var L = A.getData();
              if (L.count() > h) {
                var P = v.get(["data", "partialData"]);
                C += o(P, {
                  displayCnt: h
                });
              } else
                C += v.get(["data", "allData"]);
              for (var E = v.get(["data", "separator", "middle"]), N = v.get(["data", "separator", "end"]), O = [], k = 0; k < L.count(); k++)
                if (k < h) {
                  var V = L.getName(k), F = L.getValues(k), W = v.get(["data", V ? "withName" : "withoutName"]);
                  O.push(o(W, {
                    name: V,
                    value: F.join(E)
                  }));
                }
              C += O.join(E) + N, _.push(C);
            }
          });
          var x = v.getModel(["series", "multiple", "separator"]), b = x.get("middle"), D = x.get("end");
          g += _.join(b) + D, u.setAttribute("aria-label", g);
        }
      }
    }
  }
  function o(u, c) {
    if (!Y(u))
      return u;
    var v = u;
    return w(c, function(f, h) {
      v = v.replace(new RegExp("\\{\\s*" + h + "\\s*\\}", "g"), f);
    }), v;
  }
  function s() {
    var u = r.get("title");
    return u && u.length && (u = u[0]), u && u.text;
  }
  function l(u) {
    var c = r.getLocaleModel().get(["series", "typeNames"]);
    return c[u] || c.chart;
  }
}
function ZG(r) {
  if (!(!r || !r.aria)) {
    var t = r.aria;
    t.show != null && (t.enabled = t.show), t.label = t.label || {}, w(["description", "general", "series", "data"], function(e) {
      t[e] != null && (t.label[e] = t[e]);
    });
  }
}
function XG(r) {
  r.registerPreprocessor(ZG), r.registerVisual(r.PRIORITY.VISUAL.ARIA, YG);
}
var On = { env: {} }, D0 = {
  value: "eq",
  // PENDING: not good for literal semantic?
  "<": "lt",
  "<=": "lte",
  ">": "gt",
  ">=": "gte",
  "=": "eq",
  "!=": "ne",
  "<>": "ne"
  // Might be misleading for sake of the difference between '==' and '===',
  // so don't support them.
  // '==': 'eq',
  // '===': 'seq',
  // '!==': 'sne'
  // PENDING: Whether support some common alias "ge", "le", "neq"?
  // ge: 'gte',
  // le: 'lte',
  // neq: 'ne',
}, KG = (
  /** @class */
  function() {
    function r(t) {
      var e = this._condVal = Y(t) ? new RegExp(t) : O0(t) ? t : null;
      if (e == null) {
        var a = "";
        On.env.NODE_ENV !== "production" && (a = St("Illegal regexp", t, "in")), ye(a);
      }
    }
    return r.prototype.evaluate = function(t) {
      var e = typeof t;
      return Y(e) ? this._condVal.test(t) : _e(e) ? this._condVal.test(t + "") : !1;
    }, r;
  }()
), qG = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      return this.value;
    }, r;
  }()
), jG = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      for (var t = this.children, e = 0; e < t.length; e++)
        if (!t[e].evaluate())
          return !1;
      return !0;
    }, r;
  }()
), JG = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      for (var t = this.children, e = 0; e < t.length; e++)
        if (t[e].evaluate())
          return !0;
      return !1;
    }, r;
  }()
), QG = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      return !this.child.evaluate();
    }, r;
  }()
), eF = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      for (var t = !!this.valueParser, e = this.getValue, a = e(this.valueGetterParam), n = t ? this.valueParser(a) : null, i = 0; i < this.subCondList.length; i++)
        if (!this.subCondList[i].evaluate(t ? n : a))
          return !1;
      return !0;
    }, r;
  }()
);
function Yh(r, t) {
  if (r === !0 || r === !1) {
    var e = new qG();
    return e.value = r, e;
  }
  var a = "";
  return uw(r) || (On.env.NODE_ENV !== "production" && (a = St("Illegal config. Expect a plain object but actually", r)), ye(a)), r.and ? A0("and", r, t) : r.or ? A0("or", r, t) : r.not ? tF(r, t) : rF(r, t);
}
function A0(r, t, e) {
  var a = t[r], n = "";
  On.env.NODE_ENV !== "production" && (n = St('"and"/"or" condition should only be `' + r + ": [...]` and must not be empty array.", "Illegal condition:", t)), B(a) || ye(n), a.length || ye(n);
  var i = r === "and" ? new jG() : new JG();
  return i.children = G(a, function(o) {
    return Yh(o, e);
  }), i.children.length || ye(n), i;
}
function tF(r, t) {
  var e = r.not, a = "";
  On.env.NODE_ENV !== "production" && (a = St('"not" condition should only be `not: {}`.', "Illegal condition:", r)), uw(e) || ye(a);
  var n = new QG();
  return n.child = Yh(e, t), n.child || ye(a), n;
}
function rF(r, t) {
  for (var e = "", a = t.prepareGetValue(r), n = [], i = Fe(r), o = r.parser, s = o ? oS(o) : null, l = 0; l < i.length; l++) {
    var u = i[l];
    if (!(u === "parser" || t.valueGetterAttrMap.get(u))) {
      var c = $(D0, u) ? D0[u] : u, v = r[u], f = s ? s(v) : v, h = bT(c, f) || c === "reg" && new KG(f);
      h || (On.env.NODE_ENV !== "production" && (e = St('Illegal relational operation: "' + u + '" in condition:', r)), ye(e)), n.push(h);
    }
  }
  n.length || (On.env.NODE_ENV !== "production" && (e = St("Relational condition must have at least one operator.", "Illegal condition:", r)), ye(e));
  var p = new eF();
  return p.valueGetterParam = a, p.valueParser = s, p.getValue = t.getValue, p.subCondList = n, p;
}
function uw(r) {
  return J(r) && !Vn(r);
}
var aF = (
  /** @class */
  function() {
    function r(t, e) {
      this._cond = Yh(t, e);
    }
    return r.prototype.evaluate = function() {
      return this._cond.evaluate();
    }, r;
  }()
);
function nF(r, t) {
  return new aF(r, t);
}
var T0 = { env: {} }, iF = {
  type: "echarts:filter",
  // PENDING: enhance to filter by index rather than create new data
  transform: function(r) {
    for (var t = r.upstream, e, a = nF(r.config, {
      valueGetterAttrMap: Z({
        dimension: !0
      }),
      prepareGetValue: function(s) {
        var l = "", u = s.dimension;
        $(s, "dimension") || (T0.env.NODE_ENV !== "production" && (l = St('Relation condition must has prop "dimension" specified.', "Illegal condition:", s)), ye(l));
        var c = t.getDimensionInfo(u);
        return c || (T0.env.NODE_ENV !== "production" && (l = St("Can not find dimension info via: " + u + `.
`, "Existing dimensions: ", t.cloneAllDimensionInfo(), `.
`, "Illegal condition:", s, `.
`)), ye(l)), {
          dimIdx: c.index
        };
      },
      getValue: function(s) {
        return t.retrieveValueFromItem(e, s.dimIdx);
      }
    }), n = [], i = 0, o = t.count(); i < o; i++)
      e = t.getRawDataItem(i), a.evaluate() && n.push(e);
    return {
      data: n
    };
  }
}, mr = { env: {} }, tf = "";
mr.env.NODE_ENV !== "production" && (tf = ["Valid config is like:", '{ dimension: "age", order: "asc" }', 'or [{ dimension: "age", order: "asc"], { dimension: "date", order: "desc" }]'].join(" "));
var oF = {
  type: "echarts:sort",
  transform: function(r) {
    var t = r.upstream, e = r.config, a = "", n = we(e);
    n.length || (mr.env.NODE_ENV !== "production" && (a = "Empty `config` in sort transform."), ye(a));
    var i = [];
    w(n, function(c) {
      var v = c.dimension, f = c.order, h = c.parser, p = c.incomparable;
      if (v == null && (mr.env.NODE_ENV !== "production" && (a = 'Sort transform config must has "dimension" specified.' + tf), ye(a)), f !== "asc" && f !== "desc" && (mr.env.NODE_ENV !== "production" && (a = 'Sort transform config must has "order" specified.' + tf), ye(a)), p && p !== "min" && p !== "max") {
        var d = "";
        mr.env.NODE_ENV !== "production" && (d = 'incomparable must be "min" or "max" rather than "' + p + '".'), ye(d);
      }
      if (f !== "asc" && f !== "desc") {
        var g = "";
        mr.env.NODE_ENV !== "production" && (g = 'order must be "asc" or "desc" rather than "' + f + '".'), ye(g);
      }
      var y = t.getDimensionInfo(v);
      y || (mr.env.NODE_ENV !== "production" && (a = St("Can not find dimension info via: " + v + `.
`, "Existing dimensions: ", t.cloneAllDimensionInfo(), `.
`, "Illegal config:", c, `.
`)), ye(a));
      var m = h ? oS(h) : null;
      h && !m && (mr.env.NODE_ENV !== "production" && (a = St("Invalid parser name " + h + `.
`, "Illegal config:", c, `.
`)), ye(a)), i.push({
        dimIdx: y.index,
        parser: m,
        comparator: new lS(f, p)
      });
    });
    var o = t.sourceFormat;
    o !== ft && o !== Yt && (mr.env.NODE_ENV !== "production" && (a = 'sourceFormat "' + o + '" is not supported yet'), ye(a));
    for (var s = [], l = 0, u = t.count(); l < u; l++)
      s.push(t.getRawDataItem(l));
    return s.sort(function(c, v) {
      for (var f = 0; f < i.length; f++) {
        var h = i[f], p = t.retrieveValueFromItem(c, h.dimIdx), d = t.retrieveValueFromItem(v, h.dimIdx);
        h.parser && (p = h.parser(p), d = h.parser(d));
        var g = h.comparator.evaluate(p, d);
        if (g !== 0)
          return g;
      }
      return 0;
    }), {
      data: s
    };
  }
};
function sF(r) {
  r.registerTransform(iF), r.registerTransform(oF);
}
var lF = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = "dataset", e;
    }
    return t.prototype.init = function(e, a, n) {
      r.prototype.init.call(this, e, a, n), this._sourceManager = new fS(this), Jp(this);
    }, t.prototype.mergeOption = function(e, a) {
      r.prototype.mergeOption.call(this, e, a), Jp(this);
    }, t.prototype.optionUpdated = function() {
      this._sourceManager.dirty();
    }, t.prototype.getSourceManager = function() {
      return this._sourceManager;
    }, t.type = "dataset", t.defaultOption = {
      seriesLayoutBy: cr
    }, t;
  }(se)
), uF = (
  /** @class */
  function(r) {
    R(t, r);
    function t() {
      var e = r !== null && r.apply(this, arguments) || this;
      return e.type = "dataset", e;
    }
    return t.type = "dataset", t;
  }(Re)
);
function cF(r) {
  r.registerComponentModel(lF), r.registerComponentView(uF);
}
function C0(r) {
  return B(r[0]);
}
function M0(r, t) {
  for (var e = [], a = r.length, n = 0; n < a; n++)
    e.push({
      one: r[n],
      many: []
    });
  for (var n = 0; n < t.length; n++) {
    var i = t[n].length, o = void 0;
    for (o = 0; o < i; o++)
      e[o % a].many.push(t[n][o]);
  }
  for (var s = 0, n = a - 1; n >= 0; n--)
    if (!e[n].many.length) {
      var l = e[s].many;
      if (l.length <= 1)
        if (s)
          s = 0;
        else
          return e;
      var i = l.length, u = Math.ceil(i / 2);
      e[n].many = l.slice(u, i), e[s].many = l.slice(0, u), s++;
    }
  return e;
}
var vF = {
  clone: function(r) {
    for (var t = [], e = 1 - Math.pow(1 - r.path.style.opacity, 1 / r.count), a = 0; a < r.count; a++) {
      var n = tD(r.path);
      n.setStyle("opacity", e), t.push(n);
    }
    return t;
  },
  // Use the default divider
  split: null
};
function Gc(r, t, e, a, n, i) {
  if (!r.length || !t.length)
    return;
  var o = Hn("update", a, n);
  if (!(o && o.duration > 0))
    return;
  var s = a.getModel("universalTransition").get("delay"), l = Object.assign({
    // Need to setToFinal so the further calculation based on the style can be correct.
    // Like emphasis color.
    setToFinal: !0
  }, o), u, c;
  C0(r) && (u = r, c = t), C0(t) && (u = t, c = r);
  function v(y, m, _, S, x) {
    var b = y.many, D = y.one;
    if (b.length === 1 && !x) {
      var A = m ? b[0] : D, T = m ? D : b[0];
      if (jw(A))
        v({
          many: [A],
          one: T
        }, !0, _, S, !0);
      else {
        var C = s ? ee({
          delay: s(_, S)
        }, l) : l;
        Jw(A, T, C), i(A, T, A, T, C);
      }
    } else
      for (var M = ee({
        dividePath: vF[e],
        individualDelay: s && function(O, k, V, F) {
          return s(O + _, S);
        }
      }, l), I = m ? Qw(b, D, M) : eD(D, b, M), L = I.fromIndividuals, P = I.toIndividuals, E = L.length, N = 0; N < E; N++) {
        var C = s ? ee({
          delay: s(N, E)
        }, l) : l;
        i(L[N], P[N], m ? b[N] : y.one, m ? y.one : b[N], C);
      }
  }
  for (var f = u ? u === r : r.length > t.length, h = u ? M0(c, u) : M0(f ? t : r, [f ? r : t]), p = 0, d = 0; d < h.length; d++)
    p += h[d].many.length;
  for (var g = 0, d = 0; d < h.length; d++)
    v(h[d], f, g, p), g += h[d].many.length;
}
function _a(r) {
  if (!r)
    return [];
  if (B(r)) {
    for (var t = [], e = 0; e < r.length; e++)
      t.push(_a(r[e]));
    return t;
  }
  var a = [];
  return r.traverse(function(n) {
    n instanceof Ee && !n.disableMorphing && !n.invisible && !n.ignore && a.push(n);
  }), a;
}
var rf = { env: {} }, cw = 1e4, fF = 0, I0 = 1, L0 = 2, hF = ue();
function pF(r, t) {
  for (var e = r.dimensions, a = 0; a < e.length; a++) {
    var n = r.getDimensionInfo(e[a]);
    if (n && n.otherDims[t] === 0)
      return e[a];
  }
}
function dF(r, t, e) {
  var a = r.getDimensionInfo(e), n = a && a.ordinalMeta;
  if (a) {
    var i = r.get(a.name, t);
    return n && n.categories[i] || i + "";
  }
}
function E0(r, t, e, a) {
  var n = a ? "itemChildGroupId" : "itemGroupId", i = pF(r, n);
  if (i) {
    var o = dF(r, t, i);
    return o;
  }
  var s = r.getRawDataItem(t), l = a ? "childGroupId" : "groupId";
  if (s && s[l])
    return s[l] + "";
  if (!a)
    return e || r.getId(t);
}
function P0(r) {
  var t = [];
  return w(r, function(e) {
    var a = e.data, n = e.dataGroupId;
    if (a.count() > cw) {
      rf.env.NODE_ENV !== "production" && Ve("Universal transition is disabled on large data > 10k.");
      return;
    }
    for (var i = a.getIndices(), o = 0; o < i.length; o++)
      t.push({
        data: a,
        groupId: E0(a, o, n, !1),
        childGroupId: E0(a, o, n, !0),
        divide: e.divide,
        dataIndex: o
      });
  }), t;
}
function Fc(r, t, e) {
  r.traverse(function(a) {
    a instanceof Ee && Pe(a, {
      style: {
        opacity: 0
      }
    }, t, {
      dataIndex: e,
      isFrom: !0
    });
  });
}
function Hc(r) {
  if (r.parent) {
    var t = r.getComputedTransform();
    r.setLocalTransform(t), r.parent.remove(r);
  }
}
function fn(r) {
  r.stopAnimation(), r.isGroup && r.traverse(function(t) {
    t.stopAnimation();
  });
}
function gF(r, t, e) {
  var a = Hn("update", e, t);
  a && r.traverse(function(n) {
    if (n instanceof Ra) {
      var i = QD(n);
      i && n.animateFrom({
        style: i
      }, a);
    }
  });
}
function yF(r, t) {
  var e = r.length;
  if (e !== t.length)
    return !1;
  for (var a = 0; a < e; a++) {
    var n = r[a], i = t[a];
    if (n.data.getId(n.dataIndex) !== i.data.getId(i.dataIndex))
      return !1;
  }
  return !0;
}
function vw(r, t, e) {
  var a = P0(r), n = P0(t);
  function i(_, S, x, b, D) {
    (x || _) && S.animateFrom({
      style: x && x !== _ ? z(z({}, x.style), _.style) : _.style
    }, D);
  }
  var o = !1, s = fF, l = Z(), u = Z();
  a.forEach(function(_) {
    _.groupId && l.set(_.groupId, !0), _.childGroupId && u.set(_.childGroupId, !0);
  });
  for (var c = 0; c < n.length; c++) {
    var v = n[c].groupId;
    if (u.get(v)) {
      s = I0;
      break;
    }
    var f = n[c].childGroupId;
    if (f && l.get(f)) {
      s = L0;
      break;
    }
  }
  function h(_, S) {
    return function(x) {
      var b = x.data, D = x.dataIndex;
      return S ? b.getId(D) : _ ? s === I0 ? x.childGroupId : x.groupId : s === L0 ? x.childGroupId : x.groupId;
    };
  }
  var p = yF(a, n), d = {};
  if (!p)
    for (var c = 0; c < n.length; c++) {
      var g = n[c], y = g.data.getItemGraphicEl(g.dataIndex);
      y && (d[y.id] = !0);
    }
  function m(_, S) {
    var x = a[S], b = n[_], D = b.data.hostModel, A = x.data.getItemGraphicEl(x.dataIndex), T = b.data.getItemGraphicEl(b.dataIndex);
    if (A === T) {
      T && gF(T, b.dataIndex, D);
      return;
    }
    // We can't use the elements that already being morphed
    A && d[A.id] || T && (fn(T), A ? (fn(A), Hc(A), o = !0, Gc(_a(A), _a(T), b.divide, D, _, i)) : Fc(T, D, _));
  }
  new Cr(a, n, h(!0, p), h(!1, p), null, "multiple").update(m).updateManyToOne(function(_, S) {
    var x = n[_], b = x.data, D = b.hostModel, A = b.getItemGraphicEl(x.dataIndex), T = Ae(G(S, function(C) {
      return a[C].data.getItemGraphicEl(a[C].dataIndex);
    }), function(C) {
      return C && C !== A && !d[C.id];
    });
    A && (fn(A), T.length ? (w(T, function(C) {
      fn(C), Hc(C);
    }), o = !0, Gc(_a(T), _a(A), x.divide, D, _, i)) : Fc(A, D, x.dataIndex));
  }).updateOneToMany(function(_, S) {
    var x = a[S], b = x.data.getItemGraphicEl(x.dataIndex);
    if (!(b && d[b.id])) {
      var D = Ae(G(_, function(T) {
        return n[T].data.getItemGraphicEl(n[T].dataIndex);
      }), function(T) {
        return T && T !== b;
      }), A = n[_[0]].data.hostModel;
      D.length && (w(D, function(T) {
        return fn(T);
      }), b ? (fn(b), Hc(b), o = !0, Gc(
        _a(b),
        _a(D),
        x.divide,
        // Use divide on old.
        A,
        _[0],
        i
      )) : w(D, function(T) {
        return Fc(T, A, _[0]);
      }));
    }
  }).updateManyToMany(function(_, S) {
    new Cr(S, _, function(x) {
      return a[x].data.getId(a[x].dataIndex);
    }, function(x) {
      return n[x].data.getId(n[x].dataIndex);
    }).update(function(x, b) {
      m(_[x], S[b]);
    }).execute();
  }).execute(), o && w(t, function(_) {
    var S = _.data, x = S.hostModel, b = x && e.getViewOfSeriesModel(x), D = Hn("update", x, 0);
    b && x.isAnimationEnabled() && D && D.duration > 0 && b.group.traverse(function(A) {
      A instanceof Ee && !A.animators.length && A.animateFrom({
        style: {
          opacity: 0
        }
      }, D);
    });
  });
}
function N0(r) {
  var t = r.getModel("universalTransition").get("seriesKey");
  return t || r.id;
}
function R0(r) {
  return B(r) ? r.sort().join(",") : r;
}
function Fr(r) {
  if (r.hostModel)
    return r.hostModel.getModel("universalTransition").get("divideShape");
}
function mF(r, t) {
  var e = Z(), a = Z(), n = Z();
  w(r.oldSeries, function(o, s) {
    var l = r.oldDataGroupIds[s], u = r.oldData[s], c = N0(o), v = R0(c);
    a.set(v, {
      dataGroupId: l,
      data: u
    }), B(c) && w(c, function(f) {
      n.set(f, {
        key: v,
        dataGroupId: l,
        data: u
      });
    });
  });
  function i(o) {
    e.get(o) && Ve("Duplicated seriesKey in universalTransition " + o);
  }
  return w(t.updatedSeries, function(o) {
    if (o.isUniversalTransitionEnabled() && o.isAnimationEnabled()) {
      var s = o.get("dataGroupId"), l = o.getData(), u = N0(o), c = R0(u), v = a.get(c);
      if (v)
        rf.env.NODE_ENV !== "production" && i(c), e.set(c, {
          oldSeries: [{
            dataGroupId: v.dataGroupId,
            divide: Fr(v.data),
            data: v.data
          }],
          newSeries: [{
            dataGroupId: s,
            divide: Fr(l),
            data: l
          }]
        });
      else if (B(u)) {
        rf.env.NODE_ENV !== "production" && i(c);
        var f = [];
        w(u, function(d) {
          var g = a.get(d);
          g.data && f.push({
            dataGroupId: g.dataGroupId,
            divide: Fr(g.data),
            data: g.data
          });
        }), f.length && e.set(c, {
          oldSeries: f,
          newSeries: [{
            dataGroupId: s,
            data: l,
            divide: Fr(l)
          }]
        });
      } else {
        var h = n.get(u);
        if (h) {
          var p = e.get(h.key);
          p || (p = {
            oldSeries: [{
              dataGroupId: h.dataGroupId,
              data: h.data,
              divide: Fr(h.data)
            }],
            newSeries: []
          }, e.set(h.key, p)), p.newSeries.push({
            dataGroupId: s,
            data: l,
            divide: Fr(l)
          });
        }
      }
    }
  }), e;
}
function k0(r, t) {
  for (var e = 0; e < r.length; e++) {
    var a = t.seriesIndex != null && t.seriesIndex === r[e].seriesIndex || t.seriesId != null && t.seriesId === r[e].id;
    if (a)
      return e;
  }
}
function _F(r, t, e, a) {
  var n = [], i = [];
  w(we(r.from), function(o) {
    var s = k0(t.oldSeries, o);
    s >= 0 && n.push({
      dataGroupId: t.oldDataGroupIds[s],
      data: t.oldData[s],
      // TODO can specify divideShape in transition.
      divide: Fr(t.oldData[s]),
      groupIdDim: o.dimension
    });
  }), w(we(r.to), function(o) {
    var s = k0(e.updatedSeries, o);
    if (s >= 0) {
      var l = e.updatedSeries[s].getData();
      i.push({
        dataGroupId: t.oldDataGroupIds[s],
        data: l,
        divide: Fr(l),
        groupIdDim: o.dimension
      });
    }
  }), n.length > 0 && i.length > 0 && vw(n, i, a);
}
function SF(r) {
  r.registerUpdateLifecycle("series:beforeupdate", function(t, e, a) {
    w(we(a.seriesTransition), function(n) {
      w(we(n.to), function(i) {
        for (var o = a.updatedSeries, s = 0; s < o.length; s++)
          (i.seriesIndex != null && i.seriesIndex === o[s].seriesIndex || i.seriesId != null && i.seriesId === o[s].id) && (o[s][xs] = !0);
      });
    });
  }), r.registerUpdateLifecycle("series:transition", function(t, e, a) {
    var n = hF(e);
    if (n.oldSeries && a.updatedSeries && a.optionChanged) {
      var i = a.seriesTransition;
      if (i)
        w(we(i), function(h) {
          _F(h, n, a, e);
        });
      else {
        var o = mF(n, a);
        w(o.keys(), function(h) {
          var p = o.get(h);
          vw(p.oldSeries, p.newSeries, e);
        });
      }
      w(a.updatedSeries, function(h) {
        h[xs] && (h[xs] = !1);
      });
    }
    for (var s = t.getSeries(), l = n.oldSeries = [], u = n.oldDataGroupIds = [], c = n.oldData = [], v = 0; v < s.length; v++) {
      var f = s[v].getData();
      f.count() < cw && (l.push(s[v]), u.push(s[v].get("dataGroupId")), c.push(f));
    }
  });
}
oe([LI]);
oe([II]);
oe([jI, fL, bL, iE, yE, KE, DP, lN, EN, VN, ZN, F2, hR, AR, FR, $R, rk, uk, Sk, Tk, Ok, _O]);
oe(BO);
oe(fV);
oe(c1);
oe(AV);
oe(K1);
oe(LV);
oe(zV);
oe(MB);
oe(XB);
oe(Mo);
oe(fz);
oe(dz);
oe(Az);
oe(Nz);
oe(Gz);
oe(Yz);
oe(aG);
oe(bG);
oe(tw);
oe(rw);
oe(WG);
oe(sw);
oe(lw);
oe(XG);
oe(sF);
oe(cF);
oe(SF);
oe(MI);
export {
  bF as i
};
