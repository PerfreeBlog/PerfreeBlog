<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.perfree.mapper.UserMapper" >
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into p_user ( account, userName, password,salt,status,avatar,roleId,email,website,createTime)
        VALUES (#{account},#{userName}, #{password},#{salt},#{status},#{avatar},#{roleId},#{email},#{website},#{createTime})
    </insert>
    <update id="update">
        update p_user set
        userName = #{userName},
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        <if test="roleId != null and roleId != ''">
            roleId=#{roleId},
        </if>
        <if test="password != null and password != ''">
            password=#{password},
        </if>
        <if test="salt != null and salt != ''">
            salt=#{salt},
        </if>
       avatar=#{avatar},email=#{email},website=#{website},updateTime=#{updateTime}
        where id = #{id}
    </update>
    <update id="resetPassword">
        update p_user set
        password = #{password},salt=#{salt},
        updateTime=#{updateTime}
        where id = #{id}
    </update>

    <update id="changeStatus">
         update p_user set
        status = #{status},
        updateTime=#{updateTime}
        where id = #{id}
    </update>
    <update id="updatePassword">
       update p_user set
        password = #{password},
        updateTime=#{updateTime}
        where id = #{id}
    </update>

    <update id="installInitArticleUserId">
        update p_article set userId = #{id}
    </update>

    <update id="installInitTagUserId">
        update p_tag set userId = #{id}
    </update>

    <delete id="del">
        DELETE FROM  p_user  WHERE id IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="getUserByAccount" resultMap="LIST_RESULT">
        select  t1.id,t1.account,t1.password,t1.salt,t1.userName,t1.status,t1.avatar,t1.roleId,t1.createTime,t1.updateTime,t1.website,t1.email,
        t2.name roleName,t2.description,t2.code  from p_user t1 left join p_role t2 on t1.roleId = t2.id where account = #{account}
    </select>

    <resultMap id="LIST_RESULT" type="com.perfree.model.User">
        <id property="id" column="id"></id>
        <result property="account" column="account"></result>
        <result property="userName" column="userName"></result>
        <result property="password" column="password"></result>
        <result property="salt" column="salt"></result>
        <result property="status" column="status"></result>
        <result property="avatar" column="avatar"></result>
        <result property="roleId" column="roleId"></result>
        <result property="website" column="website"></result>
        <result property="email" column="email"></result>
        <result property="createTime" column="createTime"></result>
        <result property="updateTime" column="updateTime"></result>
        <association property="role" javaType="com.perfree.model.Role">
            <id property="id" column="roleId" />
            <result property="name" column="roleName"/>
            <result property="description" column="description"/>
            <result property="code" column="code"/>
        </association>
    </resultMap>
    <select id="getList" resultMap="LIST_RESULT">
        select
        t1.id,t1.account,t1.userName,t1.status,t1.avatar,t1.roleId,t1.createTime,t1.updateTime,t1.website,t1.email,
        t2.name roleName,t2.description,t2.code
        from p_user t1 left join p_role t2 on t1.roleId = t2.id
        where 1 = 1
        <if test="userName != null and userName != ''">
            <bind name="userName" value="'%' + _parameter.userName + '%'" />
            and t1.userName like #{userName,jdbcType=VARCHAR}
        </if>
        <if test="roleId != null and roleId != ''">
            and t1.roleId = #{roleId}
        </if>
        order by t1.createTime desc
    </select>
    <select id="getById" resultMap="LIST_RESULT">
        select  t1.id,t1.password,t1.salt,t1.account,t1.userName,t1.status,t1.avatar,t1.roleId,t1.createTime,t1.updateTime,t1.website,t1.email,
        t2.name roleName,t2.description,t2.code  from p_user t1 left join p_role t2 on t1.roleId = t2.id where t1.id = #{id}
    </select>
    <select id="getUserCount" resultType="java.lang.Long">
        SELECT count(1) FROM p_user
    </select>
    <select id="getUserByAccountAndEmail" resultType="com.perfree.model.User">
        select * FROM p_user where account = #{account} and email = #{email}
    </select>
</mapper>
