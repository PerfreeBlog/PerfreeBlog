<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.perfree.mapper.CommentMapper" >

    <resultMap id="LIST_RESULT" type="com.perfree.model.Comment">
        <id property="id" column="id"></id>
        <result property="articleId" column="articleId"></result>
        <result property="pid" column="pid"></result>
        <result property="topPid" column="topPid"></result>
        <result property="userId" column="userId"></result>
        <result property="content" column="content"></result>
        <result property="status" column="status"></result>
        <result property="createTime" column="createTime"></result>
        <result property="updateTime" column="updateTime"></result>
        <result property="avatar" column="avatar"></result>
        <result property="website" column="website"></result>
        <result property="email" column="email"></result>
        <result property="userName" column="userName"></result>
        <association property="article" javaType="com.perfree.model.Article">
            <id property="id" column="articleId" />
            <result property="title" column="title"/>
            <result property="slug" column="slug"/>
            <result property="type" column="type"/>
            <result property="content" column="articleContent"/>
        </association>
    </resultMap>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into p_comment (articleId, `pid`,topPid, `userId`, content,status, avatar,website,email,userName,createTime)
        VALUES (#{articleId},#{pid},#{topPid},#{userId}, #{content}, #{status}, #{avatar},#{website},#{email},#{userName},#{createTime})
    </insert>

    <update id="changeStatus">
        update p_comment set
        status = #{status},
        updateTime=#{updateTime}
        where id = #{id}
    </update>

    <delete id="del">
        DELETE FROM  p_comment  WHERE id IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        or pid in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getList" resultMap="LIST_RESULT">
        select t1.*,t3.title,t3.slug,t3.type,
        case t3.type when 'journal' then t3.content else '' end as articleContent
        from p_comment t1
        left join p_article t3 on t1.articleId = t3.id
        where 1 = 1
        <if test="content != null and content != ''">
            <bind name="content" value="'%' + _parameter.content + '%'" />
            and t1.content like #{content,jdbcType=VARCHAR}
        </if>
        <if test="userId != null and userId != ''">
           and t3.userId = #{userId}
        </if>
        <if test="articleType != null and articleType != ''">
            and t3.type = #{articleType}
        </if>
        order by t1.createTime desc
    </select>
    <select id="getCommentCount" resultType="java.lang.Long">
        SELECT count(1) FROM p_comment  where `status` = 0
    </select>
    <select id="getCommentListByDashboard" resultMap="COMMENT_RESULT">
        SELECT t1.*,t3.title,t3.type FROM p_comment t1 left join p_article t3 on t1.articleId = t3.id
        ORDER BY createTime DESC limit 0,#{count}
    </select>


    <resultMap id="COMMENT_RESULT" type="com.perfree.model.Comment">
        <id property="id" column="id"></id>
        <result property="articleId" column="articleId"></result>
        <result property="pid" column="pid"></result>
        <result property="topPid" column="topPid"></result>
        <result property="userId" column="userId"></result>
        <result property="content" column="content"></result>
        <result property="status" column="status"></result>
        <result property="createTime" column="createTime"></result>
        <result property="updateTime" column="updateTime"></result>
        <result property="avatar" column="avatar"></result>
        <result property="website" column="website"></result>
        <result property="email" column="email"></result>
        <result property="userName" column="userName"></result>
        <association property="article" javaType="com.perfree.model.Article">
            <id property="id" column="articleId" />
            <result property="title" column="title"/>
            <result property="slug" column="slug"/>
            <result property="type" column="type"/>
        </association>
        <association select="getParentCommentByPid" property="parent" column="pid"></association>
        <collection select="getChildComment" property="child" column="id"></collection>
    </resultMap>

    <resultMap id="PARENT_COMMENT_RESULT" type="com.perfree.model.Comment">
        <id property="id" column="id"></id>
        <result property="articleId" column="articleId"></result>
        <result property="pid" column="pid"></result>
        <result property="topPid" column="topPid"></result>
        <result property="userId" column="userId"></result>
        <result property="content" column="content"></result>
        <result property="status" column="status"></result>
        <result property="createTime" column="createTime"></result>
        <result property="updateTime" column="updateTime"></result>
        <result property="avatar" column="avatar"></result>
        <result property="website" column="website"></result>
        <result property="email" column="email"></result>
        <result property="userName" column="userName"></result>
    </resultMap>

    <select id="getCommentByArticleId" resultMap="COMMENT_RESULT">
        select t1.*,t3.title,t3.slug,t3.type from p_comment t1
            left join p_article t3 on t1.articleId = t3.id
        where t1.articleId = #{articleId} and t1.status = 0 and topPid = -1
        order by t1.createTime desc
    </select>

    <select id="getChildComment" resultMap="COMMENT_RESULT">
        select t1.*,t3.title,t3.slug,t3.type from p_comment t1
        left join p_article t3 on t1.articleId = t3.id
        where t1.topPid = #{id} and t1.status = 0
        order by t1.createTime asc
    </select>


    <select id="getParentCommentByPid" resultMap="PARENT_COMMENT_RESULT">
        select t1.* from p_comment t1
        where t1.id = #{pid} and t1.status = 0
    </select>

    <select id="getRecentComment" resultMap="COMMENT_RESULT">
        SELECT t1.*,t3.title,t3.slug,t3.type FROM p_comment t1
        left join p_article t3 on t1.articleId = t3.id where t3.type = 'article' and t1.status = 0
        ORDER BY t1.createTime DESC limit 0,#{count}
    </select>
    <select id="getById" resultType="com.perfree.model.Comment">
        select t1.* from p_comment t1 where t1.id = #{id}
    </select>

    <select id="getApiCommentByArticleId" resultMap="COMMENT_RESULT">
        select t1.*,t3.title,t3.slug,t3.type from p_comment t1
        left join p_article t3 on t1.articleId = t3.id
        where t1.articleId = #{articleId} and t1.status = 0 and topPid = -1
        order by t1.createTime desc
    </select>
</mapper>
